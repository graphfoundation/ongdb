/*
 * Copyright (c) 2018-2022 "Graph Foundation,"
 * Graph Foundation, Inc. [https://graphfoundation.org]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.neo4j.cypher.internal.util.helpers

import org.neo4j.cypher.internal.util.helpers.NameDeduplicator.removeGeneratedNamesAndParams
import org.neo4j.cypher.internal.util.helpers.NameDeduplicator.removeGeneratedNamesAndParamsOnTree
import org.neo4j.cypher.internal.util.test_helpers.CypherFunSuite

class NameDeduplicatorTest extends CypherFunSuite {

  private case class Foo(s: String)

  test("should remove simple input position names") {
    removeGeneratedNamesAndParams("  var@33") should equal("var")
  }

  test("should reformat autogenerated variables names") {
    removeGeneratedNamesAndParams("  UNNAMED42") should equal("anon_42")
  }

  test("should reformat autogenerated param names") {
    removeGeneratedNamesAndParams("  AUTOINT33") should equal("autoint_33")
  }

  test("should remove nested input position names") {
    removeGeneratedNamesAndParams("    var@33@36") should equal("var")
  }

  test("should remove input position names with UUIDs") {
    removeGeneratedNamesAndParams("  a@42(821c05a4-386f-40fe-a31e-3bd088122975).age") should equal("a.age")
  }

  test("should rewrite Strings in trees") {
    removeGeneratedNamesAndParamsOnTree(Foo("  var@33")) should equal(Foo("var"))
  }

  test("does not greedily consume more than the UUID in input position names") {
    removeGeneratedNamesAndParams("  var@33(17debdfe-6233-42f6-be08-941b2163bddd)(this is not part of the uuid)") should equal("var(this is not part of the uuid)")
  }
}

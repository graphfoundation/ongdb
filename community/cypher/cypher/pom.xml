<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.graphfoundation.ongdb</groupId>
        <artifactId>cypher-parent</artifactId>
        <version>2.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>ongdb-cypher</artifactId>
    <packaging>jar</packaging>
    <name>ONgDB - Cypher</name>
    <description>ONgDB query language</description>
    <url>https://graphfoundation.org/projects/ongdb/${project.version}/${project.artifactId}</url>

    <properties>
        <moduleName>org.neo4j.cypher</moduleName>
        <license-text.header>headers/GPL-3-header.txt</license-text.header>
    </properties>

    <scm>
        <connection>scm:git:git://github.com/graphfoundation/ongdb.git</connection>
        <developerConnection>scm:git:git@github.com:graphfoundation/ongdb.git</developerConnection>
        <url>https://github.com/graphfoundation/ongdb</url>
    </scm>

    <licenses>
        <license>
            <name>GNU General Public License, Version 3</name>
            <url>http://www.gnu.org/licenses/gpl-3.0-standalone.html</url>
            <comments>
                The software ("Software") developed and owned by Graph Foundation, Inc.
                (referred to in this notice as "Graph Foundation") is licensed under the
                GNU GENERAL PUBLIC LICENSE Version 3 to all third parties and that license is included below.
            </comments>
        </license>
        <license>
            <name>GNU General Public License, Version 3</name>
            <url>http://www.gnu.org/licenses/gpl-3.0-standalone.html</url>
            <comments>
                The software ("Software") developed and owned by Neo4j Sweden AB (referred to in this notice as "Neo4j") is
                licensed under the GNU GENERAL PUBLIC LICENSE Version 3 to all third
                parties and that license is included below.

                However, if you have executed an End User Software License and Services
                Agreement or an OEM Software License and Support Services Agreement, or
                another commercial license agreement with Neo4j or one of its
                affiliates (each, a "Commercial Agreement"), the terms of the license in
                such Commercial Agreement will supersede the GNU GENERAL PUBLIC LICENSE
                Version 3 and you may use the Software solely pursuant to the terms of
                the relevant Commercial Agreement.
            </comments>
        </license>
    </licenses>

    <build>
        <plugins>
            <plugin>
                <groupId>com.helger.maven</groupId>
                <artifactId>ph-javacc-maven-plugin</artifactId>
                <version>4.1.3</version>
                <configuration>
                    <jdkVersion>1.8</jdkVersion>
                    <javadocFriendlyComments>true</javadocFriendlyComments>
                    <packageName>org.neo4j.cypher.internal.preparser.javacc</packageName>
                    <sourceDirectory>src/main/java/org/neo4j/cypher/internal/preparser/javacc</sourceDirectory>
                    <outputDirectory>${project.build.directory}/generated-sources/preparser/javacc</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>jjc1</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>javacc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>annotations</artifactId>
        </dependency>

        <!-- scala -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
        </dependency>

        <!-- scala test dependencies -->
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scalacheck</groupId>
            <artifactId>scalacheck_${scala.binary.version}</artifactId>
        </dependency>

        <!-- neo4j -->
        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-kernel</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-dbms</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-codegen</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-exceptions</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- neo4j testing -->
        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>test-utils</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>io-test-utils</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>log-test-utils</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-kernel</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <scope>test</scope>
            <version>0.9.12</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- neo4j-cypher -->

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-util</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-cypher-config</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-cypher-planner</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-cypher-planner-spi</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-cypher-runtime-util</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-cypher-interpreted-runtime</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- neo4j-cypher test -->

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-cypher-planner</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-cypher-runtime-util</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-cypher-interpreted-runtime</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-test-util</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-ast</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-expressions</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-parser</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.graphfoundation.ongdb</groupId>
            <artifactId>ongdb-front-end</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <!-- neo4j-cypher re-include excluded (with correct version) -->

        <dependency>
            <groupId>org.parboiled</groupId>
            <artifactId>parboiled-scala_${scala.binary.version}</artifactId>
        </dependency>

        <!-- other -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
    </dependencies>

</project>

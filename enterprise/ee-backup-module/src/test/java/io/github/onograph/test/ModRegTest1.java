package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest1 {

  public static boolean debug = false;

  @Test
  public void test0501() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0501");
    }
    io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl commandProviderGdbRestorerCommandImpl0 = new io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl();
    int int1 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandProviderGdbRestorerCommandImpl0.commandType();
    org.neo4j.cli.ExecutionContext executionContext3 = null;
    try {
      io.github.onograph.backup.GdbRestorerCommand gdbRestorerCommand4 = commandProviderGdbRestorerCommandImpl0.createCommand(
          executionContext3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
  }

  @Test
  public void test0502() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0502");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction4 = null;
    io.github.onograph.backup.FileMover fileMover5 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction4);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory6.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory12.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment18 = factory12.bulBackupEnvironment();
    boolean boolean19 = backupEnvironment18.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional20 = backupEnvironment18.geicmaOptional();
    java.nio.file.Path path21 = backupEnvironment18.getPbPath();
    java.nio.file.Path path22 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path21);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream23 = fileMover5._trrfrmnStream(
        path21);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern40 = backupEnvironment39.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress41 = backupEnvironment39.getSocketAddress();
    java.nio.file.Path path42 = backupEnvironment39.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory24.pbPath(path42);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory47.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory47.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory53.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment59 = factory53.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern60 = backupEnvironment59.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress61 = backupEnvironment59.getSocketAddress();
    java.nio.file.Path path62 = backupEnvironment59.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory44.pbPath(path62);
    io.github.onograph.backup.FileMoverService fileMoverService64 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path42, path62);
    java.nio.file.Path path65 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream66 = fileMover5._trrfrmnStream(
        path65);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream67 = fileMover3._trrfrmnStream(
        path65);
    java.lang.String[] strArray69 = new java.lang.String[]{"database.id"};
    java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
    boolean boolean71 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList70, strArray69);
    try {
      backupMetadataRepository1.wrtForPaLi(path65, (java.util.List<java.lang.String>) strList70);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(backupEnvironment18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(fileMoverServiceStream23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertNotNull(databaseNamePattern40);
    org.junit.Assert.assertNotNull(socketAddress41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(backupEnvironment59);
    org.junit.Assert.assertNotNull(databaseNamePattern60);
    org.junit.Assert.assertNotNull(socketAddress61);
    org.junit.Assert.assertNotNull(path62);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(fileMoverService64);
    org.junit.Assert.assertNotNull(path65);
    org.junit.Assert.assertNotNull(fileMoverServiceStream66);
    org.junit.Assert.assertNotNull(fileMoverServiceStream67);
    org.junit.Assert.assertNotNull(strArray69);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
  }

  @Test
  public void test0503() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0503");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory1 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = factory1.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory1.isRp(false);
    java.nio.file.Path path6 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.prPath(path6);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory12.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory12.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory18.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment24 = factory18.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern25 = backupEnvironment24.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress26 = backupEnvironment24.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory11.wihadsBackupEnvironmentFactory(
        socketAddress26);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory0.wihadsBackupEnvironmentFactory(
        socketAddress26);
    java.lang.Class<?> wildcardClass29 = factory0.getClass();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory1);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(backupEnvironment24);
    org.junit.Assert.assertNotNull(databaseNamePattern25);
    org.junit.Assert.assertNotNull(socketAddress26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(wildcardClass29);
  }

  @Test
  public void test0504() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0504");
    }
    io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl commandProviderGdbRestorerCommandImpl0 = new io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl();
    int int1 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandProviderGdbRestorerCommandImpl0.commandType();
    int int3 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext4 = null;
    try {
      io.github.onograph.backup.GdbRestorerCommand gdbRestorerCommand5 = commandProviderGdbRestorerCommandImpl0.createCommand(
          executionContext4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
  }

  @Test
  public void test0505() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0505");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.systemNanoClock(
        systemNanoClock7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.itraLogProvider(
        logProvider9);
    io.github.onograph.backup.BackupRunner backupRunner11 = generator10.bulBackupRunner();
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    io.github.onograph.backup.BackupRunner.Generator generator13 = generator10.systemNanoClock(
        systemNanoClock12);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(backupRunner11);
    org.junit.Assert.assertNotNull(generator13);
  }

  @Test
  public void test0506() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0506");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker15 = backupEnvironment14.getMemoryTracker();
    boolean boolean16 = backupEnvironment14.getIsRp();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream19 = fileMover1._trrfrmnStream(
        path18);
    java.lang.Class<?> wildcardClass20 = fileMoverServiceStream19.getClass();
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(memoryTracker15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(fileMoverServiceStream19);
    org.junit.Assert.assertNotNull(wildcardClass20);
  }

  @Test
  public void test0507() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0507");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.config(config8);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isRp(true);
    org.neo4j.configuration.Config config12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.config(config12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.miAuthMetaOptions(
        authMetaOptions19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isIcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern25 = factory22.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory11.databaseNamePattern(
        databaseNamePattern25);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory4.databaseNamePattern(
        databaseNamePattern25);
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory27.bulBackupEnvironment();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(databaseNamePattern25);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
  }

  @Test
  public void test0508() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0508");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.io.PrintStream printStream3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isRp(true);
    org.neo4j.configuration.Config config9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.config(config9);
    org.neo4j.configuration.helpers.SocketAddress socketAddress11 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory8.wihadsBackupEnvironmentFactory(
        socketAddress11);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory16.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory22.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory22.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern29 = backupEnvironment28.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress30 = backupEnvironment28.getSocketAddress();
    java.nio.file.Path path31 = backupEnvironment28.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory13.pbPath(path31);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory36.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory36.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory42.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment48 = factory42.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern49 = backupEnvironment48.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress50 = backupEnvironment48.getSocketAddress();
    java.nio.file.Path path51 = backupEnvironment48.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory33.pbPath(path51);
    io.github.onograph.backup.FileMoverService fileMoverService53 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path31, path51);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory8.pbPath(path51);
    java.nio.file.Path path55 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path51);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory56.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory56.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory56.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory62.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory62.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment68 = factory62.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker69 = backupEnvironment68.getMemoryTracker();
    boolean boolean70 = backupEnvironment68.getIsRp();
    java.nio.file.Path path71 = backupEnvironment68.getPbPath();
    org.neo4j.io.layout.DatabaseLayout databaseLayout72 = null;
    try {
      io.github.onograph.backup.GdbRestorer gdbRestorer73 = new io.github.onograph.backup.GdbRestorer(
          fileSystemAbstraction0, false, true, printStream3, path55, path71, databaseLayout72);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
    org.junit.Assert.assertNotNull(databaseNamePattern29);
    org.junit.Assert.assertNotNull(socketAddress30);
    org.junit.Assert.assertNotNull(path31);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(backupEnvironment48);
    org.junit.Assert.assertNotNull(databaseNamePattern49);
    org.junit.Assert.assertNotNull(socketAddress50);
    org.junit.Assert.assertNotNull(path51);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(fileMoverService53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(path55);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(backupEnvironment68);
    org.junit.Assert.assertNotNull(memoryTracker69);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    org.junit.Assert.assertNotNull(path71);
  }

  @Test
  public void test0509() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0509");
    }
    io.github.onograph.backup.BackupRunner backupRunner0 = io.github.onograph.backup.BackupRunner.buldeuBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory1 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = factory1.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory1.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory1.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory7.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment13 = factory7.bulBackupEnvironment();
    java.nio.file.Path path14 = backupEnvironment13.getRpPath();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional15 = backupEnvironment13.geicmaOptional();
    try {
      backupRunner0.excebcpForBa(backupEnvironment13);
      org.junit.Assert.fail(
          "Expected exception of type io.github.onograph.backup.BackupException; message: java.lang.NullPointerException");
    } catch (io.github.onograph.backup.BackupException e) {
    }
    org.junit.Assert.assertNotNull(backupRunner0);
    org.junit.Assert.assertNotNull(factory1);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(backupEnvironment13);
    org.junit.Assert.assertNotNull(path14);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional15);
  }

  @Test
  public void test0510() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0510");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory4.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory4.wihadsBackupEnvironmentFactory(
        0, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.config(config18);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isRp(true);
    org.neo4j.configuration.Config config22 = factory19.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.memory.MemoryTracker memoryTracker24 = null;
    org.neo4j.io.pagecache.PageCache pageCache25 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager26 = new io.github.onograph.backup.BackupRestorationManager(
        config22, fileSystemAbstraction23, memoryTracker24, pageCache25);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory4.config(config22);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction28 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory29.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory29.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory35.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment41 = factory35.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern42 = backupEnvironment41.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress43 = backupEnvironment41.getSocketAddress();
    java.nio.file.Path path44 = backupEnvironment41.getRpPath();
    boolean boolean45 = backupEnvironment41.getIsBftf();
    java.nio.file.Path path46 = backupEnvironment41.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker47 = backupEnvironment41.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache48 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager49 = new io.github.onograph.backup.BackupRestorationManager(
        config22, fileSystemAbstraction28, memoryTracker47, pageCache48);
    org.neo4j.io.layout.DatabaseLayout databaseLayout50 = null;
    try {
      backupRestorationManager49.reorForDa(databaseLayout50);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(config22);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(backupEnvironment41);
    org.junit.Assert.assertNotNull(databaseNamePattern42);
    org.junit.Assert.assertNotNull(socketAddress43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(memoryTracker47);
  }

  @Test
  public void test0511() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0511");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    org.neo4j.configuration.helpers.SocketAddress socketAddress3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.wihadsBackupEnvironmentFactory(
        socketAddress3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory10.wihadsBackupEnvironmentFactory(
        (int) (byte) 1, "database.id");
    org.neo4j.configuration.Config config14 = factory10.gecfConfig();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(config14);
  }

  @Test
  public void test0512() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0512");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory0.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.shouldPrep(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
  }

  @Test
  public void test0513() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0513");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    boolean boolean17 = backupEnvironment16.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment16.geicmaOptional();
    java.nio.file.Path path19 = backupEnvironment16.getPbPath();
    java.nio.file.Path path20 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path19);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream21 = fileMover3._trrfrmnStream(
        path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory22.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory22.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory28.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment34 = factory28.bulBackupEnvironment();
    boolean boolean35 = backupEnvironment34.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional36 = backupEnvironment34.geicmaOptional();
    java.nio.file.Path path37 = backupEnvironment34.getPbPath();
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream38 = fileMover3._trrfrmnStream(
        path37);
    java.lang.String[] strArray42 = new java.lang.String[]{"database.id", "hi!", "hi!"};
    java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
    boolean boolean44 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList43, strArray42);
    try {
      backupMetadataRepository1.wrtForPaLi(path37, (java.util.List<java.lang.String>) strList43);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(fileMoverServiceStream21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(backupEnvironment34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(fileMoverServiceStream38);
    org.junit.Assert.assertNotNull(strArray42);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
  }

  @Test
  public void test0514() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0514");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config6 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.config(config6);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isRp(true);
    org.neo4j.configuration.Config config10 = factory7.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory0.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory0.shouldPrep(false);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction14 = null;
    io.github.onograph.backup.FileMover fileMover15 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction14);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory16.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory22.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory22.bulBackupEnvironment();
    boolean boolean29 = backupEnvironment28.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional30 = backupEnvironment28.geicmaOptional();
    java.nio.file.Path path31 = backupEnvironment28.getPbPath();
    java.nio.file.Path path32 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path31);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream33 = fileMover15._trrfrmnStream(
        path31);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory37.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory37.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory43.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment49 = factory43.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern50 = backupEnvironment49.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress51 = backupEnvironment49.getSocketAddress();
    java.nio.file.Path path52 = backupEnvironment49.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory34.pbPath(path52);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory57.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory57.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory63.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory63.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment69 = factory63.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern70 = backupEnvironment69.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress71 = backupEnvironment69.getSocketAddress();
    java.nio.file.Path path72 = backupEnvironment69.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory54.pbPath(path72);
    io.github.onograph.backup.FileMoverService fileMoverService74 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path52, path72);
    java.nio.file.Path path75 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path52);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream76 = fileMover15._trrfrmnStream(
        path75);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory13.prPath(path75);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory13.isGcc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern80 = factory13.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(config10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional30);
    org.junit.Assert.assertNotNull(path31);
    org.junit.Assert.assertNotNull(path32);
    org.junit.Assert.assertNotNull(fileMoverServiceStream33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(backupEnvironment49);
    org.junit.Assert.assertNotNull(databaseNamePattern50);
    org.junit.Assert.assertNotNull(socketAddress51);
    org.junit.Assert.assertNotNull(path52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(backupEnvironment69);
    org.junit.Assert.assertNotNull(databaseNamePattern70);
    org.junit.Assert.assertNotNull(socketAddress71);
    org.junit.Assert.assertNotNull(path72);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(fileMoverService74);
    org.junit.Assert.assertNotNull(path75);
    org.junit.Assert.assertNotNull(fileMoverServiceStream76);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(databaseNamePattern80);
  }

  @Test
  public void test0515() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0515");
    }
    io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup(
        (int) (byte) 100, "database.id");
    org.junit.Assert.assertNotNull(backup2);
  }

  @Test
  public void test0516() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0516");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("hi!");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup5 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup7 = backup5.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    boolean boolean22 = backupEnvironment21.getIsBftf();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern23 = backupEnvironment21.getDatabaseNamePattern();
    java.nio.file.Path path24 = backupEnvironment21.getRpPath();
    java.nio.file.Path path25 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    try {
      io.github.onograph.backup.Backup.BackupRespState backupRespState26 = backup5.bakBackupBackupRespState(
          "", path25);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.RuntimeException; message: *** Error:  3b02b00a-232a-454b-823b-025cc97a58b8");
    } catch (java.lang.RuntimeException e) {
    }
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(databaseNamePattern23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertNotNull(path25);
  }

  @Test
  public void test0517() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0517");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream19 = fileMover1._trrfrmnStream(
        path17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory26.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment32 = factory26.bulBackupEnvironment();
    boolean boolean33 = backupEnvironment32.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional34 = backupEnvironment32.geicmaOptional();
    java.nio.file.Path path35 = backupEnvironment32.getPbPath();
    java.nio.file.Path path36 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path35);
    java.nio.file.Path path37 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path36);
    io.github.onograph.backup.FileMoverService fileMoverService38 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path17, path36);
    boolean boolean39 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path36);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(fileMoverServiceStream19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(backupEnvironment32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional34);
    org.junit.Assert.assertNotNull(path35);
    org.junit.Assert.assertNotNull(path36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(fileMoverService38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
  }

  @Test
  public void test0518() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0518");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory5.isRp(false);
    java.nio.file.Path path10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.prPath(path10);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern12 = factory11.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config13 = factory11.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory4.config(config13);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory15.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory15.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory21.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment27 = factory21.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern28 = backupEnvironment27.getDatabaseNamePattern();
    boolean boolean29 = backupEnvironment27.getIsBftf();
    boolean boolean30 = backupEnvironment27.getIsBftf();
    java.nio.file.Path path31 = backupEnvironment27.getRpPath();
    java.nio.file.Path path32 = backupEnvironment27.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory4.pbPath(path32);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(databaseNamePattern12);
    org.junit.Assert.assertNotNull(config13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(backupEnvironment27);
    org.junit.Assert.assertNotNull(databaseNamePattern28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(path31);
    org.junit.Assert.assertNotNull(path32);
    org.junit.Assert.assertNotNull(factory33);
  }

  @Test
  public void test0519() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0519");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean14 = backupEnvironment12.getIsBftf();
    boolean boolean15 = backupEnvironment12.getIsCc();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    java.nio.file.Path path17 = backupEnvironment12.getPbPath();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
  }

  @Test
  public void test0520() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0520");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path15 = backupEnvironment12.getPbPath();
    java.nio.file.Path path16 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path15);
    java.nio.file.Path path17 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path16);
    boolean boolean18 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path16);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
  }

  @Test
  public void test0521() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0521");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator2.progressMonitorFactory(
        progressMonitorFactory9);
    io.github.onograph.backup.BackupRunner backupRunner11 = generator2.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory12.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory12.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory18.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment24 = factory18.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern25 = backupEnvironment24.getDatabaseNamePattern();
    boolean boolean26 = backupEnvironment24.getIsBftf();
    boolean boolean27 = backupEnvironment24.getIsBftf();
    java.nio.file.Path path28 = backupEnvironment24.getRpPath();
    java.nio.file.Path path29 = backupEnvironment24.getRpPath();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional30 = backupEnvironment24.geicmaOptional();
    try {
      backupRunner11.excebcpForBa(backupEnvironment24);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(backupRunner11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(backupEnvironment24);
    org.junit.Assert.assertNotNull(databaseNamePattern25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertNotNull(path29);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional30);
  }

  @Test
  public void test0522() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0522");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup5.isBftf(false);
    io.github.onograph.backup.Backup backup9 = backup7.isCc(true);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
  }

  @Test
  public void test0523() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0523");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.config(config3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern9 = factory4.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory4.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config13 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.config(config13);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isRp(true);
    org.neo4j.configuration.Config config17 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.config(config17);
    org.neo4j.configuration.helpers.SocketAddress socketAddress19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.wihadsBackupEnvironmentFactory(
        socketAddress19);
    org.neo4j.configuration.helpers.SocketAddress socketAddress21 = factory16.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment26 = factory25.bulBackupEnvironment();
    java.nio.file.Path path27 = backupEnvironment26.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory4.prPath(path27);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional29 = gdbIdRepo1.reddtaiOptional(
          path27);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(databaseNamePattern9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNull(socketAddress21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(backupEnvironment26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertNotNull(factory28);
  }

  @Test
  public void test0524() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0524");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory8.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.databaseNamePattern(
        "database.id");
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions15 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory12.miAuthMetaOptions(
        authMetaOptions15);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
  }

  @Test
  public void test0525() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0525");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory8.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory8.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory14.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment20 = factory14.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern21 = backupEnvironment20.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress22 = backupEnvironment20.getSocketAddress();
    java.nio.file.Path path23 = backupEnvironment20.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory5.pbPath(path23);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory28.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory28.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory34.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment40 = factory34.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern41 = backupEnvironment40.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress42 = backupEnvironment40.getSocketAddress();
    java.nio.file.Path path43 = backupEnvironment40.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory25.pbPath(path43);
    io.github.onograph.backup.FileMoverService fileMoverService45 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path23, path43);
    java.nio.file.Path path46 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path43);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction47 = null;
    io.github.onograph.backup.FileMover fileMover48 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction47);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory49.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory49.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory55.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory55.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment61 = factory55.bulBackupEnvironment();
    boolean boolean62 = backupEnvironment61.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional63 = backupEnvironment61.geicmaOptional();
    java.nio.file.Path path64 = backupEnvironment61.getPbPath();
    java.nio.file.Path path65 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path64);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream66 = fileMover48._trrfrmnStream(
        path64);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory67.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory67.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory67.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory73.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory73.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment79 = factory73.bulBackupEnvironment();
    boolean boolean80 = backupEnvironment79.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional81 = backupEnvironment79.geicmaOptional();
    java.nio.file.Path path82 = backupEnvironment79.getPbPath();
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream83 = fileMover48._trrfrmnStream(
        path82);
    io.github.onograph.backup.FileMoverService fileMoverService84 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path43, path82);
    io.github.onograph.backup.BackupEnvironment.Factory factory85 = factory4.prPath(path82);
    org.neo4j.configuration.helpers.SocketAddress socketAddress86 = factory4.getSocketAddress();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(backupEnvironment20);
    org.junit.Assert.assertNotNull(databaseNamePattern21);
    org.junit.Assert.assertNotNull(socketAddress22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(backupEnvironment40);
    org.junit.Assert.assertNotNull(databaseNamePattern41);
    org.junit.Assert.assertNotNull(socketAddress42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(fileMoverService45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(backupEnvironment61);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional63);
    org.junit.Assert.assertNotNull(path64);
    org.junit.Assert.assertNotNull(path65);
    org.junit.Assert.assertNotNull(fileMoverServiceStream66);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(backupEnvironment79);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional81);
    org.junit.Assert.assertNotNull(path82);
    org.junit.Assert.assertNotNull(fileMoverServiceStream83);
    org.junit.Assert.assertNotNull(fileMoverService84);
    org.junit.Assert.assertNotNull(factory85);
    org.junit.Assert.assertNull(socketAddress86);
  }

  @Test
  public void test0526() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0526");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.config(config3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    org.neo4j.configuration.Config config7 = factory4.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory4.isCc(true);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory4.miAuthMetaOptions(
        authMetaOptions10);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory12.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory12.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory18.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment24 = factory18.bulBackupEnvironment();
    boolean boolean25 = backupEnvironment24.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional26 = backupEnvironment24.geicmaOptional();
    java.nio.file.Path path27 = backupEnvironment24.getPbPath();
    java.nio.file.Path path28 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path27);
    java.nio.file.Path path29 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path28);
    boolean boolean30 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path29);
    java.nio.file.Path path31 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path29);
    java.nio.file.Path path32 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path31);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory36.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory36.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory42.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment48 = factory42.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern49 = backupEnvironment48.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress50 = backupEnvironment48.getSocketAddress();
    java.nio.file.Path path51 = backupEnvironment48.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory33.pbPath(path51);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory56.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory56.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory56.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory62.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory62.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment68 = factory62.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern69 = backupEnvironment68.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress70 = backupEnvironment68.getSocketAddress();
    java.nio.file.Path path71 = backupEnvironment68.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory53.pbPath(path71);
    io.github.onograph.backup.FileMoverService fileMoverService73 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path51, path71);
    java.nio.file.Path path74 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path71);
    io.github.onograph.backup.FileMoverService fileMoverService75 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path31, path74);
    java.nio.file.Path path76 = fileMoverService75.filPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory4.prPath(path76);
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config79 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory78.config(config79);
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory80.isRp(true);
    org.neo4j.configuration.Config config83 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory84 = factory82.config(config83);
    org.neo4j.configuration.helpers.SocketAddress socketAddress85 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory86 = factory82.wihadsBackupEnvironmentFactory(
        socketAddress85);
    org.neo4j.configuration.helpers.SocketAddress socketAddress87 = factory82.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory89 = factory82.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory91 = factory89.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment92 = factory91.bulBackupEnvironment();
    java.nio.file.Path path93 = backupEnvironment92.getPbPath();
    io.github.onograph.backup.FileMoverService fileMoverService94 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path76, path93);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional95 = gdbIdRepo1.reddtaiOptional(
          path93);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(config7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(backupEnvironment24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertNotNull(path29);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertNotNull(path31);
    org.junit.Assert.assertNotNull(path32);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(backupEnvironment48);
    org.junit.Assert.assertNotNull(databaseNamePattern49);
    org.junit.Assert.assertNotNull(socketAddress50);
    org.junit.Assert.assertNotNull(path51);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(backupEnvironment68);
    org.junit.Assert.assertNotNull(databaseNamePattern69);
    org.junit.Assert.assertNotNull(socketAddress70);
    org.junit.Assert.assertNotNull(path71);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(fileMoverService73);
    org.junit.Assert.assertNotNull(path74);
    org.junit.Assert.assertNotNull(fileMoverService75);
    org.junit.Assert.assertNotNull(path76);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(factory84);
    org.junit.Assert.assertNotNull(factory86);
    org.junit.Assert.assertNull(socketAddress87);
    org.junit.Assert.assertNotNull(factory89);
    org.junit.Assert.assertNotNull(factory91);
    org.junit.Assert.assertNotNull(backupEnvironment92);
    org.junit.Assert.assertNotNull(path93);
    org.junit.Assert.assertNotNull(fileMoverService94);
  }

  @Test
  public void test0527() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0527");
    }
    io.github.onograph.backup.BackupMetaDTO backupMetaDTO0 = null;
    java.lang.String[] strArray4 = new java.lang.String[]{"hi!", "database.id", "hi!"};
    java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList5, strArray4);
    try {
      io.github.onograph.backup.BackupMetaService.wrtmedaForBaLi(backupMetaDTO0,
          (java.util.List<java.lang.String>) strList5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(strArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
  }

  @Test
  public void test0528() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0528");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.prPath(path5);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.config(config8);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isRp(true);
    org.neo4j.configuration.Config config12 = factory9.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory2.config(config12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory2.shouldPrep(false);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    io.github.onograph.backup.FileMover fileMover17 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction16);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory18.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory18.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory24.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment30 = factory24.bulBackupEnvironment();
    boolean boolean31 = backupEnvironment30.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional32 = backupEnvironment30.geicmaOptional();
    java.nio.file.Path path33 = backupEnvironment30.getPbPath();
    java.nio.file.Path path34 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path33);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream35 = fileMover17._trrfrmnStream(
        path33);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory39.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory39.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory39.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory45.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment51 = factory45.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern52 = backupEnvironment51.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress53 = backupEnvironment51.getSocketAddress();
    java.nio.file.Path path54 = backupEnvironment51.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory36.pbPath(path54);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory56.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory59.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory59.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory59.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory65.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory65.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment71 = factory65.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern72 = backupEnvironment71.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress73 = backupEnvironment71.getSocketAddress();
    java.nio.file.Path path74 = backupEnvironment71.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory56.pbPath(path74);
    io.github.onograph.backup.FileMoverService fileMoverService76 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path54, path74);
    java.nio.file.Path path77 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path54);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream78 = fileMover17._trrfrmnStream(
        path77);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory15.prPath(path77);
    org.neo4j.logging.LogProvider logProvider80 = null;
    org.neo4j.io.pagecache.PageCache pageCache81 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer82 = null;
    try {
      io.github.onograph.backup.BackupMetaService backupMetaService83 = new io.github.onograph.backup.BackupMetaService(
          fileSystemAbstraction0, "", path77, logProvider80, pageCache81, pageCacheTracer82);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(config12);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(backupEnvironment30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional32);
    org.junit.Assert.assertNotNull(path33);
    org.junit.Assert.assertNotNull(path34);
    org.junit.Assert.assertNotNull(fileMoverServiceStream35);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(backupEnvironment51);
    org.junit.Assert.assertNotNull(databaseNamePattern52);
    org.junit.Assert.assertNotNull(socketAddress53);
    org.junit.Assert.assertNotNull(path54);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(backupEnvironment71);
    org.junit.Assert.assertNotNull(databaseNamePattern72);
    org.junit.Assert.assertNotNull(socketAddress73);
    org.junit.Assert.assertNotNull(path74);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(fileMoverService76);
    org.junit.Assert.assertNotNull(path77);
    org.junit.Assert.assertNotNull(fileMoverServiceStream78);
    org.junit.Assert.assertNotNull(factory79);
  }

  @Test
  public void test0529() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0529");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.config(config3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    org.neo4j.configuration.Config config7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.config(config7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    boolean boolean24 = backupEnvironment23.getIsBftf();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern25 = backupEnvironment23.getDatabaseNamePattern();
    java.nio.file.Path path26 = backupEnvironment23.getRpPath();
    java.nio.file.Path path27 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path26);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory10.prPath(path26);
    org.neo4j.logging.LogProvider logProvider29 = null;
    org.neo4j.io.pagecache.PageCache pageCache30 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer31 = null;
    try {
      io.github.onograph.backup.BackupMetaService backupMetaService32 = new io.github.onograph.backup.BackupMetaService(
          fileSystemAbstraction0, "", path26, logProvider29, pageCache30, pageCacheTracer31);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    org.junit.Assert.assertNotNull(databaseNamePattern25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertNotNull(factory28);
  }

  @Test
  public void test0530() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0530");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.lang.String[] strArray20 = new java.lang.String[]{"database.id"};
    java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
    boolean boolean22 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList21, strArray20);
    try {
      backupMetadataRepository1.wrtForPaLi(path17, (java.util.List<java.lang.String>) strList21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(strArray20);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
  }

  @Test
  public void test0531() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0531");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    java.nio.file.Path path15 = backupEnvironment12.getRpPath();
    java.nio.file.Path path16 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path15);
    boolean boolean17 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path16);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
  }

  @Test
  public void test0532() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0532");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional15 = backupEnvironment12.geicmaOptional();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    org.neo4j.memory.MemoryTracker memoryTracker17 = backupEnvironment12.getMemoryTracker();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(memoryTracker17);
  }

  @Test
  public void test0533() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0533");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    boolean boolean20 = backupEnvironment19.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional21 = backupEnvironment19.geicmaOptional();
    java.nio.file.Path path22 = backupEnvironment19.getPbPath();
    java.nio.file.Path path23 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path22);
    java.nio.file.Path path24 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path23);
    boolean boolean25 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    boolean boolean40 = backupEnvironment39.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional41 = backupEnvironment39.geicmaOptional();
    java.nio.file.Path path42 = backupEnvironment39.getPbPath();
    java.nio.file.Path path43 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.nio.file.Path path44 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path43);
    io.github.onograph.backup.FileMoverService fileMoverService45 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path24, path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory4.prPath(path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isRp(true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern49 = factory46.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(fileMoverService45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(databaseNamePattern49);
  }

  @Test
  public void test0534() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0534");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory5.isRp(false);
    java.nio.file.Path path10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.prPath(path10);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern12 = factory11.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config13 = factory11.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory4.config(config13);
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = factory4.getSocketAddress();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(databaseNamePattern12);
    org.junit.Assert.assertNotNull(config13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNull(socketAddress15);
  }

  @Test
  public void test0535() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0535");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.miAuthMetaOptions(
        authMetaOptions12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isIcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = factory15.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory4.databaseNamePattern(
        databaseNamePattern18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config21 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.config(config21);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isRp(true);
    org.neo4j.configuration.Config config25 = factory22.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory22.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    java.nio.file.Path path31 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory28.prPath(path31);
    java.nio.file.Path path33 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.prPath(path33);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    java.nio.file.Path path38 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory35.prPath(path38);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config41 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.config(config41);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.isRp(true);
    org.neo4j.configuration.Config config45 = factory42.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory35.config(config45);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory34.config(config45);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory27.config(config45);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory19.config(config45);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory19.shouldPrep(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(config25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(config45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
  }

  @Test
  public void test0536() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0536");
    }
    io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl commandProviderGdbRestorerCommandImpl0 = new io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl();
    int int1 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandProviderGdbRestorerCommandImpl0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandProviderGdbRestorerCommandImpl0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandProviderGdbRestorerCommandImpl0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = commandProviderGdbRestorerCommandImpl0.commandType();
    int int6 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test0537() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0537");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.io.PrintStream printStream3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern17 = backupEnvironment16.getDatabaseNamePattern();
    boolean boolean18 = backupEnvironment16.getIsBftf();
    boolean boolean19 = backupEnvironment16.getIsBftf();
    java.nio.file.Path path20 = backupEnvironment16.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isCc(false);
    java.nio.file.Path path24 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory21.prPath(path24);
    java.nio.file.Path path26 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.prPath(path26);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    java.nio.file.Path path31 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory28.prPath(path31);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config34 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.config(config34);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isRp(true);
    org.neo4j.configuration.Config config38 = factory35.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory28.config(config38);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory27.config(config38);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory44.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory44.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory50.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory50.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment56 = factory50.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern57 = backupEnvironment56.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress58 = backupEnvironment56.getSocketAddress();
    java.nio.file.Path path59 = backupEnvironment56.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory41.pbPath(path59);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory61.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory64.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory64.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory64.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory70.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory70.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment76 = factory70.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern77 = backupEnvironment76.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress78 = backupEnvironment76.getSocketAddress();
    java.nio.file.Path path79 = backupEnvironment76.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory61.pbPath(path79);
    io.github.onograph.backup.FileMoverService fileMoverService81 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path59, path79);
    java.nio.file.Path path82 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path79);
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory27.prPath(path82);
    boolean boolean84 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path82);
    org.neo4j.io.layout.DatabaseLayout databaseLayout85 = null;
    try {
      io.github.onograph.backup.GdbRestorer gdbRestorer86 = new io.github.onograph.backup.GdbRestorer(
          fileSystemAbstraction0, true, false, printStream3, path20, path82, databaseLayout85);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertNotNull(databaseNamePattern17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(config38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(backupEnvironment56);
    org.junit.Assert.assertNotNull(databaseNamePattern57);
    org.junit.Assert.assertNotNull(socketAddress58);
    org.junit.Assert.assertNotNull(path59);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(backupEnvironment76);
    org.junit.Assert.assertNotNull(databaseNamePattern77);
    org.junit.Assert.assertNotNull(socketAddress78);
    org.junit.Assert.assertNotNull(path79);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(fileMoverService81);
    org.junit.Assert.assertNotNull(path82);
    org.junit.Assert.assertNotNull(factory83);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
  }

  @Test
  public void test0538() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0538");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup5.isCc(true);
    io.github.onograph.backup.Backup backup9 = backup5.isCc(true);
    io.github.onograph.backup.Backup backup11 = backup5.isCc(true);
    java.io.OutputStream outputStream12 = null;
    try {
      io.github.onograph.backup.Backup backup13 = backup5.outputStream(outputStream12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: outputStream");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
    org.junit.Assert.assertNotNull(backup11);
  }

  @Test
  public void test0539() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0539");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    org.neo4j.configuration.helpers.SocketAddress socketAddress3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.wihadsBackupEnvironmentFactory(
        socketAddress3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.shouldPrep(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
  }

  @Test
  public void test0540() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0540");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    java.nio.file.Path path7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory0.pbPath(path7);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern22 = backupEnvironment21.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress23 = backupEnvironment21.getSocketAddress();
    java.nio.file.Path path24 = backupEnvironment21.getRpPath();
    boolean boolean25 = backupEnvironment21.getIsBftf();
    java.nio.file.Path path26 = backupEnvironment21.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory8.prPath(path26);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory28.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory28.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory34.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment40 = factory34.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern41 = backupEnvironment40.getDatabaseNamePattern();
    boolean boolean42 = backupEnvironment40.getIsBftf();
    boolean boolean43 = backupEnvironment40.getIsBftf();
    java.nio.file.Path path44 = backupEnvironment40.getRpPath();
    io.github.onograph.backup.FileMoverService fileMoverService45 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path26, path44);
    java.nio.file.Path path46 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path26);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config48 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.config(config48);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isRp(true);
    org.neo4j.configuration.Config config52 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.config(config52);
    org.neo4j.configuration.helpers.SocketAddress socketAddress54 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory51.wihadsBackupEnvironmentFactory(
        socketAddress54);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory56.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory59.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory59.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory59.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory65.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory65.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment71 = factory65.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern72 = backupEnvironment71.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress73 = backupEnvironment71.getSocketAddress();
    java.nio.file.Path path74 = backupEnvironment71.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory56.pbPath(path74);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory76.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = factory79.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory79.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory85 = factory79.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory87 = factory85.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory90 = factory85.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment91 = factory85.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern92 = backupEnvironment91.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress93 = backupEnvironment91.getSocketAddress();
    java.nio.file.Path path94 = backupEnvironment91.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory95 = factory76.pbPath(path94);
    io.github.onograph.backup.FileMoverService fileMoverService96 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path74, path94);
    io.github.onograph.backup.BackupEnvironment.Factory factory97 = factory51.pbPath(path94);
    io.github.onograph.backup.FileMoverService fileMoverService98 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path26, path94);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertNotNull(databaseNamePattern22);
    org.junit.Assert.assertNotNull(socketAddress23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(backupEnvironment40);
    org.junit.Assert.assertNotNull(databaseNamePattern41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(fileMoverService45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(backupEnvironment71);
    org.junit.Assert.assertNotNull(databaseNamePattern72);
    org.junit.Assert.assertNotNull(socketAddress73);
    org.junit.Assert.assertNotNull(path74);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(factory81);
    org.junit.Assert.assertNotNull(factory83);
    org.junit.Assert.assertNotNull(factory85);
    org.junit.Assert.assertNotNull(factory87);
    org.junit.Assert.assertNotNull(factory90);
    org.junit.Assert.assertNotNull(backupEnvironment91);
    org.junit.Assert.assertNotNull(databaseNamePattern92);
    org.junit.Assert.assertNotNull(socketAddress93);
    org.junit.Assert.assertNotNull(path94);
    org.junit.Assert.assertNotNull(factory95);
    org.junit.Assert.assertNotNull(fileMoverService96);
    org.junit.Assert.assertNotNull(factory97);
    org.junit.Assert.assertNotNull(fileMoverService98);
  }

  @Test
  public void test0541() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0541");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory5.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory5.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory11.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment17 = factory11.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = backupEnvironment17.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress19 = backupEnvironment17.getSocketAddress();
    java.nio.file.Path path20 = backupEnvironment17.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory2.pbPath(path20);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory25.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory25.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory31.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment37 = factory31.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern38 = backupEnvironment37.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress39 = backupEnvironment37.getSocketAddress();
    java.nio.file.Path path40 = backupEnvironment37.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory22.pbPath(path40);
    io.github.onograph.backup.FileMoverService fileMoverService42 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path20, path40);
    java.nio.file.Path path43 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path40);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction44 = null;
    io.github.onograph.backup.FileMover fileMover45 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction44);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory46.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory46.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory52.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment58 = factory52.bulBackupEnvironment();
    boolean boolean59 = backupEnvironment58.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional60 = backupEnvironment58.geicmaOptional();
    java.nio.file.Path path61 = backupEnvironment58.getPbPath();
    java.nio.file.Path path62 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path61);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream63 = fileMover45._trrfrmnStream(
        path61);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory64.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory64.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory64.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory70.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory70.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment76 = factory70.bulBackupEnvironment();
    boolean boolean77 = backupEnvironment76.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional78 = backupEnvironment76.geicmaOptional();
    java.nio.file.Path path79 = backupEnvironment76.getPbPath();
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream80 = fileMover45._trrfrmnStream(
        path79);
    io.github.onograph.backup.FileMoverService fileMoverService81 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path40, path79);
    org.neo4j.logging.LogProvider logProvider82 = null;
    org.neo4j.io.pagecache.PageCache pageCache83 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer84 = null;
    try {
      io.github.onograph.backup.BackupMetaService backupMetaService85 = new io.github.onograph.backup.BackupMetaService(
          fileSystemAbstraction0, "database.id", path40, logProvider82, pageCache83,
          pageCacheTracer84);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(backupEnvironment17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(socketAddress19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(backupEnvironment37);
    org.junit.Assert.assertNotNull(databaseNamePattern38);
    org.junit.Assert.assertNotNull(socketAddress39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(fileMoverService42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(backupEnvironment58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional60);
    org.junit.Assert.assertNotNull(path61);
    org.junit.Assert.assertNotNull(path62);
    org.junit.Assert.assertNotNull(fileMoverServiceStream63);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(backupEnvironment76);
    org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional78);
    org.junit.Assert.assertNotNull(path79);
    org.junit.Assert.assertNotNull(fileMoverServiceStream80);
    org.junit.Assert.assertNotNull(fileMoverService81);
  }

  @Test
  public void test0542() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0542");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isGcc(
        (java.lang.Boolean) true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
  }

  @Test
  public void test0543() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0543");
    }
    io.github.onograph.backup.CommandProviderBackupImpl commandProviderBackupImpl0 = new io.github.onograph.backup.CommandProviderBackupImpl();
    int int1 = commandProviderBackupImpl0.getPriority();
    int int2 = commandProviderBackupImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandProviderBackupImpl0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandProviderBackupImpl0.commandType();
    int int5 = commandProviderBackupImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType6 = commandProviderBackupImpl0.commandType();
    int int7 = commandProviderBackupImpl0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext8 = null;
    try {
      io.github.onograph.backup.BackupCommand backupCommand9 = commandProviderBackupImpl0.createCommand(
          executionContext8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
  }

  @Test
  public void test0544() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0544");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isIcc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.Config config5 = factory4.gecfConfig();
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags6 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    boolean boolean22 = backupEnvironment21.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional23 = backupEnvironment21.geicmaOptional();
    java.nio.file.Path path24 = backupEnvironment21.getPbPath();
    java.nio.file.Path path25 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory27 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl28 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config5, consistencyFlags6, fileSystemAbstraction7, logProvider8, path26,
        progressMonitorFactory27);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory30.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory30.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory36.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment42 = factory36.bulBackupEnvironment();
    boolean boolean43 = backupEnvironment42.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional44 = backupEnvironment42.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern45 = backupEnvironment42.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional46 = backupEnvironment42.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker47 = backupEnvironment42.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache48 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager49 = new io.github.onograph.backup.BackupRestorationManager(
        config5, fileSystemAbstraction29, memoryTracker47, pageCache48);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction50 = null;
    org.neo4j.logging.LogProvider logProvider51 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer52 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock53 = null;
    try {
      io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler54 = io.github.onograph.backup.DefaultBackupServiceHandler.strliclDefaultBackupServiceHandler(
          config5, fileSystemAbstraction50, logProvider51, pageCacheTracer52, systemNanoClock53);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(backupEnvironment42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional44);
    org.junit.Assert.assertNotNull(databaseNamePattern45);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional46);
    org.junit.Assert.assertNotNull(memoryTracker47);
  }

  @Test
  public void test0545() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0545");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config6 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.config(config6);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isRp(true);
    org.neo4j.configuration.Config config10 = factory7.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory0.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory0.shouldPrep(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions14 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory0.miAuthMetaOptions(
        authMetaOptions14);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(config10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
  }

  @Test
  public void test0546() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0546");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory5.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory5.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory11.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment17 = factory11.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = backupEnvironment17.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress19 = backupEnvironment17.getSocketAddress();
    java.nio.file.Path path20 = backupEnvironment17.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory2.pbPath(path20);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory25.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory25.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory31.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment37 = factory31.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern38 = backupEnvironment37.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress39 = backupEnvironment37.getSocketAddress();
    java.nio.file.Path path40 = backupEnvironment37.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory22.pbPath(path40);
    io.github.onograph.backup.FileMoverService fileMoverService42 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path20, path40);
    boolean boolean43 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path20);
    java.nio.file.Path path44 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path20);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional45 = gdbIdRepo1.reddtaiOptional(
          path20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(backupEnvironment17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(socketAddress19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(backupEnvironment37);
    org.junit.Assert.assertNotNull(databaseNamePattern38);
    org.junit.Assert.assertNotNull(socketAddress39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(fileMoverService42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(path44);
  }

  @Test
  public void test0547() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0547");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory8.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions13 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.miAuthMetaOptions(
        authMetaOptions13);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isIcc(
        (java.lang.Boolean) false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
  }

  @Test
  public void test0548() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0548");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    java.io.OutputStream outputStream4 = null;
    try {
      io.github.onograph.backup.Backup backup5 = backup1.outputStream(outputStream4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: outputStream");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
  }

  @Test
  public void test0549() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0549");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    java.nio.file.Path path2 = null;
    java.lang.String[] strArray4 = new java.lang.String[]{"hi!"};
    java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList5, strArray4);
    try {
      backupMetadataRepository1.wrtForPaLi(path2, (java.util.List<java.lang.String>) strList5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(strArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
  }

  @Test
  public void test0550() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0550");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream19 = fileMover1._trrfrmnStream(
        path17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory26.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment32 = factory26.bulBackupEnvironment();
    boolean boolean33 = backupEnvironment32.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional34 = backupEnvironment32.geicmaOptional();
    java.nio.file.Path path35 = backupEnvironment32.getPbPath();
    java.nio.file.Path path36 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path35);
    java.nio.file.Path path37 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path36);
    io.github.onograph.backup.FileMoverService fileMoverService38 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path17, path36);
    java.nio.file.Path path39 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path17);
    boolean boolean40 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path39);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(fileMoverServiceStream19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(backupEnvironment32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional34);
    org.junit.Assert.assertNotNull(path35);
    org.junit.Assert.assertNotNull(path36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(fileMoverService38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
  }

  @Test
  public void test0551() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0551");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config23 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.config(config23);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isRp(true);
    org.neo4j.configuration.Config config27 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.config(config27);
    org.neo4j.configuration.helpers.SocketAddress socketAddress29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory26.wihadsBackupEnvironmentFactory(
        socketAddress29);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory34.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory34.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory40.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment46 = factory40.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern47 = backupEnvironment46.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress48 = backupEnvironment46.getSocketAddress();
    java.nio.file.Path path49 = backupEnvironment46.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory31.pbPath(path49);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory54.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory54.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory60.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment66 = factory60.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern67 = backupEnvironment66.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress68 = backupEnvironment66.getSocketAddress();
    java.nio.file.Path path69 = backupEnvironment66.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory51.pbPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService71 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path49, path69);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory26.pbPath(path69);
    boolean boolean73 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path69);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory19.prPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService75 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path17, path69);
    org.neo4j.logging.LogProvider logProvider76 = null;
    org.neo4j.io.pagecache.PageCache pageCache77 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer78 = null;
    try {
      io.github.onograph.backup.BackupMetaService backupMetaService79 = new io.github.onograph.backup.BackupMetaService(
          fileSystemAbstraction0, "database.id", path69, logProvider76, pageCache77,
          pageCacheTracer78);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(backupEnvironment46);
    org.junit.Assert.assertNotNull(databaseNamePattern47);
    org.junit.Assert.assertNotNull(socketAddress48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(backupEnvironment66);
    org.junit.Assert.assertNotNull(databaseNamePattern67);
    org.junit.Assert.assertNotNull(socketAddress68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(fileMoverService71);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(fileMoverService75);
  }

  @Test
  public void test0552() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0552");
    }
    io.github.onograph.backup.BackupMetaDTO backupMetaDTO0 = null;
    java.lang.String[] strArray4 = new java.lang.String[]{"database.id", "hi!", "hi!"};
    java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList5, strArray4);
    try {
      io.github.onograph.backup.BackupMetaService.wrtmedaForBaLi(backupMetaDTO0,
          (java.util.List<java.lang.String>) strList5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(strArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
  }

  @Test
  public void test0553() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0553");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction4 = null;
    io.github.onograph.backup.FileMover fileMover5 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction4);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory6.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory12.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment18 = factory12.bulBackupEnvironment();
    boolean boolean19 = backupEnvironment18.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional20 = backupEnvironment18.geicmaOptional();
    java.nio.file.Path path21 = backupEnvironment18.getPbPath();
    java.nio.file.Path path22 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path21);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream23 = fileMover5._trrfrmnStream(
        path21);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern40 = backupEnvironment39.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress41 = backupEnvironment39.getSocketAddress();
    java.nio.file.Path path42 = backupEnvironment39.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory24.pbPath(path42);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory47.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory47.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory53.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment59 = factory53.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern60 = backupEnvironment59.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress61 = backupEnvironment59.getSocketAddress();
    java.nio.file.Path path62 = backupEnvironment59.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory44.pbPath(path62);
    io.github.onograph.backup.FileMoverService fileMoverService64 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path42, path62);
    java.nio.file.Path path65 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream66 = fileMover5._trrfrmnStream(
        path65);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream67 = fileMover3._trrfrmnStream(
        path65);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction68 = null;
    io.github.onograph.backup.FileMover fileMover69 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction68);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory70.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory70.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory70.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory76.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = factory76.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment82 = factory76.bulBackupEnvironment();
    boolean boolean83 = backupEnvironment82.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional84 = backupEnvironment82.geicmaOptional();
    java.nio.file.Path path85 = backupEnvironment82.getPbPath();
    java.nio.file.Path path86 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path85);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream87 = fileMover69._trrfrmnStream(
        path85);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream88 = fileMover3._trrfrmnStream(
        path85);
    boolean boolean89 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path85);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional90 = gdbIdRepo1.reddtaiOptional(
          path85);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(backupEnvironment18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(fileMoverServiceStream23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertNotNull(databaseNamePattern40);
    org.junit.Assert.assertNotNull(socketAddress41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(backupEnvironment59);
    org.junit.Assert.assertNotNull(databaseNamePattern60);
    org.junit.Assert.assertNotNull(socketAddress61);
    org.junit.Assert.assertNotNull(path62);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(fileMoverService64);
    org.junit.Assert.assertNotNull(path65);
    org.junit.Assert.assertNotNull(fileMoverServiceStream66);
    org.junit.Assert.assertNotNull(fileMoverServiceStream67);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory81);
    org.junit.Assert.assertNotNull(backupEnvironment82);
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional84);
    org.junit.Assert.assertNotNull(path85);
    org.junit.Assert.assertNotNull(path86);
    org.junit.Assert.assertNotNull(fileMoverServiceStream87);
    org.junit.Assert.assertNotNull(fileMoverServiceStream88);
    org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
  }

  @Test
  public void test0554() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0554");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.itraLogProvider(
        logProvider9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator8.progressMonitorFactory(
        progressMonitorFactory13);
    java.lang.Class<?> wildcardClass15 = generator8.getClass();
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(wildcardClass15);
  }

  @Test
  public void test0555() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0555");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config23 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.config(config23);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isRp(true);
    org.neo4j.configuration.Config config27 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.config(config27);
    org.neo4j.configuration.helpers.SocketAddress socketAddress29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory26.wihadsBackupEnvironmentFactory(
        socketAddress29);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory34.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory34.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory40.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment46 = factory40.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern47 = backupEnvironment46.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress48 = backupEnvironment46.getSocketAddress();
    java.nio.file.Path path49 = backupEnvironment46.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory31.pbPath(path49);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory54.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory54.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory60.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment66 = factory60.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern67 = backupEnvironment66.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress68 = backupEnvironment66.getSocketAddress();
    java.nio.file.Path path69 = backupEnvironment66.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory51.pbPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService71 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path49, path69);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory26.pbPath(path69);
    boolean boolean73 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path69);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory19.prPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService75 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path17, path69);
    java.nio.file.Path path76 = fileMoverService75.filPath();
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional77 = gdbIdRepo1.reddtaiOptional(
          path76);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(backupEnvironment46);
    org.junit.Assert.assertNotNull(databaseNamePattern47);
    org.junit.Assert.assertNotNull(socketAddress48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(backupEnvironment66);
    org.junit.Assert.assertNotNull(databaseNamePattern67);
    org.junit.Assert.assertNotNull(socketAddress68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(fileMoverService71);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(fileMoverService75);
    org.junit.Assert.assertNotNull(path76);
  }

  @Test
  public void test0556() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0556");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.time.SystemNanoClock systemNanoClock5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.systemNanoClock(
        systemNanoClock5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.systemNanoClock(
        systemNanoClock9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.monitors(monitors11);
    io.github.onograph.backup.BackupRunner backupRunner13 = generator6.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory14.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory14.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory20.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment26 = factory20.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern27 = backupEnvironment26.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress28 = backupEnvironment26.getSocketAddress();
    java.nio.file.Path path29 = backupEnvironment26.getRpPath();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern30 = backupEnvironment26.getDatabaseNamePattern();
    try {
      backupRunner13.excebcpForBa(backupEnvironment26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(backupRunner13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(backupEnvironment26);
    org.junit.Assert.assertNotNull(databaseNamePattern27);
    org.junit.Assert.assertNotNull(socketAddress28);
    org.junit.Assert.assertNotNull(path29);
    org.junit.Assert.assertNotNull(databaseNamePattern30);
  }

  @Test
  public void test0557() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0557");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = backupEnvironment12.getSocketAddress();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional15 = backupEnvironment12.geicmaOptional();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    boolean boolean17 = backupEnvironment12.getIsBftf();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertNotNull(socketAddress14);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
  }

  @Test
  public void test0558() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0558");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    org.neo4j.configuration.helpers.SocketAddress socketAddress3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.wihadsBackupEnvironmentFactory(
        socketAddress3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory13.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory19.wihadsBackupEnvironmentFactory(
        100, "hi!");
    org.neo4j.configuration.Config config25 = factory24.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory12.config(config25);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(config25);
    org.junit.Assert.assertNotNull(factory26);
  }

  @Test
  public void test0559() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0559");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern3 = factory2.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory2.isRp(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(databaseNamePattern3);
    org.junit.Assert.assertNotNull(factory5);
  }

  @Test
  public void test0560() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0560");
    }
    io.github.onograph.backup.BackupMetaDTO backupMetaDTO0 = null;
    java.lang.String[] strArray4 = new java.lang.String[]{"", "hi!", ""};
    java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList5, strArray4);
    try {
      io.github.onograph.backup.BackupMetaService.wrtmedaForBaLi(backupMetaDTO0,
          (java.util.List<java.lang.String>) strList5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(strArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
  }

  @Test
  public void test0561() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0561");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.logging.LogProvider logProvider1 = null;
    org.neo4j.logging.Log log2 = null;
    io.github.onograph.backup.RemoteBackupService remoteBackupService3 = new io.github.onograph.backup.RemoteBackupService(
        fileSystemAbstraction0, logProvider1, log2);
    org.neo4j.configuration.Config config4 = null;
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags5 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.logging.LogProvider logProvider7 = null;
    java.nio.file.Path path8 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory9 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl10 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config4, consistencyFlags5, fileSystemAbstraction6, logProvider7, path8,
        progressMonitorFactory9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    boolean boolean24 = backupEnvironment23.getIsBftf();
    io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler26 = null;
    io.github.onograph.backup.GdbStoreTransferWatcherRebImpl gdbStoreTransferWatcherRebImpl27 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer28 = null;
    io.github.onograph.backup.RemoteBackupManager remoteBackupManager29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config31 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.config(config31);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.isRp(true);
    org.neo4j.configuration.Config config35 = factory32.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory32.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory38.isCc(false);
    java.nio.file.Path path41 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory38.prPath(path41);
    java.nio.file.Path path43 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.prPath(path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    java.nio.file.Path path48 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory45.prPath(path48);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config51 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory50.config(config51);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isRp(true);
    org.neo4j.configuration.Config config55 = factory52.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory45.config(config55);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory44.config(config55);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory37.config(config55);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction59 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory60.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory60.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory66.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory66.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment72 = factory66.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker73 = backupEnvironment72.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache74 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager75 = new io.github.onograph.backup.BackupRestorationManager(
        config55, fileSystemAbstraction59, memoryTracker73, pageCache74);
    try {
      remoteBackupService3.bakForBaPaBaDeBaReStGd(
          (io.github.onograph.backup.BackupVerificationService) backupVerificationServiceImpl10,
          backupEnvironment23, "database.id", defaultBackupServiceHandler26,
          gdbStoreTransferWatcherRebImpl27, pageCacheTracer28, remoteBackupManager29,
          backupRestorationManager75);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(config35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(config55);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(backupEnvironment72);
    org.junit.Assert.assertNotNull(memoryTracker73);
  }

  @Test
  public void test0562() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0562");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory4.isSicc(
        (java.lang.Boolean) false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
  }

  @Test
  public void test0563() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0563");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.systemNanoClock(
        systemNanoClock7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.itraLogProvider(
        logProvider9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.monitors(monitors11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.itraLogProvider(
        logProvider13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator12.fFileSystemAbstraction(
        fileSystemAbstraction15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator16.itraLogProvider(
        logProvider17);
    io.github.onograph.backup.BackupRunner backupRunner19 = generator18.bulBackupRunner();
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
    org.junit.Assert.assertNotNull(backupRunner19);
  }

  @Test
  public void test0564() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0564");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.systemNanoClock(
        systemNanoClock7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.itraLogProvider(
        logProvider9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.monitors(monitors11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.uLogProvider(
        logProvider13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator14.itraLogProvider(
        logProvider15);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator14.fFileSystemAbstraction(
        fileSystemAbstraction17);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory19 = null;
    io.github.onograph.backup.BackupRunner.Generator generator20 = generator14.progressMonitorFactory(
        progressMonitorFactory19);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
    org.junit.Assert.assertNotNull(generator20);
  }

  @Test
  public void test0565() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0565");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    boolean boolean20 = backupEnvironment19.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional21 = backupEnvironment19.geicmaOptional();
    java.nio.file.Path path22 = backupEnvironment19.getPbPath();
    java.nio.file.Path path23 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path22);
    java.nio.file.Path path24 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path23);
    boolean boolean25 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    boolean boolean40 = backupEnvironment39.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional41 = backupEnvironment39.geicmaOptional();
    java.nio.file.Path path42 = backupEnvironment39.getPbPath();
    java.nio.file.Path path43 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.nio.file.Path path44 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path43);
    io.github.onograph.backup.FileMoverService fileMoverService45 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path24, path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory4.prPath(path43);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions47 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.miAuthMetaOptions(
        authMetaOptions47);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory48.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory50.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory50.isCc(true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(fileMoverService45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
  }

  @Test
  public void test0566() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0566");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.miAuthMetaOptions(
        authMetaOptions12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isIcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = factory15.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory4.databaseNamePattern(
        databaseNamePattern18);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory4.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory4.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory24.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory24.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory30.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment36 = factory30.bulBackupEnvironment();
    boolean boolean37 = backupEnvironment36.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional38 = backupEnvironment36.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional39 = backupEnvironment36.geicmaOptional();
    java.nio.file.Path path40 = backupEnvironment36.getPbPath();
    java.nio.file.Path path41 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path40);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory4.prPath(path40);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config47 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.config(config47);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory48.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory51.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory51.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory57.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment63 = factory57.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern64 = backupEnvironment63.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress65 = backupEnvironment63.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory50.wihadsBackupEnvironmentFactory(
        socketAddress65);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory43.wihadsBackupEnvironmentFactory(
        socketAddress65);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory42.wihadsBackupEnvironmentFactory(
        socketAddress65);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory42.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory70.isFtfb(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(backupEnvironment36);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional38);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(path41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(backupEnvironment63);
    org.junit.Assert.assertNotNull(databaseNamePattern64);
    org.junit.Assert.assertNotNull(socketAddress65);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
  }

  @Test
  public void test0567() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0567");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory12.isGcc(
        (java.lang.Boolean) false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
  }

  @Test
  public void test0568() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0568");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = factory2.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory2.isCc(true);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory2.miAuthMetaOptions(
        authMetaOptions8);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory10.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory10.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory16.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment22 = factory16.bulBackupEnvironment();
    boolean boolean23 = backupEnvironment22.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional24 = backupEnvironment22.geicmaOptional();
    java.nio.file.Path path25 = backupEnvironment22.getPbPath();
    java.nio.file.Path path26 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path25);
    java.nio.file.Path path27 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path26);
    boolean boolean28 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path27);
    java.nio.file.Path path29 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path27);
    java.nio.file.Path path30 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path29);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory34.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory34.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory40.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment46 = factory40.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern47 = backupEnvironment46.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress48 = backupEnvironment46.getSocketAddress();
    java.nio.file.Path path49 = backupEnvironment46.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory31.pbPath(path49);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory54.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory54.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory60.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment66 = factory60.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern67 = backupEnvironment66.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress68 = backupEnvironment66.getSocketAddress();
    java.nio.file.Path path69 = backupEnvironment66.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory51.pbPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService71 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path49, path69);
    java.nio.file.Path path72 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService73 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path29, path72);
    java.nio.file.Path path74 = fileMoverService73.filPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory2.prPath(path74);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions76 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory2.miAuthMetaOptions(
        authMetaOptions76);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(backupEnvironment22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNotNull(path29);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(backupEnvironment46);
    org.junit.Assert.assertNotNull(databaseNamePattern47);
    org.junit.Assert.assertNotNull(socketAddress48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(backupEnvironment66);
    org.junit.Assert.assertNotNull(databaseNamePattern67);
    org.junit.Assert.assertNotNull(socketAddress68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(fileMoverService71);
    org.junit.Assert.assertNotNull(path72);
    org.junit.Assert.assertNotNull(fileMoverService73);
    org.junit.Assert.assertNotNull(path74);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(factory77);
  }

  @Test
  public void test0569() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0569");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment14.getSocketAddress();
    boolean boolean18 = backupEnvironment14.getIsCc();
    java.nio.file.Path path19 = backupEnvironment14.getRpPath();
    java.nio.file.Path path20 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path19);
    try {
      boolean boolean21 = backupIOService1.isExsForPa(path20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
  }

  @Test
  public void test0570() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0570");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        (int) (short) 1, "");
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory19.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory19.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory25.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment31 = factory25.bulBackupEnvironment();
    boolean boolean32 = backupEnvironment31.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional33 = backupEnvironment31.geicmaOptional();
    java.nio.file.Path path34 = backupEnvironment31.getPbPath();
    boolean boolean35 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path34);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory18.prPath(path34);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory37.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory37.isIcc(
        (java.lang.Boolean) true);
    java.nio.file.Path path44 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory37.pbPath(path44);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory46.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory46.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory52.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment58 = factory52.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern59 = backupEnvironment58.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress60 = backupEnvironment58.getSocketAddress();
    java.nio.file.Path path61 = backupEnvironment58.getRpPath();
    boolean boolean62 = backupEnvironment58.getIsBftf();
    java.nio.file.Path path63 = backupEnvironment58.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory45.prPath(path63);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory65.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory65.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory65.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory71.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory71.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment77 = factory71.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern78 = backupEnvironment77.getDatabaseNamePattern();
    boolean boolean79 = backupEnvironment77.getIsBftf();
    boolean boolean80 = backupEnvironment77.getIsBftf();
    java.nio.file.Path path81 = backupEnvironment77.getRpPath();
    io.github.onograph.backup.FileMoverService fileMoverService82 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path63, path81);
    java.nio.file.Path path83 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path63);
    io.github.onograph.backup.FileMoverService fileMoverService84 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path34, path83);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(backupEnvironment31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional33);
    org.junit.Assert.assertNotNull(path34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(backupEnvironment58);
    org.junit.Assert.assertNotNull(databaseNamePattern59);
    org.junit.Assert.assertNotNull(socketAddress60);
    org.junit.Assert.assertNotNull(path61);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    org.junit.Assert.assertNotNull(path63);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(backupEnvironment77);
    org.junit.Assert.assertNotNull(databaseNamePattern78);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    org.junit.Assert.assertNotNull(path81);
    org.junit.Assert.assertNotNull(fileMoverService82);
    org.junit.Assert.assertNotNull(path83);
    org.junit.Assert.assertNotNull(fileMoverService84);
  }

  @Test
  public void test0571() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0571");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.progressMonitorFactory(
        progressMonitorFactory13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator12.uLogProvider(
        logProvider15);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
  }

  @Test
  public void test0572() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0572");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory3.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory3.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory9.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment15 = factory9.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment15.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment15.getSocketAddress();
    java.nio.file.Path path18 = backupEnvironment15.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory0.pbPath(path18);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isIcc(
        (java.lang.Boolean) true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(backupEnvironment15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
  }

  @Test
  public void test0573() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0573");
    }
    io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl commandProviderGdbRestorerCommandImpl0 = new io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl();
    int int1 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandProviderGdbRestorerCommandImpl0.commandType();
    int int3 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = commandProviderGdbRestorerCommandImpl0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
  }

  @Test
  public void test0574() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0574");
    }
    java.nio.file.Path path0 = null;
    java.nio.file.Path path1 = null;
    io.github.onograph.backup.FileMoverService fileMoverService2 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path0, path1);
    java.nio.file.Path path3 = fileMoverService2.filPath();
    java.nio.file.Path path4 = fileMoverService2.filPath();
    java.nio.file.Path path5 = fileMoverService2.filPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    java.nio.file.Path path9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.prPath(path9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.config(config12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isRp(true);
    org.neo4j.configuration.Config config16 = factory13.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory6.config(config16);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory6.shouldPrep(false);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    io.github.onograph.backup.FileMover fileMover21 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction20);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory22.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory22.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory28.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment34 = factory28.bulBackupEnvironment();
    boolean boolean35 = backupEnvironment34.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional36 = backupEnvironment34.geicmaOptional();
    java.nio.file.Path path37 = backupEnvironment34.getPbPath();
    java.nio.file.Path path38 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path37);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream39 = fileMover21._trrfrmnStream(
        path37);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory43.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory43.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory49.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment55 = factory49.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern56 = backupEnvironment55.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress57 = backupEnvironment55.getSocketAddress();
    java.nio.file.Path path58 = backupEnvironment55.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory40.pbPath(path58);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory63.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory63.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory63.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory69.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory69.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment75 = factory69.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern76 = backupEnvironment75.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress77 = backupEnvironment75.getSocketAddress();
    java.nio.file.Path path78 = backupEnvironment75.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory60.pbPath(path78);
    io.github.onograph.backup.FileMoverService fileMoverService80 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path58, path78);
    java.nio.file.Path path81 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path58);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream82 = fileMover21._trrfrmnStream(
        path81);
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory19.prPath(path81);
    java.nio.file.Path path84 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path81);
    java.nio.file.CopyOption[] copyOptionArray85 = new java.nio.file.CopyOption[]{};
    try {
      fileMoverService2.movForPaCo(path84, copyOptionArray85);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(fileMoverService2);
    org.junit.Assert.assertNull(path3);
    org.junit.Assert.assertNull(path4);
    org.junit.Assert.assertNull(path5);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(config16);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(backupEnvironment34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(fileMoverServiceStream39);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(backupEnvironment55);
    org.junit.Assert.assertNotNull(databaseNamePattern56);
    org.junit.Assert.assertNotNull(socketAddress57);
    org.junit.Assert.assertNotNull(path58);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(backupEnvironment75);
    org.junit.Assert.assertNotNull(databaseNamePattern76);
    org.junit.Assert.assertNotNull(socketAddress77);
    org.junit.Assert.assertNotNull(path78);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(fileMoverService80);
    org.junit.Assert.assertNotNull(path81);
    org.junit.Assert.assertNotNull(fileMoverServiceStream82);
    org.junit.Assert.assertNotNull(factory83);
    org.junit.Assert.assertNotNull(path84);
    org.junit.Assert.assertNotNull(copyOptionArray85);
  }

  @Test
  public void test0575() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0575");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.miAuthMetaOptions(
        authMetaOptions12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isIcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = factory15.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory4.databaseNamePattern(
        databaseNamePattern18);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory4.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory4.isIcc(
        (java.lang.Boolean) false);
    try {
      io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.databaseNamePattern(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: The provided database name is empty.");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
  }

  @Test
  public void test0576() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0576");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.itraLogProvider(
        logProvider9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.uLogProvider(
        logProvider13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0577() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0577");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.logging.LogProvider logProvider1 = null;
    org.neo4j.logging.Log log2 = null;
    io.github.onograph.backup.RemoteBackupService remoteBackupService3 = new io.github.onograph.backup.RemoteBackupService(
        fileSystemAbstraction0, logProvider1, log2);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config14 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.config(config14);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isRp(true);
    org.neo4j.configuration.Config config18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.config(config18);
    org.neo4j.configuration.helpers.SocketAddress socketAddress20 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory17.wihadsBackupEnvironmentFactory(
        socketAddress20);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config23 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.config(config23);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isRp(true);
    org.neo4j.configuration.Config config27 = factory24.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory17.config(config27);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory12.config(config27);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags30 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.logging.LogProvider logProvider32 = null;
    java.nio.file.Path path33 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory34 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl35 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config27, consistencyFlags30, fileSystemAbstraction31, logProvider32, path33,
        progressMonitorFactory34);
    io.github.onograph.backup.BackupEnvironment backupEnvironment36 = null;
    io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler38 = null;
    io.github.onograph.backup.GdbStoreTransferWatcherRebImpl gdbStoreTransferWatcherRebImpl39 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer40 = null;
    io.github.onograph.backup.RemoteBackupManager remoteBackupManager41 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.isCc(false);
    java.nio.file.Path path45 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory42.prPath(path45);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory42.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory49.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory54.isRp(false);
    java.nio.file.Path path59 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.prPath(path59);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern61 = factory60.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config62 = factory60.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory53.config(config62);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory42.config(config62);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction65 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory66.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory66.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory66.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory72.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory72.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment78 = factory72.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker79 = backupEnvironment78.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern80 = backupEnvironment78.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress81 = backupEnvironment78.getSocketAddress();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern82 = backupEnvironment78.getDatabaseNamePattern();
    org.neo4j.memory.MemoryTracker memoryTracker83 = backupEnvironment78.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache84 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager85 = new io.github.onograph.backup.BackupRestorationManager(
        config62, fileSystemAbstraction65, memoryTracker83, pageCache84);
    try {
      remoteBackupService3.bakForBaPaBaDeBaReStGd(
          (io.github.onograph.backup.BackupVerificationService) backupVerificationServiceImpl35,
          backupEnvironment36, "", defaultBackupServiceHandler38, gdbStoreTransferWatcherRebImpl39,
          pageCacheTracer40, remoteBackupManager41, backupRestorationManager85);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(config27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(databaseNamePattern61);
    org.junit.Assert.assertNotNull(config62);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(backupEnvironment78);
    org.junit.Assert.assertNotNull(memoryTracker79);
    org.junit.Assert.assertNotNull(databaseNamePattern80);
    org.junit.Assert.assertNotNull(socketAddress81);
    org.junit.Assert.assertNotNull(databaseNamePattern82);
    org.junit.Assert.assertNotNull(memoryTracker83);
  }

  @Test
  public void test0578() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0578");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isRp(true);
    org.neo4j.configuration.Config config14 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.config(config14);
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.wihadsBackupEnvironmentFactory(
        socketAddress16);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.config(config19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isRp(true);
    org.neo4j.configuration.Config config23 = factory20.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory13.config(config23);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory8.config(config23);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.logging.LogProvider logProvider28 = null;
    java.nio.file.Path path29 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory30 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl31 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config23, consistencyFlags26, fileSystemAbstraction27, logProvider28, path29,
        progressMonitorFactory30);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags32 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction33 = null;
    org.neo4j.logging.LogProvider logProvider34 = null;
    java.nio.file.Path path35 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory36 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl37 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config23, consistencyFlags32, fileSystemAbstraction33, logProvider34, path35,
        progressMonitorFactory36);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction38 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory39.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory39.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory39.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory45.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment51 = factory45.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker52 = backupEnvironment51.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern53 = backupEnvironment51.getDatabaseNamePattern();
    boolean boolean54 = backupEnvironment51.getIsBftf();
    java.nio.file.Path path55 = backupEnvironment51.getRpPath();
    boolean boolean56 = backupEnvironment51.getIsRp();
    org.neo4j.memory.MemoryTracker memoryTracker57 = backupEnvironment51.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache58 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager59 = new io.github.onograph.backup.BackupRestorationManager(
        config23, fileSystemAbstraction38, memoryTracker57, pageCache58);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction60 = null;
    io.github.onograph.cluster.raft.module.cuprot.LifecycleCatchupManagerImpl lifecycleCatchupManagerImpl61 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler62 = null;
    org.neo4j.logging.LogProvider logProvider63 = null;
    org.neo4j.monitoring.Monitors monitors64 = null;
    org.neo4j.io.pagecache.PageCache pageCache65 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer66 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock67 = null;
    try {
      io.github.onograph.backup.RemoteBackupManager remoteBackupManager68 = new io.github.onograph.backup.RemoteBackupManager(
          config23, fileSystemAbstraction60, lifecycleCatchupManagerImpl61, jobScheduler62,
          logProvider63, monitors64, pageCache65, pageCacheTracer66, systemNanoClock67);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(config23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(backupEnvironment51);
    org.junit.Assert.assertNotNull(memoryTracker52);
    org.junit.Assert.assertNotNull(databaseNamePattern53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(path55);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertNotNull(memoryTracker57);
  }

  @Test
  public void test0579() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0579");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory5.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory5.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory11.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment17 = factory11.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = backupEnvironment17.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress19 = backupEnvironment17.getSocketAddress();
    java.nio.file.Path path20 = backupEnvironment17.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory2.pbPath(path20);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory25.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory25.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory31.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment37 = factory31.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern38 = backupEnvironment37.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress39 = backupEnvironment37.getSocketAddress();
    java.nio.file.Path path40 = backupEnvironment37.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory22.pbPath(path40);
    io.github.onograph.backup.FileMoverService fileMoverService42 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path20, path40);
    java.nio.file.Path path43 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path40);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction44 = null;
    io.github.onograph.backup.FileMover fileMover45 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction44);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory46.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory46.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory52.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment58 = factory52.bulBackupEnvironment();
    boolean boolean59 = backupEnvironment58.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional60 = backupEnvironment58.geicmaOptional();
    java.nio.file.Path path61 = backupEnvironment58.getPbPath();
    java.nio.file.Path path62 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path61);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream63 = fileMover45._trrfrmnStream(
        path61);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory64.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory64.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory64.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory70.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory70.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment76 = factory70.bulBackupEnvironment();
    boolean boolean77 = backupEnvironment76.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional78 = backupEnvironment76.geicmaOptional();
    java.nio.file.Path path79 = backupEnvironment76.getPbPath();
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream80 = fileMover45._trrfrmnStream(
        path79);
    io.github.onograph.backup.FileMoverService fileMoverService81 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path40, path79);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream82 = fileMover1._trrfrmnStream(
        path79);
    boolean boolean83 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path79);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(backupEnvironment17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(socketAddress19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(backupEnvironment37);
    org.junit.Assert.assertNotNull(databaseNamePattern38);
    org.junit.Assert.assertNotNull(socketAddress39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(fileMoverService42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(backupEnvironment58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional60);
    org.junit.Assert.assertNotNull(path61);
    org.junit.Assert.assertNotNull(path62);
    org.junit.Assert.assertNotNull(fileMoverServiceStream63);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(backupEnvironment76);
    org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional78);
    org.junit.Assert.assertNotNull(path79);
    org.junit.Assert.assertNotNull(fileMoverServiceStream80);
    org.junit.Assert.assertNotNull(fileMoverService81);
    org.junit.Assert.assertNotNull(fileMoverServiceStream82);
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
  }

  @Test
  public void test0580() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0580");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory0.shouldPrep(true);
    org.neo4j.configuration.Config config9 = factory8.gecfConfig();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(config9);
  }

  @Test
  public void test0581() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0581");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = factory4.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config13 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.config(config13);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isRp(true);
    org.neo4j.configuration.Config config17 = factory14.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory14.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    java.nio.file.Path path23 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.prPath(path23);
    java.nio.file.Path path25 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.prPath(path25);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    java.nio.file.Path path30 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.prPath(path30);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config33 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.config(config33);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isRp(true);
    org.neo4j.configuration.Config config37 = factory34.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory27.config(config37);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory26.config(config37);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory19.config(config37);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory11.config(config37);
    org.neo4j.configuration.Config config42 = factory11.gecfConfig();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNull(socketAddress9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(config17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(config37);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(config42);
  }

  @Test
  public void test0582() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0582");
    }
    io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup(
        (int) (byte) 100, "");
    org.junit.Assert.assertNotNull(backup2);
  }

  @Test
  public void test0583() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0583");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsRp();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
  }

  @Test
  public void test0584() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0584");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory5.isRp(false);
    java.nio.file.Path path10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.prPath(path10);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern12 = factory11.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config13 = factory11.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory4.config(config13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config17 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.config(config17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isRp(true);
    org.neo4j.configuration.Config config21 = factory18.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory18.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    java.nio.file.Path path27 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory24.prPath(path27);
    java.nio.file.Path path29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.prPath(path29);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    java.nio.file.Path path34 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory31.prPath(path34);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config37 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.config(config37);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory38.isRp(true);
    org.neo4j.configuration.Config config41 = factory38.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory31.config(config41);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory30.config(config41);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory23.config(config41);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction45 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory46.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory46.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory52.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment58 = factory52.bulBackupEnvironment();
    boolean boolean59 = backupEnvironment58.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional60 = backupEnvironment58.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern61 = backupEnvironment58.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional62 = backupEnvironment58.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker63 = backupEnvironment58.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache64 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager65 = new io.github.onograph.backup.BackupRestorationManager(
        config41, fileSystemAbstraction45, memoryTracker63, pageCache64);
    org.neo4j.io.pagecache.PageCache pageCache66 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager67 = new io.github.onograph.backup.BackupRestorationManager(
        config13, fileSystemAbstraction15, memoryTracker63, pageCache66);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(databaseNamePattern12);
    org.junit.Assert.assertNotNull(config13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(config21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(config41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(backupEnvironment58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional60);
    org.junit.Assert.assertNotNull(databaseNamePattern61);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional62);
    org.junit.Assert.assertNotNull(memoryTracker63);
  }

  @Test
  public void test0585() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0585");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    boolean boolean15 = backupEnvironment12.getIsRp();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    boolean boolean17 = backupEnvironment12.getIsBftf();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = backupEnvironment12.getDatabaseNamePattern();
    java.nio.file.Path path19 = backupEnvironment12.getPbPath();
    java.nio.file.Path path20 = backupEnvironment12.getRpPath();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
  }

  @Test
  public void test0586() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0586");
    }
    java.nio.file.Path path0 = null;
    java.nio.file.Path path1 = null;
    io.github.onograph.backup.FileMoverService fileMoverService2 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path0, path1);
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory3.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory3.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory9.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment15 = factory9.bulBackupEnvironment();
    boolean boolean16 = backupEnvironment15.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional17 = backupEnvironment15.geicmaOptional();
    java.nio.file.Path path18 = backupEnvironment15.getPbPath();
    java.nio.file.Path path19 = backupEnvironment15.getPbPath();
    java.nio.file.CopyOption copyOption20 = null;
    java.nio.file.CopyOption[] copyOptionArray21 = new java.nio.file.CopyOption[]{copyOption20};
    try {
      fileMoverService2.movForPaCo(path19, copyOptionArray21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(fileMoverService2);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(backupEnvironment15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(copyOptionArray21);
  }

  @Test
  public void test0587() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0587");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path15 = backupEnvironment12.getRpPath();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker18 = backupEnvironment12.getMemoryTracker();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional19 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path20 = backupEnvironment12.getRpPath();
    java.nio.file.Path path21 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path20);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertNotNull(socketAddress14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(memoryTracker18);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(path21);
  }

  @Test
  public void test0588() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0588");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream19 = fileMover1._trrfrmnStream(
        path17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory29.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment35 = factory29.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern36 = backupEnvironment35.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress37 = backupEnvironment35.getSocketAddress();
    java.nio.file.Path path38 = backupEnvironment35.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory20.pbPath(path38);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory43.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory43.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory49.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment55 = factory49.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern56 = backupEnvironment55.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress57 = backupEnvironment55.getSocketAddress();
    java.nio.file.Path path58 = backupEnvironment55.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory40.pbPath(path58);
    io.github.onograph.backup.FileMoverService fileMoverService60 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path38, path58);
    java.nio.file.Path path61 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path38);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream62 = fileMover1._trrfrmnStream(
        path61);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory63.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory63.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory63.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory69.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory69.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment75 = factory69.bulBackupEnvironment();
    boolean boolean76 = backupEnvironment75.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional77 = backupEnvironment75.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern78 = backupEnvironment75.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional79 = backupEnvironment75.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker80 = backupEnvironment75.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress81 = backupEnvironment75.getSocketAddress();
    java.nio.file.Path path82 = backupEnvironment75.getRpPath();
    java.nio.file.Path path83 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path82);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream84 = fileMover1._trrfrmnStream(
        path82);
    java.nio.file.Path path85 = null;
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream86 = fileMover1._trrfrmnStream(
        path85);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(fileMoverServiceStream19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(backupEnvironment35);
    org.junit.Assert.assertNotNull(databaseNamePattern36);
    org.junit.Assert.assertNotNull(socketAddress37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(backupEnvironment55);
    org.junit.Assert.assertNotNull(databaseNamePattern56);
    org.junit.Assert.assertNotNull(socketAddress57);
    org.junit.Assert.assertNotNull(path58);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(fileMoverService60);
    org.junit.Assert.assertNotNull(path61);
    org.junit.Assert.assertNotNull(fileMoverServiceStream62);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(backupEnvironment75);
    org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional77);
    org.junit.Assert.assertNotNull(databaseNamePattern78);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional79);
    org.junit.Assert.assertNotNull(memoryTracker80);
    org.junit.Assert.assertNotNull(socketAddress81);
    org.junit.Assert.assertNotNull(path82);
    org.junit.Assert.assertNotNull(path83);
    org.junit.Assert.assertNotNull(fileMoverServiceStream84);
    org.junit.Assert.assertNotNull(fileMoverServiceStream86);
  }

  @Test
  public void test0589() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0589");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.config(config3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern9 = factory4.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory4.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config13 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.config(config13);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isRp(true);
    org.neo4j.configuration.Config config17 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.config(config17);
    org.neo4j.configuration.helpers.SocketAddress socketAddress19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.wihadsBackupEnvironmentFactory(
        socketAddress19);
    org.neo4j.configuration.helpers.SocketAddress socketAddress21 = factory16.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment26 = factory25.bulBackupEnvironment();
    java.nio.file.Path path27 = backupEnvironment26.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory4.prPath(path27);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream29 = fileMover1._trrfrmnStream(
        path27);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory30.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory30.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory36.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment42 = factory36.bulBackupEnvironment();
    boolean boolean43 = backupEnvironment42.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional44 = backupEnvironment42.geicmaOptional();
    java.nio.file.Path path45 = backupEnvironment42.getPbPath();
    java.nio.file.Path path46 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path45);
    java.nio.file.Path path47 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path46);
    boolean boolean48 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path47);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory49.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory49.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory55.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory55.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment61 = factory55.bulBackupEnvironment();
    boolean boolean62 = backupEnvironment61.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional63 = backupEnvironment61.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional64 = backupEnvironment61.geicmaOptional();
    java.nio.file.Path path65 = backupEnvironment61.getPbPath();
    java.nio.file.Path path66 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path65);
    io.github.onograph.backup.FileMoverService fileMoverService67 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path47, path66);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream68 = fileMover1._trrfrmnStream(
        path47);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(databaseNamePattern9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNull(socketAddress21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(backupEnvironment26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(fileMoverServiceStream29);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(backupEnvironment42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional44);
    org.junit.Assert.assertNotNull(path45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(path47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(backupEnvironment61);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional63);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional64);
    org.junit.Assert.assertNotNull(path65);
    org.junit.Assert.assertNotNull(path66);
    org.junit.Assert.assertNotNull(fileMoverService67);
    org.junit.Assert.assertNotNull(fileMoverServiceStream68);
  }

  @Test
  public void test0590() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0590");
    }
    io.github.onograph.backup.CommandProviderBackupImpl commandProviderBackupImpl0 = new io.github.onograph.backup.CommandProviderBackupImpl();
    int int1 = commandProviderBackupImpl0.getPriority();
    int int2 = commandProviderBackupImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandProviderBackupImpl0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandProviderBackupImpl0.commandType();
    int int5 = commandProviderBackupImpl0.getPriority();
    int int6 = commandProviderBackupImpl0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext7 = null;
    try {
      io.github.onograph.backup.BackupCommand backupCommand8 = commandProviderBackupImpl0.createCommand(
          executionContext7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test0591() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0591");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.prPath(path5);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.config(config8);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isRp(true);
    org.neo4j.configuration.Config config12 = factory9.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory2.config(config12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory2.shouldPrep(false);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    io.github.onograph.backup.FileMover fileMover17 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction16);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory18.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory18.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory24.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment30 = factory24.bulBackupEnvironment();
    boolean boolean31 = backupEnvironment30.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional32 = backupEnvironment30.geicmaOptional();
    java.nio.file.Path path33 = backupEnvironment30.getPbPath();
    java.nio.file.Path path34 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path33);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream35 = fileMover17._trrfrmnStream(
        path33);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory39.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory39.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory39.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory45.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment51 = factory45.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern52 = backupEnvironment51.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress53 = backupEnvironment51.getSocketAddress();
    java.nio.file.Path path54 = backupEnvironment51.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory36.pbPath(path54);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory56.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory59.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory59.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory59.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory65.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory65.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment71 = factory65.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern72 = backupEnvironment71.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress73 = backupEnvironment71.getSocketAddress();
    java.nio.file.Path path74 = backupEnvironment71.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory56.pbPath(path74);
    io.github.onograph.backup.FileMoverService fileMoverService76 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path54, path74);
    java.nio.file.Path path77 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path54);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream78 = fileMover17._trrfrmnStream(
        path77);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory15.prPath(path77);
    java.nio.file.Path path80 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path77);
    java.lang.String[] strArray82 = new java.lang.String[]{""};
    java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
    boolean boolean84 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList83, strArray82);
    try {
      backupMetadataRepository1.wrtForPaLi(path77, (java.util.List<java.lang.String>) strList83);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(config12);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(backupEnvironment30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional32);
    org.junit.Assert.assertNotNull(path33);
    org.junit.Assert.assertNotNull(path34);
    org.junit.Assert.assertNotNull(fileMoverServiceStream35);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(backupEnvironment51);
    org.junit.Assert.assertNotNull(databaseNamePattern52);
    org.junit.Assert.assertNotNull(socketAddress53);
    org.junit.Assert.assertNotNull(path54);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(backupEnvironment71);
    org.junit.Assert.assertNotNull(databaseNamePattern72);
    org.junit.Assert.assertNotNull(socketAddress73);
    org.junit.Assert.assertNotNull(path74);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(fileMoverService76);
    org.junit.Assert.assertNotNull(path77);
    org.junit.Assert.assertNotNull(fileMoverServiceStream78);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(path80);
    org.junit.Assert.assertNotNull(strArray82);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
  }

  @Test
  public void test0592() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0592");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path15 = backupEnvironment12.getRpPath();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    java.nio.file.Path path18 = backupEnvironment12.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config20 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.config(config20);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isRp(true);
    org.neo4j.configuration.Config config24 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.config(config24);
    org.neo4j.configuration.helpers.SocketAddress socketAddress26 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.wihadsBackupEnvironmentFactory(
        socketAddress26);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory31.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory31.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory37.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment43 = factory37.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern44 = backupEnvironment43.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress45 = backupEnvironment43.getSocketAddress();
    java.nio.file.Path path46 = backupEnvironment43.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory28.pbPath(path46);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory48.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory51.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory51.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory57.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment63 = factory57.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern64 = backupEnvironment63.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress65 = backupEnvironment63.getSocketAddress();
    java.nio.file.Path path66 = backupEnvironment63.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory48.pbPath(path66);
    io.github.onograph.backup.FileMoverService fileMoverService68 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path46, path66);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory23.pbPath(path66);
    java.nio.file.Path path70 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path66);
    io.github.onograph.backup.FileMoverService fileMoverService71 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path18, path70);
    java.nio.file.Path path72 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path18);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertNotNull(socketAddress14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(backupEnvironment43);
    org.junit.Assert.assertNotNull(databaseNamePattern44);
    org.junit.Assert.assertNotNull(socketAddress45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(backupEnvironment63);
    org.junit.Assert.assertNotNull(databaseNamePattern64);
    org.junit.Assert.assertNotNull(socketAddress65);
    org.junit.Assert.assertNotNull(path66);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(fileMoverService68);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(path70);
    org.junit.Assert.assertNotNull(fileMoverService71);
    org.junit.Assert.assertNotNull(path72);
  }

  @Test
  public void test0593() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0593");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.nio.file.Path path19 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path18);
    boolean boolean20 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path19);
    java.nio.file.Path path21 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory22.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory22.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory28.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment34 = factory28.bulBackupEnvironment();
    boolean boolean35 = backupEnvironment34.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional36 = backupEnvironment34.geicmaOptional();
    java.nio.file.Path path37 = backupEnvironment34.getPbPath();
    java.nio.file.Path path38 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path37);
    java.nio.file.Path path39 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path38);
    io.github.onograph.backup.FileMoverService fileMoverService40 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path19, path38);
    java.nio.file.Path path41 = fileMoverService40.filPath();
    java.nio.file.Path path42 = fileMoverService40.filPath();
    java.lang.String[] strArray44 = new java.lang.String[]{"database.id"};
    java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
    boolean boolean46 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList45, strArray44);
    try {
      backupMetadataRepository1.wrtForPaLi(path42, (java.util.List<java.lang.String>) strList45);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(backupEnvironment34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertNotNull(fileMoverService40);
    org.junit.Assert.assertNotNull(path41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(strArray44);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
  }

  @Test
  public void test0594() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0594");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean14 = backupEnvironment12.getIsBftf();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path16 = backupEnvironment12.getPbPath();
    boolean boolean17 = backupEnvironment12.getIsBftf();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
  }

  @Test
  public void test0595() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0595");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    org.neo4j.kernel.database.DatabaseId databaseId2 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory3.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory3.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory9.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment15 = factory9.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment15.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment15.getSocketAddress();
    java.nio.file.Path path18 = backupEnvironment15.getRpPath();
    boolean boolean19 = backupEnvironment15.getIsBftf();
    java.nio.file.Path path20 = backupEnvironment15.getRpPath();
    java.nio.file.Path path21 = backupEnvironment15.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config23 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.config(config23);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isRp(true);
    org.neo4j.configuration.Config config27 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.config(config27);
    org.neo4j.configuration.helpers.SocketAddress socketAddress29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory26.wihadsBackupEnvironmentFactory(
        socketAddress29);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory34.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory34.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory40.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment46 = factory40.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern47 = backupEnvironment46.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress48 = backupEnvironment46.getSocketAddress();
    java.nio.file.Path path49 = backupEnvironment46.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory31.pbPath(path49);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory54.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory54.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory60.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment66 = factory60.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern67 = backupEnvironment66.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress68 = backupEnvironment66.getSocketAddress();
    java.nio.file.Path path69 = backupEnvironment66.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory51.pbPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService71 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path49, path69);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory26.pbPath(path69);
    java.nio.file.Path path73 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path69);
    io.github.onograph.backup.FileMoverService fileMoverService74 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path21, path73);
    try {
      gdbIdRepo1.wrdaiForDaPa(databaseId2, path21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(backupEnvironment15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(backupEnvironment46);
    org.junit.Assert.assertNotNull(databaseNamePattern47);
    org.junit.Assert.assertNotNull(socketAddress48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(backupEnvironment66);
    org.junit.Assert.assertNotNull(databaseNamePattern67);
    org.junit.Assert.assertNotNull(socketAddress68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(fileMoverService71);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(path73);
    org.junit.Assert.assertNotNull(fileMoverService74);
  }

  @Test
  public void test0596() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0596");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    org.neo4j.memory.MemoryTracker memoryTracker14 = backupEnvironment12.getMemoryTracker();
    java.nio.file.Path path15 = backupEnvironment12.getRpPath();
    java.nio.file.Path path16 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path15);
    boolean boolean17 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path16);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(memoryTracker14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
  }

  @Test
  public void test0597() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0597");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = setupForBackupRestorationCommandProvider0.commandType();
    int int2 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = setupForBackupRestorationCommandProvider0.commandType();
    int int4 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType5 = setupForBackupRestorationCommandProvider0.commandType();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
  }

  @Test
  public void test0598() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0598");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    boolean boolean17 = backupEnvironment16.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment16.geicmaOptional();
    java.nio.file.Path path19 = backupEnvironment16.getPbPath();
    java.nio.file.Path path20 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path19);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream21 = fileMover3._trrfrmnStream(
        path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory22.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory22.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory28.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment34 = factory28.bulBackupEnvironment();
    boolean boolean35 = backupEnvironment34.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional36 = backupEnvironment34.geicmaOptional();
    java.nio.file.Path path37 = backupEnvironment34.getPbPath();
    java.nio.file.Path path38 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path37);
    java.nio.file.Path path39 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path38);
    io.github.onograph.backup.FileMoverService fileMoverService40 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path19, path38);
    java.nio.file.Path path41 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path19);
    try {
      backupIOService1.deedForPa(path41);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(fileMoverServiceStream21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(backupEnvironment34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertNotNull(fileMoverService40);
    org.junit.Assert.assertNotNull(path41);
  }

  @Test
  public void test0599() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0599");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    io.github.onograph.backup.BackupRunner backupRunner7 = generator6.bulBackupRunner();
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.backup.BackupRunner.Generator generator9 = generator6.itraLogProvider(
        logProvider8);
    io.github.onograph.backup.BackupRunner backupRunner10 = generator6.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    boolean boolean24 = backupEnvironment23.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional25 = backupEnvironment23.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional26 = backupEnvironment23.geicmaOptional();
    java.nio.file.Path path27 = backupEnvironment23.getRpPath();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern28 = backupEnvironment23.getDatabaseNamePattern();
    try {
      backupRunner10.excebcpForBa(backupEnvironment23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(backupRunner7);
    org.junit.Assert.assertNotNull(generator9);
    org.junit.Assert.assertNotNull(backupRunner10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional25);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertNotNull(databaseNamePattern28);
  }

  @Test
  public void test0600() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0600");
    }
    io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup(100,
        "database.id");
    java.io.OutputStream outputStream3 = null;
    try {
      io.github.onograph.backup.Backup backup4 = backup2.outputStream(outputStream3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: outputStream");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backup2);
  }

  @Test
  public void test0601() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0601");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream19 = fileMover1._trrfrmnStream(
        path17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory26.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment32 = factory26.bulBackupEnvironment();
    boolean boolean33 = backupEnvironment32.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional34 = backupEnvironment32.geicmaOptional();
    java.nio.file.Path path35 = backupEnvironment32.getPbPath();
    java.nio.file.Path path36 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path35);
    java.nio.file.Path path37 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path36);
    io.github.onograph.backup.FileMoverService fileMoverService38 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path17, path36);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config40 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory39.config(config40);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isRp(true);
    org.neo4j.configuration.Config config44 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.config(config44);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory43.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory48.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions51 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory48.miAuthMetaOptions(
        authMetaOptions51);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isIcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern57 = factory54.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory43.databaseNamePattern(
        databaseNamePattern57);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory43.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory43.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory63.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory63.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory63.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory69.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory69.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment75 = factory69.bulBackupEnvironment();
    boolean boolean76 = backupEnvironment75.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional77 = backupEnvironment75.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional78 = backupEnvironment75.geicmaOptional();
    java.nio.file.Path path79 = backupEnvironment75.getPbPath();
    java.nio.file.Path path80 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path79);
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = factory43.prPath(path79);
    java.nio.file.CopyOption[] copyOptionArray82 = new java.nio.file.CopyOption[]{};
    try {
      fileMoverService38.movForPaCo(path79, copyOptionArray82);
      org.junit.Assert.fail(
          "Expected exception of type java.nio.file.FileAlreadyExistsException; message: ./..");
    } catch (java.nio.file.FileAlreadyExistsException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(fileMoverServiceStream19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(backupEnvironment32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional34);
    org.junit.Assert.assertNotNull(path35);
    org.junit.Assert.assertNotNull(path36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(fileMoverService38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(databaseNamePattern57);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(backupEnvironment75);
    org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional77);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional78);
    org.junit.Assert.assertNotNull(path79);
    org.junit.Assert.assertNotNull(path80);
    org.junit.Assert.assertNotNull(factory81);
    org.junit.Assert.assertNotNull(copyOptionArray82);
  }

  @Test
  public void test0602() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0602");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    java.nio.file.Path path12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.prPath(path12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config17 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.config(config17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory18.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern23 = factory18.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory15.databaseNamePattern(
        databaseNamePattern23);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory8.databaseNamePattern(
        databaseNamePattern23);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory8.isGcc(
        (java.lang.Boolean) false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(databaseNamePattern23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
  }

  @Test
  public void test0603() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0603");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern7 = factory6.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(databaseNamePattern7);
  }

  @Test
  public void test0604() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0604");
    }
    io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup(
        (int) (short) 1, "");
    java.io.OutputStream outputStream3 = null;
    try {
      io.github.onograph.backup.Backup backup4 = backup2.outputStream(outputStream3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: outputStream");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backup2);
  }

  @Test
  public void test0605() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0605");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path14 = backupEnvironment12.getRpPath();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(path14);
  }

  @Test
  public void test0606() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0606");
    }
    io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup((int) '4',
        "");
    org.junit.Assert.assertNotNull(backup2);
  }

  @Test
  public void test0607() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0607");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup5.isCc(true);
    io.github.onograph.backup.Backup backup9 = backup5.isCc(true);
    io.github.onograph.backup.Backup backup11 = backup5.isBftf(false);
    io.github.onograph.backup.Backup backup13 = backup11.isBftf(true);
    io.github.onograph.backup.Backup backup15 = backup11.isCc(false);
    io.github.onograph.backup.Backup backup17 = backup11.isCc(true);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
    org.junit.Assert.assertNotNull(backup11);
    org.junit.Assert.assertNotNull(backup13);
    org.junit.Assert.assertNotNull(backup15);
    org.junit.Assert.assertNotNull(backup17);
  }

  @Test
  public void test0608() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0608");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup3.isBftf(false);
    io.github.onograph.backup.Backup backup9 = backup7.isCc(true);
    java.io.OutputStream outputStream10 = null;
    try {
      io.github.onograph.backup.Backup backup11 = backup7.outputStream(outputStream10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: outputStream");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
  }

  @Test
  public void test0609() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0609");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory10.wihadsBackupEnvironmentFactory(
        (int) (byte) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.config(config19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    boolean boolean40 = backupEnvironment39.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional41 = backupEnvironment39.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress42 = backupEnvironment39.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory20.wihadsBackupEnvironmentFactory(
        socketAddress42);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern44 = factory43.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory17.databaseNamePattern(
        databaseNamePattern44);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional41);
    org.junit.Assert.assertNotNull(socketAddress42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(databaseNamePattern44);
    org.junit.Assert.assertNotNull(factory45);
  }

  @Test
  public void test0610() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0610");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory4.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isSicc(
        (java.lang.Boolean) true);
    java.lang.Class<?> wildcardClass16 = factory13.getClass();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test0611() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0611");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    java.nio.file.Path path18 = backupEnvironment12.getRpPath();
    boolean boolean19 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path18);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(socketAddress16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test0612() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0612");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.prPath(path5);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern7 = factory6.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory6.isIcc(
        (java.lang.Boolean) true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(databaseNamePattern7);
    org.junit.Assert.assertNotNull(factory9);
  }

  @Test
  public void test0613() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0613");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory5.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory5.isIcc(
        (java.lang.Boolean) true);
    java.nio.file.Path path12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory5.pbPath(path12);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory14.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory14.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory20.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment26 = factory20.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern27 = backupEnvironment26.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress28 = backupEnvironment26.getSocketAddress();
    java.nio.file.Path path29 = backupEnvironment26.getRpPath();
    boolean boolean30 = backupEnvironment26.getIsBftf();
    java.nio.file.Path path31 = backupEnvironment26.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory13.prPath(path31);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory33.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory33.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory39.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory39.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment45 = factory39.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern46 = backupEnvironment45.getDatabaseNamePattern();
    boolean boolean47 = backupEnvironment45.getIsBftf();
    boolean boolean48 = backupEnvironment45.getIsBftf();
    java.nio.file.Path path49 = backupEnvironment45.getRpPath();
    io.github.onograph.backup.FileMoverService fileMoverService50 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path31, path49);
    java.nio.file.Path path51 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path31);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory0.pbPath(path31);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(backupEnvironment26);
    org.junit.Assert.assertNotNull(databaseNamePattern27);
    org.junit.Assert.assertNotNull(socketAddress28);
    org.junit.Assert.assertNotNull(path29);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(path31);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(backupEnvironment45);
    org.junit.Assert.assertNotNull(databaseNamePattern46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(fileMoverService50);
    org.junit.Assert.assertNotNull(path51);
    org.junit.Assert.assertNotNull(factory52);
  }

  @Test
  public void test0614() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0614");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("hi!");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup5 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup7 = backup5.isBftf(false);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
  }

  @Test
  public void test0615() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0615");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator6.itraLogProvider(
        logProvider13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0616() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0616");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    int int1 = setupForBackupRestorationCommandProvider0.getPriority();
    int int2 = setupForBackupRestorationCommandProvider0.getPriority();
    int int3 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = setupForBackupRestorationCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = setupForBackupRestorationCommandProvider0.commandType();
    org.neo4j.cli.ExecutionContext executionContext6 = null;
    try {
      io.github.onograph.backup.SetupForBackupRestorationCommand setupForBackupRestorationCommand7 = setupForBackupRestorationCommandProvider0.createCommand(
          executionContext6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
  }

  @Test
  public void test0617() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0617");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory16.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern23 = factory22.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory22.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config27 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.config(config27);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isRp(true);
    org.neo4j.configuration.Config config31 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.config(config31);
    org.neo4j.configuration.helpers.SocketAddress socketAddress33 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory30.wihadsBackupEnvironmentFactory(
        socketAddress33);
    org.neo4j.configuration.helpers.SocketAddress socketAddress35 = factory30.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory30.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment40 = factory39.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern41 = factory39.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory22.databaseNamePattern(
        databaseNamePattern41);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory15.databaseNamePattern(
        databaseNamePattern41);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(databaseNamePattern23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNull(socketAddress35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(backupEnvironment40);
    org.junit.Assert.assertNotNull(databaseNamePattern41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
  }

  @Test
  public void test0618() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0618");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    boolean boolean17 = backupEnvironment16.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment16.geicmaOptional();
    java.nio.file.Path path19 = backupEnvironment16.getPbPath();
    java.nio.file.Path path20 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path19);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream21 = fileMover3._trrfrmnStream(
        path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory22.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory22.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory28.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment34 = factory28.bulBackupEnvironment();
    boolean boolean35 = backupEnvironment34.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional36 = backupEnvironment34.geicmaOptional();
    java.nio.file.Path path37 = backupEnvironment34.getPbPath();
    java.nio.file.Path path38 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path37);
    java.nio.file.Path path39 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path38);
    boolean boolean40 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path39);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory41.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory41.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory47.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment53 = factory47.bulBackupEnvironment();
    boolean boolean54 = backupEnvironment53.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional55 = backupEnvironment53.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional56 = backupEnvironment53.geicmaOptional();
    java.nio.file.Path path57 = backupEnvironment53.getPbPath();
    java.nio.file.Path path58 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path57);
    io.github.onograph.backup.FileMoverService fileMoverService59 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path39, path58);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream60 = fileMover3._trrfrmnStream(
        path39);
    try {
      boolean boolean61 = backupIOService1.isExsForPa(path39);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(fileMoverServiceStream21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(backupEnvironment34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(backupEnvironment53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional55);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional56);
    org.junit.Assert.assertNotNull(path57);
    org.junit.Assert.assertNotNull(path58);
    org.junit.Assert.assertNotNull(fileMoverService59);
    org.junit.Assert.assertNotNull(fileMoverServiceStream60);
  }

  @Test
  public void test0619() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0619");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("hi!");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup5 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup7 = backup5.isCc(false);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
  }

  @Test
  public void test0620() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0620");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.prPath(path5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    boolean boolean24 = backupEnvironment23.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional25 = backupEnvironment23.geicmaOptional();
    java.nio.file.Path path26 = backupEnvironment23.getPbPath();
    java.nio.file.Path path27 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path26);
    java.nio.file.Path path28 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path27);
    boolean boolean29 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path28);
    java.nio.file.Path path30 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path28);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory31.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory31.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory37.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment43 = factory37.bulBackupEnvironment();
    boolean boolean44 = backupEnvironment43.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional45 = backupEnvironment43.geicmaOptional();
    java.nio.file.Path path46 = backupEnvironment43.getPbPath();
    java.nio.file.Path path47 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path46);
    java.nio.file.Path path48 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path47);
    io.github.onograph.backup.FileMoverService fileMoverService49 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path28, path47);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory10.prPath(path47);
    java.nio.file.Path path51 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path47);
    java.nio.file.Path path52 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path47);
    java.nio.file.Path path53 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path47);
    org.neo4j.logging.LogProvider logProvider54 = null;
    org.neo4j.io.pagecache.PageCache pageCache55 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer56 = null;
    try {
      io.github.onograph.backup.BackupMetaService backupMetaService57 = new io.github.onograph.backup.BackupMetaService(
          fileSystemAbstraction0, "hi!", path53, logProvider54, pageCache55, pageCacheTracer56);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(backupEnvironment43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(path47);
    org.junit.Assert.assertNotNull(path48);
    org.junit.Assert.assertNotNull(fileMoverService49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(path51);
    org.junit.Assert.assertNotNull(path52);
    org.junit.Assert.assertNotNull(path53);
  }

  @Test
  public void test0621() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0621");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.systemNanoClock(
        systemNanoClock7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.itraLogProvider(
        logProvider9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.monitors(monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.monitors(monitors13);
    org.neo4j.time.SystemNanoClock systemNanoClock15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator14.systemNanoClock(
        systemNanoClock15);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
  }

  @Test
  public void test0622() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0622");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    int int1 = setupForBackupRestorationCommandProvider0.getPriority();
    int int2 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = setupForBackupRestorationCommandProvider0.commandType();
    int int4 = setupForBackupRestorationCommandProvider0.getPriority();
    int int5 = setupForBackupRestorationCommandProvider0.getPriority();
    int int6 = setupForBackupRestorationCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test0623() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0623");
    }
    io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl commandProviderGdbRestorerCommandImpl0 = new io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl();
    int int1 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = commandProviderGdbRestorerCommandImpl0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = commandProviderGdbRestorerCommandImpl0.commandType();
    int int4 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.backup.GdbRestorerCommand gdbRestorerCommand6 = commandProviderGdbRestorerCommandImpl0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
  }

  @Test
  public void test0624() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0624");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory8.shouldPrep(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isRp(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
  }

  @Test
  public void test0625() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0625");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction4 = null;
    io.github.onograph.backup.FileMover fileMover5 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction4);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory6.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory12.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment18 = factory12.bulBackupEnvironment();
    boolean boolean19 = backupEnvironment18.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional20 = backupEnvironment18.geicmaOptional();
    java.nio.file.Path path21 = backupEnvironment18.getPbPath();
    java.nio.file.Path path22 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path21);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream23 = fileMover5._trrfrmnStream(
        path21);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern40 = backupEnvironment39.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress41 = backupEnvironment39.getSocketAddress();
    java.nio.file.Path path42 = backupEnvironment39.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory24.pbPath(path42);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory47.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory47.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory53.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment59 = factory53.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern60 = backupEnvironment59.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress61 = backupEnvironment59.getSocketAddress();
    java.nio.file.Path path62 = backupEnvironment59.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory44.pbPath(path62);
    io.github.onograph.backup.FileMoverService fileMoverService64 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path42, path62);
    java.nio.file.Path path65 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream66 = fileMover5._trrfrmnStream(
        path65);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream67 = fileMover3._trrfrmnStream(
        path65);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction68 = null;
    io.github.onograph.backup.FileMover fileMover69 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction68);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory70.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory70.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory70.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory76.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = factory76.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment82 = factory76.bulBackupEnvironment();
    boolean boolean83 = backupEnvironment82.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional84 = backupEnvironment82.geicmaOptional();
    java.nio.file.Path path85 = backupEnvironment82.getPbPath();
    java.nio.file.Path path86 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path85);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream87 = fileMover69._trrfrmnStream(
        path85);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream88 = fileMover3._trrfrmnStream(
        path85);
    java.nio.file.Path path89 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path85);
    try {
      boolean boolean90 = backupIOService1.isExsForPa(path85);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(backupEnvironment18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(fileMoverServiceStream23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertNotNull(databaseNamePattern40);
    org.junit.Assert.assertNotNull(socketAddress41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(backupEnvironment59);
    org.junit.Assert.assertNotNull(databaseNamePattern60);
    org.junit.Assert.assertNotNull(socketAddress61);
    org.junit.Assert.assertNotNull(path62);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(fileMoverService64);
    org.junit.Assert.assertNotNull(path65);
    org.junit.Assert.assertNotNull(fileMoverServiceStream66);
    org.junit.Assert.assertNotNull(fileMoverServiceStream67);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory81);
    org.junit.Assert.assertNotNull(backupEnvironment82);
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional84);
    org.junit.Assert.assertNotNull(path85);
    org.junit.Assert.assertNotNull(path86);
    org.junit.Assert.assertNotNull(fileMoverServiceStream87);
    org.junit.Assert.assertNotNull(fileMoverServiceStream88);
    org.junit.Assert.assertNotNull(path89);
  }

  @Test
  public void test0626() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0626");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory3.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory3.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory9.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment15 = factory9.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment15.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment15.getSocketAddress();
    java.nio.file.Path path18 = backupEnvironment15.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory0.pbPath(path18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory29.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment35 = factory29.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern36 = backupEnvironment35.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress37 = backupEnvironment35.getSocketAddress();
    java.nio.file.Path path38 = backupEnvironment35.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory20.pbPath(path38);
    io.github.onograph.backup.FileMoverService fileMoverService40 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path18, path38);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory41.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory41.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory47.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment53 = factory47.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern54 = backupEnvironment53.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress55 = backupEnvironment53.getSocketAddress();
    java.nio.file.Path path56 = backupEnvironment53.getPbPath();
    io.github.onograph.backup.FileMoverService fileMoverService57 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path38, path56);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory58.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory58.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory64.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory64.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment70 = factory64.bulBackupEnvironment();
    boolean boolean71 = backupEnvironment70.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional72 = backupEnvironment70.geicmaOptional();
    java.nio.file.Path path73 = backupEnvironment70.getPbPath();
    boolean boolean74 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path73);
    boolean boolean75 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path73);
    java.nio.file.CopyOption copyOption76 = null;
    java.nio.file.CopyOption[] copyOptionArray77 = new java.nio.file.CopyOption[]{copyOption76};
    try {
      fileMoverService57.movForPaCo(path73, copyOptionArray77);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(backupEnvironment15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(backupEnvironment35);
    org.junit.Assert.assertNotNull(databaseNamePattern36);
    org.junit.Assert.assertNotNull(socketAddress37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(fileMoverService40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(backupEnvironment53);
    org.junit.Assert.assertNotNull(databaseNamePattern54);
    org.junit.Assert.assertNotNull(socketAddress55);
    org.junit.Assert.assertNotNull(path56);
    org.junit.Assert.assertNotNull(fileMoverService57);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(backupEnvironment70);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional72);
    org.junit.Assert.assertNotNull(path73);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    org.junit.Assert.assertNotNull(copyOptionArray77);
  }

  @Test
  public void test0627() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0627");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    java.nio.file.Path path9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory2.pbPath(path9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern24 = backupEnvironment23.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress25 = backupEnvironment23.getSocketAddress();
    java.nio.file.Path path26 = backupEnvironment23.getRpPath();
    boolean boolean27 = backupEnvironment23.getIsBftf();
    java.nio.file.Path path28 = backupEnvironment23.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory10.prPath(path28);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory30.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory30.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory36.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment42 = factory36.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern43 = backupEnvironment42.getDatabaseNamePattern();
    boolean boolean44 = backupEnvironment42.getIsBftf();
    boolean boolean45 = backupEnvironment42.getIsBftf();
    java.nio.file.Path path46 = backupEnvironment42.getRpPath();
    io.github.onograph.backup.FileMoverService fileMoverService47 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path28, path46);
    java.nio.file.Path path48 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path28);
    java.lang.String[] strArray52 = new java.lang.String[]{"hi!", "database.id", "database.id"};
    java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
    boolean boolean54 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList53, strArray52);
    try {
      backupMetadataRepository1.wrtForPaLi(path28, (java.util.List<java.lang.String>) strList53);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertNotNull(databaseNamePattern24);
    org.junit.Assert.assertNotNull(socketAddress25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(backupEnvironment42);
    org.junit.Assert.assertNotNull(databaseNamePattern43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(fileMoverService47);
    org.junit.Assert.assertNotNull(path48);
    org.junit.Assert.assertNotNull(strArray52);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
  }

  @Test
  public void test0628() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0628");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.time.SystemNanoClock systemNanoClock5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.systemNanoClock(
        systemNanoClock5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.systemNanoClock(
        systemNanoClock9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.monitors(monitors11);
    io.github.onograph.backup.BackupRunner backupRunner13 = generator6.bulBackupRunner();
    io.github.onograph.backup.BackupRunner backupRunner14 = generator6.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory15.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory15.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory21.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment27 = factory21.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern28 = backupEnvironment27.getDatabaseNamePattern();
    boolean boolean29 = backupEnvironment27.getIsBftf();
    boolean boolean30 = backupEnvironment27.getIsBftf();
    java.nio.file.Path path31 = backupEnvironment27.getPbPath();
    boolean boolean32 = backupEnvironment27.getIsRp();
    try {
      backupRunner14.excebcpForBa(backupEnvironment27);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(backupRunner13);
    org.junit.Assert.assertNotNull(backupRunner14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(backupEnvironment27);
    org.junit.Assert.assertNotNull(databaseNamePattern28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(path31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
  }

  @Test
  public void test0629() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0629");
    }
    io.github.onograph.backup.CommandProviderBackupImpl commandProviderBackupImpl0 = new io.github.onograph.backup.CommandProviderBackupImpl();
    org.neo4j.cli.Command.CommandType commandType1 = commandProviderBackupImpl0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandProviderBackupImpl0.commandType();
    int int3 = commandProviderBackupImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = commandProviderBackupImpl0.commandType();
    int int5 = commandProviderBackupImpl0.getPriority();
    int int6 = commandProviderBackupImpl0.getPriority();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test0630() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0630");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory6.wihadsBackupEnvironmentFactory(
        (int) ' ', "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config15 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.config(config15);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory16.isFtfb(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions23 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory16.miAuthMetaOptions(
        authMetaOptions23);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory25.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory25.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory31.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment37 = factory31.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern38 = backupEnvironment37.getDatabaseNamePattern();
    boolean boolean39 = backupEnvironment37.getIsBftf();
    org.neo4j.configuration.helpers.SocketAddress socketAddress40 = backupEnvironment37.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory24.wihadsBackupEnvironmentFactory(
        socketAddress40);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory13.wihadsBackupEnvironmentFactory(
        socketAddress40);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(backupEnvironment37);
    org.junit.Assert.assertNotNull(databaseNamePattern38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertNotNull(socketAddress40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory42);
  }

  @Test
  public void test0631() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0631");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment12.getSocketAddress();
    org.neo4j.configuration.helpers.SocketAddress socketAddress18 = backupEnvironment12.getSocketAddress();
    boolean boolean19 = backupEnvironment12.getIsCc();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertNotNull(socketAddress18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test0632() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0632");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.io.PrintStream printStream3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern17 = backupEnvironment16.getDatabaseNamePattern();
    boolean boolean18 = backupEnvironment16.getIsBftf();
    boolean boolean19 = backupEnvironment16.getIsBftf();
    java.nio.file.Path path20 = backupEnvironment16.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions24 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory21.miAuthMetaOptions(
        authMetaOptions24);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory32.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory32.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory38.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory38.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment44 = factory38.bulBackupEnvironment();
    boolean boolean45 = backupEnvironment44.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional46 = backupEnvironment44.geicmaOptional();
    java.nio.file.Path path47 = backupEnvironment44.getPbPath();
    java.nio.file.Path path48 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path47);
    java.nio.file.Path path49 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path48);
    boolean boolean50 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path49);
    java.nio.file.Path path51 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path49);
    java.nio.file.Path path52 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path51);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory27.pbPath(path51);
    org.neo4j.io.layout.DatabaseLayout databaseLayout54 = null;
    try {
      io.github.onograph.backup.GdbRestorer gdbRestorer55 = new io.github.onograph.backup.GdbRestorer(
          fileSystemAbstraction0, false, true, printStream3, path20, path51, databaseLayout54);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertNotNull(databaseNamePattern17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(backupEnvironment44);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional46);
    org.junit.Assert.assertNotNull(path47);
    org.junit.Assert.assertNotNull(path48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertNotNull(path51);
    org.junit.Assert.assertNotNull(path52);
    org.junit.Assert.assertNotNull(factory53);
  }

  @Test
  public void test0633() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0633");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.miAuthMetaOptions(
        authMetaOptions5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    boolean boolean22 = backupEnvironment21.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional23 = backupEnvironment21.geicmaOptional();
    java.nio.file.Path path24 = backupEnvironment21.getPbPath();
    java.nio.file.Path path25 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path25);
    boolean boolean27 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path26);
    java.nio.file.Path path28 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path26);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory29.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory29.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory35.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment41 = factory35.bulBackupEnvironment();
    boolean boolean42 = backupEnvironment41.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional43 = backupEnvironment41.geicmaOptional();
    java.nio.file.Path path44 = backupEnvironment41.getPbPath();
    java.nio.file.Path path45 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path44);
    java.nio.file.Path path46 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path45);
    io.github.onograph.backup.FileMoverService fileMoverService47 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path26, path45);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory6.prPath(path45);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions49 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory48.miAuthMetaOptions(
        authMetaOptions49);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory50.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory55.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory55.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory55.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory61.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory61.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment67 = factory61.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern68 = backupEnvironment67.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress69 = backupEnvironment67.getSocketAddress();
    java.nio.file.Path path70 = backupEnvironment67.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory54.pbPath(path70);
    java.lang.String[] strArray74 = new java.lang.String[]{"database.id", "database.id"};
    java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
    boolean boolean76 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList75, strArray74);
    try {
      backupMetadataRepository1.wrtForPaLi(path70, (java.util.List<java.lang.String>) strList75);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(backupEnvironment41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(path45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(fileMoverService47);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(backupEnvironment67);
    org.junit.Assert.assertNotNull(databaseNamePattern68);
    org.junit.Assert.assertNotNull(socketAddress69);
    org.junit.Assert.assertNotNull(path70);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(strArray74);
    org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
  }

  @Test
  public void test0634() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0634");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path15 = backupEnvironment12.getPbPath();
    java.nio.file.Path path16 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path15);
    java.nio.file.Path path17 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path16);
    boolean boolean18 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path17);
    java.nio.file.Path path19 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory26.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment32 = factory26.bulBackupEnvironment();
    boolean boolean33 = backupEnvironment32.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional34 = backupEnvironment32.geicmaOptional();
    java.nio.file.Path path35 = backupEnvironment32.getPbPath();
    java.nio.file.Path path36 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path35);
    java.nio.file.Path path37 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path36);
    io.github.onograph.backup.FileMoverService fileMoverService38 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path17, path36);
    java.nio.file.Path path39 = fileMoverService38.filPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config41 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.config(config41);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.isRp(true);
    org.neo4j.configuration.Config config45 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.config(config45);
    org.neo4j.configuration.helpers.SocketAddress socketAddress47 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory44.wihadsBackupEnvironmentFactory(
        socketAddress47);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory52.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory52.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory58.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment64 = factory58.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern65 = backupEnvironment64.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress66 = backupEnvironment64.getSocketAddress();
    java.nio.file.Path path67 = backupEnvironment64.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory49.pbPath(path67);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory69.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory72.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory72.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory72.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory78.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory78.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment84 = factory78.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern85 = backupEnvironment84.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress86 = backupEnvironment84.getSocketAddress();
    java.nio.file.Path path87 = backupEnvironment84.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory88 = factory69.pbPath(path87);
    io.github.onograph.backup.FileMoverService fileMoverService89 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path67, path87);
    io.github.onograph.backup.BackupEnvironment.Factory factory90 = factory44.pbPath(path87);
    boolean boolean91 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path87);
    java.nio.file.CopyOption copyOption92 = null;
    java.nio.file.CopyOption[] copyOptionArray93 = new java.nio.file.CopyOption[]{copyOption92};
    try {
      fileMoverService38.movForPaCo(path87, copyOptionArray93);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(backupEnvironment32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional34);
    org.junit.Assert.assertNotNull(path35);
    org.junit.Assert.assertNotNull(path36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(fileMoverService38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(backupEnvironment64);
    org.junit.Assert.assertNotNull(databaseNamePattern65);
    org.junit.Assert.assertNotNull(socketAddress66);
    org.junit.Assert.assertNotNull(path67);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(factory83);
    org.junit.Assert.assertNotNull(backupEnvironment84);
    org.junit.Assert.assertNotNull(databaseNamePattern85);
    org.junit.Assert.assertNotNull(socketAddress86);
    org.junit.Assert.assertNotNull(path87);
    org.junit.Assert.assertNotNull(factory88);
    org.junit.Assert.assertNotNull(fileMoverService89);
    org.junit.Assert.assertNotNull(factory90);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    org.junit.Assert.assertNotNull(copyOptionArray93);
  }

  @Test
  public void test0635() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0635");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.systemNanoClock(
        systemNanoClock7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.itraLogProvider(
        logProvider9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.progressMonitorFactory(
        progressMonitorFactory11);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
  }

  @Test
  public void test0636() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0636");
    }
    io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup(
        (int) (byte) 100, "hi!");
    java.io.OutputStream outputStream3 = null;
    try {
      io.github.onograph.backup.Backup backup4 = backup2.outputStream(outputStream3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: outputStream");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backup2);
  }

  @Test
  public void test0637() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0637");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.config(config8);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = factory9.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory2.databaseNamePattern(
        databaseNamePattern14);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory15.isCc(false);
    try {
      io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.databaseNamePattern(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: The provided database name is empty.");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
  }

  @Test
  public void test0638() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0638");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.systemNanoClock(
        systemNanoClock7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.monitors(monitors9);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
  }

  @Test
  public void test0639() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0639");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    io.github.onograph.backup.BackupRunner backupRunner1 = generator0.bulBackupRunner();
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(backupRunner1);
  }

  @Test
  public void test0640() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0640");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment12.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment12.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker17 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress18 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path19 = backupEnvironment12.getRpPath();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional20 = backupEnvironment12.geicmaOptional();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(memoryTracker17);
    org.junit.Assert.assertNotNull(socketAddress18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional20);
  }

  @Test
  public void test0641() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0641");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.logging.LogProvider logProvider1 = null;
    org.neo4j.logging.Log log2 = null;
    io.github.onograph.backup.RemoteBackupService remoteBackupService3 = new io.github.onograph.backup.RemoteBackupService(
        fileSystemAbstraction0, logProvider1, log2);
    io.github.onograph.backup.BackupVerificationService backupVerificationService4 = io.github.onograph.backup.BackupVerificationService.NOO_BACKUP_VERIFICATION_SERVICE;
    org.neo4j.io.layout.DatabaseLayout databaseLayout5 = null;
    backupVerificationService4.chcsyForDa(databaseLayout5);
    org.neo4j.io.layout.DatabaseLayout databaseLayout7 = null;
    backupVerificationService4.chcsyForDa(databaseLayout7);
    org.neo4j.io.layout.DatabaseLayout databaseLayout9 = null;
    backupVerificationService4.chcsyForDa(databaseLayout9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern24 = backupEnvironment23.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress25 = backupEnvironment23.getSocketAddress();
    java.nio.file.Path path26 = backupEnvironment23.getPbPath();
    io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler28 = null;
    io.github.onograph.backup.GdbStoreTransferWatcherRebImpl gdbStoreTransferWatcherRebImpl29 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer30 = null;
    io.github.onograph.backup.RemoteBackupManager remoteBackupManager31 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager32 = null;
    try {
      remoteBackupService3.bakForBaPaBaDeBaReStGd(backupVerificationService4, backupEnvironment23,
          "database.id", defaultBackupServiceHandler28, gdbStoreTransferWatcherRebImpl29,
          pageCacheTracer30, remoteBackupManager31, backupRestorationManager32);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backupVerificationService4);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertNotNull(databaseNamePattern24);
    org.junit.Assert.assertNotNull(socketAddress25);
    org.junit.Assert.assertNotNull(path26);
  }

  @Test
  public void test0642() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0642");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    int int1 = setupForBackupRestorationCommandProvider0.getPriority();
    int int2 = setupForBackupRestorationCommandProvider0.getPriority();
    int int3 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = setupForBackupRestorationCommandProvider0.commandType();
    int int5 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType6 = setupForBackupRestorationCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType7 = setupForBackupRestorationCommandProvider0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType6 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType6.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
  }

  @Test
  public void test0643() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0643");
    }
    io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl commandProviderGdbRestorerCommandImpl0 = new io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl();
    org.neo4j.cli.Command.CommandType commandType1 = commandProviderGdbRestorerCommandImpl0.commandType();
    int int2 = commandProviderGdbRestorerCommandImpl0.getPriority();
    int int3 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = commandProviderGdbRestorerCommandImpl0.commandType();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.backup.GdbRestorerCommand gdbRestorerCommand6 = commandProviderGdbRestorerCommandImpl0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
  }

  @Test
  public void test0644() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0644");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.itraLogProvider(
        logProvider9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.itraLogProvider(
        logProvider13);
    io.github.onograph.backup.BackupRunner backupRunner15 = generator12.bulBackupRunner();
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(backupRunner15);
  }

  @Test
  public void test0645() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0645");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup3.isBftf(false);
    java.io.OutputStream outputStream8 = null;
    try {
      io.github.onograph.backup.Backup backup9 = backup3.outputStream(outputStream8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: outputStream");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
  }

  @Test
  public void test0646() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0646");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.itraLogProvider(
        logProvider9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.progressMonitorFactory(
        progressMonitorFactory11);
    io.github.onograph.backup.BackupRunner backupRunner13 = generator12.bulBackupRunner();
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(backupRunner13);
  }

  @Test
  public void test0647() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0647");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional15 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern17 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean18 = backupEnvironment12.getIsRp();
    java.nio.file.Path path19 = backupEnvironment12.getPbPath();
    org.neo4j.memory.MemoryTracker memoryTracker20 = backupEnvironment12.getMemoryTracker();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(databaseNamePattern17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(memoryTracker20);
  }

  @Test
  public void test0648() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0648");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.io.PrintStream printStream3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern17 = backupEnvironment16.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress18 = backupEnvironment16.getSocketAddress();
    java.nio.file.Path path19 = backupEnvironment16.getRpPath();
    boolean boolean20 = backupEnvironment16.getIsBftf();
    java.nio.file.Path path21 = backupEnvironment16.getRpPath();
    java.nio.file.Path path22 = backupEnvironment16.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker23 = backupEnvironment16.getMemoryTracker();
    java.nio.file.Path path24 = backupEnvironment16.getPbPath();
    java.nio.file.Path path25 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path24);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory26.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory26.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory32.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment38 = factory32.bulBackupEnvironment();
    boolean boolean39 = backupEnvironment38.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional40 = backupEnvironment38.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker41 = backupEnvironment38.getMemoryTracker();
    java.nio.file.Path path42 = backupEnvironment38.getRpPath();
    org.neo4j.io.layout.DatabaseLayout databaseLayout43 = null;
    try {
      io.github.onograph.backup.GdbRestorer gdbRestorer44 = new io.github.onograph.backup.GdbRestorer(
          fileSystemAbstraction0, false, false, printStream3, path24, path42, databaseLayout43);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertNotNull(databaseNamePattern17);
    org.junit.Assert.assertNotNull(socketAddress18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(memoryTracker23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(backupEnvironment38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional40);
    org.junit.Assert.assertNotNull(memoryTracker41);
    org.junit.Assert.assertNotNull(path42);
  }

  @Test
  public void test0649() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0649");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.miAuthMetaOptions(
        authMetaOptions12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isIcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = factory15.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory4.databaseNamePattern(
        databaseNamePattern18);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory4.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory4.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory4.wihadsBackupEnvironmentFactory(
        (int) '4', "database.id");
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory26);
  }

  @Test
  public void test0650() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0650");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory3.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory8.isRp(false);
    java.nio.file.Path path13 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.prPath(path13);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = factory14.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config16 = factory14.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory7.config(config16);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory0.config(config16);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory0.wihadsBackupEnvironmentFactory(
        (int) (byte) 0, "hi!");
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern22 = factory21.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertNotNull(config16);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(databaseNamePattern22);
  }

  @Test
  public void test0651() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0651");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    java.nio.file.Path path7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory0.pbPath(path7);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern22 = backupEnvironment21.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress23 = backupEnvironment21.getSocketAddress();
    java.nio.file.Path path24 = backupEnvironment21.getRpPath();
    boolean boolean25 = backupEnvironment21.getIsBftf();
    java.nio.file.Path path26 = backupEnvironment21.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory8.prPath(path26);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory8.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions30 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.miAuthMetaOptions(
        authMetaOptions30);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertNotNull(databaseNamePattern22);
    org.junit.Assert.assertNotNull(socketAddress23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
  }

  @Test
  public void test0652() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0652");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.systemNanoClock(
        systemNanoClock7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.itraLogProvider(
        logProvider9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.uLogProvider(
        logProvider11);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
  }

  @Test
  public void test0653() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0653");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment15 = factory14.bulBackupEnvironment();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(backupEnvironment15);
  }

  @Test
  public void test0654() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0654");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    java.nio.file.Path path14 = backupEnvironment12.getPbPath();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment12.getDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(path14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
  }

  @Test
  public void test0655() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0655");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = backupEnvironment12.getSocketAddress();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern17 = backupEnvironment12.getDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(socketAddress16);
    org.junit.Assert.assertNotNull(databaseNamePattern17);
  }

  @Test
  public void test0656() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0656");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.progressMonitorFactory(
        progressMonitorFactory7);
    io.github.onograph.backup.BackupRunner backupRunner9 = generator8.bulBackupRunner();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    io.github.onograph.backup.BackupRunner.Generator generator11 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction10);
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    io.github.onograph.backup.BackupRunner.Generator generator13 = generator8.systemNanoClock(
        systemNanoClock12);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(backupRunner9);
    org.junit.Assert.assertNotNull(generator11);
    org.junit.Assert.assertNotNull(generator13);
  }

  @Test
  public void test0657() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0657");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.systemNanoClock(
        systemNanoClock11);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
  }

  @Test
  public void test0658() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0658");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsRp();
    boolean boolean14 = backupEnvironment12.getIsCc();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    boolean boolean16 = backupEnvironment12.getIsCc();
    boolean boolean17 = backupEnvironment12.getIsRp();
    boolean boolean18 = backupEnvironment12.getIsBftf();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
  }

  @Test
  public void test0659() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0659");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    java.nio.file.Path path9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory2.pbPath(path9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern24 = backupEnvironment23.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress25 = backupEnvironment23.getSocketAddress();
    java.nio.file.Path path26 = backupEnvironment23.getRpPath();
    boolean boolean27 = backupEnvironment23.getIsBftf();
    java.nio.file.Path path28 = backupEnvironment23.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory10.prPath(path28);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory30.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory30.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory36.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment42 = factory36.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern43 = backupEnvironment42.getDatabaseNamePattern();
    boolean boolean44 = backupEnvironment42.getIsBftf();
    boolean boolean45 = backupEnvironment42.getIsBftf();
    java.nio.file.Path path46 = backupEnvironment42.getRpPath();
    io.github.onograph.backup.FileMoverService fileMoverService47 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path28, path46);
    java.nio.file.Path path48 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path28);
    try {
      boolean boolean49 = backupIOService1.isExsForPa(path48);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertNotNull(databaseNamePattern24);
    org.junit.Assert.assertNotNull(socketAddress25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(backupEnvironment42);
    org.junit.Assert.assertNotNull(databaseNamePattern43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(fileMoverService47);
    org.junit.Assert.assertNotNull(path48);
  }

  @Test
  public void test0660() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0660");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        (int) (short) 1, "");
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory19.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory19.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory25.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment31 = factory25.bulBackupEnvironment();
    boolean boolean32 = backupEnvironment31.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional33 = backupEnvironment31.geicmaOptional();
    java.nio.file.Path path34 = backupEnvironment31.getPbPath();
    boolean boolean35 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path34);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory18.prPath(path34);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory18.shouldPrep(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(backupEnvironment31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional33);
    org.junit.Assert.assertNotNull(path34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
  }

  @Test
  public void test0661() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0661");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.itraLogProvider(
        logProvider11);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.progressMonitorFactory(
        progressMonitorFactory13);
    org.neo4j.time.SystemNanoClock systemNanoClock15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator14.systemNanoClock(
        systemNanoClock15);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator16.progressMonitorFactory(
        progressMonitorFactory17);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
  }

  @Test
  public void test0662() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0662");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isFtfb(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
  }

  @Test
  public void test0663() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0663");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern24 = backupEnvironment23.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress25 = backupEnvironment23.getSocketAddress();
    java.nio.file.Path path26 = backupEnvironment23.getRpPath();
    boolean boolean27 = backupEnvironment23.getIsBftf();
    java.nio.file.Path path28 = backupEnvironment23.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker29 = backupEnvironment23.getMemoryTracker();
    java.nio.file.Path path30 = backupEnvironment23.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory10.pbPath(path30);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertNotNull(databaseNamePattern24);
    org.junit.Assert.assertNotNull(socketAddress25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertNotNull(memoryTracker29);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertNotNull(factory31);
  }

  @Test
  public void test0664() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0664");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory4.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory4.wihadsBackupEnvironmentFactory(
        0, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config20 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.config(config20);
    org.neo4j.configuration.helpers.SocketAddress socketAddress22 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory19.wihadsBackupEnvironmentFactory(
        socketAddress22);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory30.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory30.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory36.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment42 = factory36.bulBackupEnvironment();
    boolean boolean43 = backupEnvironment42.getIsRp();
    boolean boolean44 = backupEnvironment42.getIsCc();
    boolean boolean45 = backupEnvironment42.getIsBftf();
    boolean boolean46 = backupEnvironment42.getIsCc();
    boolean boolean47 = backupEnvironment42.getIsRp();
    java.nio.file.Path path48 = backupEnvironment42.getPbPath();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern49 = backupEnvironment42.getDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory23.databaseNamePattern(
        databaseNamePattern49);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory16.databaseNamePattern(
        databaseNamePattern49);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory16.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.isFtfb(true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(backupEnvironment42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(path48);
    org.junit.Assert.assertNotNull(databaseNamePattern49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
  }

  @Test
  public void test0665() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0665");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup5.isBftf(false);
    io.github.onograph.backup.Backup backup9 = backup5.isCc(true);
    io.github.onograph.backup.Backup backup11 = backup5.isBftf(false);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
    org.junit.Assert.assertNotNull(backup11);
  }

  @Test
  public void test0666() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0666");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional15 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path16 = backupEnvironment12.getPbPath();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment12.getSocketAddress();
    boolean boolean18 = backupEnvironment12.getIsRp();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional19 = backupEnvironment12.geicmaOptional();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional19);
  }

  @Test
  public void test0667() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0667");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.itraLogProvider(
        logProvider11);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.progressMonitorFactory(
        progressMonitorFactory13);
    org.neo4j.time.SystemNanoClock systemNanoClock15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator14.systemNanoClock(
        systemNanoClock15);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator14.progressMonitorFactory(
        progressMonitorFactory17);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
  }

  @Test
  public void test0668() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0668");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isRp(true);
    org.neo4j.configuration.Config config14 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.config(config14);
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.wihadsBackupEnvironmentFactory(
        socketAddress16);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.config(config19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isRp(true);
    org.neo4j.configuration.Config config23 = factory20.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory13.config(config23);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory8.config(config23);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.logging.LogProvider logProvider28 = null;
    java.nio.file.Path path29 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory30 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl31 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config23, consistencyFlags26, fileSystemAbstraction27, logProvider28, path29,
        progressMonitorFactory30);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags32 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction33 = null;
    org.neo4j.logging.LogProvider logProvider34 = null;
    java.nio.file.Path path35 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory36 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl37 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config23, consistencyFlags32, fileSystemAbstraction33, logProvider34, path35,
        progressMonitorFactory36);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction38 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory39.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory39.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory39.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory45.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment51 = factory45.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker52 = backupEnvironment51.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern53 = backupEnvironment51.getDatabaseNamePattern();
    boolean boolean54 = backupEnvironment51.getIsBftf();
    java.nio.file.Path path55 = backupEnvironment51.getRpPath();
    boolean boolean56 = backupEnvironment51.getIsRp();
    org.neo4j.memory.MemoryTracker memoryTracker57 = backupEnvironment51.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache58 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager59 = new io.github.onograph.backup.BackupRestorationManager(
        config23, fileSystemAbstraction38, memoryTracker57, pageCache58);
    org.neo4j.io.layout.DatabaseLayout databaseLayout60 = null;
    try {
      backupRestorationManager59.reorForDa(databaseLayout60);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(config23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(backupEnvironment51);
    org.junit.Assert.assertNotNull(memoryTracker52);
    org.junit.Assert.assertNotNull(databaseNamePattern53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(path55);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertNotNull(memoryTracker57);
  }

  @Test
  public void test0669() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0669");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = factory2.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory2.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    java.nio.file.Path path11 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory8.prPath(path11);
    java.nio.file.Path path13 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.prPath(path13);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    java.nio.file.Path path18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory15.prPath(path18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config21 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.config(config21);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isRp(true);
    org.neo4j.configuration.Config config25 = factory22.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory15.config(config25);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory14.config(config25);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory7.config(config25);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config30 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.config(config30);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isRp(true);
    org.neo4j.configuration.Config config34 = factory31.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory31.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    java.nio.file.Path path40 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory37.prPath(path40);
    java.nio.file.Path path42 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.prPath(path42);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    java.nio.file.Path path47 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory44.prPath(path47);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config50 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.config(config50);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isRp(true);
    org.neo4j.configuration.Config config54 = factory51.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory44.config(config54);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory43.config(config54);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory36.config(config54);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction58 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory59.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory59.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory59.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory65.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory65.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment71 = factory65.bulBackupEnvironment();
    boolean boolean72 = backupEnvironment71.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional73 = backupEnvironment71.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern74 = backupEnvironment71.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional75 = backupEnvironment71.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker76 = backupEnvironment71.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache77 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager78 = new io.github.onograph.backup.BackupRestorationManager(
        config54, fileSystemAbstraction58, memoryTracker76, pageCache77);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory28.config(config54);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction80 = null;
    org.neo4j.logging.LogProvider logProvider81 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer82 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock83 = null;
    try {
      io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler84 = io.github.onograph.backup.DefaultBackupServiceHandler.strliclDefaultBackupServiceHandler(
          config54, fileSystemAbstraction80, logProvider81, pageCacheTracer82, systemNanoClock83);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(config25);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(config34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(config54);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(backupEnvironment71);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional73);
    org.junit.Assert.assertNotNull(databaseNamePattern74);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional75);
    org.junit.Assert.assertNotNull(memoryTracker76);
    org.junit.Assert.assertNotNull(factory79);
  }

  @Test
  public void test0670() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0670");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.io.PrintStream printStream3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    boolean boolean17 = backupEnvironment16.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment16.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern19 = backupEnvironment16.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional20 = backupEnvironment16.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker21 = backupEnvironment16.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress22 = backupEnvironment16.getSocketAddress();
    java.nio.file.Path path23 = backupEnvironment16.getRpPath();
    java.nio.file.Path path24 = backupEnvironment16.getRpPath();
    java.nio.file.Path path25 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout26 = null;
    try {
      io.github.onograph.backup.GdbRestorer gdbRestorer27 = new io.github.onograph.backup.GdbRestorer(
          fileSystemAbstraction0, true, false, printStream3, path24, path25, databaseLayout26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
    org.junit.Assert.assertNotNull(databaseNamePattern19);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional20);
    org.junit.Assert.assertNotNull(memoryTracker21);
    org.junit.Assert.assertNotNull(socketAddress22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(path24);
  }

  @Test
  public void test0671() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0671");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = setupForBackupRestorationCommandProvider0.commandType();
    int int2 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext3 = null;
    try {
      io.github.onograph.backup.SetupForBackupRestorationCommand setupForBackupRestorationCommand4 = setupForBackupRestorationCommandProvider0.createCommand(
          executionContext3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
  }

  @Test
  public void test0672() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0672");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("hi!");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup5 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup7 = backup1.isBftf(true);
    io.github.onograph.backup.Backup backup9 = backup1.isCc(false);
    java.io.OutputStream outputStream10 = null;
    try {
      io.github.onograph.backup.Backup backup11 = backup1.outputStream(outputStream10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: outputStream");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
  }

  @Test
  public void test0673() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0673");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    org.neo4j.configuration.Config config9 = factory8.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config11 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.config(config11);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isRp(true);
    org.neo4j.configuration.Config config15 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.config(config15);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory14.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions22 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory19.miAuthMetaOptions(
        authMetaOptions22);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isIcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern28 = factory25.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory14.databaseNamePattern(
        databaseNamePattern28);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config31 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.config(config31);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.isRp(true);
    org.neo4j.configuration.Config config35 = factory32.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory32.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory38.isCc(false);
    java.nio.file.Path path41 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory38.prPath(path41);
    java.nio.file.Path path43 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.prPath(path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    java.nio.file.Path path48 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory45.prPath(path48);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config51 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory50.config(config51);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isRp(true);
    org.neo4j.configuration.Config config55 = factory52.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory45.config(config55);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory44.config(config55);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory37.config(config55);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory29.config(config55);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory8.config(config55);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isSicc(
        (java.lang.Boolean) false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(config9);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(databaseNamePattern28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(config35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(config55);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
  }

  @Test
  public void test0674() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0674");
    }
    try {
      io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup((-1),
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: Port is expected to be positive and less than or equal to 65535 but was: -1");
    } catch (java.lang.IllegalArgumentException e) {
    }
  }

  @Test
  public void test0675() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0675");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.prPath(path5);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    java.nio.file.Path path10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.prPath(path10);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config13 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.config(config13);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isRp(true);
    org.neo4j.configuration.Config config17 = factory14.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory7.config(config17);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory6.config(config17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory29.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment35 = factory29.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern36 = backupEnvironment35.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress37 = backupEnvironment35.getSocketAddress();
    java.nio.file.Path path38 = backupEnvironment35.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory20.pbPath(path38);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory43.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory43.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory49.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment55 = factory49.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern56 = backupEnvironment55.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress57 = backupEnvironment55.getSocketAddress();
    java.nio.file.Path path58 = backupEnvironment55.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory40.pbPath(path58);
    io.github.onograph.backup.FileMoverService fileMoverService60 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path38, path58);
    java.nio.file.Path path61 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path58);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory6.prPath(path61);
    org.neo4j.configuration.helpers.SocketAddress socketAddress63 = factory6.getSocketAddress();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(config17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(backupEnvironment35);
    org.junit.Assert.assertNotNull(databaseNamePattern36);
    org.junit.Assert.assertNotNull(socketAddress37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(backupEnvironment55);
    org.junit.Assert.assertNotNull(databaseNamePattern56);
    org.junit.Assert.assertNotNull(socketAddress57);
    org.junit.Assert.assertNotNull(path58);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(fileMoverService60);
    org.junit.Assert.assertNotNull(path61);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNull(socketAddress63);
  }

  @Test
  public void test0676() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0676");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    io.github.onograph.backup.BackupRunner backupRunner7 = generator6.bulBackupRunner();
    io.github.onograph.backup.BackupRunner backupRunner8 = generator6.bulBackupRunner();
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.systemNanoClock(
        systemNanoClock9);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(backupRunner7);
    org.junit.Assert.assertNotNull(backupRunner8);
    org.junit.Assert.assertNotNull(generator10);
  }

  @Test
  public void test0677() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0677");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path15 = backupEnvironment12.getPbPath();
    java.nio.file.Path path16 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path15);
    java.nio.file.Path path17 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path16);
    boolean boolean18 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path17);
    java.nio.file.Path path19 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path17);
    java.nio.file.Path path20 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path19);
    java.nio.file.Path path21 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path20);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory22.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory22.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory28.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment34 = factory28.bulBackupEnvironment();
    boolean boolean35 = backupEnvironment34.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional36 = backupEnvironment34.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress37 = backupEnvironment34.getSocketAddress();
    boolean boolean38 = backupEnvironment34.getIsCc();
    java.nio.file.Path path39 = backupEnvironment34.getRpPath();
    io.github.onograph.backup.FileMoverService fileMoverService40 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path21, path39);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(backupEnvironment34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional36);
    org.junit.Assert.assertNotNull(socketAddress37);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertNotNull(fileMoverService40);
  }

  @Test
  public void test0678() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0678");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isIcc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.Config config5 = factory4.gecfConfig();
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags6 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    boolean boolean22 = backupEnvironment21.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional23 = backupEnvironment21.geicmaOptional();
    java.nio.file.Path path24 = backupEnvironment21.getPbPath();
    java.nio.file.Path path25 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory27 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl28 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config5, consistencyFlags6, fileSystemAbstraction7, logProvider8, path26,
        progressMonitorFactory27);
    org.neo4j.io.layout.DatabaseLayout databaseLayout29 = null;
    try {
      backupVerificationServiceImpl28.chcsyForDa(databaseLayout29);
      org.junit.Assert.fail(
          "Expected exception of type io.github.onograph.backup.BackupVerificationErrorException; message: *** Error:  2915f124-983c-439d-b1ae-a9c5ad06642b");
    } catch (io.github.onograph.backup.BackupVerificationErrorException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(path26);
  }

  @Test
  public void test0679() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0679");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    boolean boolean18 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path17);
    java.lang.String[] strArray22 = new java.lang.String[]{"", "database.id", "database.id"};
    java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
    boolean boolean24 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList23, strArray22);
    try {
      backupMetadataRepository1.wrtForPaLi(path17, (java.util.List<java.lang.String>) strList23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(strArray22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
  }

  @Test
  public void test0680() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0680");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment14.getDatabaseNamePattern();
    boolean boolean16 = backupEnvironment14.getIsBftf();
    boolean boolean17 = backupEnvironment14.getIsBftf();
    java.nio.file.Path path18 = backupEnvironment14.getRpPath();
    org.neo4j.logging.LogProvider logProvider19 = null;
    org.neo4j.io.pagecache.PageCache pageCache20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    try {
      io.github.onograph.backup.BackupMetaService backupMetaService22 = new io.github.onograph.backup.BackupMetaService(
          fileSystemAbstraction0, "database.id", path18, logProvider19, pageCache20,
          pageCacheTracer21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(path18);
  }

  @Test
  public void test0681() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0681");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = backupEnvironment12.getSocketAddress();
    boolean boolean17 = backupEnvironment12.getIsCc();
    java.nio.file.Path path18 = backupEnvironment12.getRpPath();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(socketAddress16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(path18);
  }

  @Test
  public void test0682() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0682");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isRp(true);
    org.neo4j.configuration.Config config14 = factory11.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory4.config(config14);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags16 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    org.neo4j.logging.LogProvider logProvider18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config20 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.config(config20);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory21.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern26 = factory21.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory21.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config30 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.config(config30);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isRp(true);
    org.neo4j.configuration.Config config34 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.config(config34);
    org.neo4j.configuration.helpers.SocketAddress socketAddress36 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory33.wihadsBackupEnvironmentFactory(
        socketAddress36);
    org.neo4j.configuration.helpers.SocketAddress socketAddress38 = factory33.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory33.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment43 = factory42.bulBackupEnvironment();
    java.nio.file.Path path44 = backupEnvironment43.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory21.prPath(path44);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory46 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl47 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config14, consistencyFlags16, fileSystemAbstraction17, logProvider18, path44,
        progressMonitorFactory46);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction48 = null;
    org.neo4j.logging.LogProvider logProvider49 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer50 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock51 = null;
    try {
      io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler52 = io.github.onograph.backup.DefaultBackupServiceHandler.strliclDefaultBackupServiceHandler(
          config14, fileSystemAbstraction48, logProvider49, pageCacheTracer50, systemNanoClock51);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(config14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(databaseNamePattern26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNull(socketAddress38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(backupEnvironment43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(factory45);
  }

  @Test
  public void test0683() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0683");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory0.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory0.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern11 = factory10.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory12.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory12.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory18.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment24 = factory18.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern25 = backupEnvironment24.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress26 = backupEnvironment24.getSocketAddress();
    java.nio.file.Path path27 = backupEnvironment24.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory10.pbPath(path27);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(databaseNamePattern11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(backupEnvironment24);
    org.junit.Assert.assertNotNull(databaseNamePattern25);
    org.junit.Assert.assertNotNull(socketAddress26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertNotNull(factory28);
  }

  @Test
  public void test0684() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0684");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory0.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern24 = backupEnvironment23.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress25 = backupEnvironment23.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory10.wihadsBackupEnvironmentFactory(
        socketAddress25);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertNotNull(databaseNamePattern24);
    org.junit.Assert.assertNotNull(socketAddress25);
    org.junit.Assert.assertNotNull(factory26);
  }

  @Test
  public void test0685() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0685");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.time.SystemNanoClock systemNanoClock5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.systemNanoClock(
        systemNanoClock5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.systemNanoClock(
        systemNanoClock9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.itraLogProvider(
        logProvider11);
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.systemNanoClock(
        systemNanoClock13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0686() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0686");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.prPath(path5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern22 = backupEnvironment21.getDatabaseNamePattern();
    boolean boolean23 = backupEnvironment21.getIsBftf();
    org.neo4j.configuration.helpers.SocketAddress socketAddress24 = backupEnvironment21.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory6.wihadsBackupEnvironmentFactory(
        socketAddress24);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory6.isCc(true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertNotNull(databaseNamePattern22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNotNull(socketAddress24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
  }

  @Test
  public void test0687() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0687");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = factory2.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory2.isCc(true);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory2.miAuthMetaOptions(
        authMetaOptions8);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory10.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory10.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory16.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment22 = factory16.bulBackupEnvironment();
    boolean boolean23 = backupEnvironment22.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional24 = backupEnvironment22.geicmaOptional();
    java.nio.file.Path path25 = backupEnvironment22.getPbPath();
    java.nio.file.Path path26 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path25);
    java.nio.file.Path path27 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path26);
    boolean boolean28 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path27);
    java.nio.file.Path path29 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path27);
    java.nio.file.Path path30 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path29);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory34.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory34.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory40.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment46 = factory40.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern47 = backupEnvironment46.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress48 = backupEnvironment46.getSocketAddress();
    java.nio.file.Path path49 = backupEnvironment46.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory31.pbPath(path49);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory54.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory54.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory60.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment66 = factory60.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern67 = backupEnvironment66.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress68 = backupEnvironment66.getSocketAddress();
    java.nio.file.Path path69 = backupEnvironment66.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory51.pbPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService71 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path49, path69);
    java.nio.file.Path path72 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService73 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path29, path72);
    java.nio.file.Path path74 = fileMoverService73.filPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory2.prPath(path74);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config77 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory76.config(config77);
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory78.isRp(true);
    org.neo4j.configuration.Config config81 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory80.config(config81);
    io.github.onograph.backup.BackupEnvironment.Factory factory84 = factory80.isGcc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.Config config85 = factory80.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory86 = factory75.config(config85);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction87 = null;
    io.github.onograph.cluster.raft.module.cuprot.LifecycleCatchupManagerImpl lifecycleCatchupManagerImpl88 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler89 = null;
    org.neo4j.logging.LogProvider logProvider90 = null;
    org.neo4j.monitoring.Monitors monitors91 = null;
    org.neo4j.io.pagecache.PageCache pageCache92 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer93 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock94 = null;
    try {
      io.github.onograph.backup.RemoteBackupManager remoteBackupManager95 = new io.github.onograph.backup.RemoteBackupManager(
          config85, fileSystemAbstraction87, lifecycleCatchupManagerImpl88, jobScheduler89,
          logProvider90, monitors91, pageCache92, pageCacheTracer93, systemNanoClock94);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(backupEnvironment22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNotNull(path29);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(backupEnvironment46);
    org.junit.Assert.assertNotNull(databaseNamePattern47);
    org.junit.Assert.assertNotNull(socketAddress48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(backupEnvironment66);
    org.junit.Assert.assertNotNull(databaseNamePattern67);
    org.junit.Assert.assertNotNull(socketAddress68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(fileMoverService71);
    org.junit.Assert.assertNotNull(path72);
    org.junit.Assert.assertNotNull(fileMoverService73);
    org.junit.Assert.assertNotNull(path74);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(factory84);
    org.junit.Assert.assertNotNull(config85);
    org.junit.Assert.assertNotNull(factory86);
  }

  @Test
  public void test0688() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0688");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.config(config8);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = factory9.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory2.databaseNamePattern(
        databaseNamePattern14);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory15.miAuthMetaOptions(
        authMetaOptions18);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
  }

  @Test
  public void test0689() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0689");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    boolean boolean20 = backupEnvironment19.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional21 = backupEnvironment19.geicmaOptional();
    java.nio.file.Path path22 = backupEnvironment19.getPbPath();
    java.nio.file.Path path23 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path22);
    java.nio.file.Path path24 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path23);
    boolean boolean25 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    boolean boolean40 = backupEnvironment39.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional41 = backupEnvironment39.geicmaOptional();
    java.nio.file.Path path42 = backupEnvironment39.getPbPath();
    java.nio.file.Path path43 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.nio.file.Path path44 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path43);
    io.github.onograph.backup.FileMoverService fileMoverService45 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path24, path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory4.prPath(path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory49.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory49.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory55.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config59 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.config(config59);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isRp(true);
    org.neo4j.configuration.Config config63 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory62.config(config63);
    org.neo4j.configuration.helpers.SocketAddress socketAddress65 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory62.wihadsBackupEnvironmentFactory(
        socketAddress65);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config68 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory67.config(config68);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory69.isRp(true);
    org.neo4j.configuration.Config config72 = factory69.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory62.config(config72);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory57.config(config72);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction75 = null;
    org.neo4j.memory.MemoryTracker memoryTracker76 = null;
    org.neo4j.io.pagecache.PageCache pageCache77 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager78 = new io.github.onograph.backup.BackupRestorationManager(
        config72, fileSystemAbstraction75, memoryTracker76, pageCache77);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory48.config(config72);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction80 = null;
    io.github.onograph.cluster.raft.module.cuprot.LifecycleCatchupManagerImpl lifecycleCatchupManagerImpl81 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler82 = null;
    org.neo4j.logging.LogProvider logProvider83 = null;
    org.neo4j.monitoring.Monitors monitors84 = null;
    org.neo4j.io.pagecache.PageCache pageCache85 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer86 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock87 = null;
    try {
      io.github.onograph.backup.RemoteBackupManager remoteBackupManager88 = new io.github.onograph.backup.RemoteBackupManager(
          config72, fileSystemAbstraction80, lifecycleCatchupManagerImpl81, jobScheduler82,
          logProvider83, monitors84, pageCache85, pageCacheTracer86, systemNanoClock87);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(fileMoverService45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(config72);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory79);
  }

  @Test
  public void test0690() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0690");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.prPath(path5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern24 = backupEnvironment23.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress25 = backupEnvironment23.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory10.wihadsBackupEnvironmentFactory(
        socketAddress25);
    org.neo4j.configuration.Config config27 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory10.config(config27);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory10.miAuthMetaOptions(
        authMetaOptions29);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertNotNull(databaseNamePattern24);
    org.junit.Assert.assertNotNull(socketAddress25);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
  }

  @Test
  public void test0691() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0691");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    boolean boolean17 = backupEnvironment16.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment16.geicmaOptional();
    java.nio.file.Path path19 = backupEnvironment16.getPbPath();
    java.nio.file.Path path20 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path19);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream21 = fileMover3._trrfrmnStream(
        path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory25.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory25.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory31.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment37 = factory31.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern38 = backupEnvironment37.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress39 = backupEnvironment37.getSocketAddress();
    java.nio.file.Path path40 = backupEnvironment37.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory22.pbPath(path40);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory45.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory45.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory51.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment57 = factory51.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern58 = backupEnvironment57.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress59 = backupEnvironment57.getSocketAddress();
    java.nio.file.Path path60 = backupEnvironment57.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory42.pbPath(path60);
    io.github.onograph.backup.FileMoverService fileMoverService62 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path40, path60);
    java.nio.file.Path path63 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path40);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream64 = fileMover3._trrfrmnStream(
        path63);
    java.nio.file.Path path65 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path63);
    java.lang.String[] strArray67 = new java.lang.String[]{"hi!"};
    java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
    boolean boolean69 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList68, strArray67);
    try {
      backupMetadataRepository1.wrtForPaLi(path65, (java.util.List<java.lang.String>) strList68);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(fileMoverServiceStream21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(backupEnvironment37);
    org.junit.Assert.assertNotNull(databaseNamePattern38);
    org.junit.Assert.assertNotNull(socketAddress39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(backupEnvironment57);
    org.junit.Assert.assertNotNull(databaseNamePattern58);
    org.junit.Assert.assertNotNull(socketAddress59);
    org.junit.Assert.assertNotNull(path60);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(fileMoverService62);
    org.junit.Assert.assertNotNull(path63);
    org.junit.Assert.assertNotNull(fileMoverServiceStream64);
    org.junit.Assert.assertNotNull(path65);
    org.junit.Assert.assertNotNull(strArray67);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
  }

  @Test
  public void test0692() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0692");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsRp();
    boolean boolean14 = backupEnvironment12.getIsCc();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    boolean boolean16 = backupEnvironment12.getIsCc();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory18.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory18.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory24.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment30 = factory24.bulBackupEnvironment();
    boolean boolean31 = backupEnvironment30.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional32 = backupEnvironment30.geicmaOptional();
    java.nio.file.Path path33 = backupEnvironment30.getPbPath();
    java.nio.file.Path path34 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path33);
    java.nio.file.Path path35 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path34);
    boolean boolean36 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path35);
    java.nio.file.Path path37 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path35);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory38.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory38.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory38.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory44.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment50 = factory44.bulBackupEnvironment();
    boolean boolean51 = backupEnvironment50.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional52 = backupEnvironment50.geicmaOptional();
    java.nio.file.Path path53 = backupEnvironment50.getPbPath();
    java.nio.file.Path path54 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path53);
    java.nio.file.Path path55 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path54);
    io.github.onograph.backup.FileMoverService fileMoverService56 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path35, path54);
    java.nio.file.Path path57 = fileMoverService56.filPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory58.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory58.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory64.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory64.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment70 = factory64.bulBackupEnvironment();
    boolean boolean71 = backupEnvironment70.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional72 = backupEnvironment70.geicmaOptional();
    java.nio.file.Path path73 = backupEnvironment70.getPbPath();
    java.nio.file.Path path74 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path73);
    java.nio.file.Path path75 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path74);
    boolean boolean76 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path75);
    java.nio.file.Path path77 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path75);
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory78.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory78.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory84 = factory78.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory86 = factory84.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory89 = factory84.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment90 = factory84.bulBackupEnvironment();
    boolean boolean91 = backupEnvironment90.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional92 = backupEnvironment90.geicmaOptional();
    java.nio.file.Path path93 = backupEnvironment90.getPbPath();
    java.nio.file.Path path94 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path93);
    java.nio.file.Path path95 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path94);
    io.github.onograph.backup.FileMoverService fileMoverService96 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path75, path94);
    io.github.onograph.backup.FileMoverService fileMoverService97 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path57, path75);
    io.github.onograph.backup.FileMoverService fileMoverService98 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path17, path75);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(backupEnvironment30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional32);
    org.junit.Assert.assertNotNull(path33);
    org.junit.Assert.assertNotNull(path34);
    org.junit.Assert.assertNotNull(path35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(backupEnvironment50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional52);
    org.junit.Assert.assertNotNull(path53);
    org.junit.Assert.assertNotNull(path54);
    org.junit.Assert.assertNotNull(path55);
    org.junit.Assert.assertNotNull(fileMoverService56);
    org.junit.Assert.assertNotNull(path57);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(backupEnvironment70);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional72);
    org.junit.Assert.assertNotNull(path73);
    org.junit.Assert.assertNotNull(path74);
    org.junit.Assert.assertNotNull(path75);
    org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    org.junit.Assert.assertNotNull(path77);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(factory84);
    org.junit.Assert.assertNotNull(factory86);
    org.junit.Assert.assertNotNull(factory89);
    org.junit.Assert.assertNotNull(backupEnvironment90);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional92);
    org.junit.Assert.assertNotNull(path93);
    org.junit.Assert.assertNotNull(path94);
    org.junit.Assert.assertNotNull(path95);
    org.junit.Assert.assertNotNull(fileMoverService96);
    org.junit.Assert.assertNotNull(fileMoverService97);
    org.junit.Assert.assertNotNull(fileMoverService98);
  }

  @Test
  public void test0693() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0693");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        (int) (short) 10, "hi!");
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory6.miAuthMetaOptions(
        authMetaOptions12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory6.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory6.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.databaseNamePattern(
        "database.id");
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern20 = factory19.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(databaseNamePattern20);
  }

  @Test
  public void test0694() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0694");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isBftf(true);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
  }

  @Test
  public void test0695() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0695");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory1 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = factory1.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory1.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory1.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory7.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment13 = factory7.bulBackupEnvironment();
    boolean boolean14 = backupEnvironment13.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional15 = backupEnvironment13.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment13.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional17 = backupEnvironment13.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker18 = backupEnvironment13.getMemoryTracker();
    boolean boolean19 = backupEnvironment13.getIsRp();
    java.nio.file.Path path20 = backupEnvironment13.getPbPath();
    java.nio.file.Path path21 = backupEnvironment13.getPbPath();
    io.github.onograph.backup.FileMoverService fileMoverService22 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path0, path21);
    try {
      boolean boolean23 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory1);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(backupEnvironment13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional17);
    org.junit.Assert.assertNotNull(memoryTracker18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(fileMoverService22);
  }

  @Test
  public void test0696() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0696");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory5.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory5.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory11.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment17 = factory11.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = backupEnvironment17.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress19 = backupEnvironment17.getSocketAddress();
    java.nio.file.Path path20 = backupEnvironment17.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory2.pbPath(path20);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory25.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory25.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory31.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment37 = factory31.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern38 = backupEnvironment37.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress39 = backupEnvironment37.getSocketAddress();
    java.nio.file.Path path40 = backupEnvironment37.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory22.pbPath(path40);
    io.github.onograph.backup.FileMoverService fileMoverService42 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path20, path40);
    java.nio.file.Path path43 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path20);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory44.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory44.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory50.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory50.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment56 = factory50.bulBackupEnvironment();
    boolean boolean57 = backupEnvironment56.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional58 = backupEnvironment56.geicmaOptional();
    java.nio.file.Path path59 = backupEnvironment56.getPbPath();
    java.nio.file.Path path60 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path59);
    java.nio.file.Path path61 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path60);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory62.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory62.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory62.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory68.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory68.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment74 = factory68.bulBackupEnvironment();
    boolean boolean75 = backupEnvironment74.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional76 = backupEnvironment74.geicmaOptional();
    java.nio.file.Path path77 = backupEnvironment74.getPbPath();
    java.nio.file.Path path78 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path77);
    io.github.onograph.backup.FileMoverService fileMoverService79 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path60, path78);
    io.github.onograph.backup.FileMoverService fileMoverService80 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path20, path78);
    java.nio.file.Path path81 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path78);
    try {
      backupIOService1.deedForPa(path78);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(backupEnvironment17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(socketAddress19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(backupEnvironment37);
    org.junit.Assert.assertNotNull(databaseNamePattern38);
    org.junit.Assert.assertNotNull(socketAddress39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(fileMoverService42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(backupEnvironment56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional58);
    org.junit.Assert.assertNotNull(path59);
    org.junit.Assert.assertNotNull(path60);
    org.junit.Assert.assertNotNull(path61);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(backupEnvironment74);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional76);
    org.junit.Assert.assertNotNull(path77);
    org.junit.Assert.assertNotNull(path78);
    org.junit.Assert.assertNotNull(fileMoverService79);
    org.junit.Assert.assertNotNull(fileMoverService80);
    org.junit.Assert.assertNotNull(path81);
  }

  @Test
  public void test0697() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0697");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.config(config8);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = factory9.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory6.databaseNamePattern(
        databaseNamePattern14);
    try {
      io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.databaseNamePattern(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: Database name 'hi!' contains illegal characters. Use simple ascii characters, numbers, dots, question marks, asterisk and dashes.");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertNotNull(factory15);
  }

  @Test
  public void test0698() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0698");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isFtfb(true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
  }

  @Test
  public void test0699() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0699");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isGcc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.Config config9 = factory4.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory10.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory10.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory16.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isSicc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.Config config24 = factory21.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory4.config(config24);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(config9);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(config24);
    org.junit.Assert.assertNotNull(factory25);
  }

  @Test
  public void test0700() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0700");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.itraLogProvider(
        logProvider11);
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.systemNanoClock(
        systemNanoClock13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator12.monitors(monitors15);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
  }

  @Test
  public void test0701() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0701");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isSicc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.Config config14 = factory11.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory11.isIcc(
        (java.lang.Boolean) true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(config14);
    org.junit.Assert.assertNotNull(factory16);
  }

  @Test
  public void test0702() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0702");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream19 = fileMover1._trrfrmnStream(
        path17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory29.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment35 = factory29.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern36 = backupEnvironment35.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress37 = backupEnvironment35.getSocketAddress();
    java.nio.file.Path path38 = backupEnvironment35.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory20.pbPath(path38);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory43.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory43.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory49.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment55 = factory49.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern56 = backupEnvironment55.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress57 = backupEnvironment55.getSocketAddress();
    java.nio.file.Path path58 = backupEnvironment55.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory40.pbPath(path58);
    io.github.onograph.backup.FileMoverService fileMoverService60 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path38, path58);
    java.nio.file.Path path61 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path38);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream62 = fileMover1._trrfrmnStream(
        path61);
    java.nio.file.Path path63 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path61);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory64.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory64.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory64.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory70.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory70.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment76 = factory70.bulBackupEnvironment();
    boolean boolean77 = backupEnvironment76.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional78 = backupEnvironment76.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional79 = backupEnvironment76.geicmaOptional();
    java.nio.file.Path path80 = backupEnvironment76.getRpPath();
    io.github.onograph.backup.FileMoverService fileMoverService81 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path61, path80);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(fileMoverServiceStream19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(backupEnvironment35);
    org.junit.Assert.assertNotNull(databaseNamePattern36);
    org.junit.Assert.assertNotNull(socketAddress37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(backupEnvironment55);
    org.junit.Assert.assertNotNull(databaseNamePattern56);
    org.junit.Assert.assertNotNull(socketAddress57);
    org.junit.Assert.assertNotNull(path58);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(fileMoverService60);
    org.junit.Assert.assertNotNull(path61);
    org.junit.Assert.assertNotNull(fileMoverServiceStream62);
    org.junit.Assert.assertNotNull(path63);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(backupEnvironment76);
    org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional78);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional79);
    org.junit.Assert.assertNotNull(path80);
    org.junit.Assert.assertNotNull(fileMoverService81);
  }

  @Test
  public void test0703() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0703");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup5.isCc(true);
    io.github.onograph.backup.Backup backup9 = backup7.isBftf(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config15 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.config(config15);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isRp(true);
    org.neo4j.configuration.Config config19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.config(config19);
    org.neo4j.configuration.helpers.SocketAddress socketAddress21 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory18.wihadsBackupEnvironmentFactory(
        socketAddress21);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory26.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory26.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory32.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment38 = factory32.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern39 = backupEnvironment38.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress40 = backupEnvironment38.getSocketAddress();
    java.nio.file.Path path41 = backupEnvironment38.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory23.pbPath(path41);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory46.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory46.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory52.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment58 = factory52.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern59 = backupEnvironment58.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress60 = backupEnvironment58.getSocketAddress();
    java.nio.file.Path path61 = backupEnvironment58.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory43.pbPath(path61);
    io.github.onograph.backup.FileMoverService fileMoverService63 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path41, path61);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory18.pbPath(path61);
    boolean boolean65 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path61);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory11.prPath(path61);
    try {
      io.github.onograph.backup.Backup.BackupRespState backupRespState67 = backup9.bakBackupBackupRespState(
          "database.id", path61);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.RuntimeException; message: *** Error:  3b02b00a-232a-454b-823b-025cc97a58b8");
    } catch (java.lang.RuntimeException e) {
    }
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(backupEnvironment38);
    org.junit.Assert.assertNotNull(databaseNamePattern39);
    org.junit.Assert.assertNotNull(socketAddress40);
    org.junit.Assert.assertNotNull(path41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(backupEnvironment58);
    org.junit.Assert.assertNotNull(databaseNamePattern59);
    org.junit.Assert.assertNotNull(socketAddress60);
    org.junit.Assert.assertNotNull(path61);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(fileMoverService63);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertNotNull(factory66);
  }

  @Test
  public void test0704() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0704");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.itraLogProvider(
        logProvider9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.itraLogProvider(
        logProvider13);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator12.progressMonitorFactory(
        progressMonitorFactory15);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator16.progressMonitorFactory(
        progressMonitorFactory17);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    io.github.onograph.backup.BackupRunner.Generator generator20 = generator16.fFileSystemAbstraction(
        fileSystemAbstraction19);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
    org.junit.Assert.assertNotNull(generator20);
  }

  @Test
  public void test0705() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0705");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory4.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isSicc(
        (java.lang.Boolean) true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
  }

  @Test
  public void test0706() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0706");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory12.isRp(false);
    java.nio.file.Path path17 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.prPath(path17);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern19 = factory18.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config20 = factory18.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory11.config(config20);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory0.config(config20);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.configuration.Config config24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    java.nio.file.Path[] pathArray26 = new java.nio.file.Path[]{};
    java.util.LinkedHashSet<java.nio.file.Path> pathSet27 = new java.util.LinkedHashSet<java.nio.file.Path>();
    boolean boolean28 = java.util.Collections.addAll(
        (java.util.Collection<java.nio.file.Path>) pathSet27, pathArray26);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta29 = new io.github.onograph.backup.BackupRestoreMeta(
        config24, fileSystemAbstraction25, (java.util.Set<java.nio.file.Path>) pathSet27);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta30 = new io.github.onograph.backup.BackupRestoreMeta(
        config20, fileSystemAbstraction23, (java.util.Set<java.nio.file.Path>) pathSet27);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.logging.LogProvider logProvider32 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer33 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock34 = null;
    try {
      io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler35 = io.github.onograph.backup.DefaultBackupServiceHandler.strliclDefaultBackupServiceHandler(
          config20, fileSystemAbstraction31, logProvider32, pageCacheTracer33, systemNanoClock34);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(databaseNamePattern19);
    org.junit.Assert.assertNotNull(config20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(pathArray26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
  }

  @Test
  public void test0707() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0707");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.systemNanoClock(
        systemNanoClock7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.itraLogProvider(
        logProvider9);
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.systemNanoClock(
        systemNanoClock11);
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator6.systemNanoClock(
        systemNanoClock13);
    io.github.onograph.backup.BackupRunner backupRunner15 = generator14.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory16.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory22.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory22.bulBackupEnvironment();
    boolean boolean29 = backupEnvironment28.getIsRp();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional30 = backupEnvironment28.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress31 = backupEnvironment28.getSocketAddress();
    org.neo4j.configuration.helpers.SocketAddress socketAddress32 = backupEnvironment28.getSocketAddress();
    try {
      backupRunner15.excebcpForBa(backupEnvironment28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(backupRunner15);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional30);
    org.junit.Assert.assertNotNull(socketAddress31);
    org.junit.Assert.assertNotNull(socketAddress32);
  }

  @Test
  public void test0708() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0708");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.nio.file.Path path19 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory26.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment32 = factory26.bulBackupEnvironment();
    boolean boolean33 = backupEnvironment32.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional34 = backupEnvironment32.geicmaOptional();
    java.nio.file.Path path35 = backupEnvironment32.getPbPath();
    java.nio.file.Path path36 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path35);
    io.github.onograph.backup.FileMoverService fileMoverService37 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path18, path36);
    java.nio.file.Path path38 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path18);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional39 = gdbIdRepo1.reddtaiOptional(
          path38);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(backupEnvironment32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional34);
    org.junit.Assert.assertNotNull(path35);
    org.junit.Assert.assertNotNull(path36);
    org.junit.Assert.assertNotNull(fileMoverService37);
    org.junit.Assert.assertNotNull(path38);
  }

  @Test
  public void test0709() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0709");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = factory2.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory2.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
  }

  @Test
  public void test0710() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0710");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory5.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory5.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory11.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment17 = factory11.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = backupEnvironment17.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress19 = backupEnvironment17.getSocketAddress();
    java.nio.file.Path path20 = backupEnvironment17.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory2.pbPath(path20);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory25.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory25.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory31.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment37 = factory31.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern38 = backupEnvironment37.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress39 = backupEnvironment37.getSocketAddress();
    java.nio.file.Path path40 = backupEnvironment37.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory22.pbPath(path40);
    io.github.onograph.backup.FileMoverService fileMoverService42 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path20, path40);
    java.nio.file.Path path43 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path40);
    try {
      backupIOService1.deedForPa(path43);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(backupEnvironment17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(socketAddress19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(backupEnvironment37);
    org.junit.Assert.assertNotNull(databaseNamePattern38);
    org.junit.Assert.assertNotNull(socketAddress39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(fileMoverService42);
    org.junit.Assert.assertNotNull(path43);
  }

  @Test
  public void test0711() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0711");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path15 = backupEnvironment12.getRpPath();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory21.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory21.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory27.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment33 = factory27.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern34 = backupEnvironment33.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress35 = backupEnvironment33.getSocketAddress();
    java.nio.file.Path path36 = backupEnvironment33.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory18.pbPath(path36);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory38.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory41.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory41.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory47.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment53 = factory47.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern54 = backupEnvironment53.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress55 = backupEnvironment53.getSocketAddress();
    java.nio.file.Path path56 = backupEnvironment53.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory38.pbPath(path56);
    io.github.onograph.backup.FileMoverService fileMoverService58 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path36, path56);
    java.nio.file.Path path59 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path36);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory60.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory60.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory66.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory66.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment72 = factory66.bulBackupEnvironment();
    boolean boolean73 = backupEnvironment72.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional74 = backupEnvironment72.geicmaOptional();
    java.nio.file.Path path75 = backupEnvironment72.getPbPath();
    java.nio.file.Path path76 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path75);
    java.nio.file.Path path77 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path76);
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory78.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory78.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory84 = factory78.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory86 = factory84.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory89 = factory84.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment90 = factory84.bulBackupEnvironment();
    boolean boolean91 = backupEnvironment90.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional92 = backupEnvironment90.geicmaOptional();
    java.nio.file.Path path93 = backupEnvironment90.getPbPath();
    java.nio.file.Path path94 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path93);
    io.github.onograph.backup.FileMoverService fileMoverService95 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path76, path94);
    io.github.onograph.backup.FileMoverService fileMoverService96 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path36, path94);
    io.github.onograph.backup.FileMoverService fileMoverService97 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path17, path94);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertNotNull(socketAddress14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(backupEnvironment33);
    org.junit.Assert.assertNotNull(databaseNamePattern34);
    org.junit.Assert.assertNotNull(socketAddress35);
    org.junit.Assert.assertNotNull(path36);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(backupEnvironment53);
    org.junit.Assert.assertNotNull(databaseNamePattern54);
    org.junit.Assert.assertNotNull(socketAddress55);
    org.junit.Assert.assertNotNull(path56);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(fileMoverService58);
    org.junit.Assert.assertNotNull(path59);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(backupEnvironment72);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional74);
    org.junit.Assert.assertNotNull(path75);
    org.junit.Assert.assertNotNull(path76);
    org.junit.Assert.assertNotNull(path77);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(factory84);
    org.junit.Assert.assertNotNull(factory86);
    org.junit.Assert.assertNotNull(factory89);
    org.junit.Assert.assertNotNull(backupEnvironment90);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional92);
    org.junit.Assert.assertNotNull(path93);
    org.junit.Assert.assertNotNull(path94);
    org.junit.Assert.assertNotNull(fileMoverService95);
    org.junit.Assert.assertNotNull(fileMoverService96);
    org.junit.Assert.assertNotNull(fileMoverService97);
  }

  @Test
  public void test0712() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0712");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean14 = backupEnvironment12.getIsBftf();
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = backupEnvironment12.getSocketAddress();
    org.neo4j.memory.MemoryTracker memoryTracker16 = backupEnvironment12.getMemoryTracker();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertNotNull(socketAddress15);
    org.junit.Assert.assertNotNull(memoryTracker16);
  }

  @Test
  public void test0713() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0713");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator4.progressMonitorFactory(
        progressMonitorFactory5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.monitors(monitors7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.itraLogProvider(
        logProvider9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator10.systemNanoClock(
        systemNanoClock13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0714() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0714");
    }
    io.github.onograph.backup.BackupMetaDTO backupMetaDTO0 = null;
    java.lang.String[] strArray3 = new java.lang.String[]{"database.id", "hi!"};
    java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList4, strArray3);
    try {
      io.github.onograph.backup.BackupMetaService.wrtmedaForBaLi(backupMetaDTO0,
          (java.util.List<java.lang.String>) strList4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(strArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
  }

  @Test
  public void test0715() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0715");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.itraLogProvider(
        logProvider11);
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator10.systemNanoClock(
        systemNanoClock13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0716() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0716");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.shouldPrep(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
  }

  @Test
  public void test0717() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0717");
    }
    io.github.onograph.backup.CommandProviderBackupImpl commandProviderBackupImpl0 = new io.github.onograph.backup.CommandProviderBackupImpl();
    org.neo4j.cli.Command.CommandType commandType1 = commandProviderBackupImpl0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = commandProviderBackupImpl0.commandType();
    int int3 = commandProviderBackupImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = commandProviderBackupImpl0.commandType();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.backup.BackupCommand backupCommand6 = commandProviderBackupImpl0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
  }

  @Test
  public void test0718() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0718");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.logging.LogProvider logProvider1 = null;
    org.neo4j.logging.Log log2 = null;
    io.github.onograph.backup.RemoteBackupService remoteBackupService3 = new io.github.onograph.backup.RemoteBackupService(
        fileSystemAbstraction0, logProvider1, log2);
    io.github.onograph.backup.BackupVerificationService backupVerificationService4 = io.github.onograph.backup.BackupVerificationService.NOO_BACKUP_VERIFICATION_SERVICE;
    org.neo4j.io.layout.DatabaseLayout databaseLayout5 = null;
    backupVerificationService4.chcsyForDa(databaseLayout5);
    org.neo4j.io.layout.DatabaseLayout databaseLayout7 = null;
    backupVerificationService4.chcsyForDa(databaseLayout7);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern22 = backupEnvironment21.getDatabaseNamePattern();
    boolean boolean23 = backupEnvironment21.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional24 = backupEnvironment21.geicmaOptional();
    io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler26 = null;
    io.github.onograph.backup.GdbStoreTransferWatcherRebImpl gdbStoreTransferWatcherRebImpl27 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer28 = null;
    io.github.onograph.backup.RemoteBackupManager remoteBackupManager29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config31 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.config(config31);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.isRp(true);
    org.neo4j.configuration.Config config35 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.config(config35);
    org.neo4j.configuration.helpers.SocketAddress socketAddress37 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory34.wihadsBackupEnvironmentFactory(
        socketAddress37);
    org.neo4j.configuration.helpers.SocketAddress socketAddress39 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory34.wihadsBackupEnvironmentFactory(
        socketAddress39);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory34.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory34.wihadsBackupEnvironmentFactory(
        0, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config48 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.config(config48);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isRp(true);
    org.neo4j.configuration.Config config52 = factory49.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction53 = null;
    org.neo4j.memory.MemoryTracker memoryTracker54 = null;
    org.neo4j.io.pagecache.PageCache pageCache55 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager56 = new io.github.onograph.backup.BackupRestorationManager(
        config52, fileSystemAbstraction53, memoryTracker54, pageCache55);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory34.config(config52);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction58 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory59.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory59.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory59.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory65.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory65.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment71 = factory65.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern72 = backupEnvironment71.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress73 = backupEnvironment71.getSocketAddress();
    java.nio.file.Path path74 = backupEnvironment71.getRpPath();
    boolean boolean75 = backupEnvironment71.getIsBftf();
    java.nio.file.Path path76 = backupEnvironment71.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker77 = backupEnvironment71.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache78 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager79 = new io.github.onograph.backup.BackupRestorationManager(
        config52, fileSystemAbstraction58, memoryTracker77, pageCache78);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction80 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory81.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory85 = factory81.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory87 = factory81.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory89 = factory87.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory92 = factory87.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment93 = factory87.bulBackupEnvironment();
    boolean boolean94 = backupEnvironment93.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional95 = backupEnvironment93.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker96 = backupEnvironment93.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache97 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager98 = new io.github.onograph.backup.BackupRestorationManager(
        config52, fileSystemAbstraction80, memoryTracker96, pageCache97);
    try {
      remoteBackupService3.bakForBaPaBaDeBaReStGd(backupVerificationService4, backupEnvironment21,
          "", defaultBackupServiceHandler26, gdbStoreTransferWatcherRebImpl27, pageCacheTracer28,
          remoteBackupManager29, backupRestorationManager98);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backupVerificationService4);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertNotNull(databaseNamePattern22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional24);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(config52);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(backupEnvironment71);
    org.junit.Assert.assertNotNull(databaseNamePattern72);
    org.junit.Assert.assertNotNull(socketAddress73);
    org.junit.Assert.assertNotNull(path74);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    org.junit.Assert.assertNotNull(path76);
    org.junit.Assert.assertNotNull(memoryTracker77);
    org.junit.Assert.assertNotNull(factory81);
    org.junit.Assert.assertNotNull(factory83);
    org.junit.Assert.assertNotNull(factory85);
    org.junit.Assert.assertNotNull(factory87);
    org.junit.Assert.assertNotNull(factory89);
    org.junit.Assert.assertNotNull(factory92);
    org.junit.Assert.assertNotNull(backupEnvironment93);
    org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional95);
    org.junit.Assert.assertNotNull(memoryTracker96);
  }

  @Test
  public void test0719() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0719");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.config(config8);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = factory9.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory2.databaseNamePattern(
        databaseNamePattern14);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isSicc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.Config config18 = factory15.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.isRp(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(config18);
    org.junit.Assert.assertNotNull(factory20);
  }

  @Test
  public void test0720() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0720");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("hi!");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup5 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup7 = backup1.isBftf(true);
    io.github.onograph.backup.Backup backup9 = backup7.isBftf(false);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
  }

  @Test
  public void test0721() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0721");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    boolean boolean20 = backupEnvironment19.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional21 = backupEnvironment19.geicmaOptional();
    java.nio.file.Path path22 = backupEnvironment19.getPbPath();
    java.nio.file.Path path23 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path22);
    java.nio.file.Path path24 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path23);
    boolean boolean25 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    boolean boolean40 = backupEnvironment39.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional41 = backupEnvironment39.geicmaOptional();
    java.nio.file.Path path42 = backupEnvironment39.getPbPath();
    java.nio.file.Path path43 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.nio.file.Path path44 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path43);
    io.github.onograph.backup.FileMoverService fileMoverService45 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path24, path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory4.prPath(path43);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions47 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.miAuthMetaOptions(
        authMetaOptions47);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory48.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory51.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory51.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory57.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment63 = factory57.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern64 = backupEnvironment63.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress65 = backupEnvironment63.getSocketAddress();
    java.nio.file.Path path66 = backupEnvironment63.getRpPath();
    boolean boolean67 = backupEnvironment63.getIsBftf();
    java.nio.file.Path path68 = backupEnvironment63.getRpPath();
    java.nio.file.Path path69 = backupEnvironment63.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker70 = backupEnvironment63.getMemoryTracker();
    java.nio.file.Path path71 = backupEnvironment63.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory48.prPath(path71);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(fileMoverService45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(backupEnvironment63);
    org.junit.Assert.assertNotNull(databaseNamePattern64);
    org.junit.Assert.assertNotNull(socketAddress65);
    org.junit.Assert.assertNotNull(path66);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    org.junit.Assert.assertNotNull(path68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(memoryTracker70);
    org.junit.Assert.assertNotNull(path71);
    org.junit.Assert.assertNotNull(factory72);
  }

  @Test
  public void test0722() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0722");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional15 = backupEnvironment12.geicmaOptional();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional17 = backupEnvironment12.geicmaOptional();
    boolean boolean18 = backupEnvironment12.getIsCc();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
  }

  @Test
  public void test0723() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0723");
    }
    io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl commandProviderGdbRestorerCommandImpl0 = new io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl();
    org.neo4j.cli.Command.CommandType commandType1 = commandProviderGdbRestorerCommandImpl0.commandType();
    int int2 = commandProviderGdbRestorerCommandImpl0.getPriority();
    int int3 = commandProviderGdbRestorerCommandImpl0.getPriority();
    int int4 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.backup.GdbRestorerCommand gdbRestorerCommand6 = commandProviderGdbRestorerCommandImpl0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
  }

  @Test
  public void test0724() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0724");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.nio.file.Path path19 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path17);
    org.neo4j.logging.LogProvider logProvider20 = null;
    org.neo4j.io.pagecache.PageCache pageCache21 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer22 = null;
    try {
      io.github.onograph.backup.BackupMetaService backupMetaService23 = new io.github.onograph.backup.BackupMetaService(
          fileSystemAbstraction0, "database.id", path17, logProvider20, pageCache21,
          pageCacheTracer22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(path19);
  }

  @Test
  public void test0725() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0725");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup3.isBftf(false);
    io.github.onograph.backup.Backup backup9 = backup7.isBftf(true);
    io.github.onograph.backup.Backup backup11 = backup9.isCc(true);
    io.github.onograph.backup.Backup backup13 = backup9.isBftf(false);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
    org.junit.Assert.assertNotNull(backup11);
    org.junit.Assert.assertNotNull(backup13);
  }

  @Test
  public void test0726() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0726");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.prPath(path5);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.miAuthMetaOptions(
        authMetaOptions7);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isSicc(
        (java.lang.Boolean) true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
  }

  @Test
  public void test0727() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0727");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.nio.file.Path path19 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path18);
    boolean boolean20 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path19);
    java.nio.file.Path path21 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path19);
    java.nio.file.Path path22 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path21);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory26.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory26.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory32.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment38 = factory32.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern39 = backupEnvironment38.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress40 = backupEnvironment38.getSocketAddress();
    java.nio.file.Path path41 = backupEnvironment38.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory23.pbPath(path41);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory46.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory46.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory52.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment58 = factory52.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern59 = backupEnvironment58.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress60 = backupEnvironment58.getSocketAddress();
    java.nio.file.Path path61 = backupEnvironment58.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory43.pbPath(path61);
    io.github.onograph.backup.FileMoverService fileMoverService63 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path41, path61);
    java.nio.file.Path path64 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path61);
    io.github.onograph.backup.FileMoverService fileMoverService65 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path21, path64);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional66 = gdbIdRepo1.reddtaiOptional(
          path64);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(backupEnvironment38);
    org.junit.Assert.assertNotNull(databaseNamePattern39);
    org.junit.Assert.assertNotNull(socketAddress40);
    org.junit.Assert.assertNotNull(path41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(backupEnvironment58);
    org.junit.Assert.assertNotNull(databaseNamePattern59);
    org.junit.Assert.assertNotNull(socketAddress60);
    org.junit.Assert.assertNotNull(path61);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(fileMoverService63);
    org.junit.Assert.assertNotNull(path64);
    org.junit.Assert.assertNotNull(fileMoverService65);
  }

  @Test
  public void test0728() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0728");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = backupEnvironment12.getSocketAddress();
    boolean boolean16 = backupEnvironment12.getIsCc();
    boolean boolean17 = backupEnvironment12.getIsBftf();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = backupEnvironment12.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional19 = backupEnvironment12.geicmaOptional();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(socketAddress15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional19);
  }

  @Test
  public void test0729() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0729");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory6.isIcc(
        (java.lang.Boolean) false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
  }

  @Test
  public void test0730() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0730");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker15 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment12.getDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(memoryTracker15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
  }

  @Test
  public void test0731() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0731");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory0.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory0.wihadsBackupEnvironmentFactory(
        10, "database.id");
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
  }

  @Test
  public void test0732() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0732");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config6 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.config(config6);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isRp(true);
    org.neo4j.configuration.Config config10 = factory7.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory0.config(config10);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction12 = null;
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction14 = null;
    java.nio.file.Path[] pathArray15 = new java.nio.file.Path[]{};
    java.util.LinkedHashSet<java.nio.file.Path> pathSet16 = new java.util.LinkedHashSet<java.nio.file.Path>();
    boolean boolean17 = java.util.Collections.addAll(
        (java.util.Collection<java.nio.file.Path>) pathSet16, pathArray15);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta18 = new io.github.onograph.backup.BackupRestoreMeta(
        config13, fileSystemAbstraction14, (java.util.Set<java.nio.file.Path>) pathSet16);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta19 = new io.github.onograph.backup.BackupRestoreMeta(
        config10, fileSystemAbstraction12, (java.util.Set<java.nio.file.Path>) pathSet16);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.logging.LogProvider logProvider22 = null;
    java.nio.file.Path path23 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory24 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl25 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config10, consistencyFlags20, fileSystemAbstraction21, logProvider22, path23,
        progressMonitorFactory24);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.logging.LogProvider logProvider28 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory29.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory29.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory35.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment41 = factory35.bulBackupEnvironment();
    boolean boolean42 = backupEnvironment41.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional43 = backupEnvironment41.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern44 = backupEnvironment41.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional45 = backupEnvironment41.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker46 = backupEnvironment41.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress47 = backupEnvironment41.getSocketAddress();
    java.nio.file.Path path48 = backupEnvironment41.getRpPath();
    java.nio.file.Path path49 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path48);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory50 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl51 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config10, consistencyFlags26, fileSystemAbstraction27, logProvider28, path49,
        progressMonitorFactory50);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction52 = null;
    org.neo4j.logging.LogProvider logProvider53 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer54 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock55 = null;
    try {
      io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler56 = io.github.onograph.backup.DefaultBackupServiceHandler.strliclDefaultBackupServiceHandler(
          config10, fileSystemAbstraction52, logProvider53, pageCacheTracer54, systemNanoClock55);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(config10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(pathArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(backupEnvironment41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional43);
    org.junit.Assert.assertNotNull(databaseNamePattern44);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional45);
    org.junit.Assert.assertNotNull(memoryTracker46);
    org.junit.Assert.assertNotNull(socketAddress47);
    org.junit.Assert.assertNotNull(path48);
    org.junit.Assert.assertNotNull(path49);
  }

  @Test
  public void test0733() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0733");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    boolean boolean22 = backupEnvironment21.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional23 = backupEnvironment21.geicmaOptional();
    java.nio.file.Path path24 = backupEnvironment21.getPbPath();
    java.nio.file.Path path25 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path25);
    boolean boolean27 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path26);
    java.nio.file.Path path28 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path26);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory29.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory29.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory35.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment41 = factory35.bulBackupEnvironment();
    boolean boolean42 = backupEnvironment41.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional43 = backupEnvironment41.geicmaOptional();
    java.nio.file.Path path44 = backupEnvironment41.getPbPath();
    java.nio.file.Path path45 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path44);
    java.nio.file.Path path46 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path45);
    io.github.onograph.backup.FileMoverService fileMoverService47 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path26, path45);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory8.prPath(path45);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    java.nio.file.Path path52 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory49.prPath(path52);
    java.nio.file.Path path54 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.prPath(path54);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory53.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory53.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory60.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory60.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory66.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory66.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment72 = factory66.bulBackupEnvironment();
    boolean boolean73 = backupEnvironment72.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional74 = backupEnvironment72.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern75 = backupEnvironment72.getDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory53.databaseNamePattern(
        databaseNamePattern75);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory8.databaseNamePattern(
        databaseNamePattern75);
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory78.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory78.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory84 = factory78.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory86 = factory84.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory89 = factory84.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment90 = factory84.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern91 = backupEnvironment90.getDatabaseNamePattern();
    boolean boolean92 = backupEnvironment90.getIsBftf();
    boolean boolean93 = backupEnvironment90.getIsBftf();
    java.nio.file.Path path94 = backupEnvironment90.getRpPath();
    java.nio.file.Path path95 = backupEnvironment90.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory96 = factory8.pbPath(path95);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(backupEnvironment41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(path45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(fileMoverService47);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(backupEnvironment72);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional74);
    org.junit.Assert.assertNotNull(databaseNamePattern75);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(factory84);
    org.junit.Assert.assertNotNull(factory86);
    org.junit.Assert.assertNotNull(factory89);
    org.junit.Assert.assertNotNull(backupEnvironment90);
    org.junit.Assert.assertNotNull(databaseNamePattern91);
    org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    org.junit.Assert.assertNotNull(path94);
    org.junit.Assert.assertNotNull(path95);
    org.junit.Assert.assertNotNull(factory96);
  }

  @Test
  public void test0734() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0734");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    org.neo4j.kernel.database.DatabaseId databaseId2 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction3 = null;
    io.github.onograph.backup.FileMover fileMover4 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction3);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction5 = null;
    io.github.onograph.backup.FileMover fileMover6 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction5);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    boolean boolean20 = backupEnvironment19.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional21 = backupEnvironment19.geicmaOptional();
    java.nio.file.Path path22 = backupEnvironment19.getPbPath();
    java.nio.file.Path path23 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path22);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream24 = fileMover6._trrfrmnStream(
        path22);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory28.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory28.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory34.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment40 = factory34.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern41 = backupEnvironment40.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress42 = backupEnvironment40.getSocketAddress();
    java.nio.file.Path path43 = backupEnvironment40.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory25.pbPath(path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory48.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory48.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory48.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory54.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment60 = factory54.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern61 = backupEnvironment60.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress62 = backupEnvironment60.getSocketAddress();
    java.nio.file.Path path63 = backupEnvironment60.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory45.pbPath(path63);
    io.github.onograph.backup.FileMoverService fileMoverService65 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path43, path63);
    java.nio.file.Path path66 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path43);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream67 = fileMover6._trrfrmnStream(
        path66);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream68 = fileMover4._trrfrmnStream(
        path66);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction69 = null;
    io.github.onograph.backup.FileMover fileMover70 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction69);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory71.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory71.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory71.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory77.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory77.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment83 = factory77.bulBackupEnvironment();
    boolean boolean84 = backupEnvironment83.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional85 = backupEnvironment83.geicmaOptional();
    java.nio.file.Path path86 = backupEnvironment83.getPbPath();
    java.nio.file.Path path87 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path86);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream88 = fileMover70._trrfrmnStream(
        path86);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream89 = fileMover4._trrfrmnStream(
        path86);
    try {
      gdbIdRepo1.wrdaiForDaPa(databaseId2, path86);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(fileMoverServiceStream24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(backupEnvironment40);
    org.junit.Assert.assertNotNull(databaseNamePattern41);
    org.junit.Assert.assertNotNull(socketAddress42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(backupEnvironment60);
    org.junit.Assert.assertNotNull(databaseNamePattern61);
    org.junit.Assert.assertNotNull(socketAddress62);
    org.junit.Assert.assertNotNull(path63);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(fileMoverService65);
    org.junit.Assert.assertNotNull(path66);
    org.junit.Assert.assertNotNull(fileMoverServiceStream67);
    org.junit.Assert.assertNotNull(fileMoverServiceStream68);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(backupEnvironment83);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional85);
    org.junit.Assert.assertNotNull(path86);
    org.junit.Assert.assertNotNull(path87);
    org.junit.Assert.assertNotNull(fileMoverServiceStream88);
    org.junit.Assert.assertNotNull(fileMoverServiceStream89);
  }

  @Test
  public void test0735() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0735");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker15 = backupEnvironment12.getMemoryTracker();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern17 = backupEnvironment12.getDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(memoryTracker15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(databaseNamePattern17);
  }

  @Test
  public void test0736() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0736");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment14.getDatabaseNamePattern();
    boolean boolean16 = backupEnvironment14.getIsBftf();
    boolean boolean17 = backupEnvironment14.getIsCc();
    java.nio.file.Path path18 = backupEnvironment14.getRpPath();
    java.lang.String[] strArray20 = new java.lang.String[]{"database.id"};
    java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
    boolean boolean22 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList21, strArray20);
    try {
      backupMetadataRepository1.wrtForPaLi(path18, (java.util.List<java.lang.String>) strList21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(strArray20);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
  }

  @Test
  public void test0737() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0737");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    boolean boolean20 = backupEnvironment19.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional21 = backupEnvironment19.geicmaOptional();
    java.nio.file.Path path22 = backupEnvironment19.getPbPath();
    java.nio.file.Path path23 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path22);
    java.nio.file.Path path24 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path23);
    boolean boolean25 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    boolean boolean40 = backupEnvironment39.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional41 = backupEnvironment39.geicmaOptional();
    java.nio.file.Path path42 = backupEnvironment39.getPbPath();
    java.nio.file.Path path43 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.nio.file.Path path44 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path43);
    io.github.onograph.backup.FileMoverService fileMoverService45 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path24, path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory4.prPath(path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory48.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(fileMoverService45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory51);
  }

  @Test
  public void test0738() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0738");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("hi!");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup5 = backup3.isBftf(true);
    io.github.onograph.backup.Backup backup7 = backup5.isCc(true);
    io.github.onograph.backup.Backup backup9 = backup7.isCc(false);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
  }

  @Test
  public void test0739() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0739");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern7 = factory6.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory6.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    java.nio.file.Path path16 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.prPath(path16);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory22.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory22.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory28.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment34 = factory28.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern35 = backupEnvironment34.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress36 = backupEnvironment34.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory21.wihadsBackupEnvironmentFactory(
        socketAddress36);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory10.wihadsBackupEnvironmentFactory(
        socketAddress36);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory6.wihadsBackupEnvironmentFactory(
        socketAddress36);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(databaseNamePattern7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(backupEnvironment34);
    org.junit.Assert.assertNotNull(databaseNamePattern35);
    org.junit.Assert.assertNotNull(socketAddress36);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory39);
  }

  @Test
  public void test0740() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0740");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    boolean boolean20 = backupEnvironment19.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional21 = backupEnvironment19.geicmaOptional();
    java.nio.file.Path path22 = backupEnvironment19.getPbPath();
    java.nio.file.Path path23 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path22);
    java.nio.file.Path path24 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path23);
    boolean boolean25 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    boolean boolean40 = backupEnvironment39.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional41 = backupEnvironment39.geicmaOptional();
    java.nio.file.Path path42 = backupEnvironment39.getPbPath();
    java.nio.file.Path path43 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.nio.file.Path path44 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path43);
    io.github.onograph.backup.FileMoverService fileMoverService45 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path24, path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory4.prPath(path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory49.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory49.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory55.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config59 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.config(config59);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isRp(true);
    org.neo4j.configuration.Config config63 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory62.config(config63);
    org.neo4j.configuration.helpers.SocketAddress socketAddress65 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory62.wihadsBackupEnvironmentFactory(
        socketAddress65);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config68 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory67.config(config68);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory69.isRp(true);
    org.neo4j.configuration.Config config72 = factory69.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory62.config(config72);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory57.config(config72);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction75 = null;
    org.neo4j.memory.MemoryTracker memoryTracker76 = null;
    org.neo4j.io.pagecache.PageCache pageCache77 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager78 = new io.github.onograph.backup.BackupRestorationManager(
        config72, fileSystemAbstraction75, memoryTracker76, pageCache77);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory48.config(config72);
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = factory48.isFtfb(true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(fileMoverService45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(config72);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(factory81);
  }

  @Test
  public void test0741() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0741");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = backupEnvironment12.getSocketAddress();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment12.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker17 = backupEnvironment12.getMemoryTracker();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(socketAddress15);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(memoryTracker17);
  }

  @Test
  public void test0742() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0742");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("hi!");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(false);
    java.io.OutputStream outputStream6 = null;
    try {
      io.github.onograph.backup.Backup backup7 = backup3.outputStream(outputStream6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: outputStream");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
  }

  @Test
  public void test0743() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0743");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.time.SystemNanoClock systemNanoClock5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.systemNanoClock(
        systemNanoClock5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.monitors(monitors7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction9);
    io.github.onograph.backup.BackupRunner backupRunner11 = generator10.bulBackupRunner();
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(backupRunner11);
  }

  @Test
  public void test0744() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0744");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory3.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory3.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory9.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment15 = factory9.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment15.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment15.getSocketAddress();
    java.nio.file.Path path18 = backupEnvironment15.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory0.pbPath(path18);
    io.github.onograph.backup.BackupEnvironment backupEnvironment20 = factory0.bulBackupEnvironment();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(backupEnvironment15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(backupEnvironment20);
  }

  @Test
  public void test0745() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0745");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup3.isBftf(false);
    io.github.onograph.backup.Backup backup9 = backup7.isBftf(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    boolean boolean24 = backupEnvironment23.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional25 = backupEnvironment23.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress26 = backupEnvironment23.getSocketAddress();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional27 = backupEnvironment23.geicmaOptional();
    java.nio.file.Path path28 = backupEnvironment23.getPbPath();
    org.neo4j.memory.MemoryTracker memoryTracker29 = backupEnvironment23.getMemoryTracker();
    java.nio.file.Path path30 = backupEnvironment23.getRpPath();
    try {
      io.github.onograph.backup.Backup.BackupRespState backupRespState31 = backup9.bakBackupBackupRespState(
          "", path30);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.RuntimeException; message: *** Error:  3b02b00a-232a-454b-823b-025cc97a58b8");
    } catch (java.lang.RuntimeException e) {
    }
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional25);
    org.junit.Assert.assertNotNull(socketAddress26);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional27);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertNotNull(memoryTracker29);
    org.junit.Assert.assertNotNull(path30);
  }

  @Test
  public void test0746() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0746");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory3.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory3.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory9.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment15 = factory9.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment15.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment15.getSocketAddress();
    java.nio.file.Path path18 = backupEnvironment15.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory0.pbPath(path18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory29.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment35 = factory29.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern36 = backupEnvironment35.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress37 = backupEnvironment35.getSocketAddress();
    java.nio.file.Path path38 = backupEnvironment35.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory20.pbPath(path38);
    io.github.onograph.backup.FileMoverService fileMoverService40 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path18, path38);
    java.nio.file.Path path41 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path38);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction42 = null;
    io.github.onograph.backup.FileMover fileMover43 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction42);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory44.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory44.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory50.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory50.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment56 = factory50.bulBackupEnvironment();
    boolean boolean57 = backupEnvironment56.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional58 = backupEnvironment56.geicmaOptional();
    java.nio.file.Path path59 = backupEnvironment56.getPbPath();
    java.nio.file.Path path60 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path59);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream61 = fileMover43._trrfrmnStream(
        path59);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory62.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory62.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory62.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory68.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory68.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment74 = factory68.bulBackupEnvironment();
    boolean boolean75 = backupEnvironment74.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional76 = backupEnvironment74.geicmaOptional();
    java.nio.file.Path path77 = backupEnvironment74.getPbPath();
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream78 = fileMover43._trrfrmnStream(
        path77);
    io.github.onograph.backup.FileMoverService fileMoverService79 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path38, path77);
    java.nio.file.Path path80 = fileMoverService79.filPath();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(backupEnvironment15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(backupEnvironment35);
    org.junit.Assert.assertNotNull(databaseNamePattern36);
    org.junit.Assert.assertNotNull(socketAddress37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(fileMoverService40);
    org.junit.Assert.assertNotNull(path41);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(backupEnvironment56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional58);
    org.junit.Assert.assertNotNull(path59);
    org.junit.Assert.assertNotNull(path60);
    org.junit.Assert.assertNotNull(fileMoverServiceStream61);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(backupEnvironment74);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional76);
    org.junit.Assert.assertNotNull(path77);
    org.junit.Assert.assertNotNull(fileMoverServiceStream78);
    org.junit.Assert.assertNotNull(fileMoverService79);
    org.junit.Assert.assertNotNull(path80);
  }

  @Test
  public void test0747() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0747");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.prPath(path5);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern7 = factory6.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory6.isRp(false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern10 = factory9.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(databaseNamePattern7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(databaseNamePattern10);
  }

  @Test
  public void test0748() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0748");
    }
    io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl commandProviderGdbRestorerCommandImpl0 = new io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl();
    org.neo4j.cli.Command.CommandType commandType1 = commandProviderGdbRestorerCommandImpl0.commandType();
    int int2 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandProviderGdbRestorerCommandImpl0.commandType();
    int int4 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType5 = commandProviderGdbRestorerCommandImpl0.commandType();
    org.neo4j.cli.ExecutionContext executionContext6 = null;
    try {
      io.github.onograph.backup.GdbRestorerCommand gdbRestorerCommand7 = commandProviderGdbRestorerCommandImpl0.createCommand(
          executionContext6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
  }

  @Test
  public void test0749() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0749");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.config(config3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern9 = factory4.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory4.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config13 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.config(config13);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isRp(true);
    org.neo4j.configuration.Config config17 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.config(config17);
    org.neo4j.configuration.helpers.SocketAddress socketAddress19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.wihadsBackupEnvironmentFactory(
        socketAddress19);
    org.neo4j.configuration.helpers.SocketAddress socketAddress21 = factory16.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment26 = factory25.bulBackupEnvironment();
    java.nio.file.Path path27 = backupEnvironment26.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory4.prPath(path27);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream29 = fileMover1._trrfrmnStream(
        path27);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory30.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory30.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory36.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment42 = factory36.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern43 = backupEnvironment42.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress44 = backupEnvironment42.getSocketAddress();
    java.nio.file.Path path45 = backupEnvironment42.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory46.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory46.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory52.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment58 = factory52.bulBackupEnvironment();
    boolean boolean59 = backupEnvironment58.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional60 = backupEnvironment58.geicmaOptional();
    java.nio.file.Path path61 = backupEnvironment58.getPbPath();
    java.nio.file.Path path62 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path61);
    java.nio.file.Path path63 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path62);
    boolean boolean64 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path63);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory65.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory65.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory65.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory71.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory71.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment77 = factory71.bulBackupEnvironment();
    boolean boolean78 = backupEnvironment77.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional79 = backupEnvironment77.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional80 = backupEnvironment77.geicmaOptional();
    java.nio.file.Path path81 = backupEnvironment77.getPbPath();
    java.nio.file.Path path82 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path81);
    io.github.onograph.backup.FileMoverService fileMoverService83 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path63, path82);
    io.github.onograph.backup.FileMoverService fileMoverService84 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path45, path63);
    java.nio.file.Path path85 = fileMoverService84.filPath();
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream86 = fileMover1._trrfrmnStream(
        path85);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(databaseNamePattern9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNull(socketAddress21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(backupEnvironment26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(fileMoverServiceStream29);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(backupEnvironment42);
    org.junit.Assert.assertNotNull(databaseNamePattern43);
    org.junit.Assert.assertNotNull(socketAddress44);
    org.junit.Assert.assertNotNull(path45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(backupEnvironment58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional60);
    org.junit.Assert.assertNotNull(path61);
    org.junit.Assert.assertNotNull(path62);
    org.junit.Assert.assertNotNull(path63);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(backupEnvironment77);
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional79);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional80);
    org.junit.Assert.assertNotNull(path81);
    org.junit.Assert.assertNotNull(path82);
    org.junit.Assert.assertNotNull(fileMoverService83);
    org.junit.Assert.assertNotNull(fileMoverService84);
    org.junit.Assert.assertNotNull(path85);
    org.junit.Assert.assertNotNull(fileMoverServiceStream86);
  }

  @Test
  public void test0750() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0750");
    }
    io.github.onograph.backup.BackupMetaDTO backupMetaDTO0 = null;
    java.lang.String[] strArray3 = new java.lang.String[]{"hi!", "database.id"};
    java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList4, strArray3);
    try {
      io.github.onograph.backup.BackupMetaService.wrtmedaForBaLi(backupMetaDTO0,
          (java.util.List<java.lang.String>) strList4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(strArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
  }

  @Test
  public void test0751() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0751");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    boolean boolean17 = backupEnvironment16.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment16.geicmaOptional();
    java.nio.file.Path path19 = backupEnvironment16.getPbPath();
    java.nio.file.Path path20 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path19);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream21 = fileMover3._trrfrmnStream(
        path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory25.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory25.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory31.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment37 = factory31.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern38 = backupEnvironment37.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress39 = backupEnvironment37.getSocketAddress();
    java.nio.file.Path path40 = backupEnvironment37.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory22.pbPath(path40);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory45.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory45.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory51.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment57 = factory51.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern58 = backupEnvironment57.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress59 = backupEnvironment57.getSocketAddress();
    java.nio.file.Path path60 = backupEnvironment57.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory42.pbPath(path60);
    io.github.onograph.backup.FileMoverService fileMoverService62 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path40, path60);
    java.nio.file.Path path63 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path40);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream64 = fileMover3._trrfrmnStream(
        path63);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream65 = fileMover1._trrfrmnStream(
        path63);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory66.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory66.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory66.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory72.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory72.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment78 = factory72.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker79 = backupEnvironment78.getMemoryTracker();
    boolean boolean80 = backupEnvironment78.getIsRp();
    java.nio.file.Path path81 = backupEnvironment78.getPbPath();
    boolean boolean82 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path81);
    boolean boolean83 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path81);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream84 = fileMover1._trrfrmnStream(
        path81);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(fileMoverServiceStream21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(backupEnvironment37);
    org.junit.Assert.assertNotNull(databaseNamePattern38);
    org.junit.Assert.assertNotNull(socketAddress39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(backupEnvironment57);
    org.junit.Assert.assertNotNull(databaseNamePattern58);
    org.junit.Assert.assertNotNull(socketAddress59);
    org.junit.Assert.assertNotNull(path60);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(fileMoverService62);
    org.junit.Assert.assertNotNull(path63);
    org.junit.Assert.assertNotNull(fileMoverServiceStream64);
    org.junit.Assert.assertNotNull(fileMoverServiceStream65);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(backupEnvironment78);
    org.junit.Assert.assertNotNull(memoryTracker79);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    org.junit.Assert.assertNotNull(path81);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    org.junit.Assert.assertNotNull(fileMoverServiceStream84);
  }

  @Test
  public void test0752() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0752");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.systemNanoClock(
        systemNanoClock9);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
  }

  @Test
  public void test0753() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0753");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = backupEnvironment12.getSocketAddress();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment12.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment12.getSocketAddress();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(socketAddress15);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(socketAddress17);
  }

  @Test
  public void test0754() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0754");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment14.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = backupEnvironment14.getSocketAddress();
    java.nio.file.Path path17 = backupEnvironment14.getRpPath();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    io.github.onograph.backup.FileMover fileMover19 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory26.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment32 = factory26.bulBackupEnvironment();
    boolean boolean33 = backupEnvironment32.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional34 = backupEnvironment32.geicmaOptional();
    java.nio.file.Path path35 = backupEnvironment32.getPbPath();
    java.nio.file.Path path36 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path35);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream37 = fileMover19._trrfrmnStream(
        path35);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory38.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory41.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory41.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory47.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment53 = factory47.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern54 = backupEnvironment53.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress55 = backupEnvironment53.getSocketAddress();
    java.nio.file.Path path56 = backupEnvironment53.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory38.pbPath(path56);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory61.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory61.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory61.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory67.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory67.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment73 = factory67.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern74 = backupEnvironment73.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress75 = backupEnvironment73.getSocketAddress();
    java.nio.file.Path path76 = backupEnvironment73.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory58.pbPath(path76);
    io.github.onograph.backup.FileMoverService fileMoverService78 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path56, path76);
    java.nio.file.Path path79 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path56);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream80 = fileMover19._trrfrmnStream(
        path79);
    io.github.onograph.backup.FileMoverService fileMoverService81 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path17, path79);
    java.nio.file.Path path82 = fileMoverService81.filPath();
    java.nio.file.Path path83 = fileMoverService81.filPath();
    java.nio.file.Path path84 = fileMoverService81.filPath();
    java.nio.file.Path path85 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path84);
    java.nio.file.Path path86 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path84);
    java.lang.String[] strArray89 = new java.lang.String[]{"database.id", "hi!"};
    java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
    boolean boolean91 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList90, strArray89);
    try {
      backupMetadataRepository1.wrtForPaLi(path86, (java.util.List<java.lang.String>) strList90);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertNotNull(socketAddress16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(backupEnvironment32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional34);
    org.junit.Assert.assertNotNull(path35);
    org.junit.Assert.assertNotNull(path36);
    org.junit.Assert.assertNotNull(fileMoverServiceStream37);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(backupEnvironment53);
    org.junit.Assert.assertNotNull(databaseNamePattern54);
    org.junit.Assert.assertNotNull(socketAddress55);
    org.junit.Assert.assertNotNull(path56);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(backupEnvironment73);
    org.junit.Assert.assertNotNull(databaseNamePattern74);
    org.junit.Assert.assertNotNull(socketAddress75);
    org.junit.Assert.assertNotNull(path76);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(fileMoverService78);
    org.junit.Assert.assertNotNull(path79);
    org.junit.Assert.assertNotNull(fileMoverServiceStream80);
    org.junit.Assert.assertNotNull(fileMoverService81);
    org.junit.Assert.assertNotNull(path82);
    org.junit.Assert.assertNotNull(path83);
    org.junit.Assert.assertNotNull(path84);
    org.junit.Assert.assertNotNull(path85);
    org.junit.Assert.assertNotNull(path86);
    org.junit.Assert.assertNotNull(strArray89);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
  }

  @Test
  public void test0755() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0755");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    java.nio.file.Path path17 = backupEnvironment12.getPbPath();
    boolean boolean18 = backupEnvironment12.getIsBftf();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
  }

  @Test
  public void test0756() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0756");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = factory4.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory13.bulBackupEnvironment();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional15 = backupEnvironment14.geicmaOptional();
    boolean boolean16 = backupEnvironment14.getIsCc();
    boolean boolean17 = backupEnvironment14.getIsBftf();
    boolean boolean18 = backupEnvironment14.getIsBftf();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNull(socketAddress9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
  }

  @Test
  public void test0757() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0757");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean14 = backupEnvironment12.getIsBftf();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory17.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory17.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory23.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment29 = factory23.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern30 = backupEnvironment29.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress31 = backupEnvironment29.getSocketAddress();
    java.nio.file.Path path32 = backupEnvironment29.getRpPath();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction33 = null;
    io.github.onograph.backup.FileMover fileMover34 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction33);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory35.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory35.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory41.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment47 = factory41.bulBackupEnvironment();
    boolean boolean48 = backupEnvironment47.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional49 = backupEnvironment47.geicmaOptional();
    java.nio.file.Path path50 = backupEnvironment47.getPbPath();
    java.nio.file.Path path51 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path50);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream52 = fileMover34._trrfrmnStream(
        path50);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory56.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory56.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory56.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory62.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory62.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment68 = factory62.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern69 = backupEnvironment68.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress70 = backupEnvironment68.getSocketAddress();
    java.nio.file.Path path71 = backupEnvironment68.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory53.pbPath(path71);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory73.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory76.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory76.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory76.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory84 = factory82.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory87 = factory82.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment88 = factory82.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern89 = backupEnvironment88.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress90 = backupEnvironment88.getSocketAddress();
    java.nio.file.Path path91 = backupEnvironment88.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory92 = factory73.pbPath(path91);
    io.github.onograph.backup.FileMoverService fileMoverService93 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path71, path91);
    java.nio.file.Path path94 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path71);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream95 = fileMover34._trrfrmnStream(
        path94);
    io.github.onograph.backup.FileMoverService fileMoverService96 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path32, path94);
    io.github.onograph.backup.FileMoverService fileMoverService97 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path16, path94);
    java.nio.file.Path path98 = fileMoverService97.filPath();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(backupEnvironment29);
    org.junit.Assert.assertNotNull(databaseNamePattern30);
    org.junit.Assert.assertNotNull(socketAddress31);
    org.junit.Assert.assertNotNull(path32);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(backupEnvironment47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional49);
    org.junit.Assert.assertNotNull(path50);
    org.junit.Assert.assertNotNull(path51);
    org.junit.Assert.assertNotNull(fileMoverServiceStream52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(backupEnvironment68);
    org.junit.Assert.assertNotNull(databaseNamePattern69);
    org.junit.Assert.assertNotNull(socketAddress70);
    org.junit.Assert.assertNotNull(path71);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(factory84);
    org.junit.Assert.assertNotNull(factory87);
    org.junit.Assert.assertNotNull(backupEnvironment88);
    org.junit.Assert.assertNotNull(databaseNamePattern89);
    org.junit.Assert.assertNotNull(socketAddress90);
    org.junit.Assert.assertNotNull(path91);
    org.junit.Assert.assertNotNull(factory92);
    org.junit.Assert.assertNotNull(fileMoverService93);
    org.junit.Assert.assertNotNull(path94);
    org.junit.Assert.assertNotNull(fileMoverServiceStream95);
    org.junit.Assert.assertNotNull(fileMoverService96);
    org.junit.Assert.assertNotNull(fileMoverService97);
    org.junit.Assert.assertNotNull(path98);
  }

  @Test
  public void test0758() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0758");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.itraLogProvider(
        logProvider11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator8.monitors(monitors13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0759() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0759");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isIcc(
        (java.lang.Boolean) true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
  }

  @Test
  public void test0760() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0760");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isRp(false);
    java.nio.file.Path path16 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.prPath(path16);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.config(config19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isFtfb(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions27 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory20.miAuthMetaOptions(
        authMetaOptions27);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory29.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory29.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory35.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment41 = factory35.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern42 = backupEnvironment41.getDatabaseNamePattern();
    boolean boolean43 = backupEnvironment41.getIsBftf();
    org.neo4j.configuration.helpers.SocketAddress socketAddress44 = backupEnvironment41.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory28.wihadsBackupEnvironmentFactory(
        socketAddress44);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory13.wihadsBackupEnvironmentFactory(
        socketAddress44);
    org.neo4j.configuration.Config config47 = factory13.gecfConfig();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(backupEnvironment41);
    org.junit.Assert.assertNotNull(databaseNamePattern42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertNotNull(socketAddress44);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(config47);
  }

  @Test
  public void test0761() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0761");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    java.nio.file.Path path7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory0.pbPath(path7);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern22 = backupEnvironment21.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress23 = backupEnvironment21.getSocketAddress();
    java.nio.file.Path path24 = backupEnvironment21.getRpPath();
    boolean boolean25 = backupEnvironment21.getIsBftf();
    java.nio.file.Path path26 = backupEnvironment21.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory8.prPath(path26);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory8.isCc(false);
    try {
      io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory8.databaseNamePattern(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: The provided database name is empty.");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertNotNull(databaseNamePattern22);
    org.junit.Assert.assertNotNull(socketAddress23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
  }

  @Test
  public void test0762() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0762");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path15 = backupEnvironment12.getRpPath();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    java.nio.file.Path path18 = backupEnvironment12.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker19 = backupEnvironment12.getMemoryTracker();
    boolean boolean20 = backupEnvironment12.getIsCc();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertNotNull(socketAddress14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(memoryTracker19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
  }

  @Test
  public void test0763() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0763");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.itraLogProvider(
        logProvider9);
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.systemNanoClock(
        systemNanoClock11);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.fFileSystemAbstraction(
        fileSystemAbstraction13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0764() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0764");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean14 = backupEnvironment12.getIsBftf();
    boolean boolean15 = backupEnvironment12.getIsCc();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment12.getDatabaseNamePattern();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker18 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern19 = backupEnvironment12.getDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(memoryTracker18);
    org.junit.Assert.assertNotNull(databaseNamePattern19);
  }

  @Test
  public void test0765() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0765");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.itraLogProvider(
        logProvider9);
    io.github.onograph.backup.BackupRunner backupRunner11 = generator10.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory12.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory12.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory18.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment24 = factory18.bulBackupEnvironment();
    boolean boolean25 = backupEnvironment24.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional26 = backupEnvironment24.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional27 = backupEnvironment24.geicmaOptional();
    java.nio.file.Path path28 = backupEnvironment24.getPbPath();
    boolean boolean29 = backupEnvironment24.getIsBftf();
    try {
      backupRunner11.excebcpForBa(backupEnvironment24);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(backupRunner11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(backupEnvironment24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional26);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional27);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
  }

  @Test
  public void test0766() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0766");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment14.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = backupEnvironment14.getSocketAddress();
    java.nio.file.Path path17 = backupEnvironment14.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory18.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory18.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory24.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment30 = factory24.bulBackupEnvironment();
    boolean boolean31 = backupEnvironment30.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional32 = backupEnvironment30.geicmaOptional();
    java.nio.file.Path path33 = backupEnvironment30.getPbPath();
    java.nio.file.Path path34 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path33);
    java.nio.file.Path path35 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path34);
    boolean boolean36 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path35);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory37.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory37.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory43.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment49 = factory43.bulBackupEnvironment();
    boolean boolean50 = backupEnvironment49.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional51 = backupEnvironment49.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional52 = backupEnvironment49.geicmaOptional();
    java.nio.file.Path path53 = backupEnvironment49.getPbPath();
    java.nio.file.Path path54 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path53);
    io.github.onograph.backup.FileMoverService fileMoverService55 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path35, path54);
    io.github.onograph.backup.FileMoverService fileMoverService56 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path17, path35);
    try {
      backupIOService1.deedForPa(path35);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertNotNull(socketAddress16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(backupEnvironment30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional32);
    org.junit.Assert.assertNotNull(path33);
    org.junit.Assert.assertNotNull(path34);
    org.junit.Assert.assertNotNull(path35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(backupEnvironment49);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional51);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional52);
    org.junit.Assert.assertNotNull(path53);
    org.junit.Assert.assertNotNull(path54);
    org.junit.Assert.assertNotNull(fileMoverService55);
    org.junit.Assert.assertNotNull(fileMoverService56);
  }

  @Test
  public void test0767() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0767");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern7 = factory2.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory2.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config11 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.config(config11);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isRp(true);
    org.neo4j.configuration.Config config15 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.config(config15);
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory14.wihadsBackupEnvironmentFactory(
        socketAddress17);
    org.neo4j.configuration.helpers.SocketAddress socketAddress19 = factory14.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory14.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment24 = factory23.bulBackupEnvironment();
    java.nio.file.Path path25 = backupEnvironment24.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory2.prPath(path25);
    org.neo4j.configuration.helpers.SocketAddress socketAddress27 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.wihadsBackupEnvironmentFactory(
        socketAddress27);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(databaseNamePattern7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNull(socketAddress19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(backupEnvironment24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
  }

  @Test
  public void test0768() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0768");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isIcc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.Config config5 = factory4.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    org.neo4j.logging.LogProvider logProvider7 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    try {
      io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler10 = io.github.onograph.backup.DefaultBackupServiceHandler.strliclDefaultBackupServiceHandler(
          config5, fileSystemAbstraction6, logProvider7, pageCacheTracer8, systemNanoClock9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
  }

  @Test
  public void test0769() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0769");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = backupEnvironment12.getSocketAddress();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional17 = backupEnvironment12.geicmaOptional();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(socketAddress16);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional17);
  }

  @Test
  public void test0770() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0770");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config23 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.config(config23);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isRp(true);
    org.neo4j.configuration.Config config27 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.config(config27);
    org.neo4j.configuration.helpers.SocketAddress socketAddress29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory26.wihadsBackupEnvironmentFactory(
        socketAddress29);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory34.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory34.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory40.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment46 = factory40.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern47 = backupEnvironment46.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress48 = backupEnvironment46.getSocketAddress();
    java.nio.file.Path path49 = backupEnvironment46.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory31.pbPath(path49);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory54.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory54.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory60.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment66 = factory60.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern67 = backupEnvironment66.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress68 = backupEnvironment66.getSocketAddress();
    java.nio.file.Path path69 = backupEnvironment66.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory51.pbPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService71 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path49, path69);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory26.pbPath(path69);
    boolean boolean73 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path69);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory19.prPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService75 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path17, path69);
    java.nio.file.Path path76 = fileMoverService75.filPath();
    java.lang.String[] strArray79 = new java.lang.String[]{"hi!", "hi!"};
    java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
    boolean boolean81 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList80, strArray79);
    try {
      backupMetadataRepository1.wrtForPaLi(path76, (java.util.List<java.lang.String>) strList80);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(backupEnvironment46);
    org.junit.Assert.assertNotNull(databaseNamePattern47);
    org.junit.Assert.assertNotNull(socketAddress48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(backupEnvironment66);
    org.junit.Assert.assertNotNull(databaseNamePattern67);
    org.junit.Assert.assertNotNull(socketAddress68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(fileMoverService71);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(fileMoverService75);
    org.junit.Assert.assertNotNull(path76);
    org.junit.Assert.assertNotNull(strArray79);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
  }

  @Test
  public void test0771() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0771");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup3.isBftf(false);
    io.github.onograph.backup.Backup backup9 = backup7.isBftf(true);
    io.github.onograph.backup.Backup backup11 = backup9.isCc(true);
    java.io.OutputStream outputStream12 = null;
    try {
      io.github.onograph.backup.Backup backup13 = backup11.outputStream(outputStream12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: outputStream");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
    org.junit.Assert.assertNotNull(backup11);
  }

  @Test
  public void test0772() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0772");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory5.isRp(false);
    java.nio.file.Path path10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.prPath(path10);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern12 = factory11.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config13 = factory11.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory4.config(config13);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.shouldPrep(true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(databaseNamePattern12);
    org.junit.Assert.assertNotNull(config13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
  }

  @Test
  public void test0773() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0773");
    }
    io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup(
        (int) (byte) 1, "");
    org.junit.Assert.assertNotNull(backup2);
  }

  @Test
  public void test0774() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0774");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.progressMonitorFactory(
        progressMonitorFactory7);
    io.github.onograph.backup.BackupRunner backupRunner9 = generator8.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment backupEnvironment10 = null;
    try {
      backupRunner9.excebcpForBa(backupEnvironment10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(backupRunner9);
  }

  @Test
  public void test0775() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0775");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path15 = backupEnvironment12.getPbPath();
    java.nio.file.Path path16 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path15);
    java.nio.file.Path path17 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path16);
    boolean boolean18 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path17);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory19.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory19.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory25.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment31 = factory25.bulBackupEnvironment();
    boolean boolean32 = backupEnvironment31.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional33 = backupEnvironment31.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional34 = backupEnvironment31.geicmaOptional();
    java.nio.file.Path path35 = backupEnvironment31.getPbPath();
    java.nio.file.Path path36 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path35);
    io.github.onograph.backup.FileMoverService fileMoverService37 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path17, path36);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory38.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory38.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory38.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory44.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment50 = factory44.bulBackupEnvironment();
    boolean boolean51 = backupEnvironment50.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional52 = backupEnvironment50.geicmaOptional();
    java.nio.file.Path path53 = backupEnvironment50.getPbPath();
    java.nio.file.Path path54 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path53);
    java.nio.file.Path path55 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path54);
    boolean boolean56 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path55);
    java.nio.file.Path path57 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path55);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory58.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory58.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory64.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory64.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment70 = factory64.bulBackupEnvironment();
    boolean boolean71 = backupEnvironment70.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional72 = backupEnvironment70.geicmaOptional();
    java.nio.file.Path path73 = backupEnvironment70.getPbPath();
    java.nio.file.Path path74 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path73);
    java.nio.file.Path path75 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path74);
    io.github.onograph.backup.FileMoverService fileMoverService76 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path55, path74);
    java.nio.file.Path path77 = fileMoverService76.filPath();
    java.nio.file.Path path78 = fileMoverService76.filPath();
    java.nio.file.CopyOption[] copyOptionArray79 = new java.nio.file.CopyOption[]{};
    try {
      fileMoverService37.movForPaCo(path78, copyOptionArray79);
      org.junit.Assert.fail(
          "Expected exception of type java.nio.file.NoSuchFileException; message: ./metadata_script.cypher/database.id");
    } catch (java.nio.file.NoSuchFileException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(backupEnvironment31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional33);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional34);
    org.junit.Assert.assertNotNull(path35);
    org.junit.Assert.assertNotNull(path36);
    org.junit.Assert.assertNotNull(fileMoverService37);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(backupEnvironment50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional52);
    org.junit.Assert.assertNotNull(path53);
    org.junit.Assert.assertNotNull(path54);
    org.junit.Assert.assertNotNull(path55);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertNotNull(path57);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(backupEnvironment70);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional72);
    org.junit.Assert.assertNotNull(path73);
    org.junit.Assert.assertNotNull(path74);
    org.junit.Assert.assertNotNull(path75);
    org.junit.Assert.assertNotNull(fileMoverService76);
    org.junit.Assert.assertNotNull(path77);
    org.junit.Assert.assertNotNull(path78);
    org.junit.Assert.assertNotNull(copyOptionArray79);
  }

  @Test
  public void test0776() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0776");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    io.github.onograph.backup.BackupRunner backupRunner7 = generator6.bulBackupRunner();
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.backup.BackupRunner.Generator generator9 = generator6.itraLogProvider(
        logProvider8);
    io.github.onograph.backup.BackupRunner backupRunner10 = generator6.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    java.nio.file.Path path14 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.prPath(path14);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment backupEnvironment18 = factory17.bulBackupEnvironment();
    boolean boolean19 = backupEnvironment18.getIsRp();
    try {
      backupRunner10.excebcpForBa(backupEnvironment18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(backupRunner7);
    org.junit.Assert.assertNotNull(generator9);
    org.junit.Assert.assertNotNull(backupRunner10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(backupEnvironment18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
  }

  @Test
  public void test0777() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0777");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.time.SystemNanoClock systemNanoClock5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.systemNanoClock(
        systemNanoClock5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.systemNanoClock(
        systemNanoClock9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.monitors(monitors11);
    io.github.onograph.backup.BackupRunner backupRunner13 = generator6.bulBackupRunner();
    io.github.onograph.backup.BackupRunner backupRunner14 = generator6.bulBackupRunner();
    io.github.onograph.backup.BackupRunner backupRunner15 = generator6.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory16.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory22.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory22.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker29 = backupEnvironment28.getMemoryTracker();
    java.nio.file.Path path30 = backupEnvironment28.getPbPath();
    boolean boolean31 = backupEnvironment28.getIsBftf();
    boolean boolean32 = backupEnvironment28.getIsCc();
    org.neo4j.configuration.helpers.SocketAddress socketAddress33 = backupEnvironment28.getSocketAddress();
    try {
      backupRunner15.excebcpForBa(backupEnvironment28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(backupRunner13);
    org.junit.Assert.assertNotNull(backupRunner14);
    org.junit.Assert.assertNotNull(backupRunner15);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
    org.junit.Assert.assertNotNull(memoryTracker29);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertNotNull(socketAddress33);
  }

  @Test
  public void test0778() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0778");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isIcc(
        (java.lang.Boolean) false);
    try {
      io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.databaseNamePattern(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: The provided database name is empty.");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
  }

  @Test
  public void test0779() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0779");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment12.getSocketAddress();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = backupEnvironment12.getDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
  }

  @Test
  public void test0780() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0780");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory2.wihadsBackupEnvironmentFactory(
        (-1), "hi!");
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory5);
  }

  @Test
  public void test0781() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0781");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment backupEnvironment7 = factory6.bulBackupEnvironment();
    boolean boolean8 = backupEnvironment7.getIsCc();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(backupEnvironment7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
  }

  @Test
  public void test0782() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0782");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.prPath(path5);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern7 = factory6.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory6.isRp(false);
    java.nio.file.Path path10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.pbPath(path10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isRp(false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = factory11.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory11.wihadsBackupEnvironmentFactory(
        socketAddress15);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(databaseNamePattern7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertNotNull(factory16);
  }

  @Test
  public void test0783() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0783");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory6.wihadsBackupEnvironmentFactory(
        (int) ' ', "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory6.shouldPrep(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory6.shouldPrep(true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
  }

  @Test
  public void test0784() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0784");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.io.PrintStream printStream3 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction4 = null;
    io.github.onograph.backup.FileMover fileMover5 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction4);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory6.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory12.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment18 = factory12.bulBackupEnvironment();
    boolean boolean19 = backupEnvironment18.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional20 = backupEnvironment18.geicmaOptional();
    java.nio.file.Path path21 = backupEnvironment18.getPbPath();
    java.nio.file.Path path22 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path21);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream23 = fileMover5._trrfrmnStream(
        path21);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory24.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory24.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory30.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment36 = factory30.bulBackupEnvironment();
    boolean boolean37 = backupEnvironment36.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional38 = backupEnvironment36.geicmaOptional();
    java.nio.file.Path path39 = backupEnvironment36.getPbPath();
    java.nio.file.Path path40 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path39);
    java.nio.file.Path path41 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path40);
    io.github.onograph.backup.FileMoverService fileMoverService42 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path21, path40);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory43.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory43.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory49.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment55 = factory49.bulBackupEnvironment();
    boolean boolean56 = backupEnvironment55.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional57 = backupEnvironment55.geicmaOptional();
    java.nio.file.Path path58 = backupEnvironment55.getPbPath();
    java.nio.file.Path path59 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path58);
    java.nio.file.Path path60 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path59);
    boolean boolean61 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path60);
    java.nio.file.Path path62 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path60);
    java.nio.file.Path path63 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path62);
    org.neo4j.io.layout.DatabaseLayout databaseLayout64 = null;
    try {
      io.github.onograph.backup.GdbRestorer gdbRestorer65 = new io.github.onograph.backup.GdbRestorer(
          fileSystemAbstraction0, true, false, printStream3, path21, path62, databaseLayout64);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(backupEnvironment18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(fileMoverServiceStream23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(backupEnvironment36);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(path41);
    org.junit.Assert.assertNotNull(fileMoverService42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(backupEnvironment55);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional57);
    org.junit.Assert.assertNotNull(path58);
    org.junit.Assert.assertNotNull(path59);
    org.junit.Assert.assertNotNull(path60);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertNotNull(path62);
    org.junit.Assert.assertNotNull(path63);
  }

  @Test
  public void test0785() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0785");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern20 = backupEnvironment19.getDatabaseNamePattern();
    boolean boolean21 = backupEnvironment19.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional22 = backupEnvironment19.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern23 = backupEnvironment19.getDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory4.databaseNamePattern(
        databaseNamePattern23);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertNotNull(databaseNamePattern20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional22);
    org.junit.Assert.assertNotNull(databaseNamePattern23);
    org.junit.Assert.assertNotNull(factory24);
  }

  @Test
  public void test0786() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0786");
    }
    io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl commandProviderGdbRestorerCommandImpl0 = new io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl();
    int int1 = commandProviderGdbRestorerCommandImpl0.getPriority();
    int int2 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandProviderGdbRestorerCommandImpl0.commandType();
    int int4 = commandProviderGdbRestorerCommandImpl0.getPriority();
    int int5 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
  }

  @Test
  public void test0787() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0787");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path15 = backupEnvironment12.getRpPath();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    java.nio.file.Path path18 = backupEnvironment12.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker19 = backupEnvironment12.getMemoryTracker();
    java.nio.file.Path path20 = backupEnvironment12.getPbPath();
    java.nio.file.Path path21 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path20);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory22.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory22.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory28.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment34 = factory28.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern35 = backupEnvironment34.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress36 = backupEnvironment34.getSocketAddress();
    java.nio.file.Path path37 = backupEnvironment34.getRpPath();
    java.nio.file.Path path38 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path37);
    java.nio.file.Path path39 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path37);
    io.github.onograph.backup.FileMoverService fileMoverService40 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path21, path37);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory41.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory41.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory47.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment53 = factory47.bulBackupEnvironment();
    boolean boolean54 = backupEnvironment53.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional55 = backupEnvironment53.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress56 = backupEnvironment53.getSocketAddress();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional57 = backupEnvironment53.geicmaOptional();
    java.nio.file.Path path58 = backupEnvironment53.getPbPath();
    java.nio.file.CopyOption copyOption59 = null;
    java.nio.file.CopyOption[] copyOptionArray60 = new java.nio.file.CopyOption[]{copyOption59};
    try {
      fileMoverService40.movForPaCo(path58, copyOptionArray60);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertNotNull(socketAddress14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(memoryTracker19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(backupEnvironment34);
    org.junit.Assert.assertNotNull(databaseNamePattern35);
    org.junit.Assert.assertNotNull(socketAddress36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertNotNull(fileMoverService40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(backupEnvironment53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional55);
    org.junit.Assert.assertNotNull(socketAddress56);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional57);
    org.junit.Assert.assertNotNull(path58);
    org.junit.Assert.assertNotNull(copyOptionArray60);
  }

  @Test
  public void test0788() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0788");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.itraLogProvider(
        logProvider9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.itraLogProvider(
        logProvider13);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator12.progressMonitorFactory(
        progressMonitorFactory15);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator16.progressMonitorFactory(
        progressMonitorFactory17);
    org.neo4j.time.SystemNanoClock systemNanoClock19 = null;
    io.github.onograph.backup.BackupRunner.Generator generator20 = generator16.systemNanoClock(
        systemNanoClock19);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
    org.junit.Assert.assertNotNull(generator20);
  }

  @Test
  public void test0789() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0789");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment12.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment12.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker17 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress18 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path19 = backupEnvironment12.getRpPath();
    java.nio.file.Path path20 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory21.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory21.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory27.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment33 = factory27.bulBackupEnvironment();
    boolean boolean34 = backupEnvironment33.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional35 = backupEnvironment33.geicmaOptional();
    java.nio.file.Path path36 = backupEnvironment33.getPbPath();
    java.nio.file.Path path37 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path36);
    java.nio.file.Path path38 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path37);
    boolean boolean39 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path38);
    java.nio.file.Path path40 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path38);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory41.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory41.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory47.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment53 = factory47.bulBackupEnvironment();
    boolean boolean54 = backupEnvironment53.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional55 = backupEnvironment53.geicmaOptional();
    java.nio.file.Path path56 = backupEnvironment53.getPbPath();
    java.nio.file.Path path57 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path56);
    java.nio.file.Path path58 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path57);
    io.github.onograph.backup.FileMoverService fileMoverService59 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path38, path57);
    io.github.onograph.backup.FileMoverService fileMoverService60 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path19, path57);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(memoryTracker17);
    org.junit.Assert.assertNotNull(socketAddress18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(backupEnvironment33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional35);
    org.junit.Assert.assertNotNull(path36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(backupEnvironment53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional55);
    org.junit.Assert.assertNotNull(path56);
    org.junit.Assert.assertNotNull(path57);
    org.junit.Assert.assertNotNull(path58);
    org.junit.Assert.assertNotNull(fileMoverService59);
    org.junit.Assert.assertNotNull(fileMoverService60);
  }

  @Test
  public void test0790() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0790");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.miAuthMetaOptions(
        authMetaOptions9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        (int) (short) 0, "");
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction14 = null;
    io.github.onograph.backup.FileMover fileMover15 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction14);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory16.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory22.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory22.bulBackupEnvironment();
    boolean boolean29 = backupEnvironment28.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional30 = backupEnvironment28.geicmaOptional();
    java.nio.file.Path path31 = backupEnvironment28.getPbPath();
    java.nio.file.Path path32 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path31);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream33 = fileMover15._trrfrmnStream(
        path31);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory34.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory34.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory40.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment46 = factory40.bulBackupEnvironment();
    boolean boolean47 = backupEnvironment46.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional48 = backupEnvironment46.geicmaOptional();
    java.nio.file.Path path49 = backupEnvironment46.getPbPath();
    java.nio.file.Path path50 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path49);
    java.nio.file.Path path51 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path50);
    boolean boolean52 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path51);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory53.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory53.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory59.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory59.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment65 = factory59.bulBackupEnvironment();
    boolean boolean66 = backupEnvironment65.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional67 = backupEnvironment65.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional68 = backupEnvironment65.geicmaOptional();
    java.nio.file.Path path69 = backupEnvironment65.getPbPath();
    java.nio.file.Path path70 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService71 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path51, path70);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream72 = fileMover15._trrfrmnStream(
        path51);
    java.nio.file.Path path73 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path51);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory13.pbPath(path73);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional30);
    org.junit.Assert.assertNotNull(path31);
    org.junit.Assert.assertNotNull(path32);
    org.junit.Assert.assertNotNull(fileMoverServiceStream33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(backupEnvironment46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(path50);
    org.junit.Assert.assertNotNull(path51);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(backupEnvironment65);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional67);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(path70);
    org.junit.Assert.assertNotNull(fileMoverService71);
    org.junit.Assert.assertNotNull(fileMoverServiceStream72);
    org.junit.Assert.assertNotNull(path73);
    org.junit.Assert.assertNotNull(factory74);
  }

  @Test
  public void test0791() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0791");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory6.shouldPrep(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
  }

  @Test
  public void test0792() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0792");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config15 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.config(config15);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isRp(true);
    org.neo4j.configuration.Config config19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.config(config19);
    org.neo4j.configuration.helpers.SocketAddress socketAddress21 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory18.wihadsBackupEnvironmentFactory(
        socketAddress21);
    org.neo4j.configuration.helpers.SocketAddress socketAddress23 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory18.wihadsBackupEnvironmentFactory(
        socketAddress23);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory18.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isIcc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.Config config33 = factory32.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory18.config(config33);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory13.config(config33);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isFtfb(true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(config33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
  }

  @Test
  public void test0793() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0793");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
  }

  @Test
  public void test0794() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0794");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path15 = backupEnvironment12.getPbPath();
    java.nio.file.Path path16 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path15);
    java.nio.file.Path path17 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path16);
    boolean boolean18 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path17);
    java.nio.file.Path path19 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path17);
    java.nio.file.Path path20 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config22 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.config(config22);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isRp(true);
    org.neo4j.configuration.Config config26 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.config(config26);
    org.neo4j.configuration.helpers.SocketAddress socketAddress28 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory25.wihadsBackupEnvironmentFactory(
        socketAddress28);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory33.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory33.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory39.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory39.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment45 = factory39.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern46 = backupEnvironment45.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress47 = backupEnvironment45.getSocketAddress();
    java.nio.file.Path path48 = backupEnvironment45.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory30.pbPath(path48);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory50.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory53.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory53.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory59.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory59.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment65 = factory59.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern66 = backupEnvironment65.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress67 = backupEnvironment65.getSocketAddress();
    java.nio.file.Path path68 = backupEnvironment65.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory50.pbPath(path68);
    io.github.onograph.backup.FileMoverService fileMoverService70 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path48, path68);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory25.pbPath(path68);
    io.github.onograph.backup.FileMoverService fileMoverService72 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path20, path68);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(backupEnvironment45);
    org.junit.Assert.assertNotNull(databaseNamePattern46);
    org.junit.Assert.assertNotNull(socketAddress47);
    org.junit.Assert.assertNotNull(path48);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(backupEnvironment65);
    org.junit.Assert.assertNotNull(databaseNamePattern66);
    org.junit.Assert.assertNotNull(socketAddress67);
    org.junit.Assert.assertNotNull(path68);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(fileMoverService70);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(fileMoverService72);
  }

  @Test
  public void test0795() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0795");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.systemNanoClock(
        systemNanoClock7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.monitors(monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator8.monitors(monitors13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator14.monitors(monitors15);
    org.neo4j.time.SystemNanoClock systemNanoClock17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator16.systemNanoClock(
        systemNanoClock17);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
  }

  @Test
  public void test0796() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0796");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.io.PrintStream printStream3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    boolean boolean17 = backupEnvironment16.getIsBftf();
    org.neo4j.memory.MemoryTracker memoryTracker18 = backupEnvironment16.getMemoryTracker();
    java.nio.file.Path path19 = backupEnvironment16.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory26.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment32 = factory26.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern33 = backupEnvironment32.getDatabaseNamePattern();
    boolean boolean34 = backupEnvironment32.getIsBftf();
    boolean boolean35 = backupEnvironment32.getIsBftf();
    java.nio.file.Path path36 = backupEnvironment32.getRpPath();
    java.nio.file.Path path37 = backupEnvironment32.getRpPath();
    java.nio.file.Path path38 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path37);
    org.neo4j.io.layout.DatabaseLayout databaseLayout39 = null;
    try {
      io.github.onograph.backup.GdbRestorer gdbRestorer40 = new io.github.onograph.backup.GdbRestorer(
          fileSystemAbstraction0, true, true, printStream3, path19, path37, databaseLayout39);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(memoryTracker18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(backupEnvironment32);
    org.junit.Assert.assertNotNull(databaseNamePattern33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(path36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(path38);
  }

  @Test
  public void test0797() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0797");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment14.getDatabaseNamePattern();
    boolean boolean16 = backupEnvironment14.getIsBftf();
    boolean boolean17 = backupEnvironment14.getIsBftf();
    java.nio.file.Path path18 = backupEnvironment14.getRpPath();
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional19 = gdbIdRepo1.reddtaiOptional(
          path18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(path18);
  }

  @Test
  public void test0798() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0798");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.config(config3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    org.neo4j.configuration.Config config7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.config(config7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.wihadsBackupEnvironmentFactory(
        socketAddress9);
    org.neo4j.configuration.helpers.SocketAddress socketAddress11 = factory6.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory15.bulBackupEnvironment();
    java.nio.file.Path path17 = backupEnvironment16.getPbPath();
    try {
      boolean boolean18 = backupIOService1.isExsForPa(path17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNull(socketAddress11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertNotNull(path17);
  }

  @Test
  public void test0799() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0799");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker15 = backupEnvironment14.getMemoryTracker();
    boolean boolean16 = backupEnvironment14.getIsRp();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream19 = fileMover1._trrfrmnStream(
        path18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory26.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment32 = factory26.bulBackupEnvironment();
    boolean boolean33 = backupEnvironment32.getIsRp();
    boolean boolean34 = backupEnvironment32.getIsCc();
    boolean boolean35 = backupEnvironment32.getIsBftf();
    boolean boolean36 = backupEnvironment32.getIsCc();
    java.nio.file.Path path37 = backupEnvironment32.getRpPath();
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream38 = fileMover1._trrfrmnStream(
        path37);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(memoryTracker15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(fileMoverServiceStream19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(backupEnvironment32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(fileMoverServiceStream38);
  }

  @Test
  public void test0800() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0800");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory4.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory4.wihadsBackupEnvironmentFactory(
        0, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.config(config18);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isRp(true);
    org.neo4j.configuration.Config config22 = factory19.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.memory.MemoryTracker memoryTracker24 = null;
    org.neo4j.io.pagecache.PageCache pageCache25 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager26 = new io.github.onograph.backup.BackupRestorationManager(
        config22, fileSystemAbstraction23, memoryTracker24, pageCache25);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory4.config(config22);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction28 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory29.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory29.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory35.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment41 = factory35.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern42 = backupEnvironment41.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress43 = backupEnvironment41.getSocketAddress();
    java.nio.file.Path path44 = backupEnvironment41.getRpPath();
    boolean boolean45 = backupEnvironment41.getIsBftf();
    java.nio.file.Path path46 = backupEnvironment41.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker47 = backupEnvironment41.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache48 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager49 = new io.github.onograph.backup.BackupRestorationManager(
        config22, fileSystemAbstraction28, memoryTracker47, pageCache48);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction50 = null;
    org.neo4j.logging.LogProvider logProvider51 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer52 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock53 = null;
    try {
      io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler54 = io.github.onograph.backup.DefaultBackupServiceHandler.strliclDefaultBackupServiceHandler(
          config22, fileSystemAbstraction50, logProvider51, pageCacheTracer52, systemNanoClock53);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(config22);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(backupEnvironment41);
    org.junit.Assert.assertNotNull(databaseNamePattern42);
    org.junit.Assert.assertNotNull(socketAddress43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(memoryTracker47);
  }

  @Test
  public void test0801() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0801");
    }
    java.nio.file.Path path0 = null;
    java.nio.file.Path path1 = null;
    io.github.onograph.backup.FileMoverService fileMoverService2 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path0, path1);
    java.nio.file.Path path3 = fileMoverService2.filPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    boolean boolean17 = backupEnvironment16.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment16.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern19 = backupEnvironment16.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional20 = backupEnvironment16.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker21 = backupEnvironment16.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress22 = backupEnvironment16.getSocketAddress();
    java.nio.file.Path path23 = backupEnvironment16.getRpPath();
    java.nio.file.Path path24 = backupEnvironment16.getRpPath();
    java.nio.file.CopyOption[] copyOptionArray25 = new java.nio.file.CopyOption[]{};
    try {
      fileMoverService2.movForPaCo(path24, copyOptionArray25);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(fileMoverService2);
    org.junit.Assert.assertNull(path3);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
    org.junit.Assert.assertNotNull(databaseNamePattern19);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional20);
    org.junit.Assert.assertNotNull(memoryTracker21);
    org.junit.Assert.assertNotNull(socketAddress22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertNotNull(copyOptionArray25);
  }

  @Test
  public void test0802() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0802");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.systemNanoClock(
        systemNanoClock7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.itraLogProvider(
        logProvider9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.monitors(monitors11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.uLogProvider(
        logProvider13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator14.itraLogProvider(
        logProvider15);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator14.fFileSystemAbstraction(
        fileSystemAbstraction17);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory19 = null;
    io.github.onograph.backup.BackupRunner.Generator generator20 = generator18.progressMonitorFactory(
        progressMonitorFactory19);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
    org.junit.Assert.assertNotNull(generator20);
  }

  @Test
  public void test0803() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0803");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.miAuthMetaOptions(
        authMetaOptions12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isIcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = factory15.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory4.databaseNamePattern(
        databaseNamePattern18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory26.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory32.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory32.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory38.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory38.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment44 = factory38.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern45 = backupEnvironment44.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress46 = backupEnvironment44.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory31.wihadsBackupEnvironmentFactory(
        socketAddress46);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress46);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(backupEnvironment44);
    org.junit.Assert.assertNotNull(databaseNamePattern45);
    org.junit.Assert.assertNotNull(socketAddress46);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory48);
  }

  @Test
  public void test0804() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0804");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isCc(true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern11 = factory10.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory10.shouldPrep(true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(databaseNamePattern11);
    org.junit.Assert.assertNotNull(factory13);
  }

  @Test
  public void test0805() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0805");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isRp(true);
    org.neo4j.configuration.Config config14 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.config(config14);
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.wihadsBackupEnvironmentFactory(
        socketAddress16);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.config(config19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isRp(true);
    org.neo4j.configuration.Config config23 = factory20.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory13.config(config23);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory8.config(config23);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.logging.LogProvider logProvider28 = null;
    java.nio.file.Path path29 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory30 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl31 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config23, consistencyFlags26, fileSystemAbstraction27, logProvider28, path29,
        progressMonitorFactory30);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags32 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction33 = null;
    org.neo4j.logging.LogProvider logProvider34 = null;
    java.nio.file.Path path35 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory36 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl37 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config23, consistencyFlags32, fileSystemAbstraction33, logProvider34, path35,
        progressMonitorFactory36);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction38 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory39.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory39.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory39.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory45.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment51 = factory45.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern52 = backupEnvironment51.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress53 = backupEnvironment51.getSocketAddress();
    java.nio.file.Path path54 = backupEnvironment51.getRpPath();
    boolean boolean55 = backupEnvironment51.getIsBftf();
    java.nio.file.Path path56 = backupEnvironment51.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker57 = backupEnvironment51.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache58 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager59 = new io.github.onograph.backup.BackupRestorationManager(
        config23, fileSystemAbstraction38, memoryTracker57, pageCache58);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction60 = null;
    io.github.onograph.cluster.raft.module.cuprot.LifecycleCatchupManagerImpl lifecycleCatchupManagerImpl61 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler62 = null;
    org.neo4j.logging.LogProvider logProvider63 = null;
    org.neo4j.monitoring.Monitors monitors64 = null;
    org.neo4j.io.pagecache.PageCache pageCache65 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer66 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock67 = null;
    try {
      io.github.onograph.backup.RemoteBackupManager remoteBackupManager68 = new io.github.onograph.backup.RemoteBackupManager(
          config23, fileSystemAbstraction60, lifecycleCatchupManagerImpl61, jobScheduler62,
          logProvider63, monitors64, pageCache65, pageCacheTracer66, systemNanoClock67);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(config23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(backupEnvironment51);
    org.junit.Assert.assertNotNull(databaseNamePattern52);
    org.junit.Assert.assertNotNull(socketAddress53);
    org.junit.Assert.assertNotNull(path54);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertNotNull(path56);
    org.junit.Assert.assertNotNull(memoryTracker57);
  }

  @Test
  public void test0806() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0806");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean14 = backupEnvironment12.getIsRp();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment12.getDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
  }

  @Test
  public void test0807() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0807");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config6 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.config(config6);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isRp(true);
    org.neo4j.configuration.Config config10 = factory7.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory0.config(config10);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction12 = null;
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction14 = null;
    java.nio.file.Path[] pathArray15 = new java.nio.file.Path[]{};
    java.util.LinkedHashSet<java.nio.file.Path> pathSet16 = new java.util.LinkedHashSet<java.nio.file.Path>();
    boolean boolean17 = java.util.Collections.addAll(
        (java.util.Collection<java.nio.file.Path>) pathSet16, pathArray15);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta18 = new io.github.onograph.backup.BackupRestoreMeta(
        config13, fileSystemAbstraction14, (java.util.Set<java.nio.file.Path>) pathSet16);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta19 = new io.github.onograph.backup.BackupRestoreMeta(
        config10, fileSystemAbstraction12, (java.util.Set<java.nio.file.Path>) pathSet16);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.logging.LogProvider logProvider22 = null;
    java.nio.file.Path path23 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory24 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl25 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config10, consistencyFlags20, fileSystemAbstraction21, logProvider22, path23,
        progressMonitorFactory24);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.logging.LogProvider logProvider28 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory29.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory29.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory35.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment41 = factory35.bulBackupEnvironment();
    boolean boolean42 = backupEnvironment41.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional43 = backupEnvironment41.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern44 = backupEnvironment41.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional45 = backupEnvironment41.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker46 = backupEnvironment41.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress47 = backupEnvironment41.getSocketAddress();
    java.nio.file.Path path48 = backupEnvironment41.getRpPath();
    java.nio.file.Path path49 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path48);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory50 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl51 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config10, consistencyFlags26, fileSystemAbstraction27, logProvider28, path49,
        progressMonitorFactory50);
    org.neo4j.io.layout.DatabaseLayout databaseLayout52 = null;
    try {
      backupVerificationServiceImpl51.chcsyForDa(databaseLayout52);
      org.junit.Assert.fail(
          "Expected exception of type io.github.onograph.backup.BackupVerificationErrorException; message: *** Error:  2915f124-983c-439d-b1ae-a9c5ad06642b");
    } catch (io.github.onograph.backup.BackupVerificationErrorException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(config10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(pathArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(backupEnvironment41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional43);
    org.junit.Assert.assertNotNull(databaseNamePattern44);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional45);
    org.junit.Assert.assertNotNull(memoryTracker46);
    org.junit.Assert.assertNotNull(socketAddress47);
    org.junit.Assert.assertNotNull(path48);
    org.junit.Assert.assertNotNull(path49);
  }

  @Test
  public void test0808() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0808");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    java.nio.file.Path path7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory0.pbPath(path7);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern22 = backupEnvironment21.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress23 = backupEnvironment21.getSocketAddress();
    java.nio.file.Path path24 = backupEnvironment21.getRpPath();
    boolean boolean25 = backupEnvironment21.getIsBftf();
    java.nio.file.Path path26 = backupEnvironment21.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory8.prPath(path26);
    try {
      io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory8.databaseNamePattern(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: Database name 'hi!' contains illegal characters. Use simple ascii characters, numbers, dots, question marks, asterisk and dashes.");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertNotNull(databaseNamePattern22);
    org.junit.Assert.assertNotNull(socketAddress23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
  }

  @Test
  public void test0809() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0809");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern7 = factory6.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory6.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory10.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory10.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory16.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment22 = factory16.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern23 = backupEnvironment22.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress24 = backupEnvironment22.getSocketAddress();
    java.nio.file.Path path25 = backupEnvironment22.getRpPath();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction26 = null;
    io.github.onograph.backup.FileMover fileMover27 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction26);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory28.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory28.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory34.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment40 = factory34.bulBackupEnvironment();
    boolean boolean41 = backupEnvironment40.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional42 = backupEnvironment40.geicmaOptional();
    java.nio.file.Path path43 = backupEnvironment40.getPbPath();
    java.nio.file.Path path44 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path43);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream45 = fileMover27._trrfrmnStream(
        path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory49.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory49.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory55.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory55.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment61 = factory55.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern62 = backupEnvironment61.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress63 = backupEnvironment61.getSocketAddress();
    java.nio.file.Path path64 = backupEnvironment61.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory46.pbPath(path64);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory66.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory69.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory69.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory69.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory75.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory75.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment81 = factory75.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern82 = backupEnvironment81.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress83 = backupEnvironment81.getSocketAddress();
    java.nio.file.Path path84 = backupEnvironment81.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory85 = factory66.pbPath(path84);
    io.github.onograph.backup.FileMoverService fileMoverService86 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path64, path84);
    java.nio.file.Path path87 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path64);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream88 = fileMover27._trrfrmnStream(
        path87);
    io.github.onograph.backup.FileMoverService fileMoverService89 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path25, path87);
    io.github.onograph.backup.BackupEnvironment.Factory factory90 = factory9.prPath(path25);
    io.github.onograph.backup.BackupEnvironment.Factory factory92 = factory90.isSicc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern93 = factory90.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(databaseNamePattern7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(backupEnvironment22);
    org.junit.Assert.assertNotNull(databaseNamePattern23);
    org.junit.Assert.assertNotNull(socketAddress24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(backupEnvironment40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(fileMoverServiceStream45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(backupEnvironment61);
    org.junit.Assert.assertNotNull(databaseNamePattern62);
    org.junit.Assert.assertNotNull(socketAddress63);
    org.junit.Assert.assertNotNull(path64);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(backupEnvironment81);
    org.junit.Assert.assertNotNull(databaseNamePattern82);
    org.junit.Assert.assertNotNull(socketAddress83);
    org.junit.Assert.assertNotNull(path84);
    org.junit.Assert.assertNotNull(factory85);
    org.junit.Assert.assertNotNull(fileMoverService86);
    org.junit.Assert.assertNotNull(path87);
    org.junit.Assert.assertNotNull(fileMoverServiceStream88);
    org.junit.Assert.assertNotNull(fileMoverService89);
    org.junit.Assert.assertNotNull(factory90);
    org.junit.Assert.assertNotNull(factory92);
    org.junit.Assert.assertNotNull(databaseNamePattern93);
  }

  @Test
  public void test0810() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0810");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    int int1 = setupForBackupRestorationCommandProvider0.getPriority();
    int int2 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = setupForBackupRestorationCommandProvider0.commandType();
    int int4 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType5 = setupForBackupRestorationCommandProvider0.commandType();
    int int6 = setupForBackupRestorationCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test0811() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0811");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
  }

  @Test
  public void test0812() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0812");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.config(config8);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = factory9.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory2.databaseNamePattern(
        databaseNamePattern14);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isSicc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.Config config18 = factory15.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config21 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.config(config21);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isRp(true);
    org.neo4j.configuration.Config config25 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.config(config25);
    org.neo4j.configuration.helpers.SocketAddress socketAddress27 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory24.wihadsBackupEnvironmentFactory(
        socketAddress27);
    org.neo4j.configuration.helpers.SocketAddress socketAddress29 = factory24.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory24.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment34 = factory33.bulBackupEnvironment();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional35 = backupEnvironment34.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker36 = backupEnvironment34.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache37 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager38 = new io.github.onograph.backup.BackupRestorationManager(
        config18, fileSystemAbstraction19, memoryTracker36, pageCache37);
    org.neo4j.io.layout.DatabaseLayout databaseLayout39 = null;
    try {
      backupRestorationManager38.reorForDa(databaseLayout39);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(config18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNull(socketAddress29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(backupEnvironment34);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional35);
    org.junit.Assert.assertNotNull(memoryTracker36);
  }

  @Test
  public void test0813() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0813");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator4.progressMonitorFactory(
        progressMonitorFactory5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator4.monitors(monitors7);
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator4.systemNanoClock(
        systemNanoClock9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.uLogProvider(
        logProvider11);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
  }

  @Test
  public void test0814() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0814");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    boolean boolean20 = backupEnvironment19.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional21 = backupEnvironment19.geicmaOptional();
    java.nio.file.Path path22 = backupEnvironment19.getPbPath();
    java.nio.file.Path path23 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path22);
    java.nio.file.Path path24 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path23);
    boolean boolean25 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    boolean boolean40 = backupEnvironment39.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional41 = backupEnvironment39.geicmaOptional();
    java.nio.file.Path path42 = backupEnvironment39.getPbPath();
    java.nio.file.Path path43 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.nio.file.Path path44 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path43);
    io.github.onograph.backup.FileMoverService fileMoverService45 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path24, path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory4.prPath(path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    java.nio.file.Path path50 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory47.prPath(path50);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config55 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.config(config55);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory56.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory56.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern61 = factory56.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory53.databaseNamePattern(
        databaseNamePattern61);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory46.databaseNamePattern(
        databaseNamePattern61);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory46.isFtfb(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(fileMoverService45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(databaseNamePattern61);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
  }

  @Test
  public void test0815() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0815");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.miAuthMetaOptions(
        authMetaOptions9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        (int) (short) 0, "");
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.isGcc(
        (java.lang.Boolean) true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
  }

  @Test
  public void test0816() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0816");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.logging.LogProvider logProvider1 = null;
    org.neo4j.logging.Log log2 = null;
    io.github.onograph.backup.RemoteBackupService remoteBackupService3 = new io.github.onograph.backup.RemoteBackupService(
        fileSystemAbstraction0, logProvider1, log2);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config14 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.config(config14);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isRp(true);
    org.neo4j.configuration.Config config18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.config(config18);
    org.neo4j.configuration.helpers.SocketAddress socketAddress20 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory17.wihadsBackupEnvironmentFactory(
        socketAddress20);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config23 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.config(config23);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isRp(true);
    org.neo4j.configuration.Config config27 = factory24.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory17.config(config27);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory12.config(config27);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags30 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction31 = null;
    org.neo4j.logging.LogProvider logProvider32 = null;
    java.nio.file.Path path33 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory34 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl35 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config27, consistencyFlags30, fileSystemAbstraction31, logProvider32, path33,
        progressMonitorFactory34);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    java.nio.file.Path path39 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory36.prPath(path39);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory36.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment backupEnvironment43 = factory42.bulBackupEnvironment();
    boolean boolean44 = backupEnvironment43.getIsRp();
    io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler46 = null;
    io.github.onograph.backup.GdbStoreTransferWatcherRebImpl gdbStoreTransferWatcherRebImpl47 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer48 = null;
    io.github.onograph.backup.RemoteBackupManager remoteBackupManager49 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config51 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory50.config(config51);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory52.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config58 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.config(config58);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory59.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory59.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern64 = factory59.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory52.databaseNamePattern(
        databaseNamePattern64);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory65.isSicc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.Config config68 = factory65.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction69 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config71 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory70.config(config71);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory72.isRp(true);
    org.neo4j.configuration.Config config75 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory74.config(config75);
    org.neo4j.configuration.helpers.SocketAddress socketAddress77 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory74.wihadsBackupEnvironmentFactory(
        socketAddress77);
    org.neo4j.configuration.helpers.SocketAddress socketAddress79 = factory74.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = factory74.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory81.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment84 = factory83.bulBackupEnvironment();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional85 = backupEnvironment84.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker86 = backupEnvironment84.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache87 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager88 = new io.github.onograph.backup.BackupRestorationManager(
        config68, fileSystemAbstraction69, memoryTracker86, pageCache87);
    try {
      remoteBackupService3.bakForBaPaBaDeBaReStGd(
          (io.github.onograph.backup.BackupVerificationService) backupVerificationServiceImpl35,
          backupEnvironment43, "database.id", defaultBackupServiceHandler46,
          gdbStoreTransferWatcherRebImpl47, pageCacheTracer48, remoteBackupManager49,
          backupRestorationManager88);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(config27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(backupEnvironment43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(databaseNamePattern64);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(config68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNull(socketAddress79);
    org.junit.Assert.assertNotNull(factory81);
    org.junit.Assert.assertNotNull(factory83);
    org.junit.Assert.assertNotNull(backupEnvironment84);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional85);
    org.junit.Assert.assertNotNull(memoryTracker86);
  }

  @Test
  public void test0817() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0817");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        (int) (short) 1, "");
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory13.isCc(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
  }

  @Test
  public void test0818() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0818");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.config(config3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    org.neo4j.configuration.Config config7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.config(config7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory14.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory14.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory20.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment26 = factory20.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern27 = backupEnvironment26.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress28 = backupEnvironment26.getSocketAddress();
    java.nio.file.Path path29 = backupEnvironment26.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory11.pbPath(path29);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory34.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory34.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory40.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment46 = factory40.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern47 = backupEnvironment46.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress48 = backupEnvironment46.getSocketAddress();
    java.nio.file.Path path49 = backupEnvironment46.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory31.pbPath(path49);
    io.github.onograph.backup.FileMoverService fileMoverService51 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path29, path49);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory6.pbPath(path49);
    boolean boolean53 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path49);
    try {
      backupIOService1.deedForPa(path49);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(backupEnvironment26);
    org.junit.Assert.assertNotNull(databaseNamePattern27);
    org.junit.Assert.assertNotNull(socketAddress28);
    org.junit.Assert.assertNotNull(path29);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(backupEnvironment46);
    org.junit.Assert.assertNotNull(databaseNamePattern47);
    org.junit.Assert.assertNotNull(socketAddress48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(fileMoverService51);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
  }

  @Test
  public void test0819() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0819");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    java.nio.file.Path path7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.prPath(path7);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern9 = factory8.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory10.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory10.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory16.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment22 = factory16.bulBackupEnvironment();
    boolean boolean23 = backupEnvironment22.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional24 = backupEnvironment22.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional25 = backupEnvironment22.geicmaOptional();
    java.nio.file.Path path26 = backupEnvironment22.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory8.prPath(path26);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional28 = gdbIdRepo1.reddtaiOptional(
          path26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(databaseNamePattern9);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(backupEnvironment22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional24);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
  }

  @Test
  public void test0820() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0820");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup3.isBftf(false);
    io.github.onograph.backup.Backup backup9 = backup7.isBftf(true);
    io.github.onograph.backup.Backup backup11 = backup9.isCc(true);
    io.github.onograph.backup.Backup backup13 = backup9.isCc(false);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
    org.junit.Assert.assertNotNull(backup11);
    org.junit.Assert.assertNotNull(backup13);
  }

  @Test
  public void test0821() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0821");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.io.PrintStream printStream3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker17 = backupEnvironment16.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = backupEnvironment16.getDatabaseNamePattern();
    boolean boolean19 = backupEnvironment16.getIsBftf();
    java.nio.file.Path path20 = backupEnvironment16.getRpPath();
    java.nio.file.Path path21 = backupEnvironment16.getPbPath();
    java.nio.file.Path path22 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path21);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory29.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment35 = factory29.bulBackupEnvironment();
    boolean boolean36 = backupEnvironment35.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional37 = backupEnvironment35.geicmaOptional();
    java.nio.file.Path path38 = backupEnvironment35.getPbPath();
    java.nio.file.Path path39 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path38);
    java.nio.file.Path path40 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path39);
    boolean boolean41 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path40);
    java.nio.file.Path path42 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path40);
    java.nio.file.Path path43 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.nio.file.Path path44 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path43);
    org.neo4j.io.layout.DatabaseLayout databaseLayout45 = null;
    try {
      io.github.onograph.backup.GdbRestorer gdbRestorer46 = new io.github.onograph.backup.GdbRestorer(
          fileSystemAbstraction0, false, false, printStream3, path21, path44, databaseLayout45);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertNotNull(memoryTracker17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(backupEnvironment35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(path44);
  }

  @Test
  public void test0822() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0822");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator4.progressMonitorFactory(
        progressMonitorFactory5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.monitors(monitors7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.itraLogProvider(
        logProvider9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.progressMonitorFactory(
        progressMonitorFactory11);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
  }

  @Test
  public void test0823() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0823");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    org.neo4j.configuration.helpers.SocketAddress socketAddress3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.wihadsBackupEnvironmentFactory(
        socketAddress3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory4.shouldPrep(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
  }

  @Test
  public void test0824() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0824");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker15 = backupEnvironment12.getMemoryTracker();
    boolean boolean16 = backupEnvironment12.getIsCc();
    org.neo4j.memory.MemoryTracker memoryTracker17 = backupEnvironment12.getMemoryTracker();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(memoryTracker15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNotNull(memoryTracker17);
  }

  @Test
  public void test0825() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0825");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory4.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory4.wihadsBackupEnvironmentFactory(
        0, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.config(config18);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isRp(true);
    org.neo4j.configuration.Config config22 = factory19.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.memory.MemoryTracker memoryTracker24 = null;
    org.neo4j.io.pagecache.PageCache pageCache25 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager26 = new io.github.onograph.backup.BackupRestorationManager(
        config22, fileSystemAbstraction23, memoryTracker24, pageCache25);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory4.config(config22);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction28 = null;
    io.github.onograph.backup.FileMover fileMover29 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction28);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory30.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory30.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory36.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment42 = factory36.bulBackupEnvironment();
    boolean boolean43 = backupEnvironment42.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional44 = backupEnvironment42.geicmaOptional();
    java.nio.file.Path path45 = backupEnvironment42.getPbPath();
    java.nio.file.Path path46 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path45);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream47 = fileMover29._trrfrmnStream(
        path45);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory48.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory51.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory51.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory57.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment63 = factory57.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern64 = backupEnvironment63.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress65 = backupEnvironment63.getSocketAddress();
    java.nio.file.Path path66 = backupEnvironment63.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory48.pbPath(path66);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory68.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory71.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory71.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory71.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory77.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory77.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment83 = factory77.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern84 = backupEnvironment83.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress85 = backupEnvironment83.getSocketAddress();
    java.nio.file.Path path86 = backupEnvironment83.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory87 = factory68.pbPath(path86);
    io.github.onograph.backup.FileMoverService fileMoverService88 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path66, path86);
    java.nio.file.Path path89 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path66);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream90 = fileMover29._trrfrmnStream(
        path89);
    io.github.onograph.backup.BackupEnvironment.Factory factory91 = factory27.prPath(path89);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(config22);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(backupEnvironment42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional44);
    org.junit.Assert.assertNotNull(path45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(fileMoverServiceStream47);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(backupEnvironment63);
    org.junit.Assert.assertNotNull(databaseNamePattern64);
    org.junit.Assert.assertNotNull(socketAddress65);
    org.junit.Assert.assertNotNull(path66);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(backupEnvironment83);
    org.junit.Assert.assertNotNull(databaseNamePattern84);
    org.junit.Assert.assertNotNull(socketAddress85);
    org.junit.Assert.assertNotNull(path86);
    org.junit.Assert.assertNotNull(factory87);
    org.junit.Assert.assertNotNull(fileMoverService88);
    org.junit.Assert.assertNotNull(path89);
    org.junit.Assert.assertNotNull(fileMoverServiceStream90);
    org.junit.Assert.assertNotNull(factory91);
  }

  @Test
  public void test0826() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0826");
    }
    io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup(
        (int) (short) 10, "hi!");
    org.junit.Assert.assertNotNull(backup2);
  }

  @Test
  public void test0827() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0827");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory4.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory4.wihadsBackupEnvironmentFactory(
        0, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.config(config18);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isRp(true);
    org.neo4j.configuration.Config config22 = factory19.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.memory.MemoryTracker memoryTracker24 = null;
    org.neo4j.io.pagecache.PageCache pageCache25 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager26 = new io.github.onograph.backup.BackupRestorationManager(
        config22, fileSystemAbstraction23, memoryTracker24, pageCache25);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory4.config(config22);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory29.isRp(false);
    java.nio.file.Path path34 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.prPath(path34);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory40.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory40.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory46.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment52 = factory46.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern53 = backupEnvironment52.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress54 = backupEnvironment52.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory39.wihadsBackupEnvironmentFactory(
        socketAddress54);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory28.wihadsBackupEnvironmentFactory(
        socketAddress54);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress54);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(config22);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(backupEnvironment52);
    org.junit.Assert.assertNotNull(databaseNamePattern53);
    org.junit.Assert.assertNotNull(socketAddress54);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory57);
  }

  @Test
  public void test0828() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0828");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    java.nio.file.Path path15 = backupEnvironment12.getRpPath();
    boolean boolean16 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path15);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test0829() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0829");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = factory4.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory13.bulBackupEnvironment();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional15 = backupEnvironment14.geicmaOptional();
    boolean boolean16 = backupEnvironment14.getIsCc();
    boolean boolean17 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment14.geicmaOptional();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNull(socketAddress9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
  }

  @Test
  public void test0830() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0830");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory4.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory4.wihadsBackupEnvironmentFactory(
        0, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.config(config18);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isRp(true);
    org.neo4j.configuration.Config config22 = factory19.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.memory.MemoryTracker memoryTracker24 = null;
    org.neo4j.io.pagecache.PageCache pageCache25 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager26 = new io.github.onograph.backup.BackupRestorationManager(
        config22, fileSystemAbstraction23, memoryTracker24, pageCache25);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory4.config(config22);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction28 = null;
    org.neo4j.memory.MemoryTracker memoryTracker29 = null;
    org.neo4j.io.pagecache.PageCache pageCache30 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager31 = new io.github.onograph.backup.BackupRestorationManager(
        config22, fileSystemAbstraction28, memoryTracker29, pageCache30);
    org.neo4j.io.layout.DatabaseLayout databaseLayout32 = null;
    try {
      backupRestorationManager31.reorForDa(databaseLayout32);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(config22);
    org.junit.Assert.assertNotNull(factory27);
  }

  @Test
  public void test0831() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0831");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean16 = backupEnvironment12.getIsRp();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
  }

  @Test
  public void test0832() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0832");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean14 = backupEnvironment12.getIsBftf();
    boolean boolean15 = backupEnvironment12.getIsCc();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean17 = backupEnvironment12.getIsRp();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
  }

  @Test
  public void test0833() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0833");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config4 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.config(config4);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isRp(true);
    org.neo4j.configuration.Config config8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.config(config8);
    org.neo4j.configuration.helpers.SocketAddress socketAddress10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.wihadsBackupEnvironmentFactory(
        socketAddress10);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory15.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory15.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory21.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment27 = factory21.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern28 = backupEnvironment27.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress29 = backupEnvironment27.getSocketAddress();
    java.nio.file.Path path30 = backupEnvironment27.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory12.pbPath(path30);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory35.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory35.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory41.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment47 = factory41.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern48 = backupEnvironment47.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress49 = backupEnvironment47.getSocketAddress();
    java.nio.file.Path path50 = backupEnvironment47.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory32.pbPath(path50);
    io.github.onograph.backup.FileMoverService fileMoverService52 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path30, path50);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory7.pbPath(path50);
    boolean boolean54 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path50);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory0.prPath(path50);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory0.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions61 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory58.miAuthMetaOptions(
        authMetaOptions61);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory62.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory62.isCc(true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern67 = factory66.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory0.databaseNamePattern(
        databaseNamePattern67);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory69.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory72.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory72.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory77.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = factory77.isRp(false);
    java.nio.file.Path path82 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory81.prPath(path82);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern84 = factory83.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config85 = factory83.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory86 = factory76.config(config85);
    io.github.onograph.backup.BackupEnvironment.Factory factory87 = factory69.config(config85);
    io.github.onograph.backup.BackupEnvironment.Factory factory88 = factory68.config(config85);
    io.github.onograph.backup.BackupEnvironment.Factory factory90 = factory68.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory92 = factory68.isGcc(
        (java.lang.Boolean) false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(backupEnvironment27);
    org.junit.Assert.assertNotNull(databaseNamePattern28);
    org.junit.Assert.assertNotNull(socketAddress29);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(backupEnvironment47);
    org.junit.Assert.assertNotNull(databaseNamePattern48);
    org.junit.Assert.assertNotNull(socketAddress49);
    org.junit.Assert.assertNotNull(path50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(fileMoverService52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(databaseNamePattern67);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(factory81);
    org.junit.Assert.assertNotNull(factory83);
    org.junit.Assert.assertNotNull(databaseNamePattern84);
    org.junit.Assert.assertNotNull(config85);
    org.junit.Assert.assertNotNull(factory86);
    org.junit.Assert.assertNotNull(factory87);
    org.junit.Assert.assertNotNull(factory88);
    org.junit.Assert.assertNotNull(factory90);
    org.junit.Assert.assertNotNull(factory92);
  }

  @Test
  public void test0834() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0834");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory4.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory4.wihadsBackupEnvironmentFactory(
        0, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isRp(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.miAuthMetaOptions(
        authMetaOptions19);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory21.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory21.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory27.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment33 = factory27.bulBackupEnvironment();
    boolean boolean34 = backupEnvironment33.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional35 = backupEnvironment33.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional36 = backupEnvironment33.geicmaOptional();
    java.nio.file.Path path37 = backupEnvironment33.getPbPath();
    org.neo4j.configuration.helpers.SocketAddress socketAddress38 = backupEnvironment33.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory20.wihadsBackupEnvironmentFactory(
        socketAddress38);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory39.isRp(true);
    java.lang.Class<?> wildcardClass42 = factory41.getClass();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(backupEnvironment33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional35);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(socketAddress38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(wildcardClass42);
  }

  @Test
  public void test0835() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0835");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    boolean boolean17 = backupEnvironment16.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment16.geicmaOptional();
    java.nio.file.Path path19 = backupEnvironment16.getPbPath();
    java.nio.file.Path path20 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path19);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream21 = fileMover3._trrfrmnStream(
        path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory25.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory25.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory31.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment37 = factory31.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern38 = backupEnvironment37.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress39 = backupEnvironment37.getSocketAddress();
    java.nio.file.Path path40 = backupEnvironment37.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory22.pbPath(path40);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory45.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory45.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory51.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment57 = factory51.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern58 = backupEnvironment57.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress59 = backupEnvironment57.getSocketAddress();
    java.nio.file.Path path60 = backupEnvironment57.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory42.pbPath(path60);
    io.github.onograph.backup.FileMoverService fileMoverService62 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path40, path60);
    java.nio.file.Path path63 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path40);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream64 = fileMover3._trrfrmnStream(
        path63);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream65 = fileMover1._trrfrmnStream(
        path63);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory66.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory66.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory66.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory72.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory72.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment78 = factory72.bulBackupEnvironment();
    boolean boolean79 = backupEnvironment78.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional80 = backupEnvironment78.geicmaOptional();
    java.nio.file.Path path81 = backupEnvironment78.getPbPath();
    java.nio.file.Path path82 = backupEnvironment78.getPbPath();
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream83 = fileMover1._trrfrmnStream(
        path82);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(fileMoverServiceStream21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(backupEnvironment37);
    org.junit.Assert.assertNotNull(databaseNamePattern38);
    org.junit.Assert.assertNotNull(socketAddress39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(backupEnvironment57);
    org.junit.Assert.assertNotNull(databaseNamePattern58);
    org.junit.Assert.assertNotNull(socketAddress59);
    org.junit.Assert.assertNotNull(path60);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(fileMoverService62);
    org.junit.Assert.assertNotNull(path63);
    org.junit.Assert.assertNotNull(fileMoverServiceStream64);
    org.junit.Assert.assertNotNull(fileMoverServiceStream65);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(backupEnvironment78);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional80);
    org.junit.Assert.assertNotNull(path81);
    org.junit.Assert.assertNotNull(path82);
    org.junit.Assert.assertNotNull(fileMoverServiceStream83);
  }

  @Test
  public void test0836() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0836");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = setupForBackupRestorationCommandProvider0.commandType();
    int int2 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = setupForBackupRestorationCommandProvider0.commandType();
    int int4 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext5 = null;
    try {
      io.github.onograph.backup.SetupForBackupRestorationCommand setupForBackupRestorationCommand6 = setupForBackupRestorationCommandProvider0.createCommand(
          executionContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
  }

  @Test
  public void test0837() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0837");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.io.PrintStream printStream3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        (int) (short) 1, "");
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory29.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment35 = factory29.bulBackupEnvironment();
    boolean boolean36 = backupEnvironment35.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional37 = backupEnvironment35.geicmaOptional();
    java.nio.file.Path path38 = backupEnvironment35.getPbPath();
    boolean boolean39 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path38);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory22.prPath(path38);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory41.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory41.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory47.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment53 = factory47.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern54 = backupEnvironment53.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress55 = backupEnvironment53.getSocketAddress();
    java.nio.file.Path path56 = backupEnvironment53.getRpPath();
    boolean boolean57 = backupEnvironment53.getIsBftf();
    java.nio.file.Path path58 = backupEnvironment53.getRpPath();
    org.neo4j.io.layout.DatabaseLayout databaseLayout59 = null;
    try {
      io.github.onograph.backup.GdbRestorer gdbRestorer60 = new io.github.onograph.backup.GdbRestorer(
          fileSystemAbstraction0, false, false, printStream3, path38, path58, databaseLayout59);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(backupEnvironment35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(backupEnvironment53);
    org.junit.Assert.assertNotNull(databaseNamePattern54);
    org.junit.Assert.assertNotNull(socketAddress55);
    org.junit.Assert.assertNotNull(path56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    org.junit.Assert.assertNotNull(path58);
  }

  @Test
  public void test0838() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0838");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path15 = backupEnvironment12.getPbPath();
    java.nio.file.Path path16 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path15);
    java.nio.file.Path path17 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path16);
    boolean boolean18 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path17);
    java.nio.file.Path path19 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path17);
    java.nio.file.Path path20 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory24.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory24.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory30.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment36 = factory30.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern37 = backupEnvironment36.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress38 = backupEnvironment36.getSocketAddress();
    java.nio.file.Path path39 = backupEnvironment36.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory21.pbPath(path39);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory44.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory44.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory50.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory50.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment56 = factory50.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern57 = backupEnvironment56.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress58 = backupEnvironment56.getSocketAddress();
    java.nio.file.Path path59 = backupEnvironment56.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory41.pbPath(path59);
    io.github.onograph.backup.FileMoverService fileMoverService61 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path39, path59);
    java.nio.file.Path path62 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path59);
    io.github.onograph.backup.FileMoverService fileMoverService63 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path19, path62);
    java.nio.file.Path path64 = fileMoverService63.filPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory65.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory65.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory65.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory71.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory71.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment77 = factory71.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern78 = backupEnvironment77.getDatabaseNamePattern();
    boolean boolean79 = backupEnvironment77.getIsBftf();
    boolean boolean80 = backupEnvironment77.getIsBftf();
    java.nio.file.Path path81 = backupEnvironment77.getRpPath();
    io.github.onograph.backup.FileMoverService fileMoverService82 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path64, path81);
    java.nio.file.Path path83 = fileMoverService82.filPath();
    java.nio.file.Path path84 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path83);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(backupEnvironment36);
    org.junit.Assert.assertNotNull(databaseNamePattern37);
    org.junit.Assert.assertNotNull(socketAddress38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(backupEnvironment56);
    org.junit.Assert.assertNotNull(databaseNamePattern57);
    org.junit.Assert.assertNotNull(socketAddress58);
    org.junit.Assert.assertNotNull(path59);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(fileMoverService61);
    org.junit.Assert.assertNotNull(path62);
    org.junit.Assert.assertNotNull(fileMoverService63);
    org.junit.Assert.assertNotNull(path64);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(backupEnvironment77);
    org.junit.Assert.assertNotNull(databaseNamePattern78);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    org.junit.Assert.assertNotNull(path81);
    org.junit.Assert.assertNotNull(fileMoverService82);
    org.junit.Assert.assertNotNull(path83);
    org.junit.Assert.assertNotNull(path84);
  }

  @Test
  public void test0839() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0839");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    org.neo4j.configuration.Config config11 = factory4.gecfConfig();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(config11);
  }

  @Test
  public void test0840() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0840");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config6 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.config(config6);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isRp(true);
    org.neo4j.configuration.Config config10 = factory7.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory0.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory0.shouldPrep(false);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction14 = null;
    io.github.onograph.backup.FileMover fileMover15 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction14);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory16.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory22.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory22.bulBackupEnvironment();
    boolean boolean29 = backupEnvironment28.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional30 = backupEnvironment28.geicmaOptional();
    java.nio.file.Path path31 = backupEnvironment28.getPbPath();
    java.nio.file.Path path32 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path31);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream33 = fileMover15._trrfrmnStream(
        path31);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory37.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory37.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory43.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment49 = factory43.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern50 = backupEnvironment49.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress51 = backupEnvironment49.getSocketAddress();
    java.nio.file.Path path52 = backupEnvironment49.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory34.pbPath(path52);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory57.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory57.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory63.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory63.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment69 = factory63.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern70 = backupEnvironment69.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress71 = backupEnvironment69.getSocketAddress();
    java.nio.file.Path path72 = backupEnvironment69.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory54.pbPath(path72);
    io.github.onograph.backup.FileMoverService fileMoverService74 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path52, path72);
    java.nio.file.Path path75 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path52);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream76 = fileMover15._trrfrmnStream(
        path75);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory13.prPath(path75);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory13.isSicc(
        (java.lang.Boolean) false);
    java.nio.file.Path path80 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = factory13.prPath(path80);
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory81.isGcc(
        (java.lang.Boolean) false);
    try {
      io.github.onograph.backup.BackupEnvironment.Factory factory85 = factory81.databaseNamePattern(
          "");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: The provided database name is empty.");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(config10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional30);
    org.junit.Assert.assertNotNull(path31);
    org.junit.Assert.assertNotNull(path32);
    org.junit.Assert.assertNotNull(fileMoverServiceStream33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(backupEnvironment49);
    org.junit.Assert.assertNotNull(databaseNamePattern50);
    org.junit.Assert.assertNotNull(socketAddress51);
    org.junit.Assert.assertNotNull(path52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(backupEnvironment69);
    org.junit.Assert.assertNotNull(databaseNamePattern70);
    org.junit.Assert.assertNotNull(socketAddress71);
    org.junit.Assert.assertNotNull(path72);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(fileMoverService74);
    org.junit.Assert.assertNotNull(path75);
    org.junit.Assert.assertNotNull(fileMoverServiceStream76);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(factory81);
    org.junit.Assert.assertNotNull(factory83);
  }

  @Test
  public void test0841() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0841");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    boolean boolean24 = backupEnvironment23.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional25 = backupEnvironment23.geicmaOptional();
    java.nio.file.Path path26 = backupEnvironment23.getPbPath();
    java.nio.file.Path path27 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path26);
    java.nio.file.Path path28 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path27);
    boolean boolean29 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path28);
    java.nio.file.Path path30 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path28);
    java.nio.file.Path path31 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path30);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory6.pbPath(path30);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config34 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.config(config34);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isRp(true);
    org.neo4j.configuration.Config config38 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.config(config38);
    org.neo4j.configuration.helpers.SocketAddress socketAddress40 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory37.wihadsBackupEnvironmentFactory(
        socketAddress40);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config43 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.config(config43);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isRp(true);
    org.neo4j.configuration.Config config47 = factory44.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory37.config(config47);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags49 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction50 = null;
    org.neo4j.logging.LogProvider logProvider51 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config53 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.config(config53);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory54.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern59 = factory54.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory54.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config63 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory62.config(config63);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory64.isRp(true);
    org.neo4j.configuration.Config config67 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory66.config(config67);
    org.neo4j.configuration.helpers.SocketAddress socketAddress69 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory66.wihadsBackupEnvironmentFactory(
        socketAddress69);
    org.neo4j.configuration.helpers.SocketAddress socketAddress71 = factory66.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory66.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory73.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment76 = factory75.bulBackupEnvironment();
    java.nio.file.Path path77 = backupEnvironment76.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory54.prPath(path77);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory79 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl80 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config47, consistencyFlags49, fileSystemAbstraction50, logProvider51, path77,
        progressMonitorFactory79);
    io.github.onograph.backup.FileMoverService fileMoverService81 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path30, path77);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertNotNull(path31);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(config47);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(databaseNamePattern59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNull(socketAddress71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(backupEnvironment76);
    org.junit.Assert.assertNotNull(path77);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(fileMoverService81);
  }

  @Test
  public void test0842() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0842");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.itraLogProvider(
        logProvider9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.itraLogProvider(
        logProvider13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator14.fFileSystemAbstraction(
        fileSystemAbstraction15);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator16.progressMonitorFactory(
        progressMonitorFactory17);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
  }

  @Test
  public void test0843() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0843");
    }
    io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup(
        (int) (byte) 10, "");
    org.junit.Assert.assertNotNull(backup2);
  }

  @Test
  public void test0844() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0844");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean14 = backupEnvironment12.getIsRp();
    boolean boolean15 = backupEnvironment12.getIsRp();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
  }

  @Test
  public void test0845() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0845");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = factory2.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory2.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    java.nio.file.Path path11 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory8.prPath(path11);
    java.nio.file.Path path13 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.prPath(path13);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    java.nio.file.Path path18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory15.prPath(path18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config21 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.config(config21);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isRp(true);
    org.neo4j.configuration.Config config25 = factory22.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory15.config(config25);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory14.config(config25);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory7.config(config25);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory30.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory30.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory36.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment42 = factory36.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker43 = backupEnvironment42.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache44 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager45 = new io.github.onograph.backup.BackupRestorationManager(
        config25, fileSystemAbstraction29, memoryTracker43, pageCache44);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction46 = null;
    io.github.onograph.cluster.raft.module.cuprot.LifecycleCatchupManagerImpl lifecycleCatchupManagerImpl47 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler48 = null;
    org.neo4j.logging.LogProvider logProvider49 = null;
    org.neo4j.monitoring.Monitors monitors50 = null;
    org.neo4j.io.pagecache.PageCache pageCache51 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer52 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock53 = null;
    try {
      io.github.onograph.backup.RemoteBackupManager remoteBackupManager54 = new io.github.onograph.backup.RemoteBackupManager(
          config25, fileSystemAbstraction46, lifecycleCatchupManagerImpl47, jobScheduler48,
          logProvider49, monitors50, pageCache51, pageCacheTracer52, systemNanoClock53);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(config25);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(backupEnvironment42);
    org.junit.Assert.assertNotNull(memoryTracker43);
  }

  @Test
  public void test0846() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0846");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = backupEnvironment12.getSocketAddress();
    boolean boolean16 = backupEnvironment12.getIsCc();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory18.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory18.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory24.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment30 = factory24.bulBackupEnvironment();
    boolean boolean31 = backupEnvironment30.getIsBftf();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern32 = backupEnvironment30.getDatabaseNamePattern();
    java.nio.file.Path path33 = backupEnvironment30.getRpPath();
    java.nio.file.Path path34 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path33);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory35.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory35.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory41.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment47 = factory41.bulBackupEnvironment();
    boolean boolean48 = backupEnvironment47.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional49 = backupEnvironment47.geicmaOptional();
    java.nio.file.Path path50 = backupEnvironment47.getPbPath();
    java.nio.file.Path path51 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path50);
    java.nio.file.Path path52 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path51);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory53.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory53.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory59.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory59.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment65 = factory59.bulBackupEnvironment();
    boolean boolean66 = backupEnvironment65.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional67 = backupEnvironment65.geicmaOptional();
    java.nio.file.Path path68 = backupEnvironment65.getPbPath();
    java.nio.file.Path path69 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path68);
    io.github.onograph.backup.FileMoverService fileMoverService70 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path51, path69);
    io.github.onograph.backup.FileMoverService fileMoverService71 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path34, path51);
    io.github.onograph.backup.FileMoverService fileMoverService72 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path17, path51);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(socketAddress15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(backupEnvironment30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertNotNull(databaseNamePattern32);
    org.junit.Assert.assertNotNull(path33);
    org.junit.Assert.assertNotNull(path34);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(backupEnvironment47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional49);
    org.junit.Assert.assertNotNull(path50);
    org.junit.Assert.assertNotNull(path51);
    org.junit.Assert.assertNotNull(path52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(backupEnvironment65);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional67);
    org.junit.Assert.assertNotNull(path68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(fileMoverService70);
    org.junit.Assert.assertNotNull(fileMoverService71);
    org.junit.Assert.assertNotNull(fileMoverService72);
  }

  @Test
  public void test0847() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0847");
    }
    io.github.onograph.backup.CommandProviderBackupImpl commandProviderBackupImpl0 = new io.github.onograph.backup.CommandProviderBackupImpl();
    int int1 = commandProviderBackupImpl0.getPriority();
    int int2 = commandProviderBackupImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandProviderBackupImpl0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandProviderBackupImpl0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = commandProviderBackupImpl0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
  }

  @Test
  public void test0848() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0848");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isSicc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = factory10.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
  }

  @Test
  public void test0849() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0849");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.prPath(path5);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
  }

  @Test
  public void test0850() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0850");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.databaseNamePattern(
        databaseNamePattern9);
    io.github.onograph.backup.BackupEnvironment backupEnvironment11 = factory10.bulBackupEnvironment();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(backupEnvironment11);
  }

  @Test
  public void test0851() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0851");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    boolean boolean17 = backupEnvironment16.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment16.geicmaOptional();
    java.nio.file.Path path19 = backupEnvironment16.getPbPath();
    java.nio.file.Path path20 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path19);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream21 = fileMover3._trrfrmnStream(
        path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory22.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory22.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory28.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment34 = factory28.bulBackupEnvironment();
    boolean boolean35 = backupEnvironment34.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional36 = backupEnvironment34.geicmaOptional();
    java.nio.file.Path path37 = backupEnvironment34.getPbPath();
    java.nio.file.Path path38 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path37);
    java.nio.file.Path path39 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path38);
    io.github.onograph.backup.FileMoverService fileMoverService40 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path19, path38);
    java.nio.file.Path path41 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path19);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional42 = gdbIdRepo1.reddtaiOptional(
          path19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(fileMoverServiceStream21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(backupEnvironment34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertNotNull(fileMoverService40);
    org.junit.Assert.assertNotNull(path41);
  }

  @Test
  public void test0852() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0852");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.uLogProvider(
        logProvider13);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator14.progressMonitorFactory(
        progressMonitorFactory15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator14.monitors(monitors17);
    org.neo4j.logging.LogProvider logProvider19 = null;
    io.github.onograph.backup.BackupRunner.Generator generator20 = generator18.itraLogProvider(
        logProvider19);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
    org.junit.Assert.assertNotNull(generator20);
  }

  @Test
  public void test0853() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0853");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator4.progressMonitorFactory(
        progressMonitorFactory5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.monitors(monitors7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.itraLogProvider(
        logProvider9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.uLogProvider(
        logProvider13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator12.fFileSystemAbstraction(
        fileSystemAbstraction15);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
  }

  @Test
  public void test0854() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0854");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    boolean boolean22 = backupEnvironment21.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional23 = backupEnvironment21.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker24 = backupEnvironment21.getMemoryTracker();
    java.nio.file.Path path25 = backupEnvironment21.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory6.prPath(path25);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    io.github.onograph.backup.FileMover fileMover28 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction27);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    io.github.onograph.backup.FileMover fileMover30 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction29);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory31.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory31.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory37.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment43 = factory37.bulBackupEnvironment();
    boolean boolean44 = backupEnvironment43.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional45 = backupEnvironment43.geicmaOptional();
    java.nio.file.Path path46 = backupEnvironment43.getPbPath();
    java.nio.file.Path path47 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path46);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream48 = fileMover30._trrfrmnStream(
        path46);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory52.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory52.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory58.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment64 = factory58.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern65 = backupEnvironment64.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress66 = backupEnvironment64.getSocketAddress();
    java.nio.file.Path path67 = backupEnvironment64.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory49.pbPath(path67);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory69.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory72.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory72.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory72.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory78.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory78.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment84 = factory78.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern85 = backupEnvironment84.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress86 = backupEnvironment84.getSocketAddress();
    java.nio.file.Path path87 = backupEnvironment84.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory88 = factory69.pbPath(path87);
    io.github.onograph.backup.FileMoverService fileMoverService89 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path67, path87);
    java.nio.file.Path path90 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path67);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream91 = fileMover30._trrfrmnStream(
        path90);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream92 = fileMover28._trrfrmnStream(
        path90);
    io.github.onograph.backup.FileMoverService fileMoverService93 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path25, path90);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional23);
    org.junit.Assert.assertNotNull(memoryTracker24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(backupEnvironment43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(path47);
    org.junit.Assert.assertNotNull(fileMoverServiceStream48);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(backupEnvironment64);
    org.junit.Assert.assertNotNull(databaseNamePattern65);
    org.junit.Assert.assertNotNull(socketAddress66);
    org.junit.Assert.assertNotNull(path67);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(factory83);
    org.junit.Assert.assertNotNull(backupEnvironment84);
    org.junit.Assert.assertNotNull(databaseNamePattern85);
    org.junit.Assert.assertNotNull(socketAddress86);
    org.junit.Assert.assertNotNull(path87);
    org.junit.Assert.assertNotNull(factory88);
    org.junit.Assert.assertNotNull(fileMoverService89);
    org.junit.Assert.assertNotNull(path90);
    org.junit.Assert.assertNotNull(fileMoverServiceStream91);
    org.junit.Assert.assertNotNull(fileMoverServiceStream92);
    org.junit.Assert.assertNotNull(fileMoverService93);
  }

  @Test
  public void test0855() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0855");
    }
    io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl commandProviderGdbRestorerCommandImpl0 = new io.github.onograph.backup.CommandProviderGdbRestorerCommandImpl();
    org.neo4j.cli.Command.CommandType commandType1 = commandProviderGdbRestorerCommandImpl0.commandType();
    int int2 = commandProviderGdbRestorerCommandImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandProviderGdbRestorerCommandImpl0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandProviderGdbRestorerCommandImpl0.commandType();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.RESTORE_DB + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.RESTORE_DB));
  }

  @Test
  public void test0856() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0856");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.databaseNamePattern(
        databaseNamePattern9);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory6.shouldPrep(false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = factory6.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
  }

  @Test
  public void test0857() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0857");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.itraLogProvider(
        logProvider9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator8.itraLogProvider(
        logProvider13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0858() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0858");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.logging.LogProvider logProvider1 = null;
    org.neo4j.logging.Log log2 = null;
    io.github.onograph.backup.RemoteBackupService remoteBackupService3 = new io.github.onograph.backup.RemoteBackupService(
        fileSystemAbstraction0, logProvider1, log2);
    io.github.onograph.backup.BackupVerificationService backupVerificationService4 = io.github.onograph.backup.BackupVerificationService.NOO_BACKUP_VERIFICATION_SERVICE;
    org.neo4j.io.layout.DatabaseLayout databaseLayout5 = null;
    backupVerificationService4.chcsyForDa(databaseLayout5);
    org.neo4j.io.layout.DatabaseLayout databaseLayout7 = null;
    backupVerificationService4.chcsyForDa(databaseLayout7);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker22 = backupEnvironment21.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern23 = backupEnvironment21.getDatabaseNamePattern();
    boolean boolean24 = backupEnvironment21.getIsBftf();
    java.nio.file.Path path25 = backupEnvironment21.getRpPath();
    io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler27 = null;
    io.github.onograph.backup.GdbStoreTransferWatcherRebImpl gdbStoreTransferWatcherRebImpl28 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer29 = null;
    io.github.onograph.backup.RemoteBackupManager remoteBackupManager30 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    java.nio.file.Path path34 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory31.prPath(path34);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory31.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory38.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory38.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory43.isRp(false);
    java.nio.file.Path path48 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.prPath(path48);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern50 = factory49.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config51 = factory49.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory42.config(config51);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory31.config(config51);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction54 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory55.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory55.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory55.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory61.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory61.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment67 = factory61.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker68 = backupEnvironment67.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern69 = backupEnvironment67.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress70 = backupEnvironment67.getSocketAddress();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern71 = backupEnvironment67.getDatabaseNamePattern();
    org.neo4j.memory.MemoryTracker memoryTracker72 = backupEnvironment67.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache73 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager74 = new io.github.onograph.backup.BackupRestorationManager(
        config51, fileSystemAbstraction54, memoryTracker72, pageCache73);
    try {
      remoteBackupService3.bakForBaPaBaDeBaReStGd(backupVerificationService4, backupEnvironment21,
          "", defaultBackupServiceHandler27, gdbStoreTransferWatcherRebImpl28, pageCacheTracer29,
          remoteBackupManager30, backupRestorationManager74);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backupVerificationService4);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertNotNull(memoryTracker22);
    org.junit.Assert.assertNotNull(databaseNamePattern23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(databaseNamePattern50);
    org.junit.Assert.assertNotNull(config51);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(backupEnvironment67);
    org.junit.Assert.assertNotNull(memoryTracker68);
    org.junit.Assert.assertNotNull(databaseNamePattern69);
    org.junit.Assert.assertNotNull(socketAddress70);
    org.junit.Assert.assertNotNull(databaseNamePattern71);
    org.junit.Assert.assertNotNull(memoryTracker72);
  }

  @Test
  public void test0859() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0859");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator6.uLogProvider(
        logProvider13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction15);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator16.fFileSystemAbstraction(
        fileSystemAbstraction17);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
  }

  @Test
  public void test0860() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0860");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = setupForBackupRestorationCommandProvider0.commandType();
    int int2 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = setupForBackupRestorationCommandProvider0.commandType();
    int int4 = setupForBackupRestorationCommandProvider0.getPriority();
    int int5 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext6 = null;
    try {
      io.github.onograph.backup.SetupForBackupRestorationCommand setupForBackupRestorationCommand7 = setupForBackupRestorationCommandProvider0.createCommand(
          executionContext6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
  }

  @Test
  public void test0861() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0861");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    int int1 = setupForBackupRestorationCommandProvider0.getPriority();
    int int2 = setupForBackupRestorationCommandProvider0.getPriority();
    int int3 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = setupForBackupRestorationCommandProvider0.commandType();
    int int5 = setupForBackupRestorationCommandProvider0.getPriority();
    int int6 = setupForBackupRestorationCommandProvider0.getPriority();
    int int7 = setupForBackupRestorationCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
  }

  @Test
  public void test0862() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0862");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.systemNanoClock(
        systemNanoClock7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.itraLogProvider(
        logProvider9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.uLogProvider(
        logProvider11);
    io.github.onograph.backup.BackupRunner backupRunner13 = generator10.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory14.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory14.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory20.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment26 = factory20.bulBackupEnvironment();
    boolean boolean27 = backupEnvironment26.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional28 = backupEnvironment26.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker29 = backupEnvironment26.getMemoryTracker();
    java.nio.file.Path path30 = backupEnvironment26.getRpPath();
    try {
      backupRunner13.excebcpForBa(backupEnvironment26);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(backupRunner13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(backupEnvironment26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional28);
    org.junit.Assert.assertNotNull(memoryTracker29);
    org.junit.Assert.assertNotNull(path30);
  }

  @Test
  public void test0863() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0863");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config17 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.config(config17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory18.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern23 = factory18.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory11.databaseNamePattern(
        databaseNamePattern23);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory6.databaseNamePattern(
        databaseNamePattern23);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory29.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory29.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory35.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment41 = factory35.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern42 = backupEnvironment41.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress43 = backupEnvironment41.getSocketAddress();
    java.nio.file.Path path44 = backupEnvironment41.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory26.pbPath(path44);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory49.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory49.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory55.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory55.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment61 = factory55.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern62 = backupEnvironment61.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress63 = backupEnvironment61.getSocketAddress();
    java.nio.file.Path path64 = backupEnvironment61.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory46.pbPath(path64);
    io.github.onograph.backup.FileMoverService fileMoverService66 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path44, path64);
    java.nio.file.Path path67 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path64);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory6.pbPath(path67);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(databaseNamePattern23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(backupEnvironment41);
    org.junit.Assert.assertNotNull(databaseNamePattern42);
    org.junit.Assert.assertNotNull(socketAddress43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(backupEnvironment61);
    org.junit.Assert.assertNotNull(databaseNamePattern62);
    org.junit.Assert.assertNotNull(socketAddress63);
    org.junit.Assert.assertNotNull(path64);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(fileMoverService66);
    org.junit.Assert.assertNotNull(path67);
    org.junit.Assert.assertNotNull(factory68);
  }

  @Test
  public void test0864() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0864");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path15 = backupEnvironment12.getPbPath();
    java.nio.file.Path path16 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path15);
    java.nio.file.Path path17 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path16);
    boolean boolean18 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path17);
    java.nio.file.Path path19 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path17);
    java.nio.file.Path path20 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory21.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory21.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory27.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment33 = factory27.bulBackupEnvironment();
    boolean boolean34 = backupEnvironment33.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional35 = backupEnvironment33.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional36 = backupEnvironment33.geicmaOptional();
    java.nio.file.Path path37 = backupEnvironment33.getPbPath();
    java.nio.file.Path path38 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path37);
    io.github.onograph.backup.FileMoverService fileMoverService39 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path19, path37);
    java.nio.file.Path path40 = fileMoverService39.filPath();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(backupEnvironment33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional35);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(fileMoverService39);
    org.junit.Assert.assertNotNull(path40);
  }

  @Test
  public void test0865() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0865");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    org.neo4j.memory.MemoryTracker memoryTracker14 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = backupEnvironment12.getSocketAddress();
    boolean boolean16 = backupEnvironment12.getIsCc();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern17 = backupEnvironment12.getDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(memoryTracker14);
    org.junit.Assert.assertNotNull(socketAddress15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNotNull(databaseNamePattern17);
  }

  @Test
  public void test0866() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0866");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config4 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.config(config4);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isRp(true);
    org.neo4j.configuration.Config config8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.config(config8);
    org.neo4j.configuration.helpers.SocketAddress socketAddress10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.wihadsBackupEnvironmentFactory(
        socketAddress10);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory15.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory15.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory21.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment27 = factory21.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern28 = backupEnvironment27.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress29 = backupEnvironment27.getSocketAddress();
    java.nio.file.Path path30 = backupEnvironment27.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory12.pbPath(path30);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory35.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory35.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory41.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment47 = factory41.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern48 = backupEnvironment47.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress49 = backupEnvironment47.getSocketAddress();
    java.nio.file.Path path50 = backupEnvironment47.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory32.pbPath(path50);
    io.github.onograph.backup.FileMoverService fileMoverService52 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path30, path50);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory7.pbPath(path50);
    boolean boolean54 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path50);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory0.prPath(path50);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory0.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions61 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory58.miAuthMetaOptions(
        authMetaOptions61);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory62.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory62.isCc(true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern67 = factory66.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory0.databaseNamePattern(
        databaseNamePattern67);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory69.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory72.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory72.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory77.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = factory77.isRp(false);
    java.nio.file.Path path82 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory81.prPath(path82);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern84 = factory83.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config85 = factory83.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory86 = factory76.config(config85);
    io.github.onograph.backup.BackupEnvironment.Factory factory87 = factory69.config(config85);
    io.github.onograph.backup.BackupEnvironment.Factory factory88 = factory68.config(config85);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern89 = factory88.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(backupEnvironment27);
    org.junit.Assert.assertNotNull(databaseNamePattern28);
    org.junit.Assert.assertNotNull(socketAddress29);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(backupEnvironment47);
    org.junit.Assert.assertNotNull(databaseNamePattern48);
    org.junit.Assert.assertNotNull(socketAddress49);
    org.junit.Assert.assertNotNull(path50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(fileMoverService52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(databaseNamePattern67);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(factory81);
    org.junit.Assert.assertNotNull(factory83);
    org.junit.Assert.assertNotNull(databaseNamePattern84);
    org.junit.Assert.assertNotNull(config85);
    org.junit.Assert.assertNotNull(factory86);
    org.junit.Assert.assertNotNull(factory87);
    org.junit.Assert.assertNotNull(factory88);
    org.junit.Assert.assertNotNull(databaseNamePattern89);
  }

  @Test
  public void test0867() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0867");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory6.wihadsBackupEnvironmentFactory(
        (int) ' ', "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory13.bulBackupEnvironment();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
  }

  @Test
  public void test0868() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0868");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.miAuthMetaOptions(
        authMetaOptions5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(true);
    io.github.onograph.backup.BackupEnvironment backupEnvironment9 = factory8.bulBackupEnvironment();
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory10.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory10.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config20 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.config(config20);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isRp(true);
    org.neo4j.configuration.Config config24 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.config(config24);
    org.neo4j.configuration.helpers.SocketAddress socketAddress26 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.wihadsBackupEnvironmentFactory(
        socketAddress26);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.config(config29);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isRp(true);
    org.neo4j.configuration.Config config33 = factory30.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory23.config(config33);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory18.config(config33);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.memory.MemoryTracker memoryTracker37 = null;
    org.neo4j.io.pagecache.PageCache pageCache38 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager39 = new io.github.onograph.backup.BackupRestorationManager(
        config33, fileSystemAbstraction36, memoryTracker37, pageCache38);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory8.config(config33);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory41.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory41.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory47.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment53 = factory47.bulBackupEnvironment();
    boolean boolean54 = backupEnvironment53.getIsBftf();
    org.neo4j.memory.MemoryTracker memoryTracker55 = backupEnvironment53.getMemoryTracker();
    java.nio.file.Path path56 = backupEnvironment53.getRpPath();
    java.nio.file.Path path57 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path56);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory8.prPath(path57);
    try {
      boolean boolean59 = backupIOService1.isExsForPa(path57);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(backupEnvironment9);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(config33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(backupEnvironment53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(memoryTracker55);
    org.junit.Assert.assertNotNull(path56);
    org.junit.Assert.assertNotNull(path57);
    org.junit.Assert.assertNotNull(factory58);
  }

  @Test
  public void test0869() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0869");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path15 = backupEnvironment12.getPbPath();
    java.nio.file.Path path16 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path15);
    java.nio.file.Path path17 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path16);
    boolean boolean18 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path17);
    java.nio.file.Path path19 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory26.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment32 = factory26.bulBackupEnvironment();
    boolean boolean33 = backupEnvironment32.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional34 = backupEnvironment32.geicmaOptional();
    java.nio.file.Path path35 = backupEnvironment32.getPbPath();
    java.nio.file.Path path36 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path35);
    java.nio.file.Path path37 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path36);
    io.github.onograph.backup.FileMoverService fileMoverService38 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path17, path36);
    java.nio.file.Path path39 = fileMoverService38.filPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory40.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory40.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory46.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment52 = factory46.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker53 = backupEnvironment52.getMemoryTracker();
    boolean boolean54 = backupEnvironment52.getIsRp();
    java.nio.file.Path path55 = backupEnvironment52.getPbPath();
    boolean boolean56 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path55);
    boolean boolean57 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path55);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory58.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory58.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory64.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory64.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment70 = factory64.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern71 = backupEnvironment70.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress72 = backupEnvironment70.getSocketAddress();
    java.nio.file.Path path73 = backupEnvironment70.getRpPath();
    boolean boolean74 = backupEnvironment70.getIsBftf();
    java.nio.file.Path path75 = backupEnvironment70.getRpPath();
    io.github.onograph.backup.FileMoverService fileMoverService76 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path55, path75);
    java.nio.file.CopyOption[] copyOptionArray77 = new java.nio.file.CopyOption[]{};
    try {
      fileMoverService38.movForPaCo(path75, copyOptionArray77);
      org.junit.Assert.fail(
          "Expected exception of type java.nio.file.NoSuchFileException; message: ./metadata_script.cypher/database.id");
    } catch (java.nio.file.NoSuchFileException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(backupEnvironment32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional34);
    org.junit.Assert.assertNotNull(path35);
    org.junit.Assert.assertNotNull(path36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(fileMoverService38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(backupEnvironment52);
    org.junit.Assert.assertNotNull(memoryTracker53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(path55);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(backupEnvironment70);
    org.junit.Assert.assertNotNull(databaseNamePattern71);
    org.junit.Assert.assertNotNull(socketAddress72);
    org.junit.Assert.assertNotNull(path73);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    org.junit.Assert.assertNotNull(path75);
    org.junit.Assert.assertNotNull(fileMoverService76);
    org.junit.Assert.assertNotNull(copyOptionArray77);
  }

  @Test
  public void test0870() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0870");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory8.wihadsBackupEnvironmentFactory(
        10, "hi!");
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
  }

  @Test
  public void test0871() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0871");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.systemNanoClock(
        systemNanoClock7);
    org.neo4j.logging.LogProvider logProvider9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.itraLogProvider(
        logProvider9);
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator6.systemNanoClock(
        systemNanoClock11);
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator6.systemNanoClock(
        systemNanoClock13);
    org.neo4j.time.SystemNanoClock systemNanoClock15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator6.systemNanoClock(
        systemNanoClock15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator6.itraLogProvider(
        logProvider17);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
  }

  @Test
  public void test0872() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0872");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        (int) (short) 10, "hi!");
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory6.miAuthMetaOptions(
        authMetaOptions12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory6.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory6.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory6.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    java.nio.file.Path path23 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.prPath(path23);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory20.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory29.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory29.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory35.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment41 = factory35.bulBackupEnvironment();
    boolean boolean42 = backupEnvironment41.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional43 = backupEnvironment41.geicmaOptional();
    java.nio.file.Path path44 = backupEnvironment41.getPbPath();
    java.nio.file.Path path45 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path44);
    java.nio.file.Path path46 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path45);
    boolean boolean47 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path46);
    java.nio.file.Path path48 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path46);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory49.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory49.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory55.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory55.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment61 = factory55.bulBackupEnvironment();
    boolean boolean62 = backupEnvironment61.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional63 = backupEnvironment61.geicmaOptional();
    java.nio.file.Path path64 = backupEnvironment61.getPbPath();
    java.nio.file.Path path65 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path64);
    java.nio.file.Path path66 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path65);
    io.github.onograph.backup.FileMoverService fileMoverService67 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path46, path65);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory28.prPath(path65);
    java.nio.file.Path path69 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path65);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory19.prPath(path65);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory71.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory71.isRp(false);
    java.nio.file.Path path76 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory75.prPath(path76);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory77.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = factory79.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory84 = factory82.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory86 = factory82.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory88 = factory82.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory90 = factory88.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory93 = factory88.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment94 = factory88.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern95 = backupEnvironment94.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress96 = backupEnvironment94.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory97 = factory81.wihadsBackupEnvironmentFactory(
        socketAddress96);
    io.github.onograph.backup.BackupEnvironment.Factory factory98 = factory19.wihadsBackupEnvironmentFactory(
        socketAddress96);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(backupEnvironment41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(path45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertNotNull(path48);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(backupEnvironment61);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional63);
    org.junit.Assert.assertNotNull(path64);
    org.junit.Assert.assertNotNull(path65);
    org.junit.Assert.assertNotNull(path66);
    org.junit.Assert.assertNotNull(fileMoverService67);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(factory81);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(factory84);
    org.junit.Assert.assertNotNull(factory86);
    org.junit.Assert.assertNotNull(factory88);
    org.junit.Assert.assertNotNull(factory90);
    org.junit.Assert.assertNotNull(factory93);
    org.junit.Assert.assertNotNull(backupEnvironment94);
    org.junit.Assert.assertNotNull(databaseNamePattern95);
    org.junit.Assert.assertNotNull(socketAddress96);
    org.junit.Assert.assertNotNull(factory97);
    org.junit.Assert.assertNotNull(factory98);
  }

  @Test
  public void test0873() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0873");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("hi!");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup5 = backup1.isCc(false);
    io.github.onograph.backup.Backup backup7 = backup5.isCc(true);
    java.io.OutputStream outputStream8 = null;
    try {
      io.github.onograph.backup.Backup backup9 = backup5.outputStream(outputStream8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: outputStream");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
  }

  @Test
  public void test0874() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0874");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = factory2.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory2.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    java.nio.file.Path path13 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory10.prPath(path13);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config16 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.config(config16);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isRp(true);
    org.neo4j.configuration.Config config20 = factory17.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory10.config(config20);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory7.config(config20);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(config20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory22);
  }

  @Test
  public void test0875() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0875");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isFtfb(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory2.miAuthMetaOptions(
        authMetaOptions9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern24 = backupEnvironment23.getDatabaseNamePattern();
    boolean boolean25 = backupEnvironment23.getIsBftf();
    org.neo4j.configuration.helpers.SocketAddress socketAddress26 = backupEnvironment23.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory10.wihadsBackupEnvironmentFactory(
        socketAddress26);
    try {
      io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory10.databaseNamePattern(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: Database name 'hi!' contains illegal characters. Use simple ascii characters, numbers, dots, question marks, asterisk and dashes.");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertNotNull(databaseNamePattern24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(socketAddress26);
    org.junit.Assert.assertNotNull(factory27);
  }

  @Test
  public void test0876() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0876");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.config(config3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    org.neo4j.configuration.Config config7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.config(config7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory14.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory14.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory20.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment26 = factory20.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern27 = backupEnvironment26.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress28 = backupEnvironment26.getSocketAddress();
    java.nio.file.Path path29 = backupEnvironment26.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory11.pbPath(path29);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory34.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory34.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory40.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment46 = factory40.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern47 = backupEnvironment46.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress48 = backupEnvironment46.getSocketAddress();
    java.nio.file.Path path49 = backupEnvironment46.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory31.pbPath(path49);
    io.github.onograph.backup.FileMoverService fileMoverService51 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path29, path49);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory6.pbPath(path49);
    java.nio.file.Path path53 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path49);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional54 = gdbIdRepo1.reddtaiOptional(
          path53);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(backupEnvironment26);
    org.junit.Assert.assertNotNull(databaseNamePattern27);
    org.junit.Assert.assertNotNull(socketAddress28);
    org.junit.Assert.assertNotNull(path29);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(backupEnvironment46);
    org.junit.Assert.assertNotNull(databaseNamePattern47);
    org.junit.Assert.assertNotNull(socketAddress48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(fileMoverService51);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(path53);
  }

  @Test
  public void test0877() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0877");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isRp(true);
    org.neo4j.configuration.Config config14 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.config(config14);
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.wihadsBackupEnvironmentFactory(
        socketAddress16);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.config(config19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isRp(true);
    org.neo4j.configuration.Config config23 = factory20.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory13.config(config23);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory8.config(config23);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isRp(false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory25.bulBackupEnvironment();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(config23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
  }

  @Test
  public void test0878() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0878");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isIcc(
        (java.lang.Boolean) false);
    java.lang.Class<?> wildcardClass7 = factory6.getClass();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(wildcardClass7);
  }

  @Test
  public void test0879() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0879");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory3.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory3.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory9.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment15 = factory9.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment15.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment15.getSocketAddress();
    java.nio.file.Path path18 = backupEnvironment15.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory0.pbPath(path18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory29.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment35 = factory29.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern36 = backupEnvironment35.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress37 = backupEnvironment35.getSocketAddress();
    java.nio.file.Path path38 = backupEnvironment35.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory20.pbPath(path38);
    io.github.onograph.backup.FileMoverService fileMoverService40 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path18, path38);
    java.nio.file.Path path41 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path18);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory42.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory42.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory48.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory48.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment54 = factory48.bulBackupEnvironment();
    boolean boolean55 = backupEnvironment54.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional56 = backupEnvironment54.geicmaOptional();
    java.nio.file.Path path57 = backupEnvironment54.getPbPath();
    java.nio.file.Path path58 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path57);
    java.nio.file.Path path59 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path58);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory60.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory60.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory66.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory66.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment72 = factory66.bulBackupEnvironment();
    boolean boolean73 = backupEnvironment72.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional74 = backupEnvironment72.geicmaOptional();
    java.nio.file.Path path75 = backupEnvironment72.getPbPath();
    java.nio.file.Path path76 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path75);
    io.github.onograph.backup.FileMoverService fileMoverService77 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path58, path76);
    io.github.onograph.backup.FileMoverService fileMoverService78 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path18, path76);
    java.nio.file.Path path79 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path76);
    boolean boolean80 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path76);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(backupEnvironment15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(backupEnvironment35);
    org.junit.Assert.assertNotNull(databaseNamePattern36);
    org.junit.Assert.assertNotNull(socketAddress37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(fileMoverService40);
    org.junit.Assert.assertNotNull(path41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(backupEnvironment54);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional56);
    org.junit.Assert.assertNotNull(path57);
    org.junit.Assert.assertNotNull(path58);
    org.junit.Assert.assertNotNull(path59);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(backupEnvironment72);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional74);
    org.junit.Assert.assertNotNull(path75);
    org.junit.Assert.assertNotNull(path76);
    org.junit.Assert.assertNotNull(fileMoverService77);
    org.junit.Assert.assertNotNull(fileMoverService78);
    org.junit.Assert.assertNotNull(path79);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
  }

  @Test
  public void test0880() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0880");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.time.SystemNanoClock systemNanoClock5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.systemNanoClock(
        systemNanoClock5);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.progressMonitorFactory(
        progressMonitorFactory7);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.progressMonitorFactory(
        progressMonitorFactory9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.uLogProvider(
        logProvider11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator8.itraLogProvider(
        logProvider13);
    io.github.onograph.backup.BackupRunner backupRunner15 = generator14.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory16.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory22.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory22.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern29 = backupEnvironment28.getDatabaseNamePattern();
    boolean boolean30 = backupEnvironment28.getIsBftf();
    boolean boolean31 = backupEnvironment28.getIsCc();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern32 = backupEnvironment28.getDatabaseNamePattern();
    java.nio.file.Path path33 = backupEnvironment28.getRpPath();
    try {
      backupRunner15.excebcpForBa(backupEnvironment28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(backupRunner15);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
    org.junit.Assert.assertNotNull(databaseNamePattern29);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNotNull(databaseNamePattern32);
    org.junit.Assert.assertNotNull(path33);
  }

  @Test
  public void test0881() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0881");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.databaseNamePattern(
        databaseNamePattern9);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory6.shouldPrep(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory13.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory19.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment25 = factory19.bulBackupEnvironment();
    boolean boolean26 = backupEnvironment25.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional27 = backupEnvironment25.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress28 = backupEnvironment25.getSocketAddress();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional29 = backupEnvironment25.geicmaOptional();
    java.nio.file.Path path30 = backupEnvironment25.getPbPath();
    org.neo4j.memory.MemoryTracker memoryTracker31 = backupEnvironment25.getMemoryTracker();
    java.nio.file.Path path32 = backupEnvironment25.getRpPath();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern33 = backupEnvironment25.getDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory6.databaseNamePattern(
        databaseNamePattern33);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(backupEnvironment25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional27);
    org.junit.Assert.assertNotNull(socketAddress28);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional29);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertNotNull(memoryTracker31);
    org.junit.Assert.assertNotNull(path32);
    org.junit.Assert.assertNotNull(databaseNamePattern33);
    org.junit.Assert.assertNotNull(factory34);
  }

  @Test
  public void test0882() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0882");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker15 = backupEnvironment14.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment14.getDatabaseNamePattern();
    boolean boolean17 = backupEnvironment14.getIsBftf();
    java.nio.file.Path path18 = backupEnvironment14.getRpPath();
    java.nio.file.Path path19 = backupEnvironment14.getPbPath();
    try {
      backupIOService1.deedForPa(path19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(memoryTracker15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(path19);
  }

  @Test
  public void test0883() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0883");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.itraLogProvider(
        logProvider13);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator12.fFileSystemAbstraction(
        fileSystemAbstraction15);
    org.neo4j.logging.LogProvider logProvider17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator12.uLogProvider(
        logProvider17);
    org.neo4j.logging.LogProvider logProvider19 = null;
    io.github.onograph.backup.BackupRunner.Generator generator20 = generator18.uLogProvider(
        logProvider19);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
    org.junit.Assert.assertNotNull(generator20);
  }

  @Test
  public void test0884() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0884");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    io.github.onograph.backup.BackupRunner backupRunner7 = generator6.bulBackupRunner();
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.backup.BackupRunner.Generator generator9 = generator6.itraLogProvider(
        logProvider8);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    io.github.onograph.backup.BackupRunner.Generator generator11 = generator9.fFileSystemAbstraction(
        fileSystemAbstraction10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.backup.BackupRunner.Generator generator13 = generator9.monitors(monitors12);
    org.neo4j.logging.LogProvider logProvider14 = null;
    io.github.onograph.backup.BackupRunner.Generator generator15 = generator13.uLogProvider(
        logProvider14);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(backupRunner7);
    org.junit.Assert.assertNotNull(generator9);
    org.junit.Assert.assertNotNull(generator11);
    org.junit.Assert.assertNotNull(generator13);
    org.junit.Assert.assertNotNull(generator15);
  }

  @Test
  public void test0885() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0885");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isFtfb(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.miAuthMetaOptions(
        authMetaOptions9);
    org.neo4j.configuration.helpers.SocketAddress socketAddress11 = factory8.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory8.bulBackupEnvironment();
    java.nio.file.Path path13 = backupEnvironment12.getPbPath();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsRp();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNull(socketAddress11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(path13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
  }

  @Test
  public void test0886() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0886");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory6.wihadsBackupEnvironmentFactory(
        (-1), "database.id");
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = factory13.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
  }

  @Test
  public void test0887() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0887");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = factory4.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.shouldPrep(false);
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = factory13.getSocketAddress();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNull(socketAddress9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNull(socketAddress16);
  }

  @Test
  public void test0888() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0888");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.io.PrintStream printStream3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker17 = backupEnvironment16.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = backupEnvironment16.getDatabaseNamePattern();
    boolean boolean19 = backupEnvironment16.getIsBftf();
    java.nio.file.Path path20 = backupEnvironment16.getRpPath();
    java.nio.file.Path path21 = backupEnvironment16.getPbPath();
    java.nio.file.Path path22 = backupEnvironment16.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory29.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment35 = factory29.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern36 = backupEnvironment35.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress37 = backupEnvironment35.getSocketAddress();
    java.nio.file.Path path38 = backupEnvironment35.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory39.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory39.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory39.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory45.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment51 = factory45.bulBackupEnvironment();
    boolean boolean52 = backupEnvironment51.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional53 = backupEnvironment51.geicmaOptional();
    java.nio.file.Path path54 = backupEnvironment51.getPbPath();
    java.nio.file.Path path55 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path54);
    java.nio.file.Path path56 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path55);
    boolean boolean57 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path56);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory58.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory58.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory64.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory64.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment70 = factory64.bulBackupEnvironment();
    boolean boolean71 = backupEnvironment70.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional72 = backupEnvironment70.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional73 = backupEnvironment70.geicmaOptional();
    java.nio.file.Path path74 = backupEnvironment70.getPbPath();
    java.nio.file.Path path75 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path74);
    io.github.onograph.backup.FileMoverService fileMoverService76 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path56, path75);
    io.github.onograph.backup.FileMoverService fileMoverService77 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path38, path56);
    java.nio.file.Path path78 = fileMoverService77.filPath();
    org.neo4j.io.layout.DatabaseLayout databaseLayout79 = null;
    try {
      io.github.onograph.backup.GdbRestorer gdbRestorer80 = new io.github.onograph.backup.GdbRestorer(
          fileSystemAbstraction0, true, false, printStream3, path22, path78, databaseLayout79);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertNotNull(memoryTracker17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(backupEnvironment35);
    org.junit.Assert.assertNotNull(databaseNamePattern36);
    org.junit.Assert.assertNotNull(socketAddress37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(backupEnvironment51);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional53);
    org.junit.Assert.assertNotNull(path54);
    org.junit.Assert.assertNotNull(path55);
    org.junit.Assert.assertNotNull(path56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(backupEnvironment70);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional72);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional73);
    org.junit.Assert.assertNotNull(path74);
    org.junit.Assert.assertNotNull(path75);
    org.junit.Assert.assertNotNull(fileMoverService76);
    org.junit.Assert.assertNotNull(fileMoverService77);
    org.junit.Assert.assertNotNull(path78);
  }

  @Test
  public void test0889() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0889");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup5.isCc(true);
    io.github.onograph.backup.Backup backup9 = backup5.isCc(true);
    io.github.onograph.backup.Backup backup11 = backup5.isBftf(false);
    io.github.onograph.backup.Backup backup13 = backup5.isCc(false);
    io.github.onograph.backup.Backup backup15 = backup13.isBftf(false);
    java.io.OutputStream outputStream16 = null;
    try {
      io.github.onograph.backup.Backup backup17 = backup13.outputStream(outputStream16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: outputStream");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
    org.junit.Assert.assertNotNull(backup11);
    org.junit.Assert.assertNotNull(backup13);
    org.junit.Assert.assertNotNull(backup15);
  }

  @Test
  public void test0890() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0890");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean14 = backupEnvironment12.getIsBftf();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    java.nio.file.Path path17 = backupEnvironment12.getPbPath();
    org.neo4j.memory.MemoryTracker memoryTracker18 = backupEnvironment12.getMemoryTracker();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(memoryTracker18);
  }

  @Test
  public void test0891() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0891");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsRp();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = backupEnvironment12.getSocketAddress();
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = backupEnvironment12.getSocketAddress();
    org.neo4j.memory.MemoryTracker memoryTracker17 = backupEnvironment12.getMemoryTracker();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(socketAddress15);
    org.junit.Assert.assertNotNull(socketAddress16);
    org.junit.Assert.assertNotNull(memoryTracker17);
  }

  @Test
  public void test0892() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0892");
    }
    io.github.onograph.backup.BackupVerificationService backupVerificationService0 = io.github.onograph.backup.BackupVerificationService.NOO_BACKUP_VERIFICATION_SERVICE;
    org.neo4j.io.layout.DatabaseLayout databaseLayout1 = null;
    backupVerificationService0.chcsyForDa(databaseLayout1);
    org.neo4j.io.layout.DatabaseLayout databaseLayout3 = null;
    backupVerificationService0.chcsyForDa(databaseLayout3);
    org.neo4j.io.layout.DatabaseLayout databaseLayout5 = null;
    backupVerificationService0.chcsyForDa(databaseLayout5);
    org.neo4j.io.layout.DatabaseLayout databaseLayout7 = null;
    backupVerificationService0.chcsyForDa(databaseLayout7);
    org.neo4j.io.layout.DatabaseLayout databaseLayout9 = null;
    backupVerificationService0.chcsyForDa(databaseLayout9);
    org.neo4j.io.layout.DatabaseLayout databaseLayout11 = null;
    backupVerificationService0.chcsyForDa(databaseLayout11);
    org.junit.Assert.assertNotNull(backupVerificationService0);
  }

  @Test
  public void test0893() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0893");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional13 = backupEnvironment12.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional13);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
  }

  @Test
  public void test0894() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0894");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.monitoring.Monitors monitors5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator4.monitors(monitors5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator4.uLogProvider(
        logProvider7);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
  }

  @Test
  public void test0895() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0895");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path15 = backupEnvironment12.getRpPath();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker18 = backupEnvironment12.getMemoryTracker();
    java.nio.file.Path path19 = backupEnvironment12.getRpPath();
    boolean boolean20 = backupEnvironment12.getIsBftf();
    boolean boolean21 = backupEnvironment12.getIsBftf();
    boolean boolean22 = backupEnvironment12.getIsBftf();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertNotNull(socketAddress14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(memoryTracker18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
  }

  @Test
  public void test0896() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0896");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    org.neo4j.kernel.database.DatabaseId databaseId2 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config4 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.config(config4);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isRp(true);
    org.neo4j.configuration.Config config8 = factory5.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory5.isCc(true);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions11 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory5.miAuthMetaOptions(
        authMetaOptions11);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory13.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory19.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment25 = factory19.bulBackupEnvironment();
    boolean boolean26 = backupEnvironment25.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional27 = backupEnvironment25.geicmaOptional();
    java.nio.file.Path path28 = backupEnvironment25.getPbPath();
    java.nio.file.Path path29 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path28);
    java.nio.file.Path path30 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path29);
    boolean boolean31 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path30);
    java.nio.file.Path path32 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path30);
    java.nio.file.Path path33 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path32);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory37.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory37.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory43.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment49 = factory43.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern50 = backupEnvironment49.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress51 = backupEnvironment49.getSocketAddress();
    java.nio.file.Path path52 = backupEnvironment49.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory34.pbPath(path52);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory57.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory57.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory63.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory63.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment69 = factory63.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern70 = backupEnvironment69.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress71 = backupEnvironment69.getSocketAddress();
    java.nio.file.Path path72 = backupEnvironment69.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory54.pbPath(path72);
    io.github.onograph.backup.FileMoverService fileMoverService74 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path52, path72);
    java.nio.file.Path path75 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path72);
    io.github.onograph.backup.FileMoverService fileMoverService76 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path32, path75);
    java.nio.file.Path path77 = fileMoverService76.filPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory5.prPath(path77);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config80 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = factory79.config(config80);
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory81.isRp(true);
    org.neo4j.configuration.Config config84 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory85 = factory83.config(config84);
    org.neo4j.configuration.helpers.SocketAddress socketAddress86 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory87 = factory83.wihadsBackupEnvironmentFactory(
        socketAddress86);
    org.neo4j.configuration.helpers.SocketAddress socketAddress88 = factory83.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory90 = factory83.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory92 = factory90.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment93 = factory92.bulBackupEnvironment();
    java.nio.file.Path path94 = backupEnvironment93.getPbPath();
    io.github.onograph.backup.FileMoverService fileMoverService95 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path77, path94);
    try {
      gdbIdRepo1.wrdaiForDaPa(databaseId2, path77);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(config8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(backupEnvironment25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional27);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertNotNull(path29);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNotNull(path32);
    org.junit.Assert.assertNotNull(path33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(backupEnvironment49);
    org.junit.Assert.assertNotNull(databaseNamePattern50);
    org.junit.Assert.assertNotNull(socketAddress51);
    org.junit.Assert.assertNotNull(path52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(backupEnvironment69);
    org.junit.Assert.assertNotNull(databaseNamePattern70);
    org.junit.Assert.assertNotNull(socketAddress71);
    org.junit.Assert.assertNotNull(path72);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(fileMoverService74);
    org.junit.Assert.assertNotNull(path75);
    org.junit.Assert.assertNotNull(fileMoverService76);
    org.junit.Assert.assertNotNull(path77);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(factory81);
    org.junit.Assert.assertNotNull(factory83);
    org.junit.Assert.assertNotNull(factory85);
    org.junit.Assert.assertNotNull(factory87);
    org.junit.Assert.assertNull(socketAddress88);
    org.junit.Assert.assertNotNull(factory90);
    org.junit.Assert.assertNotNull(factory92);
    org.junit.Assert.assertNotNull(backupEnvironment93);
    org.junit.Assert.assertNotNull(path94);
    org.junit.Assert.assertNotNull(fileMoverService95);
  }

  @Test
  public void test0897() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0897");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator2.progressMonitorFactory(
        progressMonitorFactory9);
    io.github.onograph.backup.BackupRunner backupRunner11 = generator2.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory12.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory12.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory18.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment24 = factory18.bulBackupEnvironment();
    boolean boolean25 = backupEnvironment24.getIsBftf();
    org.neo4j.memory.MemoryTracker memoryTracker26 = backupEnvironment24.getMemoryTracker();
    try {
      backupRunner11.excebcpForBa(backupEnvironment24);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(backupRunner11);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(backupEnvironment24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(memoryTracker26);
  }

  @Test
  public void test0898() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0898");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup3.isBftf(false);
    io.github.onograph.backup.Backup backup9 = backup7.isCc(true);
    io.github.onograph.backup.Backup backup11 = backup7.isCc(true);
    io.github.onograph.backup.Backup backup13 = backup7.isCc(true);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
    org.junit.Assert.assertNotNull(backup11);
    org.junit.Assert.assertNotNull(backup13);
  }

  @Test
  public void test0899() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0899");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory4.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config17 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.config(config17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isRp(true);
    org.neo4j.configuration.Config config21 = factory18.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory18.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    java.nio.file.Path path27 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory24.prPath(path27);
    java.nio.file.Path path29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.prPath(path29);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    java.nio.file.Path path34 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory31.prPath(path34);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config37 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.config(config37);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory38.isRp(true);
    org.neo4j.configuration.Config config41 = factory38.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory31.config(config41);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory30.config(config41);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory23.config(config41);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction45 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory46.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory46.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory52.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment58 = factory52.bulBackupEnvironment();
    boolean boolean59 = backupEnvironment58.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional60 = backupEnvironment58.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern61 = backupEnvironment58.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional62 = backupEnvironment58.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker63 = backupEnvironment58.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache64 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager65 = new io.github.onograph.backup.BackupRestorationManager(
        config41, fileSystemAbstraction45, memoryTracker63, pageCache64);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory13.config(config41);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(config21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(config41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(backupEnvironment58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional60);
    org.junit.Assert.assertNotNull(databaseNamePattern61);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional62);
    org.junit.Assert.assertNotNull(memoryTracker63);
    org.junit.Assert.assertNotNull(factory66);
  }

  @Test
  public void test0900() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0900");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment14.getDatabaseNamePattern();
    boolean boolean16 = backupEnvironment14.getIsBftf();
    boolean boolean17 = backupEnvironment14.getIsBftf();
    java.nio.file.Path path18 = backupEnvironment14.getRpPath();
    java.nio.file.Path path19 = backupEnvironment14.getRpPath();
    java.nio.file.Path path20 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path19);
    try {
      boolean boolean21 = backupIOService1.isExsForPa(path19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
  }

  @Test
  public void test0901() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0901");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.databaseNamePattern(
        databaseNamePattern9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    java.nio.file.Path path18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory11.pbPath(path18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config21 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.config(config21);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory22.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory22.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory29.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory29.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory35.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment41 = factory35.bulBackupEnvironment();
    boolean boolean42 = backupEnvironment41.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional43 = backupEnvironment41.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern44 = backupEnvironment41.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional45 = backupEnvironment41.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker46 = backupEnvironment41.getMemoryTracker();
    boolean boolean47 = backupEnvironment41.getIsRp();
    java.nio.file.Path path48 = backupEnvironment41.getPbPath();
    java.nio.file.Path path49 = backupEnvironment41.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory22.pbPath(path49);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory11.pbPath(path49);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory10.pbPath(path49);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(backupEnvironment41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional43);
    org.junit.Assert.assertNotNull(databaseNamePattern44);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional45);
    org.junit.Assert.assertNotNull(memoryTracker46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(path48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory52);
  }

  @Test
  public void test0902() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0902");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    java.nio.file.Path path9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory2.pbPath(path9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern24 = backupEnvironment23.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress25 = backupEnvironment23.getSocketAddress();
    java.nio.file.Path path26 = backupEnvironment23.getRpPath();
    boolean boolean27 = backupEnvironment23.getIsBftf();
    java.nio.file.Path path28 = backupEnvironment23.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory10.prPath(path28);
    java.lang.String[] strArray33 = new java.lang.String[]{"hi!", "", ""};
    java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
    boolean boolean35 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList34, strArray33);
    try {
      backupMetadataRepository1.wrtForPaLi(path28, (java.util.List<java.lang.String>) strList34);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertNotNull(databaseNamePattern24);
    org.junit.Assert.assertNotNull(socketAddress25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(strArray33);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
  }

  @Test
  public void test0903() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0903");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory3.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory3.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory9.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment15 = factory9.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment15.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment15.getSocketAddress();
    java.nio.file.Path path18 = backupEnvironment15.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory0.pbPath(path18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory29.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment35 = factory29.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern36 = backupEnvironment35.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress37 = backupEnvironment35.getSocketAddress();
    java.nio.file.Path path38 = backupEnvironment35.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory20.pbPath(path38);
    io.github.onograph.backup.FileMoverService fileMoverService40 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path18, path38);
    java.nio.file.Path path41 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path38);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config43 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.config(config43);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isRp(true);
    org.neo4j.configuration.Config config47 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.config(config47);
    org.neo4j.configuration.helpers.SocketAddress socketAddress49 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory46.wihadsBackupEnvironmentFactory(
        socketAddress49);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory54.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory54.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory60.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment66 = factory60.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern67 = backupEnvironment66.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress68 = backupEnvironment66.getSocketAddress();
    java.nio.file.Path path69 = backupEnvironment66.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory51.pbPath(path69);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory71.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory74.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory74.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory74.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory80.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory85 = factory80.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment86 = factory80.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern87 = backupEnvironment86.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress88 = backupEnvironment86.getSocketAddress();
    java.nio.file.Path path89 = backupEnvironment86.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory90 = factory71.pbPath(path89);
    io.github.onograph.backup.FileMoverService fileMoverService91 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path69, path89);
    io.github.onograph.backup.BackupEnvironment.Factory factory92 = factory46.pbPath(path89);
    io.github.onograph.backup.FileMoverService fileMoverService93 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path38, path89);
    java.nio.file.Path path94 = fileMoverService93.filPath();
    java.nio.file.Path path95 = fileMoverService93.filPath();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(backupEnvironment15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(backupEnvironment35);
    org.junit.Assert.assertNotNull(databaseNamePattern36);
    org.junit.Assert.assertNotNull(socketAddress37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(fileMoverService40);
    org.junit.Assert.assertNotNull(path41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(backupEnvironment66);
    org.junit.Assert.assertNotNull(databaseNamePattern67);
    org.junit.Assert.assertNotNull(socketAddress68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(factory85);
    org.junit.Assert.assertNotNull(backupEnvironment86);
    org.junit.Assert.assertNotNull(databaseNamePattern87);
    org.junit.Assert.assertNotNull(socketAddress88);
    org.junit.Assert.assertNotNull(path89);
    org.junit.Assert.assertNotNull(factory90);
    org.junit.Assert.assertNotNull(fileMoverService91);
    org.junit.Assert.assertNotNull(factory92);
    org.junit.Assert.assertNotNull(fileMoverService93);
    org.junit.Assert.assertNotNull(path94);
    org.junit.Assert.assertNotNull(path95);
  }

  @Test
  public void test0904() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0904");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config6 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.config(config6);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isRp(true);
    org.neo4j.configuration.Config config10 = factory7.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory0.config(config10);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction12 = null;
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction14 = null;
    java.nio.file.Path[] pathArray15 = new java.nio.file.Path[]{};
    java.util.LinkedHashSet<java.nio.file.Path> pathSet16 = new java.util.LinkedHashSet<java.nio.file.Path>();
    boolean boolean17 = java.util.Collections.addAll(
        (java.util.Collection<java.nio.file.Path>) pathSet16, pathArray15);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta18 = new io.github.onograph.backup.BackupRestoreMeta(
        config13, fileSystemAbstraction14, (java.util.Set<java.nio.file.Path>) pathSet16);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta19 = new io.github.onograph.backup.BackupRestoreMeta(
        config10, fileSystemAbstraction12, (java.util.Set<java.nio.file.Path>) pathSet16);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.logging.LogProvider logProvider22 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config24 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.config(config24);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isRp(true);
    org.neo4j.configuration.Config config28 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.config(config28);
    org.neo4j.configuration.helpers.SocketAddress socketAddress30 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.wihadsBackupEnvironmentFactory(
        socketAddress30);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory32.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory35.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory35.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory41.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment47 = factory41.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern48 = backupEnvironment47.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress49 = backupEnvironment47.getSocketAddress();
    java.nio.file.Path path50 = backupEnvironment47.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory32.pbPath(path50);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory52.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory55.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory55.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory55.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory61.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory61.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment67 = factory61.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern68 = backupEnvironment67.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress69 = backupEnvironment67.getSocketAddress();
    java.nio.file.Path path70 = backupEnvironment67.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory52.pbPath(path70);
    io.github.onograph.backup.FileMoverService fileMoverService72 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path50, path70);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory27.pbPath(path70);
    boolean boolean74 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path70);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory75 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl76 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config10, consistencyFlags20, fileSystemAbstraction21, logProvider22, path70,
        progressMonitorFactory75);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(config10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(pathArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(backupEnvironment47);
    org.junit.Assert.assertNotNull(databaseNamePattern48);
    org.junit.Assert.assertNotNull(socketAddress49);
    org.junit.Assert.assertNotNull(path50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(backupEnvironment67);
    org.junit.Assert.assertNotNull(databaseNamePattern68);
    org.junit.Assert.assertNotNull(socketAddress69);
    org.junit.Assert.assertNotNull(path70);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(fileMoverService72);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
  }

  @Test
  public void test0905() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0905");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.time.SystemNanoClock systemNanoClock5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.systemNanoClock(
        systemNanoClock5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.monitors(monitors7);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.progressMonitorFactory(
        progressMonitorFactory9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.progressMonitorFactory(
        progressMonitorFactory11);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
  }

  @Test
  public void test0906() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0906");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory3 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = factory3.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory3.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory3.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory9.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment15 = factory9.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment15.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment15.getSocketAddress();
    java.nio.file.Path path18 = backupEnvironment15.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory0.pbPath(path18);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory29.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment35 = factory29.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern36 = backupEnvironment35.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress37 = backupEnvironment35.getSocketAddress();
    java.nio.file.Path path38 = backupEnvironment35.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory20.pbPath(path38);
    io.github.onograph.backup.FileMoverService fileMoverService40 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path18, path38);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory41.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory41.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory41.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory47.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment53 = factory47.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern54 = backupEnvironment53.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress55 = backupEnvironment53.getSocketAddress();
    java.nio.file.Path path56 = backupEnvironment53.getPbPath();
    io.github.onograph.backup.FileMoverService fileMoverService57 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path38, path56);
    java.nio.file.Path path58 = fileMoverService57.filPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory59.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory59.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory59.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory65.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory65.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment71 = factory65.bulBackupEnvironment();
    boolean boolean72 = backupEnvironment71.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional73 = backupEnvironment71.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern74 = backupEnvironment71.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional75 = backupEnvironment71.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker76 = backupEnvironment71.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress77 = backupEnvironment71.getSocketAddress();
    java.nio.file.Path path78 = backupEnvironment71.getRpPath();
    java.nio.file.Path path79 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path78);
    io.github.onograph.backup.FileMoverService fileMoverService80 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path58, path78);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory3);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(backupEnvironment15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(backupEnvironment35);
    org.junit.Assert.assertNotNull(databaseNamePattern36);
    org.junit.Assert.assertNotNull(socketAddress37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(fileMoverService40);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(backupEnvironment53);
    org.junit.Assert.assertNotNull(databaseNamePattern54);
    org.junit.Assert.assertNotNull(socketAddress55);
    org.junit.Assert.assertNotNull(path56);
    org.junit.Assert.assertNotNull(fileMoverService57);
    org.junit.Assert.assertNotNull(path58);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(backupEnvironment71);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional73);
    org.junit.Assert.assertNotNull(databaseNamePattern74);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional75);
    org.junit.Assert.assertNotNull(memoryTracker76);
    org.junit.Assert.assertNotNull(socketAddress77);
    org.junit.Assert.assertNotNull(path78);
    org.junit.Assert.assertNotNull(path79);
    org.junit.Assert.assertNotNull(fileMoverService80);
  }

  @Test
  public void test0907() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0907");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory4.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory13.wihadsBackupEnvironmentFactory(
        (int) 'a', "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory21.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory21.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory27.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment33 = factory27.bulBackupEnvironment();
    boolean boolean34 = backupEnvironment33.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional35 = backupEnvironment33.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress36 = backupEnvironment33.getSocketAddress();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional37 = backupEnvironment33.geicmaOptional();
    java.nio.file.Path path38 = backupEnvironment33.getPbPath();
    org.neo4j.memory.MemoryTracker memoryTracker39 = backupEnvironment33.getMemoryTracker();
    java.nio.file.Path path40 = backupEnvironment33.getRpPath();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern41 = backupEnvironment33.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress42 = backupEnvironment33.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory20.wihadsBackupEnvironmentFactory(
        socketAddress42);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(backupEnvironment33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional35);
    org.junit.Assert.assertNotNull(socketAddress36);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(memoryTracker39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(databaseNamePattern41);
    org.junit.Assert.assertNotNull(socketAddress42);
    org.junit.Assert.assertNotNull(factory43);
  }

  @Test
  public void test0908() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0908");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config6 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.config(config6);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isRp(true);
    org.neo4j.configuration.Config config10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.config(config10);
    org.neo4j.configuration.helpers.SocketAddress socketAddress12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.wihadsBackupEnvironmentFactory(
        socketAddress12);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory17.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory17.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory23.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment29 = factory23.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern30 = backupEnvironment29.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress31 = backupEnvironment29.getSocketAddress();
    java.nio.file.Path path32 = backupEnvironment29.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory14.pbPath(path32);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory37.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory37.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory43.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment49 = factory43.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern50 = backupEnvironment49.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress51 = backupEnvironment49.getSocketAddress();
    java.nio.file.Path path52 = backupEnvironment49.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory34.pbPath(path52);
    io.github.onograph.backup.FileMoverService fileMoverService54 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path32, path52);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory9.pbPath(path52);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory4.prPath(path52);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory4.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isGcc(
        (java.lang.Boolean) false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(backupEnvironment29);
    org.junit.Assert.assertNotNull(databaseNamePattern30);
    org.junit.Assert.assertNotNull(socketAddress31);
    org.junit.Assert.assertNotNull(path32);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(backupEnvironment49);
    org.junit.Assert.assertNotNull(databaseNamePattern50);
    org.junit.Assert.assertNotNull(socketAddress51);
    org.junit.Assert.assertNotNull(path52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(fileMoverService54);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
  }

  @Test
  public void test0909() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0909");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
  }

  @Test
  public void test0910() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0910");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.FileMover fileMover1 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment14.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path17);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream19 = fileMover1._trrfrmnStream(
        path17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory23.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory29.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment35 = factory29.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern36 = backupEnvironment35.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress37 = backupEnvironment35.getSocketAddress();
    java.nio.file.Path path38 = backupEnvironment35.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory20.pbPath(path38);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory43.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory43.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory49.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory49.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment55 = factory49.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern56 = backupEnvironment55.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress57 = backupEnvironment55.getSocketAddress();
    java.nio.file.Path path58 = backupEnvironment55.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory40.pbPath(path58);
    io.github.onograph.backup.FileMoverService fileMoverService60 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path38, path58);
    java.nio.file.Path path61 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path38);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream62 = fileMover1._trrfrmnStream(
        path61);
    boolean boolean63 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path61);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(fileMoverServiceStream19);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(backupEnvironment35);
    org.junit.Assert.assertNotNull(databaseNamePattern36);
    org.junit.Assert.assertNotNull(socketAddress37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(backupEnvironment55);
    org.junit.Assert.assertNotNull(databaseNamePattern56);
    org.junit.Assert.assertNotNull(socketAddress57);
    org.junit.Assert.assertNotNull(path58);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(fileMoverService60);
    org.junit.Assert.assertNotNull(path61);
    org.junit.Assert.assertNotNull(fileMoverServiceStream62);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
  }

  @Test
  public void test0911() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0911");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config6 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.config(config6);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isRp(true);
    org.neo4j.configuration.Config config10 = factory7.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory0.config(config10);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction12 = null;
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction14 = null;
    java.nio.file.Path[] pathArray15 = new java.nio.file.Path[]{};
    java.util.LinkedHashSet<java.nio.file.Path> pathSet16 = new java.util.LinkedHashSet<java.nio.file.Path>();
    boolean boolean17 = java.util.Collections.addAll(
        (java.util.Collection<java.nio.file.Path>) pathSet16, pathArray15);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta18 = new io.github.onograph.backup.BackupRestoreMeta(
        config13, fileSystemAbstraction14, (java.util.Set<java.nio.file.Path>) pathSet16);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta19 = new io.github.onograph.backup.BackupRestoreMeta(
        config10, fileSystemAbstraction12, (java.util.Set<java.nio.file.Path>) pathSet16);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    java.nio.file.Path[] pathArray21 = new java.nio.file.Path[]{};
    java.util.LinkedHashSet<java.nio.file.Path> pathSet22 = new java.util.LinkedHashSet<java.nio.file.Path>();
    boolean boolean23 = java.util.Collections.addAll(
        (java.util.Collection<java.nio.file.Path>) pathSet22, pathArray21);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta24 = new io.github.onograph.backup.BackupRestoreMeta(
        config10, fileSystemAbstraction20, (java.util.Set<java.nio.file.Path>) pathSet22);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.isCc(false);
    java.nio.file.Path path29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory26.prPath(path29);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory26.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory33.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory33.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory39.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory39.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment45 = factory39.bulBackupEnvironment();
    boolean boolean46 = backupEnvironment45.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional47 = backupEnvironment45.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern48 = backupEnvironment45.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional49 = backupEnvironment45.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker50 = backupEnvironment45.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress51 = backupEnvironment45.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory32.wihadsBackupEnvironmentFactory(
        socketAddress51);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions56 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory53.miAuthMetaOptions(
        authMetaOptions56);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions60 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory59.miAuthMetaOptions(
        authMetaOptions60);
    org.neo4j.configuration.Config config62 = factory61.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory52.config(config62);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction64 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory65.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory65.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory65.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory71.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory71.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment77 = factory71.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern78 = backupEnvironment77.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress79 = backupEnvironment77.getSocketAddress();
    java.nio.file.Path path80 = backupEnvironment77.getRpPath();
    boolean boolean81 = backupEnvironment77.getIsBftf();
    java.nio.file.Path path82 = backupEnvironment77.getRpPath();
    java.nio.file.Path path83 = backupEnvironment77.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker84 = backupEnvironment77.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache85 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager86 = new io.github.onograph.backup.BackupRestorationManager(
        config62, fileSystemAbstraction64, memoryTracker84, pageCache85);
    org.neo4j.io.pagecache.PageCache pageCache87 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager88 = new io.github.onograph.backup.BackupRestorationManager(
        config10, fileSystemAbstraction25, memoryTracker84, pageCache87);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(config10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(pathArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(pathArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(backupEnvironment45);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional47);
    org.junit.Assert.assertNotNull(databaseNamePattern48);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional49);
    org.junit.Assert.assertNotNull(memoryTracker50);
    org.junit.Assert.assertNotNull(socketAddress51);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(config62);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(backupEnvironment77);
    org.junit.Assert.assertNotNull(databaseNamePattern78);
    org.junit.Assert.assertNotNull(socketAddress79);
    org.junit.Assert.assertNotNull(path80);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    org.junit.Assert.assertNotNull(path82);
    org.junit.Assert.assertNotNull(path83);
    org.junit.Assert.assertNotNull(memoryTracker84);
  }

  @Test
  public void test0912() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0912");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup5.isCc(true);
    io.github.onograph.backup.Backup backup9 = backup7.isBftf(false);
    io.github.onograph.backup.Backup backup11 = backup7.isCc(false);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
    org.junit.Assert.assertNotNull(backup11);
  }

  @Test
  public void test0913() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0913");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    boolean boolean15 = backupEnvironment14.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment14.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment14.getSocketAddress();
    boolean boolean18 = backupEnvironment14.getIsCc();
    java.nio.file.Path path19 = backupEnvironment14.getRpPath();
    java.lang.String[] strArray22 = new java.lang.String[]{"database.id", "database.id"};
    java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
    boolean boolean24 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList23, strArray22);
    try {
      backupMetadataRepository1.wrtForPaLi(path19, (java.util.List<java.lang.String>) strList23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(strArray22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
  }

  @Test
  public void test0914() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0914");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isIcc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.Config config5 = factory4.gecfConfig();
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags6 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    boolean boolean22 = backupEnvironment21.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional23 = backupEnvironment21.geicmaOptional();
    java.nio.file.Path path24 = backupEnvironment21.getPbPath();
    java.nio.file.Path path25 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory27 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl28 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config5, consistencyFlags6, fileSystemAbstraction7, logProvider8, path26,
        progressMonitorFactory27);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory30.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory30.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory36.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment42 = factory36.bulBackupEnvironment();
    boolean boolean43 = backupEnvironment42.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional44 = backupEnvironment42.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern45 = backupEnvironment42.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional46 = backupEnvironment42.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker47 = backupEnvironment42.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache48 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager49 = new io.github.onograph.backup.BackupRestorationManager(
        config5, fileSystemAbstraction29, memoryTracker47, pageCache48);
    org.neo4j.io.layout.DatabaseLayout databaseLayout50 = null;
    try {
      backupRestorationManager49.reorForDa(databaseLayout50);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(backupEnvironment42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional44);
    org.junit.Assert.assertNotNull(databaseNamePattern45);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional46);
    org.junit.Assert.assertNotNull(memoryTracker47);
  }

  @Test
  public void test0915() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0915");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.prPath(path5);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern7 = factory6.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory6.isRp(false);
    java.nio.file.Path path10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.pbPath(path10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isRp(false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = factory13.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory13.isSicc(
        (java.lang.Boolean) false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(databaseNamePattern7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertNotNull(factory16);
  }

  @Test
  public void test0916() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0916");
    }
    try {
      io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup(
          (int) (byte) -1, "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: Port is expected to be positive and less than or equal to 65535 but was: -1");
    } catch (java.lang.IllegalArgumentException e) {
    }
  }

  @Test
  public void test0917() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0917");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.shouldPrep(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
  }

  @Test
  public void test0918() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0918");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.miAuthMetaOptions(
        authMetaOptions12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isIcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = factory15.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory4.databaseNamePattern(
        databaseNamePattern18);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isGcc(
        (java.lang.Boolean) false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
  }

  @Test
  public void test0919() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0919");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.systemNanoClock(
        systemNanoClock7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.monitors(monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator8.monitors(monitors13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator8.uLogProvider(
        logProvider15);
    io.github.onograph.backup.BackupRunner backupRunner17 = generator16.bulBackupRunner();
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(backupRunner17);
  }

  @Test
  public void test0920() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0920");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.itraLogProvider(
        logProvider11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.uLogProvider(
        logProvider13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator12.itraLogProvider(
        logProvider15);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
  }

  @Test
  public void test0921() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0921");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.prPath(path5);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern7 = factory6.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory8.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.isRp(false);
    java.nio.file.Path path18 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.prPath(path18);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern20 = factory19.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config21 = factory19.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory12.config(config21);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory6.config(config21);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags24 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction25 = null;
    org.neo4j.logging.LogProvider logProvider26 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker40 = backupEnvironment39.getMemoryTracker();
    boolean boolean41 = backupEnvironment39.getIsRp();
    java.nio.file.Path path42 = backupEnvironment39.getPbPath();
    java.nio.file.Path path43 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory44 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl45 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config21, consistencyFlags24, fileSystemAbstraction25, logProvider26, path43,
        progressMonitorFactory44);
    org.neo4j.io.layout.DatabaseLayout databaseLayout46 = null;
    try {
      backupVerificationServiceImpl45.chcsyForDa(databaseLayout46);
      org.junit.Assert.fail(
          "Expected exception of type io.github.onograph.backup.BackupVerificationErrorException; message: *** Error:  2915f124-983c-439d-b1ae-a9c5ad06642b");
    } catch (io.github.onograph.backup.BackupVerificationErrorException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(databaseNamePattern7);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(databaseNamePattern20);
    org.junit.Assert.assertNotNull(config21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertNotNull(memoryTracker40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(path43);
  }

  @Test
  public void test0922() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0922");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    java.nio.file.Path path12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.prPath(path12);
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.wihadsBackupEnvironmentFactory(
        socketAddress14);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config17 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.config(config17);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isRp(true);
    org.neo4j.configuration.Config config21 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.config(config21);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory20.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions28 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory25.miAuthMetaOptions(
        authMetaOptions28);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isIcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern34 = factory31.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory20.databaseNamePattern(
        databaseNamePattern34);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory13.databaseNamePattern(
        databaseNamePattern34);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory4.databaseNamePattern(
        databaseNamePattern34);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory38.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory38.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory38.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory44.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment50 = factory44.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker51 = backupEnvironment50.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern52 = backupEnvironment50.getDatabaseNamePattern();
    boolean boolean53 = backupEnvironment50.getIsBftf();
    java.nio.file.Path path54 = backupEnvironment50.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory4.prPath(path54);
    java.lang.Class<?> wildcardClass56 = factory4.getClass();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(databaseNamePattern34);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(backupEnvironment50);
    org.junit.Assert.assertNotNull(memoryTracker51);
    org.junit.Assert.assertNotNull(databaseNamePattern52);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    org.junit.Assert.assertNotNull(path54);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(wildcardClass56);
  }

  @Test
  public void test0923() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0923");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = setupForBackupRestorationCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType2 = setupForBackupRestorationCommandProvider0.commandType();
    int int3 = setupForBackupRestorationCommandProvider0.getPriority();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
  }

  @Test
  public void test0924() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0924");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.Config config5 = factory4.gecfConfig();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
  }

  @Test
  public void test0925() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0925");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isRp(true);
    org.neo4j.configuration.Config config14 = factory11.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory4.config(config14);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    io.github.onograph.cluster.raft.module.cuprot.LifecycleCatchupManagerImpl lifecycleCatchupManagerImpl17 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler18 = null;
    org.neo4j.logging.LogProvider logProvider19 = null;
    org.neo4j.monitoring.Monitors monitors20 = null;
    org.neo4j.io.pagecache.PageCache pageCache21 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer22 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock23 = null;
    try {
      io.github.onograph.backup.RemoteBackupManager remoteBackupManager24 = new io.github.onograph.backup.RemoteBackupManager(
          config14, fileSystemAbstraction16, lifecycleCatchupManagerImpl17, jobScheduler18,
          logProvider19, monitors20, pageCache21, pageCacheTracer22, systemNanoClock23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(config14);
    org.junit.Assert.assertNotNull(factory15);
  }

  @Test
  public void test0926() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0926");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator2.progressMonitorFactory(
        progressMonitorFactory9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator2.monitors(monitors11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator2.monitors(monitors13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0927() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0927");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config6 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.config(config6);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isRp(true);
    org.neo4j.configuration.Config config10 = factory7.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory0.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory0.shouldPrep(false);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction14 = null;
    io.github.onograph.backup.FileMover fileMover15 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction14);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory16.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory22.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory22.bulBackupEnvironment();
    boolean boolean29 = backupEnvironment28.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional30 = backupEnvironment28.geicmaOptional();
    java.nio.file.Path path31 = backupEnvironment28.getPbPath();
    java.nio.file.Path path32 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path31);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream33 = fileMover15._trrfrmnStream(
        path31);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory37.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory37.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory43.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment49 = factory43.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern50 = backupEnvironment49.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress51 = backupEnvironment49.getSocketAddress();
    java.nio.file.Path path52 = backupEnvironment49.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory34.pbPath(path52);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory57.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory57.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory63.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory63.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment69 = factory63.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern70 = backupEnvironment69.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress71 = backupEnvironment69.getSocketAddress();
    java.nio.file.Path path72 = backupEnvironment69.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory54.pbPath(path72);
    io.github.onograph.backup.FileMoverService fileMoverService74 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path52, path72);
    java.nio.file.Path path75 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path52);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream76 = fileMover15._trrfrmnStream(
        path75);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory13.prPath(path75);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory13.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment80 = factory13.bulBackupEnvironment();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(config10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional30);
    org.junit.Assert.assertNotNull(path31);
    org.junit.Assert.assertNotNull(path32);
    org.junit.Assert.assertNotNull(fileMoverServiceStream33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(backupEnvironment49);
    org.junit.Assert.assertNotNull(databaseNamePattern50);
    org.junit.Assert.assertNotNull(socketAddress51);
    org.junit.Assert.assertNotNull(path52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(backupEnvironment69);
    org.junit.Assert.assertNotNull(databaseNamePattern70);
    org.junit.Assert.assertNotNull(socketAddress71);
    org.junit.Assert.assertNotNull(path72);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(fileMoverService74);
    org.junit.Assert.assertNotNull(path75);
    org.junit.Assert.assertNotNull(fileMoverServiceStream76);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(backupEnvironment80);
  }

  @Test
  public void test0928() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0928");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment14.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = backupEnvironment14.getSocketAddress();
    java.nio.file.Path path17 = backupEnvironment14.getRpPath();
    boolean boolean18 = backupEnvironment14.getIsBftf();
    java.nio.file.Path path19 = backupEnvironment14.getRpPath();
    java.nio.file.Path path20 = backupEnvironment14.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker21 = backupEnvironment14.getMemoryTracker();
    java.nio.file.Path path22 = backupEnvironment14.getPbPath();
    java.nio.file.Path path23 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path22);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory24.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory24.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory30.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment36 = factory30.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern37 = backupEnvironment36.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress38 = backupEnvironment36.getSocketAddress();
    java.nio.file.Path path39 = backupEnvironment36.getRpPath();
    java.nio.file.Path path40 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path39);
    java.nio.file.Path path41 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path39);
    io.github.onograph.backup.FileMoverService fileMoverService42 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path23, path39);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional43 = gdbIdRepo1.reddtaiOptional(
          path39);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertNotNull(socketAddress16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(memoryTracker21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(backupEnvironment36);
    org.junit.Assert.assertNotNull(databaseNamePattern37);
    org.junit.Assert.assertNotNull(socketAddress38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(path41);
    org.junit.Assert.assertNotNull(fileMoverService42);
  }

  @Test
  public void test0929() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0929");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isIcc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.Config config5 = factory4.gecfConfig();
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags6 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    boolean boolean22 = backupEnvironment21.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional23 = backupEnvironment21.geicmaOptional();
    java.nio.file.Path path24 = backupEnvironment21.getPbPath();
    java.nio.file.Path path25 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory27 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl28 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config5, consistencyFlags6, fileSystemAbstraction7, logProvider8, path26,
        progressMonitorFactory27);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory30.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory30.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory36.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory36.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment42 = factory36.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern43 = backupEnvironment42.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress44 = backupEnvironment42.getSocketAddress();
    java.nio.file.Path path45 = backupEnvironment42.getRpPath();
    boolean boolean46 = backupEnvironment42.getIsBftf();
    java.nio.file.Path path47 = backupEnvironment42.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker48 = backupEnvironment42.getMemoryTracker();
    java.nio.file.Path path49 = backupEnvironment42.getRpPath();
    boolean boolean50 = backupEnvironment42.getIsBftf();
    org.neo4j.memory.MemoryTracker memoryTracker51 = backupEnvironment42.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache52 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager53 = new io.github.onograph.backup.BackupRestorationManager(
        config5, fileSystemAbstraction29, memoryTracker51, pageCache52);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(backupEnvironment42);
    org.junit.Assert.assertNotNull(databaseNamePattern43);
    org.junit.Assert.assertNotNull(socketAddress44);
    org.junit.Assert.assertNotNull(path45);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    org.junit.Assert.assertNotNull(path47);
    org.junit.Assert.assertNotNull(memoryTracker48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertNotNull(memoryTracker51);
  }

  @Test
  public void test0930() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0930");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.config(config3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    org.neo4j.configuration.Config config7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.config(config7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.config(config12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isRp(true);
    org.neo4j.configuration.Config config16 = factory13.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory6.config(config16);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.logging.LogProvider logProvider20 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config22 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.config(config22);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern28 = factory23.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory23.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config32 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.config(config32);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isRp(true);
    org.neo4j.configuration.Config config36 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.config(config36);
    org.neo4j.configuration.helpers.SocketAddress socketAddress38 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory35.wihadsBackupEnvironmentFactory(
        socketAddress38);
    org.neo4j.configuration.helpers.SocketAddress socketAddress40 = factory35.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory35.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment45 = factory44.bulBackupEnvironment();
    java.nio.file.Path path46 = backupEnvironment45.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory23.prPath(path46);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory48 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl49 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config16, consistencyFlags18, fileSystemAbstraction19, logProvider20, path46,
        progressMonitorFactory48);
    org.neo4j.logging.LogProvider logProvider50 = null;
    org.neo4j.io.pagecache.PageCache pageCache51 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer52 = null;
    try {
      io.github.onograph.backup.BackupMetaService backupMetaService53 = new io.github.onograph.backup.BackupMetaService(
          fileSystemAbstraction0, "", path46, logProvider50, pageCache51, pageCacheTracer52);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(config16);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(databaseNamePattern28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNull(socketAddress40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(backupEnvironment45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(factory47);
  }

  @Test
  public void test0931() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0931");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.miAuthMetaOptions(
        authMetaOptions5);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory6.wihadsBackupEnvironmentFactory(
        (int) (short) 100, "");
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isGcc(
        (java.lang.Boolean) false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
  }

  @Test
  public void test0932() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0932");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.config(config8);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = factory9.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory2.databaseNamePattern(
        databaseNamePattern14);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isSicc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.Config config18 = factory15.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.logging.LogProvider logProvider20 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock22 = null;
    try {
      io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler23 = io.github.onograph.backup.DefaultBackupServiceHandler.strliclDefaultBackupServiceHandler(
          config18, fileSystemAbstraction19, logProvider20, pageCacheTracer21, systemNanoClock22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(config18);
  }

  @Test
  public void test0933() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0933");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    boolean boolean20 = backupEnvironment19.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional21 = backupEnvironment19.geicmaOptional();
    java.nio.file.Path path22 = backupEnvironment19.getPbPath();
    java.nio.file.Path path23 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path22);
    java.nio.file.Path path24 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path23);
    boolean boolean25 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    boolean boolean40 = backupEnvironment39.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional41 = backupEnvironment39.geicmaOptional();
    java.nio.file.Path path42 = backupEnvironment39.getPbPath();
    java.nio.file.Path path43 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.nio.file.Path path44 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path43);
    io.github.onograph.backup.FileMoverService fileMoverService45 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path24, path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory4.prPath(path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory4.isSicc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.SocketAddress socketAddress49 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress49);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(fileMoverService45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
  }

  @Test
  public void test0934() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0934");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory16.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory22.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory22.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern29 = backupEnvironment28.getDatabaseNamePattern();
    boolean boolean30 = backupEnvironment28.getIsBftf();
    boolean boolean31 = backupEnvironment28.getIsBftf();
    java.nio.file.Path path32 = backupEnvironment28.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory13.pbPath(path32);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
    org.junit.Assert.assertNotNull(databaseNamePattern29);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertNotNull(path32);
    org.junit.Assert.assertNotNull(factory33);
  }

  @Test
  public void test0935() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0935");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    java.nio.file.Path path5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.prPath(path5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.shouldPrep(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory10.isCc(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
  }

  @Test
  public void test0936() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0936");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory4.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions13 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory4.miAuthMetaOptions(
        authMetaOptions13);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isRp(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
  }

  @Test
  public void test0937() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0937");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path15 = backupEnvironment12.getRpPath();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker18 = backupEnvironment12.getMemoryTracker();
    java.nio.file.Path path19 = backupEnvironment12.getRpPath();
    boolean boolean20 = backupEnvironment12.getIsBftf();
    boolean boolean21 = backupEnvironment12.getIsBftf();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern22 = backupEnvironment12.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress23 = backupEnvironment12.getSocketAddress();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertNotNull(socketAddress14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(memoryTracker18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNotNull(databaseNamePattern22);
    org.junit.Assert.assertNotNull(socketAddress23);
  }

  @Test
  public void test0938() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0938");
    }
    io.github.onograph.backup.CommandProviderBackupImpl commandProviderBackupImpl0 = new io.github.onograph.backup.CommandProviderBackupImpl();
    int int1 = commandProviderBackupImpl0.getPriority();
    int int2 = commandProviderBackupImpl0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = commandProviderBackupImpl0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = commandProviderBackupImpl0.commandType();
    int int5 = commandProviderBackupImpl0.getPriority();
    org.neo4j.cli.ExecutionContext executionContext6 = null;
    try {
      io.github.onograph.backup.BackupCommand backupCommand7 = commandProviderBackupImpl0.createCommand(
          executionContext6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.ONLINE_BACKUP + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.ONLINE_BACKUP));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
  }

  @Test
  public void test0939() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0939");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.uLogProvider(
        logProvider13);
    io.github.onograph.backup.BackupRunner backupRunner15 = generator14.bulBackupRunner();
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(backupRunner15);
  }

  @Test
  public void test0940() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0940");
    }
    io.github.onograph.backup.Backup backup1 = io.github.onograph.backup.Backup.froBackup("");
    io.github.onograph.backup.Backup backup3 = backup1.isCc(true);
    io.github.onograph.backup.Backup backup5 = backup3.isCc(true);
    io.github.onograph.backup.Backup backup7 = backup5.isCc(true);
    io.github.onograph.backup.Backup backup9 = backup5.isCc(true);
    io.github.onograph.backup.Backup backup11 = backup5.isBftf(false);
    io.github.onograph.backup.Backup backup13 = backup11.isBftf(true);
    io.github.onograph.backup.Backup backup15 = backup13.isCc(false);
    io.github.onograph.backup.Backup backup17 = backup13.isCc(true);
    org.junit.Assert.assertNotNull(backup1);
    org.junit.Assert.assertNotNull(backup3);
    org.junit.Assert.assertNotNull(backup5);
    org.junit.Assert.assertNotNull(backup7);
    org.junit.Assert.assertNotNull(backup9);
    org.junit.Assert.assertNotNull(backup11);
    org.junit.Assert.assertNotNull(backup13);
    org.junit.Assert.assertNotNull(backup15);
    org.junit.Assert.assertNotNull(backup17);
  }

  @Test
  public void test0941() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0941");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment14.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = backupEnvironment14.getSocketAddress();
    java.nio.file.Path path17 = backupEnvironment14.getRpPath();
    java.nio.file.Path path18 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path17);
    try {
      boolean boolean19 = backupIOService1.isExsForPa(path17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertNotNull(socketAddress16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
  }

  @Test
  public void test0942() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0942");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.itraLogProvider(
        logProvider11);
    io.github.onograph.backup.BackupRunner backupRunner13 = generator8.bulBackupRunner();
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(backupRunner13);
  }

  @Test
  public void test0943() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0943");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    boolean boolean20 = backupEnvironment19.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional21 = backupEnvironment19.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern22 = backupEnvironment19.getDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory6.databaseNamePattern(
        databaseNamePattern22);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern40 = backupEnvironment39.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress41 = backupEnvironment39.getSocketAddress();
    java.nio.file.Path path42 = backupEnvironment39.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory24.pbPath(path42);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory47.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory47.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory53.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment59 = factory53.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern60 = backupEnvironment59.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress61 = backupEnvironment59.getSocketAddress();
    java.nio.file.Path path62 = backupEnvironment59.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory44.pbPath(path62);
    io.github.onograph.backup.FileMoverService fileMoverService64 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path42, path62);
    java.nio.file.Path path65 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path62);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory23.prPath(path62);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory67.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory67.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory67.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory73.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config77 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory76.config(config77);
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory78.isRp(true);
    org.neo4j.configuration.Config config81 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory80.config(config81);
    org.neo4j.configuration.helpers.SocketAddress socketAddress83 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory84 = factory80.wihadsBackupEnvironmentFactory(
        socketAddress83);
    io.github.onograph.backup.BackupEnvironment.Factory factory85 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config86 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory87 = factory85.config(config86);
    io.github.onograph.backup.BackupEnvironment.Factory factory89 = factory87.isRp(true);
    org.neo4j.configuration.Config config90 = factory87.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory91 = factory80.config(config90);
    io.github.onograph.backup.BackupEnvironment.Factory factory92 = factory75.config(config90);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction93 = null;
    org.neo4j.memory.MemoryTracker memoryTracker94 = null;
    org.neo4j.io.pagecache.PageCache pageCache95 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager96 = new io.github.onograph.backup.BackupRestorationManager(
        config90, fileSystemAbstraction93, memoryTracker94, pageCache95);
    io.github.onograph.backup.BackupEnvironment.Factory factory97 = factory66.config(config90);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional21);
    org.junit.Assert.assertNotNull(databaseNamePattern22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertNotNull(databaseNamePattern40);
    org.junit.Assert.assertNotNull(socketAddress41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(backupEnvironment59);
    org.junit.Assert.assertNotNull(databaseNamePattern60);
    org.junit.Assert.assertNotNull(socketAddress61);
    org.junit.Assert.assertNotNull(path62);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(fileMoverService64);
    org.junit.Assert.assertNotNull(path65);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(factory84);
    org.junit.Assert.assertNotNull(factory85);
    org.junit.Assert.assertNotNull(factory87);
    org.junit.Assert.assertNotNull(factory89);
    org.junit.Assert.assertNotNull(config90);
    org.junit.Assert.assertNotNull(factory91);
    org.junit.Assert.assertNotNull(factory92);
    org.junit.Assert.assertNotNull(factory97);
  }

  @Test
  public void test0944() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0944");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.uLogProvider(
        logProvider11);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
  }

  @Test
  public void test0945() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0945");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.itraLogProvider(
        logProvider11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.monitors(monitors13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0946() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0946");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    boolean boolean20 = backupEnvironment19.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional21 = backupEnvironment19.geicmaOptional();
    java.nio.file.Path path22 = backupEnvironment19.getPbPath();
    java.nio.file.Path path23 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path22);
    java.nio.file.Path path24 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path23);
    boolean boolean25 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path24);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    boolean boolean40 = backupEnvironment39.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional41 = backupEnvironment39.geicmaOptional();
    java.nio.file.Path path42 = backupEnvironment39.getPbPath();
    java.nio.file.Path path43 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.nio.file.Path path44 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path43);
    io.github.onograph.backup.FileMoverService fileMoverService45 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path24, path43);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory4.prPath(path43);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions47 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.miAuthMetaOptions(
        authMetaOptions47);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory48.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    java.nio.file.Path path54 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory51.prPath(path54);
    org.neo4j.configuration.helpers.SocketAddress socketAddress56 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory55.wihadsBackupEnvironmentFactory(
        socketAddress56);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config59 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory58.config(config59);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isRp(true);
    org.neo4j.configuration.Config config63 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory64 = factory62.config(config63);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory62.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory69 = factory67.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions70 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory71 = factory67.miAuthMetaOptions(
        authMetaOptions70);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory71.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory73.isIcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern76 = factory73.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory62.databaseNamePattern(
        databaseNamePattern76);
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory55.databaseNamePattern(
        databaseNamePattern76);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory48.databaseNamePattern(
        databaseNamePattern76);
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory80.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory84 = factory80.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory86 = factory80.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory88 = factory86.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory91 = factory86.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment92 = factory86.bulBackupEnvironment();
    boolean boolean93 = backupEnvironment92.getIsRp();
    boolean boolean94 = backupEnvironment92.getIsCc();
    boolean boolean95 = backupEnvironment92.getIsRp();
    org.neo4j.configuration.helpers.SocketAddress socketAddress96 = backupEnvironment92.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory97 = factory48.wihadsBackupEnvironmentFactory(
        socketAddress96);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(path43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(fileMoverService45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory64);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory69);
    org.junit.Assert.assertNotNull(factory71);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(databaseNamePattern76);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(factory84);
    org.junit.Assert.assertNotNull(factory86);
    org.junit.Assert.assertNotNull(factory88);
    org.junit.Assert.assertNotNull(factory91);
    org.junit.Assert.assertNotNull(backupEnvironment92);
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    org.junit.Assert.assertNotNull(socketAddress96);
    org.junit.Assert.assertNotNull(factory97);
  }

  @Test
  public void test0947() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0947");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory2.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory8.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment14.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = backupEnvironment14.getSocketAddress();
    java.nio.file.Path path17 = backupEnvironment14.getRpPath();
    boolean boolean18 = backupEnvironment14.getIsBftf();
    java.nio.file.Path path19 = backupEnvironment14.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker20 = backupEnvironment14.getMemoryTracker();
    java.nio.file.Path path21 = backupEnvironment14.getRpPath();
    java.nio.file.Path path22 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path21);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional23 = gdbIdRepo1.reddtaiOptional(
          path21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertNotNull(socketAddress16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(memoryTracker20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(path22);
  }

  @Test
  public void test0948() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0948");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isFtfb(true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern9 = factory6.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(databaseNamePattern9);
  }

  @Test
  public void test0949() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0949");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator2.progressMonitorFactory(
        progressMonitorFactory9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator2.monitors(monitors11);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.fFileSystemAbstraction(
        fileSystemAbstraction13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0950() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0950");
    }
    io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup(
        (int) (byte) 1, "hi!");
    org.junit.Assert.assertNotNull(backup2);
  }

  @Test
  public void test0951() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0951");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator4.progressMonitorFactory(
        progressMonitorFactory5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.monitors(monitors7);
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.systemNanoClock(
        systemNanoClock9);
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.systemNanoClock(
        systemNanoClock11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.uLogProvider(
        logProvider13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0952() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0952");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory2.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.config(config8);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = factory9.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory2.databaseNamePattern(
        databaseNamePattern14);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isSicc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.Config config18 = factory15.gecfConfig();
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.logging.LogProvider logProvider21 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory22.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory22.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory28.wihadsBackupEnvironmentFactory(
        (int) (short) 10, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory34.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory34.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory40.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment46 = factory40.bulBackupEnvironment();
    boolean boolean47 = backupEnvironment46.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional48 = backupEnvironment46.geicmaOptional();
    java.nio.file.Path path49 = backupEnvironment46.getPbPath();
    java.nio.file.Path path50 = backupEnvironment46.getPbPath();
    java.nio.file.Path path51 = backupEnvironment46.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory33.pbPath(path51);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory53 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl54 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config18, consistencyFlags19, fileSystemAbstraction20, logProvider21, path51,
        progressMonitorFactory53);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(config18);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(backupEnvironment46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(path50);
    org.junit.Assert.assertNotNull(path51);
    org.junit.Assert.assertNotNull(factory52);
  }

  @Test
  public void test0953() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0953");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    boolean boolean17 = backupEnvironment16.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment16.geicmaOptional();
    java.nio.file.Path path19 = backupEnvironment16.getPbPath();
    java.nio.file.Path path20 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path19);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream21 = fileMover3._trrfrmnStream(
        path19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory22.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory22.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory28.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment34 = factory28.bulBackupEnvironment();
    boolean boolean35 = backupEnvironment34.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional36 = backupEnvironment34.geicmaOptional();
    java.nio.file.Path path37 = backupEnvironment34.getPbPath();
    java.nio.file.Path path38 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path37);
    java.nio.file.Path path39 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path38);
    io.github.onograph.backup.FileMoverService fileMoverService40 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path19, path38);
    try {
      boolean boolean41 = backupIOService1.isExsForPa(path38);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(fileMoverServiceStream21);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(backupEnvironment34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional36);
    org.junit.Assert.assertNotNull(path37);
    org.junit.Assert.assertNotNull(path38);
    org.junit.Assert.assertNotNull(path39);
    org.junit.Assert.assertNotNull(fileMoverService40);
  }

  @Test
  public void test0954() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0954");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    io.github.onograph.backup.BackupRunner backupRunner7 = generator6.bulBackupRunner();
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.backup.BackupRunner.Generator generator9 = generator6.itraLogProvider(
        logProvider8);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    io.github.onograph.backup.BackupRunner.Generator generator11 = generator9.fFileSystemAbstraction(
        fileSystemAbstraction10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    io.github.onograph.backup.BackupRunner.Generator generator13 = generator9.monitors(monitors12);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction14 = null;
    io.github.onograph.backup.BackupRunner.Generator generator15 = generator13.fFileSystemAbstraction(
        fileSystemAbstraction14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    io.github.onograph.backup.BackupRunner.Generator generator17 = generator13.monitors(monitors16);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(backupRunner7);
    org.junit.Assert.assertNotNull(generator9);
    org.junit.Assert.assertNotNull(generator11);
    org.junit.Assert.assertNotNull(generator13);
    org.junit.Assert.assertNotNull(generator15);
    org.junit.Assert.assertNotNull(generator17);
  }

  @Test
  public void test0955() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0955");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    int int1 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType2 = setupForBackupRestorationCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType3 = setupForBackupRestorationCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = setupForBackupRestorationCommandProvider0.commandType();
    int int5 = setupForBackupRestorationCommandProvider0.getPriority();
    int int6 = setupForBackupRestorationCommandProvider0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType2 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType2.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test0956() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0956");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.monitoring.Monitors monitors3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator0.monitors(monitors3);
    io.github.onograph.backup.BackupRunner backupRunner5 = generator0.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory6.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory12.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment18 = factory12.bulBackupEnvironment();
    boolean boolean19 = backupEnvironment18.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional20 = backupEnvironment18.geicmaOptional();
    java.nio.file.Path path21 = backupEnvironment18.getPbPath();
    boolean boolean22 = backupEnvironment18.getIsBftf();
    org.neo4j.configuration.helpers.SocketAddress socketAddress23 = backupEnvironment18.getSocketAddress();
    try {
      backupRunner5.excebcpForBa(backupEnvironment18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(backupRunner5);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(backupEnvironment18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(socketAddress23);
  }

  @Test
  public void test0957() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0957");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    org.neo4j.cli.Command.CommandType commandType1 = setupForBackupRestorationCommandProvider0.commandType();
    int int2 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType3 = setupForBackupRestorationCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType4 = setupForBackupRestorationCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType5 = setupForBackupRestorationCommandProvider0.commandType();
    org.junit.Assert.assertTrue(
        "'" + commandType1 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType1.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType3 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType3.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue(
        "'" + commandType5 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType5.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
  }

  @Test
  public void test0958() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0958");
    }
    try {
      io.github.onograph.backup.Backup backup2 = io.github.onograph.backup.Backup.froBackup(0,
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: Port is expected to be positive and less than or equal to 65535 but was: 0");
    } catch (java.lang.IllegalArgumentException e) {
    }
  }

  @Test
  public void test0959() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0959");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    java.nio.file.Path path17 = backupEnvironment12.getPbPath();
    java.nio.file.Path path18 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path17);
    boolean boolean19 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path17);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test0960() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0960");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    org.neo4j.configuration.helpers.SocketAddress socketAddress17 = backupEnvironment12.getSocketAddress();
    org.neo4j.configuration.helpers.SocketAddress socketAddress18 = backupEnvironment12.getSocketAddress();
    boolean boolean19 = backupEnvironment12.getIsRp();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(socketAddress17);
    org.junit.Assert.assertNotNull(socketAddress18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
  }

  @Test
  public void test0961() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0961");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isFtfb(false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
  }

  @Test
  public void test0962() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0962");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.io.PrintStream printStream3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory10.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment16 = factory10.bulBackupEnvironment();
    boolean boolean17 = backupEnvironment16.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment16.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern19 = backupEnvironment16.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional20 = backupEnvironment16.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern21 = backupEnvironment16.getDatabaseNamePattern();
    org.neo4j.memory.MemoryTracker memoryTracker22 = backupEnvironment16.getMemoryTracker();
    java.nio.file.Path path23 = backupEnvironment16.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory24.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory24.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory30.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment36 = factory30.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern37 = backupEnvironment36.getDatabaseNamePattern();
    boolean boolean38 = backupEnvironment36.getIsBftf();
    boolean boolean39 = backupEnvironment36.getIsBftf();
    java.nio.file.Path path40 = backupEnvironment36.getRpPath();
    java.nio.file.Path path41 = backupEnvironment36.getRpPath();
    java.nio.file.Path path42 = backupEnvironment36.getPbPath();
    org.neo4j.io.layout.DatabaseLayout databaseLayout43 = null;
    try {
      io.github.onograph.backup.GdbRestorer gdbRestorer44 = new io.github.onograph.backup.GdbRestorer(
          fileSystemAbstraction0, false, false, printStream3, path23, path42, databaseLayout43);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(backupEnvironment16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
    org.junit.Assert.assertNotNull(databaseNamePattern19);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional20);
    org.junit.Assert.assertNotNull(databaseNamePattern21);
    org.junit.Assert.assertNotNull(memoryTracker22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(backupEnvironment36);
    org.junit.Assert.assertNotNull(databaseNamePattern37);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(path41);
    org.junit.Assert.assertNotNull(path42);
  }

  @Test
  public void test0963() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0963");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupMetadataRepository backupMetadataRepository1 = new io.github.onograph.backup.BackupMetadataRepository(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory13.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment19 = factory13.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern20 = backupEnvironment19.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress21 = backupEnvironment19.getSocketAddress();
    java.nio.file.Path path22 = backupEnvironment19.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory4.pbPath(path22);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern40 = backupEnvironment39.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress41 = backupEnvironment39.getSocketAddress();
    java.nio.file.Path path42 = backupEnvironment39.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory24.pbPath(path42);
    io.github.onograph.backup.FileMoverService fileMoverService44 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path22, path42);
    java.nio.file.Path path45 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path42);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction46 = null;
    io.github.onograph.backup.FileMover fileMover47 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction46);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory48.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory48.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory48.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory54.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment60 = factory54.bulBackupEnvironment();
    boolean boolean61 = backupEnvironment60.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional62 = backupEnvironment60.geicmaOptional();
    java.nio.file.Path path63 = backupEnvironment60.getPbPath();
    java.nio.file.Path path64 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path63);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream65 = fileMover47._trrfrmnStream(
        path63);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory66.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory66.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory66.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory72.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory72.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment78 = factory72.bulBackupEnvironment();
    boolean boolean79 = backupEnvironment78.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional80 = backupEnvironment78.geicmaOptional();
    java.nio.file.Path path81 = backupEnvironment78.getPbPath();
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream82 = fileMover47._trrfrmnStream(
        path81);
    io.github.onograph.backup.FileMoverService fileMoverService83 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path42, path81);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream84 = fileMover3._trrfrmnStream(
        path81);
    java.lang.String[] strArray88 = new java.lang.String[]{"database.id", "", ""};
    java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
    boolean boolean90 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList89, strArray88);
    try {
      backupMetadataRepository1.wrtForPaLi(path81, (java.util.List<java.lang.String>) strList89);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(backupEnvironment19);
    org.junit.Assert.assertNotNull(databaseNamePattern20);
    org.junit.Assert.assertNotNull(socketAddress21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertNotNull(databaseNamePattern40);
    org.junit.Assert.assertNotNull(socketAddress41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(fileMoverService44);
    org.junit.Assert.assertNotNull(path45);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(backupEnvironment60);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional62);
    org.junit.Assert.assertNotNull(path63);
    org.junit.Assert.assertNotNull(path64);
    org.junit.Assert.assertNotNull(fileMoverServiceStream65);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(backupEnvironment78);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional80);
    org.junit.Assert.assertNotNull(path81);
    org.junit.Assert.assertNotNull(fileMoverServiceStream82);
    org.junit.Assert.assertNotNull(fileMoverService83);
    org.junit.Assert.assertNotNull(fileMoverServiceStream84);
    org.junit.Assert.assertNotNull(strArray88);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
  }

  @Test
  public void test0964() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0964");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = backupEnvironment12.getSocketAddress();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path17 = backupEnvironment12.getPbPath();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment12.geicmaOptional();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(socketAddress15);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
  }

  @Test
  public void test0965() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0965");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    org.neo4j.configuration.helpers.SocketAddress socketAddress3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.wihadsBackupEnvironmentFactory(
        socketAddress3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isCc(true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern9 = factory4.gedtenprDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(databaseNamePattern9);
  }

  @Test
  public void test0966() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0966");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.miAuthMetaOptions(
        authMetaOptions12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isIcc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern18 = factory15.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory4.databaseNamePattern(
        databaseNamePattern18);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory4.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory4.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory24.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory24.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory30.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment36 = factory30.bulBackupEnvironment();
    boolean boolean37 = backupEnvironment36.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional38 = backupEnvironment36.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional39 = backupEnvironment36.geicmaOptional();
    java.nio.file.Path path40 = backupEnvironment36.getPbPath();
    java.nio.file.Path path41 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path40);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory4.prPath(path40);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config47 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory46.config(config47);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory48.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory51.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory51.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory57.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment63 = factory57.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern64 = backupEnvironment63.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress65 = backupEnvironment63.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory50.wihadsBackupEnvironmentFactory(
        socketAddress65);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory43.wihadsBackupEnvironmentFactory(
        socketAddress65);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory42.wihadsBackupEnvironmentFactory(
        socketAddress65);
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory42.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory70.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory70.isFtfb(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory70.isSicc(
        (java.lang.Boolean) false);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(databaseNamePattern18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(backupEnvironment36);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional38);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional39);
    org.junit.Assert.assertNotNull(path40);
    org.junit.Assert.assertNotNull(path41);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(backupEnvironment63);
    org.junit.Assert.assertNotNull(databaseNamePattern64);
    org.junit.Assert.assertNotNull(socketAddress65);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory76);
  }

  @Test
  public void test0967() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0967");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path15 = backupEnvironment12.getRpPath();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker18 = backupEnvironment12.getMemoryTracker();
    boolean boolean19 = backupEnvironment12.getIsRp();
    org.neo4j.configuration.helpers.SocketAddress socketAddress20 = backupEnvironment12.getSocketAddress();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertNotNull(socketAddress14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(memoryTracker18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(socketAddress20);
  }

  @Test
  public void test0968() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0968");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    org.neo4j.configuration.Config config12 = factory11.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.wihadsBackupEnvironmentFactory(
        (int) (short) 10, "hi!");
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(config12);
    org.junit.Assert.assertNotNull(factory15);
  }

  @Test
  public void test0969() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0969");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.miAuthMetaOptions(
        authMetaOptions9);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory8.wihadsBackupEnvironmentFactory(
        (int) (short) 0, "");
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.databaseNamePattern(
        "database.id");
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory18.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory18.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory24.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment30 = factory24.bulBackupEnvironment();
    boolean boolean31 = backupEnvironment30.getIsBftf();
    org.neo4j.configuration.helpers.SocketAddress socketAddress32 = backupEnvironment30.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory13.wihadsBackupEnvironmentFactory(
        socketAddress32);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(backupEnvironment30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertNotNull(socketAddress32);
    org.junit.Assert.assertNotNull(factory33);
  }

  @Test
  public void test0970() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0970");
    }
    io.github.onograph.backup.SetupForBackupRestorationCommandProvider setupForBackupRestorationCommandProvider0 = new io.github.onograph.backup.SetupForBackupRestorationCommandProvider();
    int int1 = setupForBackupRestorationCommandProvider0.getPriority();
    int int2 = setupForBackupRestorationCommandProvider0.getPriority();
    int int3 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType4 = setupForBackupRestorationCommandProvider0.commandType();
    int int5 = setupForBackupRestorationCommandProvider0.getPriority();
    int int6 = setupForBackupRestorationCommandProvider0.getPriority();
    org.neo4j.cli.Command.CommandType commandType7 = setupForBackupRestorationCommandProvider0.commandType();
    org.neo4j.cli.Command.CommandType commandType8 = setupForBackupRestorationCommandProvider0.commandType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType4 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType4.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    org.junit.Assert.assertTrue(
        "'" + commandType7 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType7.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
    org.junit.Assert.assertTrue(
        "'" + commandType8 + "' != '" + org.neo4j.cli.Command.CommandType.PREPARE_RESTORE + "'",
        commandType8.equals(org.neo4j.cli.Command.CommandType.PREPARE_RESTORE));
  }

  @Test
  public void test0971() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0971");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = factory2.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory2.isCc(true);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions8 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory2.miAuthMetaOptions(
        authMetaOptions8);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory10.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory10.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory16.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment22 = factory16.bulBackupEnvironment();
    boolean boolean23 = backupEnvironment22.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional24 = backupEnvironment22.geicmaOptional();
    java.nio.file.Path path25 = backupEnvironment22.getPbPath();
    java.nio.file.Path path26 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path25);
    java.nio.file.Path path27 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path26);
    boolean boolean28 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path27);
    java.nio.file.Path path29 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path27);
    java.nio.file.Path path30 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path29);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory34.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory34.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory40.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory40.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment46 = factory40.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern47 = backupEnvironment46.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress48 = backupEnvironment46.getSocketAddress();
    java.nio.file.Path path49 = backupEnvironment46.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory31.pbPath(path49);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory54.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory60 = factory54.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory60.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory60.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment66 = factory60.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern67 = backupEnvironment66.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress68 = backupEnvironment66.getSocketAddress();
    java.nio.file.Path path69 = backupEnvironment66.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory51.pbPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService71 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path49, path69);
    java.nio.file.Path path72 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path69);
    io.github.onograph.backup.FileMoverService fileMoverService73 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path29, path72);
    java.nio.file.Path path74 = fileMoverService73.filPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory2.prPath(path74);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config77 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory78 = factory76.config(config77);
    io.github.onograph.backup.BackupEnvironment.Factory factory80 = factory78.isRp(true);
    org.neo4j.configuration.Config config81 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory80.config(config81);
    org.neo4j.configuration.helpers.SocketAddress socketAddress83 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory84 = factory80.wihadsBackupEnvironmentFactory(
        socketAddress83);
    org.neo4j.configuration.helpers.SocketAddress socketAddress85 = factory80.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory87 = factory80.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory89 = factory87.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment90 = factory89.bulBackupEnvironment();
    java.nio.file.Path path91 = backupEnvironment90.getPbPath();
    io.github.onograph.backup.FileMoverService fileMoverService92 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path74, path91);
    java.nio.file.Path path93 = fileMoverService92.filPath();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(backupEnvironment22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNotNull(path29);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(backupEnvironment46);
    org.junit.Assert.assertNotNull(databaseNamePattern47);
    org.junit.Assert.assertNotNull(socketAddress48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory60);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(backupEnvironment66);
    org.junit.Assert.assertNotNull(databaseNamePattern67);
    org.junit.Assert.assertNotNull(socketAddress68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(fileMoverService71);
    org.junit.Assert.assertNotNull(path72);
    org.junit.Assert.assertNotNull(fileMoverService73);
    org.junit.Assert.assertNotNull(path74);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory78);
    org.junit.Assert.assertNotNull(factory80);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(factory84);
    org.junit.Assert.assertNull(socketAddress85);
    org.junit.Assert.assertNotNull(factory87);
    org.junit.Assert.assertNotNull(factory89);
    org.junit.Assert.assertNotNull(backupEnvironment90);
    org.junit.Assert.assertNotNull(path91);
    org.junit.Assert.assertNotNull(fileMoverService92);
    org.junit.Assert.assertNotNull(path93);
  }

  @Test
  public void test0972() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0972");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.config(config3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory4.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    boolean boolean24 = backupEnvironment23.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional25 = backupEnvironment23.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern26 = backupEnvironment23.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional27 = backupEnvironment23.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker28 = backupEnvironment23.getMemoryTracker();
    boolean boolean29 = backupEnvironment23.getIsRp();
    java.nio.file.Path path30 = backupEnvironment23.getPbPath();
    java.nio.file.Path path31 = backupEnvironment23.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory4.pbPath(path31);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional33 = gdbIdRepo1.reddtaiOptional(
          path31);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional25);
    org.junit.Assert.assertNotNull(databaseNamePattern26);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional27);
    org.junit.Assert.assertNotNull(memoryTracker28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertNotNull(path31);
    org.junit.Assert.assertNotNull(factory32);
  }

  @Test
  public void test0973() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0973");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.config(config3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    org.neo4j.configuration.Config config7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.config(config7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.wihadsBackupEnvironmentFactory(
        socketAddress9);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config12 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.config(config12);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.isRp(true);
    org.neo4j.configuration.Config config16 = factory13.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory6.config(config16);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags18 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction19 = null;
    org.neo4j.logging.LogProvider logProvider20 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config22 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.config(config22);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory23.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern28 = factory23.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory23.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config32 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.config(config32);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isRp(true);
    org.neo4j.configuration.Config config36 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.config(config36);
    org.neo4j.configuration.helpers.SocketAddress socketAddress38 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory35.wihadsBackupEnvironmentFactory(
        socketAddress38);
    org.neo4j.configuration.helpers.SocketAddress socketAddress40 = factory35.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory35.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = factory42.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment45 = factory44.bulBackupEnvironment();
    java.nio.file.Path path46 = backupEnvironment45.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory23.prPath(path46);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory48 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl49 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config16, consistencyFlags18, fileSystemAbstraction19, logProvider20, path46,
        progressMonitorFactory48);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory52 = factory50.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = factory50.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory50.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory56.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory56.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment62 = factory56.bulBackupEnvironment();
    boolean boolean63 = backupEnvironment62.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional64 = backupEnvironment62.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional65 = backupEnvironment62.geicmaOptional();
    java.nio.file.Path path66 = backupEnvironment62.getRpPath();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern67 = backupEnvironment62.getDatabaseNamePattern();
    boolean boolean68 = backupEnvironment62.getIsRp();
    java.nio.file.Path path69 = backupEnvironment62.getPbPath();
    io.github.onograph.backup.FileMoverService fileMoverService70 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path46, path69);
    try {
      boolean boolean71 = backupIOService1.isExsForPa(path46);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(config16);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(databaseNamePattern28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNull(socketAddress40);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(backupEnvironment45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(factory52);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(backupEnvironment62);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional64);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional65);
    org.junit.Assert.assertNotNull(path66);
    org.junit.Assert.assertNotNull(databaseNamePattern67);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(fileMoverService70);
  }

  @Test
  public void test0974() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0974");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.miAuthMetaOptions(
        authMetaOptions3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isGcc(
        (java.lang.Boolean) false);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.miAuthMetaOptions(
        authMetaOptions7);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isIcc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.Config config11 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory6.config(config11);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.databaseNamePattern(
        "database.id");
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
  }

  @Test
  public void test0975() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0975");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.progressMonitorFactory(
        progressMonitorFactory11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.itraLogProvider(
        logProvider13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator12.uLogProvider(
        logProvider15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator16.monitors(monitors17);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
  }

  @Test
  public void test0976() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0976");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory11.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory11.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory17.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory17.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment23 = factory17.bulBackupEnvironment();
    boolean boolean24 = backupEnvironment23.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional25 = backupEnvironment23.geicmaOptional();
    java.nio.file.Path path26 = backupEnvironment23.getPbPath();
    java.nio.file.Path path27 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path26);
    java.nio.file.Path path28 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path27);
    boolean boolean29 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path28);
    java.nio.file.Path path30 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path28);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory8.prPath(path28);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions32 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.miAuthMetaOptions(
        authMetaOptions32);
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions34 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory31.miAuthMetaOptions(
        authMetaOptions34);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(backupEnvironment23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertNotNull(path27);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertNotNull(path30);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
  }

  @Test
  public void test0977() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0977");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern14 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    java.nio.file.Path path17 = backupEnvironment12.getPbPath();
    java.nio.file.Path path18 = backupEnvironment12.getPbPath();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern19 = backupEnvironment12.getDatabaseNamePattern();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(databaseNamePattern14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(databaseNamePattern19);
  }

  @Test
  public void test0978() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0978");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    boolean boolean14 = backupEnvironment12.getIsRp();
    java.nio.file.Path path15 = backupEnvironment12.getPbPath();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean17 = backupEnvironment12.getIsBftf();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
  }

  @Test
  public void test0979() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0979");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = factory2.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isCc(false);
    java.nio.file.Path path10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory7.prPath(path10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory7.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory14.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory19.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory19.isRp(false);
    java.nio.file.Path path24 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory23.prPath(path24);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern26 = factory25.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config27 = factory25.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory18.config(config27);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory7.config(config27);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction30 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory31.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory31.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory31.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory37.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment43 = factory37.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker44 = backupEnvironment43.getMemoryTracker();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern45 = backupEnvironment43.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress46 = backupEnvironment43.getSocketAddress();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern47 = backupEnvironment43.getDatabaseNamePattern();
    org.neo4j.memory.MemoryTracker memoryTracker48 = backupEnvironment43.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache49 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager50 = new io.github.onograph.backup.BackupRestorationManager(
        config27, fileSystemAbstraction30, memoryTracker48, pageCache49);
    org.neo4j.io.pagecache.PageCache pageCache51 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager52 = new io.github.onograph.backup.BackupRestorationManager(
        config5, fileSystemAbstraction6, memoryTracker48, pageCache51);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction53 = null;
    io.github.onograph.cluster.raft.module.cuprot.LifecycleCatchupManagerImpl lifecycleCatchupManagerImpl54 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler55 = null;
    org.neo4j.logging.LogProvider logProvider56 = null;
    org.neo4j.monitoring.Monitors monitors57 = null;
    org.neo4j.io.pagecache.PageCache pageCache58 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer59 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock60 = null;
    try {
      io.github.onograph.backup.RemoteBackupManager remoteBackupManager61 = new io.github.onograph.backup.RemoteBackupManager(
          config5, fileSystemAbstraction53, lifecycleCatchupManagerImpl54, jobScheduler55,
          logProvider56, monitors57, pageCache58, pageCacheTracer59, systemNanoClock60);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(databaseNamePattern26);
    org.junit.Assert.assertNotNull(config27);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(backupEnvironment43);
    org.junit.Assert.assertNotNull(memoryTracker44);
    org.junit.Assert.assertNotNull(databaseNamePattern45);
    org.junit.Assert.assertNotNull(socketAddress46);
    org.junit.Assert.assertNotNull(databaseNamePattern47);
    org.junit.Assert.assertNotNull(memoryTracker48);
  }

  @Test
  public void test0980() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0980");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.BackupIOService backupIOService1 = new io.github.onograph.backup.BackupIOService(
        fileSystemAbstraction0);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction4 = null;
    io.github.onograph.backup.FileMover fileMover5 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction4);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory6.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory12.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment18 = factory12.bulBackupEnvironment();
    boolean boolean19 = backupEnvironment18.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional20 = backupEnvironment18.geicmaOptional();
    java.nio.file.Path path21 = backupEnvironment18.getPbPath();
    java.nio.file.Path path22 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path21);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream23 = fileMover5._trrfrmnStream(
        path21);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = factory27.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory27.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory27.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory33.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory38 = factory33.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment39 = factory33.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern40 = backupEnvironment39.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress41 = backupEnvironment39.getSocketAddress();
    java.nio.file.Path path42 = backupEnvironment39.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory24.pbPath(path42);
    io.github.onograph.backup.BackupEnvironment.Factory factory44 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory46 = factory44.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory49 = factory47.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = factory47.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory47.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory53.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory58 = factory53.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment59 = factory53.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern60 = backupEnvironment59.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress61 = backupEnvironment59.getSocketAddress();
    java.nio.file.Path path62 = backupEnvironment59.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory44.pbPath(path62);
    io.github.onograph.backup.FileMoverService fileMoverService64 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path42, path62);
    java.nio.file.Path path65 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path42);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream66 = fileMover5._trrfrmnStream(
        path65);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream67 = fileMover3._trrfrmnStream(
        path65);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory68.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory68.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory74 = factory68.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory76 = factory74.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory74.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment80 = factory74.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker81 = backupEnvironment80.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress82 = backupEnvironment80.getSocketAddress();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional83 = backupEnvironment80.geicmaOptional();
    java.nio.file.Path path84 = backupEnvironment80.getPbPath();
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream85 = fileMover3._trrfrmnStream(
        path84);
    try {
      backupIOService1.deedForPa(path84);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(backupEnvironment18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional20);
    org.junit.Assert.assertNotNull(path21);
    org.junit.Assert.assertNotNull(path22);
    org.junit.Assert.assertNotNull(fileMoverServiceStream23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory38);
    org.junit.Assert.assertNotNull(backupEnvironment39);
    org.junit.Assert.assertNotNull(databaseNamePattern40);
    org.junit.Assert.assertNotNull(socketAddress41);
    org.junit.Assert.assertNotNull(path42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory44);
    org.junit.Assert.assertNotNull(factory46);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory49);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory58);
    org.junit.Assert.assertNotNull(backupEnvironment59);
    org.junit.Assert.assertNotNull(databaseNamePattern60);
    org.junit.Assert.assertNotNull(socketAddress61);
    org.junit.Assert.assertNotNull(path62);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(fileMoverService64);
    org.junit.Assert.assertNotNull(path65);
    org.junit.Assert.assertNotNull(fileMoverServiceStream66);
    org.junit.Assert.assertNotNull(fileMoverServiceStream67);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory74);
    org.junit.Assert.assertNotNull(factory76);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(backupEnvironment80);
    org.junit.Assert.assertNotNull(memoryTracker81);
    org.junit.Assert.assertNotNull(socketAddress82);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional83);
    org.junit.Assert.assertNotNull(path84);
    org.junit.Assert.assertNotNull(fileMoverServiceStream85);
  }

  @Test
  public void test0981() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0981");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.monitoring.Monitors monitors5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator4.monitors(monitors5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    io.github.onograph.backup.BackupRunner backupRunner9 = generator6.bulBackupRunner();
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory10.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory10.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory21 = factory16.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory23 = factory21.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = factory24.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory24.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory24.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory30.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment36 = factory30.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern37 = backupEnvironment36.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress38 = backupEnvironment36.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory21.wihadsBackupEnvironmentFactory(
        socketAddress38);
    io.github.onograph.backup.BackupEnvironment backupEnvironment40 = factory39.bulBackupEnvironment();
    try {
      backupRunner9.excebcpForBa(backupEnvironment40);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(backupRunner9);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory21);
    org.junit.Assert.assertNotNull(factory23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(backupEnvironment36);
    org.junit.Assert.assertNotNull(databaseNamePattern37);
    org.junit.Assert.assertNotNull(socketAddress38);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(backupEnvironment40);
  }

  @Test
  public void test0982() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0982");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern15 = backupEnvironment12.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional16 = backupEnvironment12.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker17 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress18 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path19 = backupEnvironment12.getRpPath();
    java.nio.file.Path path20 = backupEnvironment12.getRpPath();
    boolean boolean21 = backupEnvironment12.getIsRp();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(databaseNamePattern15);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional16);
    org.junit.Assert.assertNotNull(memoryTracker17);
    org.junit.Assert.assertNotNull(socketAddress18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
  }

  @Test
  public void test0983() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0983");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator6.uLogProvider(
        logProvider7);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator6.fFileSystemAbstraction(
        fileSystemAbstraction9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator10.monitors(monitors11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.uLogProvider(
        logProvider13);
    org.neo4j.logging.LogProvider logProvider15 = null;
    io.github.onograph.backup.BackupRunner.Generator generator16 = generator12.uLogProvider(
        logProvider15);
    org.neo4j.monitoring.Monitors monitors17 = null;
    io.github.onograph.backup.BackupRunner.Generator generator18 = generator12.monitors(monitors17);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(generator16);
    org.junit.Assert.assertNotNull(generator18);
  }

  @Test
  public void test0984() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0984");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean14 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional15 = backupEnvironment12.geicmaOptional();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern16 = backupEnvironment12.getDatabaseNamePattern();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional17 = backupEnvironment12.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional18 = backupEnvironment12.geicmaOptional();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional15);
    org.junit.Assert.assertNotNull(databaseNamePattern16);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional17);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional18);
  }

  @Test
  public void test0985() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0985");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config6 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.config(config6);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.isRp(true);
    org.neo4j.configuration.Config config10 = factory7.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory0.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory0.shouldPrep(false);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction14 = null;
    io.github.onograph.backup.FileMover fileMover15 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction14);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory16.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory16.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory22.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory22.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory22.bulBackupEnvironment();
    boolean boolean29 = backupEnvironment28.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional30 = backupEnvironment28.geicmaOptional();
    java.nio.file.Path path31 = backupEnvironment28.getPbPath();
    java.nio.file.Path path32 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path31);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream33 = fileMover15._trrfrmnStream(
        path31);
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory34.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory37.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory37.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory37.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory43.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment49 = factory43.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern50 = backupEnvironment49.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress51 = backupEnvironment49.getSocketAddress();
    java.nio.file.Path path52 = backupEnvironment49.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory34.pbPath(path52);
    io.github.onograph.backup.BackupEnvironment.Factory factory54 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory56 = factory54.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory57.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory57.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory63.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = factory63.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment69 = factory63.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern70 = backupEnvironment69.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress71 = backupEnvironment69.getSocketAddress();
    java.nio.file.Path path72 = backupEnvironment69.getRpPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = factory54.pbPath(path72);
    io.github.onograph.backup.FileMoverService fileMoverService74 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path52, path72);
    java.nio.file.Path path75 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path52);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream76 = fileMover15._trrfrmnStream(
        path75);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory13.prPath(path75);
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory13.isSicc(
        (java.lang.Boolean) false);
    org.neo4j.configuration.Config config80 = factory13.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction81 = null;
    io.github.onograph.cluster.raft.module.cuprot.LifecycleCatchupManagerImpl lifecycleCatchupManagerImpl82 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler83 = null;
    org.neo4j.logging.LogProvider logProvider84 = null;
    org.neo4j.monitoring.Monitors monitors85 = null;
    org.neo4j.io.pagecache.PageCache pageCache86 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer87 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock88 = null;
    try {
      io.github.onograph.backup.RemoteBackupManager remoteBackupManager89 = new io.github.onograph.backup.RemoteBackupManager(
          config80, fileSystemAbstraction81, lifecycleCatchupManagerImpl82, jobScheduler83,
          logProvider84, monitors85, pageCache86, pageCacheTracer87, systemNanoClock88);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(config10);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional30);
    org.junit.Assert.assertNotNull(path31);
    org.junit.Assert.assertNotNull(path32);
    org.junit.Assert.assertNotNull(fileMoverServiceStream33);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(backupEnvironment49);
    org.junit.Assert.assertNotNull(databaseNamePattern50);
    org.junit.Assert.assertNotNull(socketAddress51);
    org.junit.Assert.assertNotNull(path52);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory54);
    org.junit.Assert.assertNotNull(factory56);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(backupEnvironment69);
    org.junit.Assert.assertNotNull(databaseNamePattern70);
    org.junit.Assert.assertNotNull(socketAddress71);
    org.junit.Assert.assertNotNull(path72);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(fileMoverService74);
    org.junit.Assert.assertNotNull(path75);
    org.junit.Assert.assertNotNull(fileMoverServiceStream76);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(config80);
  }

  @Test
  public void test0986() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0986");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    org.neo4j.configuration.helpers.SocketAddress socketAddress7 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress7);
    org.neo4j.configuration.helpers.SocketAddress socketAddress9 = factory4.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory4.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment14 = factory13.bulBackupEnvironment();
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = backupEnvironment14.getSocketAddress();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNull(socketAddress9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(backupEnvironment14);
    org.junit.Assert.assertNotNull(socketAddress15);
  }

  @Test
  public void test0987() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0987");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    boolean boolean13 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional14 = backupEnvironment12.geicmaOptional();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional15 = backupEnvironment12.geicmaOptional();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional17 = backupEnvironment12.geicmaOptional();
    java.nio.file.Path path18 = backupEnvironment12.getRpPath();
    java.nio.file.Path path19 = backupEnvironment12.getPbPath();
    org.neo4j.memory.MemoryTracker memoryTracker20 = backupEnvironment12.getMemoryTracker();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional14);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(memoryTracker20);
  }

  @Test
  public void test0988() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0988");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.itraLogProvider(
        logProvider5);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.fFileSystemAbstraction(
        fileSystemAbstraction7);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator2.progressMonitorFactory(
        progressMonitorFactory9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator2.monitors(monitors11);
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator12.systemNanoClock(
        systemNanoClock13);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
  }

  @Test
  public void test0989() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0989");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = factory2.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory2.isCc(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory7.databaseNamePattern(
        "database.id");
    org.neo4j.configuration.helpers.SocketAddress socketAddress10 = factory9.getSocketAddress();
    org.neo4j.configuration.Config config11 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory9.config(config11);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(config5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNull(socketAddress10);
    org.junit.Assert.assertNotNull(factory12);
  }

  @Test
  public void test0990() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0990");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    org.neo4j.configuration.helpers.SocketAddress socketAddress5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.wihadsBackupEnvironmentFactory(
        socketAddress5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory10.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory12.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory12.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory12.isGcc(
        (java.lang.Boolean) true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
  }

  @Test
  public void test0991() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0991");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path15 = backupEnvironment12.getRpPath();
    boolean boolean16 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path17 = backupEnvironment12.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker18 = backupEnvironment12.getMemoryTracker();
    java.nio.file.Path path19 = backupEnvironment12.getRpPath();
    java.nio.file.Path path20 = backupEnvironment12.getRpPath();
    boolean boolean21 = backupEnvironment12.getIsCc();
    boolean boolean22 = backupEnvironment12.getIsRp();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertNotNull(socketAddress14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(memoryTracker18);
    org.junit.Assert.assertNotNull(path19);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
  }

  @Test
  public void test0992() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0992");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.logging.LogProvider logProvider1 = null;
    org.neo4j.logging.Log log2 = null;
    io.github.onograph.backup.RemoteBackupService remoteBackupService3 = new io.github.onograph.backup.RemoteBackupService(
        fileSystemAbstraction0, logProvider1, log2);
    io.github.onograph.backup.BackupVerificationService backupVerificationService4 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory5 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory7 = factory5.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = factory5.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory5.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory11.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment17 = factory11.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker18 = backupEnvironment17.getMemoryTracker();
    boolean boolean19 = backupEnvironment17.getIsRp();
    java.nio.file.Path path20 = backupEnvironment17.getPbPath();
    io.github.onograph.backup.DefaultBackupServiceHandler defaultBackupServiceHandler22 = null;
    io.github.onograph.backup.GdbStoreTransferWatcherRebImpl gdbStoreTransferWatcherRebImpl23 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer24 = null;
    io.github.onograph.backup.RemoteBackupManager remoteBackupManager25 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory26 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config27 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory28 = factory26.config(config27);
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory28.isRp(true);
    org.neo4j.configuration.Config config31 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory32 = factory30.config(config31);
    org.neo4j.configuration.helpers.SocketAddress socketAddress33 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory34 = factory30.wihadsBackupEnvironmentFactory(
        socketAddress33);
    org.neo4j.configuration.helpers.SocketAddress socketAddress35 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory36 = factory30.wihadsBackupEnvironmentFactory(
        socketAddress35);
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = factory30.wihadsBackupEnvironmentFactory(
        (int) (short) -1, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory42 = factory30.wihadsBackupEnvironmentFactory(
        0, "hi!");
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config44 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory43.config(config44);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isRp(true);
    org.neo4j.configuration.Config config48 = factory45.gecfConfig();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction49 = null;
    org.neo4j.memory.MemoryTracker memoryTracker50 = null;
    org.neo4j.io.pagecache.PageCache pageCache51 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager52 = new io.github.onograph.backup.BackupRestorationManager(
        config48, fileSystemAbstraction49, memoryTracker50, pageCache51);
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory30.config(config48);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction54 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory55.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory55.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = factory55.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory61.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory66 = factory61.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment67 = factory61.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern68 = backupEnvironment67.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress69 = backupEnvironment67.getSocketAddress();
    java.nio.file.Path path70 = backupEnvironment67.getRpPath();
    boolean boolean71 = backupEnvironment67.getIsBftf();
    java.nio.file.Path path72 = backupEnvironment67.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker73 = backupEnvironment67.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache74 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager75 = new io.github.onograph.backup.BackupRestorationManager(
        config48, fileSystemAbstraction54, memoryTracker73, pageCache74);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction76 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory77.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory81 = factory77.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory77.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory85 = factory83.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory88 = factory83.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment89 = factory83.bulBackupEnvironment();
    boolean boolean90 = backupEnvironment89.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional91 = backupEnvironment89.geicmaOptional();
    org.neo4j.memory.MemoryTracker memoryTracker92 = backupEnvironment89.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache93 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager94 = new io.github.onograph.backup.BackupRestorationManager(
        config48, fileSystemAbstraction76, memoryTracker92, pageCache93);
    try {
      remoteBackupService3.bakForBaPaBaDeBaReStGd(backupVerificationService4, backupEnvironment17,
          "hi!", defaultBackupServiceHandler22, gdbStoreTransferWatcherRebImpl23, pageCacheTracer24,
          remoteBackupManager25, backupRestorationManager94);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory5);
    org.junit.Assert.assertNotNull(factory7);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(backupEnvironment17);
    org.junit.Assert.assertNotNull(memoryTracker18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(path20);
    org.junit.Assert.assertNotNull(factory26);
    org.junit.Assert.assertNotNull(factory28);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(factory32);
    org.junit.Assert.assertNotNull(factory34);
    org.junit.Assert.assertNotNull(factory36);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory42);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(config48);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory66);
    org.junit.Assert.assertNotNull(backupEnvironment67);
    org.junit.Assert.assertNotNull(databaseNamePattern68);
    org.junit.Assert.assertNotNull(socketAddress69);
    org.junit.Assert.assertNotNull(path70);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertNotNull(path72);
    org.junit.Assert.assertNotNull(memoryTracker73);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(factory81);
    org.junit.Assert.assertNotNull(factory83);
    org.junit.Assert.assertNotNull(factory85);
    org.junit.Assert.assertNotNull(factory88);
    org.junit.Assert.assertNotNull(backupEnvironment89);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional91);
    org.junit.Assert.assertNotNull(memoryTracker92);
  }

  @Test
  public void test0993() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0993");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.backup.GdbIdRepo gdbIdRepo1 = new io.github.onograph.backup.GdbIdRepo(
        fileSystemAbstraction0);
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.config(config3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.isRp(true);
    org.neo4j.configuration.Config config7 = factory4.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory8.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory12 = factory8.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = factory8.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory19 = factory14.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment20 = factory14.bulBackupEnvironment();
    boolean boolean21 = backupEnvironment20.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional22 = backupEnvironment20.geicmaOptional();
    java.nio.file.Path path23 = backupEnvironment20.getPbPath();
    java.nio.file.Path path24 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path23);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory4.pbPath(path23);
    try {
      java.util.Optional<org.neo4j.kernel.database.DatabaseId> databaseIdOptional26 = gdbIdRepo1.reddtaiOptional(
          path23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(config7);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(factory12);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory19);
    org.junit.Assert.assertNotNull(backupEnvironment20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional22);
    org.junit.Assert.assertNotNull(path23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertNotNull(factory25);
  }

  @Test
  public void test0994() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0994");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    io.github.onograph.backup.FileMover fileMover3 = new io.github.onograph.backup.FileMover(
        fileSystemAbstraction2);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isRp(true);
    io.github.onograph.backup.BackupEnvironment.Factory factory10 = factory6.isSicc(
        (java.lang.Boolean) true);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern11 = factory6.gedtenprDatabaseNamePattern();
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory6.isFtfb(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory14 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config15 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory16 = factory14.config(config15);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = factory16.isRp(true);
    org.neo4j.configuration.Config config19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.config(config19);
    org.neo4j.configuration.helpers.SocketAddress socketAddress21 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory18.wihadsBackupEnvironmentFactory(
        socketAddress21);
    org.neo4j.configuration.helpers.SocketAddress socketAddress23 = factory18.getSocketAddress();
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory18.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory27 = factory25.isIcc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment backupEnvironment28 = factory27.bulBackupEnvironment();
    java.nio.file.Path path29 = backupEnvironment28.getPbPath();
    io.github.onograph.backup.BackupEnvironment.Factory factory30 = factory6.prPath(path29);
    java.util.stream.Stream<io.github.onograph.backup.FileMoverService> fileMoverServiceStream31 = fileMover3._trrfrmnStream(
        path29);
    org.neo4j.logging.LogProvider logProvider32 = null;
    org.neo4j.io.pagecache.PageCache pageCache33 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer34 = null;
    try {
      io.github.onograph.backup.BackupMetaService backupMetaService35 = new io.github.onograph.backup.BackupMetaService(
          fileSystemAbstraction0, "", path29, logProvider32, pageCache33, pageCacheTracer34);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory10);
    org.junit.Assert.assertNotNull(databaseNamePattern11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory14);
    org.junit.Assert.assertNotNull(factory16);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNull(socketAddress23);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory27);
    org.junit.Assert.assertNotNull(backupEnvironment28);
    org.junit.Assert.assertNotNull(path29);
    org.junit.Assert.assertNotNull(factory30);
    org.junit.Assert.assertNotNull(fileMoverServiceStream31);
  }

  @Test
  public void test0995() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0995");
    }
    io.github.onograph.backup.BackupRunner.Generator generator0 = io.github.onograph.backup.BackupRunner.bulrBackupRunnerGenerator();
    org.neo4j.logging.LogProvider logProvider1 = null;
    io.github.onograph.backup.BackupRunner.Generator generator2 = generator0.itraLogProvider(
        logProvider1);
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    io.github.onograph.backup.BackupRunner.Generator generator4 = generator2.systemNanoClock(
        systemNanoClock3);
    org.neo4j.time.SystemNanoClock systemNanoClock5 = null;
    io.github.onograph.backup.BackupRunner.Generator generator6 = generator2.systemNanoClock(
        systemNanoClock5);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory7 = null;
    io.github.onograph.backup.BackupRunner.Generator generator8 = generator2.progressMonitorFactory(
        progressMonitorFactory7);
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory9 = null;
    io.github.onograph.backup.BackupRunner.Generator generator10 = generator8.progressMonitorFactory(
        progressMonitorFactory9);
    org.neo4j.logging.LogProvider logProvider11 = null;
    io.github.onograph.backup.BackupRunner.Generator generator12 = generator8.uLogProvider(
        logProvider11);
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.backup.BackupRunner.Generator generator14 = generator8.itraLogProvider(
        logProvider13);
    io.github.onograph.backup.BackupRunner backupRunner15 = generator14.bulBackupRunner();
    org.neo4j.logging.LogProvider logProvider16 = null;
    io.github.onograph.backup.BackupRunner.Generator generator17 = generator14.itraLogProvider(
        logProvider16);
    org.neo4j.logging.LogProvider logProvider18 = null;
    io.github.onograph.backup.BackupRunner.Generator generator19 = generator14.uLogProvider(
        logProvider18);
    org.junit.Assert.assertNotNull(generator0);
    org.junit.Assert.assertNotNull(generator2);
    org.junit.Assert.assertNotNull(generator4);
    org.junit.Assert.assertNotNull(generator6);
    org.junit.Assert.assertNotNull(generator8);
    org.junit.Assert.assertNotNull(generator10);
    org.junit.Assert.assertNotNull(generator12);
    org.junit.Assert.assertNotNull(generator14);
    org.junit.Assert.assertNotNull(backupRunner15);
    org.junit.Assert.assertNotNull(generator17);
    org.junit.Assert.assertNotNull(generator19);
  }

  @Test
  public void test0996() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0996");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern13 = backupEnvironment12.getDatabaseNamePattern();
    boolean boolean14 = backupEnvironment12.getIsBftf();
    boolean boolean15 = backupEnvironment12.getIsBftf();
    java.nio.file.Path path16 = backupEnvironment12.getRpPath();
    java.nio.file.Path path17 = backupEnvironment12.getPbPath();
    java.nio.file.Path path18 = backupEnvironment12.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker19 = backupEnvironment12.getMemoryTracker();
    boolean boolean20 = backupEnvironment12.getIsRp();
    java.nio.file.Path path21 = backupEnvironment12.getPbPath();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(databaseNamePattern13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(path16);
    org.junit.Assert.assertNotNull(path17);
    org.junit.Assert.assertNotNull(path18);
    org.junit.Assert.assertNotNull(memoryTracker19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(path21);
  }

  @Test
  public void test0997() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0997");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    java.nio.file.Path path3 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.prPath(path3);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isSicc(
        (java.lang.Boolean) false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory9.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory9.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory15.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory15.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment21 = factory15.bulBackupEnvironment();
    boolean boolean22 = backupEnvironment21.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional23 = backupEnvironment21.geicmaOptional();
    java.nio.file.Path path24 = backupEnvironment21.getPbPath();
    java.nio.file.Path path25 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path24);
    java.nio.file.Path path26 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path25);
    boolean boolean27 = io.github.onograph.backup.BackupMetadataRepository.isMedaflForPa(path26);
    java.nio.file.Path path28 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path26);
    io.github.onograph.backup.BackupEnvironment.Factory factory29 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory31 = factory29.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory33 = factory29.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory35 = factory29.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory37 = factory35.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory40 = factory35.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment41 = factory35.bulBackupEnvironment();
    boolean boolean42 = backupEnvironment41.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional43 = backupEnvironment41.geicmaOptional();
    java.nio.file.Path path44 = backupEnvironment41.getPbPath();
    java.nio.file.Path path45 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path44);
    java.nio.file.Path path46 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path45);
    io.github.onograph.backup.FileMoverService fileMoverService47 = io.github.onograph.backup.FileMoverService.covifeseFileMoverService(
        path26, path45);
    io.github.onograph.backup.BackupEnvironment.Factory factory48 = factory8.prPath(path45);
    java.nio.file.Path path49 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path45);
    java.nio.file.Path path50 = io.github.onograph.backup.BackupMetadataRepository.gefeptPath(
        path45);
    io.github.onograph.backup.BackupEnvironment.Factory factory51 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory53 = factory51.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory55 = factory51.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory57 = factory51.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory59 = factory57.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory62 = factory57.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment63 = factory57.bulBackupEnvironment();
    boolean boolean64 = backupEnvironment63.getIsBftf();
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions> authMetaOptionsOptional65 = backupEnvironment63.geicmaOptional();
    org.neo4j.configuration.helpers.SocketAddress socketAddress66 = backupEnvironment63.getSocketAddress();
    boolean boolean67 = backupEnvironment63.getIsCc();
    java.nio.file.Path path68 = backupEnvironment63.getRpPath();
    java.nio.file.Path path69 = io.github.onograph.backup.GdbIdRepo.gedtefpPath(path68);
    io.github.onograph.backup.FileMoverService fileMoverService70 = io.github.onograph.backup.FileMoverService.movifeseFileMoverService(
        path50, path69);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(backupEnvironment21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional23);
    org.junit.Assert.assertNotNull(path24);
    org.junit.Assert.assertNotNull(path25);
    org.junit.Assert.assertNotNull(path26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(path28);
    org.junit.Assert.assertNotNull(factory29);
    org.junit.Assert.assertNotNull(factory31);
    org.junit.Assert.assertNotNull(factory33);
    org.junit.Assert.assertNotNull(factory35);
    org.junit.Assert.assertNotNull(factory37);
    org.junit.Assert.assertNotNull(factory40);
    org.junit.Assert.assertNotNull(backupEnvironment41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional43);
    org.junit.Assert.assertNotNull(path44);
    org.junit.Assert.assertNotNull(path45);
    org.junit.Assert.assertNotNull(path46);
    org.junit.Assert.assertNotNull(fileMoverService47);
    org.junit.Assert.assertNotNull(factory48);
    org.junit.Assert.assertNotNull(path49);
    org.junit.Assert.assertNotNull(path50);
    org.junit.Assert.assertNotNull(factory51);
    org.junit.Assert.assertNotNull(factory53);
    org.junit.Assert.assertNotNull(factory55);
    org.junit.Assert.assertNotNull(factory57);
    org.junit.Assert.assertNotNull(factory59);
    org.junit.Assert.assertNotNull(factory62);
    org.junit.Assert.assertNotNull(backupEnvironment63);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    org.junit.Assert.assertNotNull(authMetaOptionsOptional65);
    org.junit.Assert.assertNotNull(socketAddress66);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertNotNull(path68);
    org.junit.Assert.assertNotNull(path69);
    org.junit.Assert.assertNotNull(fileMoverService70);
  }

  @Test
  public void test0998() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0998");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory6.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment12 = factory6.bulBackupEnvironment();
    org.neo4j.memory.MemoryTracker memoryTracker13 = backupEnvironment12.getMemoryTracker();
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = backupEnvironment12.getSocketAddress();
    java.nio.file.Path path15 = backupEnvironment12.getPbPath();
    boolean boolean16 = backupEnvironment12.getIsCc();
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(backupEnvironment12);
    org.junit.Assert.assertNotNull(memoryTracker13);
    org.junit.Assert.assertNotNull(socketAddress14);
    org.junit.Assert.assertNotNull(path15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test0999() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0999");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config1 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.config(config1);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory2.isRp(true);
    org.neo4j.configuration.Config config5 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory4.config(config5);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory4.isIcc(
        (java.lang.Boolean) true);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
  }

  @Test
  public void test1000() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test1000");
    }
    io.github.onograph.backup.BackupEnvironment.Factory factory0 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory2 = factory0.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory4 = factory0.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory6 = factory0.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory8 = factory6.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory9 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config10 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory11 = factory9.config(config10);
    io.github.onograph.backup.BackupEnvironment.Factory factory13 = factory11.isRp(true);
    org.neo4j.configuration.Config config14 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory15 = factory13.config(config14);
    org.neo4j.configuration.helpers.SocketAddress socketAddress16 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory17 = factory13.wihadsBackupEnvironmentFactory(
        socketAddress16);
    io.github.onograph.backup.BackupEnvironment.Factory factory18 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    org.neo4j.configuration.Config config19 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory20 = factory18.config(config19);
    io.github.onograph.backup.BackupEnvironment.Factory factory22 = factory20.isRp(true);
    org.neo4j.configuration.Config config23 = factory20.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory24 = factory13.config(config23);
    io.github.onograph.backup.BackupEnvironment.Factory factory25 = factory8.config(config23);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.logging.LogProvider logProvider28 = null;
    java.nio.file.Path path29 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory30 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl31 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config23, consistencyFlags26, fileSystemAbstraction27, logProvider28, path29,
        progressMonitorFactory30);
    org.neo4j.consistency.checking.full.ConsistencyFlags consistencyFlags32 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction33 = null;
    org.neo4j.logging.LogProvider logProvider34 = null;
    java.nio.file.Path path35 = null;
    org.neo4j.internal.helpers.progress.ProgressMonitorFactory progressMonitorFactory36 = null;
    io.github.onograph.backup.BackupVerificationServiceImpl backupVerificationServiceImpl37 = new io.github.onograph.backup.BackupVerificationServiceImpl(
        config23, consistencyFlags32, fileSystemAbstraction33, logProvider34, path35,
        progressMonitorFactory36);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction38 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory39 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory41 = factory39.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory43 = factory39.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory45 = factory39.isIcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory47 = factory45.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory50 = factory45.wihadsBackupEnvironmentFactory(
        100, "hi!");
    io.github.onograph.backup.BackupEnvironment backupEnvironment51 = factory45.bulBackupEnvironment();
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern52 = backupEnvironment51.getDatabaseNamePattern();
    org.neo4j.configuration.helpers.SocketAddress socketAddress53 = backupEnvironment51.getSocketAddress();
    java.nio.file.Path path54 = backupEnvironment51.getRpPath();
    boolean boolean55 = backupEnvironment51.getIsBftf();
    java.nio.file.Path path56 = backupEnvironment51.getRpPath();
    org.neo4j.memory.MemoryTracker memoryTracker57 = backupEnvironment51.getMemoryTracker();
    org.neo4j.io.pagecache.PageCache pageCache58 = null;
    io.github.onograph.backup.BackupRestorationManager backupRestorationManager59 = new io.github.onograph.backup.BackupRestorationManager(
        config23, fileSystemAbstraction38, memoryTracker57, pageCache58);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction60 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory61 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory63 = factory61.isCc(false);
    java.nio.file.Path path64 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory65 = factory61.prPath(path64);
    io.github.onograph.backup.BackupEnvironment.Factory factory67 = factory61.isSicc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory68 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory70 = factory68.isGcc(
        (java.lang.Boolean) true);
    io.github.onograph.backup.BackupEnvironment.Factory factory72 = factory68.isRp(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory73 = io.github.onograph.backup.BackupEnvironment.bulrBackupEnvironmentFactory();
    io.github.onograph.backup.BackupEnvironment.Factory factory75 = factory73.isCc(false);
    io.github.onograph.backup.BackupEnvironment.Factory factory77 = factory73.isRp(false);
    java.nio.file.Path path78 = null;
    io.github.onograph.backup.BackupEnvironment.Factory factory79 = factory77.prPath(path78);
    org.neo4j.configuration.helpers.DatabaseNamePattern databaseNamePattern80 = factory79.gedtenprDatabaseNamePattern();
    org.neo4j.configuration.Config config81 = factory79.gecfConfig();
    io.github.onograph.backup.BackupEnvironment.Factory factory82 = factory72.config(config81);
    io.github.onograph.backup.BackupEnvironment.Factory factory83 = factory61.config(config81);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction84 = null;
    org.neo4j.configuration.Config config85 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction86 = null;
    java.nio.file.Path[] pathArray87 = new java.nio.file.Path[]{};
    java.util.LinkedHashSet<java.nio.file.Path> pathSet88 = new java.util.LinkedHashSet<java.nio.file.Path>();
    boolean boolean89 = java.util.Collections.addAll(
        (java.util.Collection<java.nio.file.Path>) pathSet88, pathArray87);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta90 = new io.github.onograph.backup.BackupRestoreMeta(
        config85, fileSystemAbstraction86, (java.util.Set<java.nio.file.Path>) pathSet88);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta91 = new io.github.onograph.backup.BackupRestoreMeta(
        config81, fileSystemAbstraction84, (java.util.Set<java.nio.file.Path>) pathSet88);
    io.github.onograph.backup.BackupRestoreMeta backupRestoreMeta92 = new io.github.onograph.backup.BackupRestoreMeta(
        config23, fileSystemAbstraction60, (java.util.Set<java.nio.file.Path>) pathSet88);
    org.junit.Assert.assertNotNull(factory0);
    org.junit.Assert.assertNotNull(factory2);
    org.junit.Assert.assertNotNull(factory4);
    org.junit.Assert.assertNotNull(factory6);
    org.junit.Assert.assertNotNull(factory8);
    org.junit.Assert.assertNotNull(factory9);
    org.junit.Assert.assertNotNull(factory11);
    org.junit.Assert.assertNotNull(factory13);
    org.junit.Assert.assertNotNull(factory15);
    org.junit.Assert.assertNotNull(factory17);
    org.junit.Assert.assertNotNull(factory18);
    org.junit.Assert.assertNotNull(factory20);
    org.junit.Assert.assertNotNull(factory22);
    org.junit.Assert.assertNotNull(config23);
    org.junit.Assert.assertNotNull(factory24);
    org.junit.Assert.assertNotNull(factory25);
    org.junit.Assert.assertNotNull(factory39);
    org.junit.Assert.assertNotNull(factory41);
    org.junit.Assert.assertNotNull(factory43);
    org.junit.Assert.assertNotNull(factory45);
    org.junit.Assert.assertNotNull(factory47);
    org.junit.Assert.assertNotNull(factory50);
    org.junit.Assert.assertNotNull(backupEnvironment51);
    org.junit.Assert.assertNotNull(databaseNamePattern52);
    org.junit.Assert.assertNotNull(socketAddress53);
    org.junit.Assert.assertNotNull(path54);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertNotNull(path56);
    org.junit.Assert.assertNotNull(memoryTracker57);
    org.junit.Assert.assertNotNull(factory61);
    org.junit.Assert.assertNotNull(factory63);
    org.junit.Assert.assertNotNull(factory65);
    org.junit.Assert.assertNotNull(factory67);
    org.junit.Assert.assertNotNull(factory68);
    org.junit.Assert.assertNotNull(factory70);
    org.junit.Assert.assertNotNull(factory72);
    org.junit.Assert.assertNotNull(factory73);
    org.junit.Assert.assertNotNull(factory75);
    org.junit.Assert.assertNotNull(factory77);
    org.junit.Assert.assertNotNull(factory79);
    org.junit.Assert.assertNotNull(databaseNamePattern80);
    org.junit.Assert.assertNotNull(config81);
    org.junit.Assert.assertNotNull(factory82);
    org.junit.Assert.assertNotNull(factory83);
    org.junit.Assert.assertNotNull(pathArray87);
    org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
  }
}


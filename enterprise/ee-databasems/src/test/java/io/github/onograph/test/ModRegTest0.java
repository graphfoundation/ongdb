package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest0 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test001");
    }
    org.neo4j.function.ThrowingAction throwingAction0 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle1 = org.neo4j.kernel.lifecycle.LifecycleAdapter.onInit(
        throwingAction0);
    org.junit.Assert.assertNotNull(lifecycle1);
  }

  @Test
  public void test002() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test002");
    }
    org.neo4j.graphdb.Label label0 = org.neo4j.dbms.database.SystemGraphComponent.VERSION_LABEL;
    org.junit.Assert.assertNotNull(label0);
  }

  @Test
  public void test003() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test003");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    java.lang.Class<?> wildcardClass3 = sysCrashCauseInfo1.getClass();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(wildcardClass3);
  }

  @Test
  public void test004() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test004");
    }
    java.lang.String str0 = org.neo4j.dbms.database.SystemGraphDbmsModel.DATABASE_STATUS_PROPERTY;
    org.junit.Assert.assertEquals("'" + str0 + "' != '" + "status" + "'", str0, "status");
  }

  @Test
  public void test005() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test005");
    }
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl0 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_BDS_FOR_CLN;
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl0 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_BDS_FOR_CLN + "'",
        operatorStateEnterpriseTypeImpl0.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_BDS_FOR_CLN));
  }

  @Test
  public void test006() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test006");
    }
    java.lang.String str0 = org.neo4j.dbms.database.SystemGraphDbmsModel.DUMP_DATA_PROPERTY;
    org.junit.Assert.assertEquals("'" + str0 + "' != '" + "dump_data" + "'", str0, "dump_data");
  }

  @Test
  public void test007() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test007");
    }
    org.neo4j.graphdb.factory.module.edition.AbstractEditionModule abstractEditionModule0 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule1 = null;
    io.github.onograph.dbms.StructureMetaService.Generator generator2 = null;
    try {
      io.github.onograph.dbms.gdb.MultipleGdbDatabaseManagerEnterpriseImpl multipleGdbDatabaseManagerEnterpriseImpl3 = new io.github.onograph.dbms.gdb.MultipleGdbDatabaseManagerEnterpriseImpl(
          abstractEditionModule0, globalModule1, generator2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test008() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test008");
    }
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl0 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_QT;
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl0 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_QT + "'",
        operatorStateEnterpriseTypeImpl0.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_QT));
  }

  @Test
  public void test009() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test009");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.String str4 = stateChangeException3.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str4,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test010() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test010");
    }
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl0 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_DD;
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl0 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_DD + "'",
        operatorStateEnterpriseTypeImpl0.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_DD));
  }

  @Test
  public void test011() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test011");
    }
    java.lang.String str0 = org.neo4j.dbms.database.SystemGraphDbmsModel.DATABASE_NAME_PROPERTY;
    org.junit.Assert.assertEquals("'" + str0 + "' != '" + "name" + "'", str0, "name");
  }

  @Test
  public void test012() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test012");
    }
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo0 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_SGDB_ERR;
    java.lang.String str1 = sysCrashCauseInfo0.getInfo();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo0 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_SGDB_ERR + "'",
        sysCrashCauseInfo0.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_SGDB_ERR));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "The system database panicked" + "'",
        str1, "The system database panicked");
  }

  @Test
  public void test013() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test013");
    }
    org.neo4j.function.ThrowingAction throwingAction0 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle1 = org.neo4j.kernel.lifecycle.LifecycleAdapter.onStop(
        throwingAction0);
    org.junit.Assert.assertNotNull(lifecycle1);
  }

  @Test
  public void test014() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test014");
    }
    java.lang.String str0 = org.neo4j.dbms.database.SystemGraphDbmsModel.UPDATE_ID_PROPERTY;
    org.junit.Assert.assertEquals("'" + str0 + "' != '" + "update_id" + "'", str0, "update_id");
  }

  @Test
  public void test015() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test015");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    try {
      boolean boolean6 = databaseStartupControllerAbortableImpl4.shouldAbort(namedDatabaseId5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test016() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test016");
    }
    org.neo4j.configuration.Config config0 = null;
    org.neo4j.logging.internal.LogService logService1 = null;
    try {
      io.github.onograph.dbms.crash.GdbCrashGenerator gdbCrashGenerator2 = io.github.onograph.dbms.crash.GdbCrashGenerator.bulfoGdbCrashGenerator(
          config0, logService1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test017() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test017");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    try {
      databaseStartupControllerAbortableImpl4.reefoForNa(namedDatabaseId5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test018() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test018");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.logging.LogProvider logProvider1 = null;
    org.neo4j.memory.MemoryTracker memoryTracker2 = null;
    org.neo4j.io.layout.Neo4jLayout neo4jLayout3 = null;
    try {
      io.github.onograph.dbms.HealthMonitorService healthMonitorService4 = new io.github.onograph.dbms.HealthMonitorService(
          fileSystemAbstraction0, logProvider1, memoryTracker2, neo4jLayout3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test019() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test019");
    }
    org.neo4j.graphdb.Label label0 = org.neo4j.dbms.database.SystemGraphDbmsModel.DELETED_DATABASE_LABEL;
    org.junit.Assert.assertNotNull(label0);
  }

  @Test
  public void test020() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test020");
    }
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl0 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_SC_IN_PROGRESS;
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl0 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_SC_IN_PROGRESS + "'",
        operatorStateEnterpriseTypeImpl0.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_SC_IN_PROGRESS));
  }

  @Test
  public void test021() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test021");
    }
    java.lang.String str0 = org.neo4j.dbms.database.SystemGraphDbmsModel.DATABASE_DEFAULT_PROPERTY;
    org.junit.Assert.assertEquals("'" + str0 + "' != '" + "default" + "'", str0, "default");
  }

  @Test
  public void test022() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test022");
    }
    java.lang.String str0 = org.neo4j.dbms.database.SystemGraphDbmsModel.UPDATED_AT_PROPERTY;
    org.junit.Assert.assertEquals("'" + str0 + "' != '" + "updated_at" + "'", str0, "updated_at");
  }

  @Test
  public void test023() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test023");
    }
    org.neo4j.kernel.database.Database database0 = null;
    io.github.onograph.dbms.crash.DbmsCrashManager dbmsCrashManager1 = io.github.onograph.dbms.crash.DbmsCrashManagerProcessor.craDbmsCrashManager(
        database0);
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent2 = null;
    try {
      dbmsCrashManager1.handleCrash(gdbCrashEvent2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsCrashManager1);
  }

  @Test
  public void test024() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test024");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    try {
      structureMetaService3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test025() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test025");
    }
    java.lang.String str0 = org.neo4j.dbms.database.SystemGraphDbmsModel.DATABASE_UUID_PROPERTY;
    org.junit.Assert.assertEquals("'" + str0 + "' != '" + "uuid" + "'", str0, "uuid");
  }

  @Test
  public void test026() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test026");
    }
    org.neo4j.graphdb.Label label0 = org.neo4j.dbms.database.SystemGraphDbmsModel.DATABASE_LABEL;
    org.junit.Assert.assertNotNull(label0);
  }

  @Test
  public void test027() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test027");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    try {
      java.lang.String str9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.toshtsrgString(
          databaseStateEnterpriseImpl5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
  }

  @Test
  public void test028() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test028");
    }
    org.neo4j.configuration.Config config0 = null;
    try {
      io.github.onograph.dbms.SystemGraphComponentEnterpriseImpl systemGraphComponentEnterpriseImpl1 = new io.github.onograph.dbms.SystemGraphComponentEnterpriseImpl(
          config0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test029() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test029");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    java.lang.Class<?> wildcardClass11 = databaseStartupControllerAbortableImpl4.getClass();
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(wildcardClass11);
  }

  @Test
  public void test030() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test030");
    }
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo0 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR;
    java.lang.Class<?> wildcardClass1 = gdbCrashCauseInfo0.getClass();
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo0 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR + "'",
        gdbCrashCauseInfo0.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR));
    org.junit.Assert.assertNotNull(wildcardClass1);
  }

  @Test
  public void test031() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test031");
    }
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier0);
    org.neo4j.graphdb.factory.module.GlobalModule globalModule2 = null;
    io.github.onograph.dbms.HealthMonitorService healthMonitorService3 = null;
    org.neo4j.bolt.txtracking.ReconciledTransactionTracker reconciledTransactionTracker4 = null;
    try {
      io.github.onograph.dbms.MediationDbmsManagers mediationDbmsManagers5 = new io.github.onograph.dbms.MediationDbmsManagers(
          defaultSystemGraphDbmsModel1, globalModule2, healthMonitorService3,
          reconciledTransactionTracker4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test032() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test032");
    }
    org.neo4j.function.ThrowingAction throwingAction0 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle1 = org.neo4j.kernel.lifecycle.LifecycleAdapter.onShutdown(
        throwingAction0);
    org.junit.Assert.assertNotNull(lifecycle1);
  }

  @Test
  public void test033() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test033");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    try {
      dbmsResolverMeta0.joiForCo(namedDatabaseId1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
  }

  @Test
  public void test034() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test034");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl1.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional3 = databaseStateEnterpriseImpl1.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl5.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional8 = databaseStateEnterpriseImpl5.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    try {
      java.lang.String str10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.lofmtString(
          databaseStateEnterpriseImpl4, databaseStateEnterpriseImpl9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(throwableOptional3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertNotNull(throwableOptional8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
  }

  @Test
  public void test035() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test035");
    }
    org.neo4j.kernel.database.Database database0 = null;
    io.github.onograph.dbms.gdb.Gdb gdb1 = null;
    try {
      io.github.onograph.dbms.gdb.DefaultStandaloneDatabaseContext defaultStandaloneDatabaseContext2 = new io.github.onograph.dbms.gdb.DefaultStandaloneDatabaseContext(
          database0, gdb1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test036() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test036");
    }
    io.github.onograph.dbms.crash.GdbCrashGenerator gdbCrashGenerator0 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler1 = null;
    org.neo4j.logging.internal.LogService logService2 = null;
    try {
      io.github.onograph.dbms.crash.CrashManagerImpl crashManagerImpl3 = new io.github.onograph.dbms.crash.CrashManagerImpl(
          gdbCrashGenerator0, jobScheduler1, logService2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test037() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test037");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter2 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl3 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter2);
    boolean boolean4 = databaseStateEnterpriseImpl1.equals((java.lang.Object) counter2);
    try {
      java.lang.String str5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.lofmtString(
          databaseStateEnterpriseImpl0, databaseStateEnterpriseImpl1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test038() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test038");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo13 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent14 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable8, namedDatabaseId12, gdbCrashCauseInfo13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = gdbCrashEvent14.getNamedDatabaseId();
    try {
      databaseStartupControllerAbortableImpl4.handleCrash(gdbCrashEvent14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo13 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo13.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId15);
  }

  @Test
  public void test039() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test039");
    }
    io.github.onograph.dbms.crash.CrashSignaler crashSignaler0 = null;
    io.github.onograph.dbms.crash.DbmsCrashManager dbmsCrashManager1 = io.github.onograph.dbms.crash.DbmsCrashManagerSystemGdbImpl.craDbmsCrashManager(
        crashSignaler0);
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo7 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent8 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable2, namedDatabaseId6, gdbCrashCauseInfo7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = gdbCrashEvent8.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo10 = gdbCrashEvent8.gersCrashSignalerCauseInfo();
    try {
      dbmsCrashManager1.handleCrash(gdbCrashEvent8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsCrashManager1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo7 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo7.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertTrue("'" + causeInfo10 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo10.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
  }

  @Test
  public void test040() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test040");
    }
    org.neo4j.function.ThrowingAction throwingAction0 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle1 = org.neo4j.kernel.lifecycle.LifecycleAdapter.onStart(
        throwingAction0);
    org.junit.Assert.assertNotNull(lifecycle1);
  }

  @Test
  public void test041() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test041");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    try {
      java.lang.String str4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.toshtsrgString(
          databaseStateEnterpriseImpl1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
  }

  @Test
  public void test042() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test042");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
  }

  @Test
  public void test043() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test043");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    try {
      boolean boolean12 = databaseStartupControllerAbortableImpl4.shouldAbort(namedDatabaseId11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test044() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test044");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    try {
      boolean boolean9 = databaseStartupControllerAbortableImpl4.shouldAbort(namedDatabaseId8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test045() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test045");
    }
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl0 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_DEFINED;
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl0 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_DEFINED + "'",
        operatorStateEnterpriseTypeImpl0.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_DEFINED));
  }

  @Test
  public void test046() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test046");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo20 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent21 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable15, namedDatabaseId19, gdbCrashCauseInfo20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = gdbCrashEvent21.getNamedDatabaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = databaseStateEnterpriseImpl24.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = databaseStateEnterpriseImpl27.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional29 = databaseStateEnterpriseImpl27.failure();
    boolean boolean30 = databaseStateEnterpriseImpl24.equals(
        (java.lang.Object) databaseStateEnterpriseImpl27);
    boolean boolean31 = gdbCrashEvent21.equals((java.lang.Object) boolean30);
    java.lang.Object obj32 = null;
    boolean boolean33 = gdbCrashEvent21.equals(obj32);
    try {
      databaseStartupControllerAbortableImpl4.handleCrash(gdbCrashEvent21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo20 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo20.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNull(namedDatabaseId25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNull(namedDatabaseId28);
    org.junit.Assert.assertNotNull(throwableOptional29);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
  }

  @Test
  public void test047() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test047");
    }
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl0 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    java.lang.String str1 = operatorStateEnterpriseTypeImpl0.description();
    boolean boolean2 = operatorStateEnterpriseTypeImpl0.terminal();
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl0 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl0.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "dropped" + "'", str1, "dropped");
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
  }

  @Test
  public void test048() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test048");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl1.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional3 = databaseStateEnterpriseImpl1.failure();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl4 = databaseStateEnterpriseImpl1.operatorState();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(throwableOptional3);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl4 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_DEFINED + "'",
        operatorStateEnterpriseTypeImpl4.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_DEFINED));
  }

  @Test
  public void test049() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test049");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray1 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList2 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2,
        namedDatabaseIdArray1);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    try {
      dbmsResolverMeta0.joiForCo(namedDatabaseId5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test050() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test050");
    }
    io.github.onograph.dbms.HealthMonitorService healthMonitorService0 = null;
    org.neo4j.logging.LogProvider logProvider1 = null;
    try {
      io.github.onograph.dbms.DbmsManagerWatchTagImpl dbmsManagerWatchTagImpl2 = new io.github.onograph.dbms.DbmsManagerWatchTagImpl(
          healthMonitorService0, logProvider1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test051() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test051");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
  }

  @Test
  public void test052() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test052");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    try {
      databaseStartupControllerAbortableImpl4.strdForNa(namedDatabaseId11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test053() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test053");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    java.lang.String str17 = stateChangeException14.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str17,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test054() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test054");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    structureMetaService3.init();
    try {
      structureMetaService3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test055() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test055");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test056() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test056");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo5 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    int int6 = sysCrashEvent2.getICe();
    java.lang.Throwable throwable7 = sysCrashEvent2.gecsThrowable();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + causeInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo5.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
    org.junit.Assert.assertNull(throwable7);
  }

  @Test
  public void test057() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test057");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo4 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent5 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo4);
    java.lang.String str6 = stateChangeException3.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo4.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str6,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test058() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test058");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    structureMetaService3.init();
    try {
      structureMetaService3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test059() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test059");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    io.github.onograph.dbms.StateChangeException stateChangeException16 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException11, databaseStateEnterpriseImpl13);
    java.lang.Throwable throwable17 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = databaseStateEnterpriseImpl18.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException20 = new io.github.onograph.dbms.StateChangeException(
        throwable17, databaseStateEnterpriseImpl18);
    stateChangeException16.addSuppressed((java.lang.Throwable) stateChangeException20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo23 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    java.lang.String str24 = gdbCrashCauseInfo23.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent25 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException20, namedDatabaseId22, gdbCrashCauseInfo23);
    try {
      databaseStartupControllerAbortableImpl4.handleCrash(gdbCrashEvent25);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo23 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo23.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Snapshot failed" + "'", str24,
        "Snapshot failed");
  }

  @Test
  public void test060() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test060");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    try {
      databaseStartupControllerAbortableImpl4.reefoForNa(namedDatabaseId8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test061() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test061");
    }
    java.lang.String str0 = org.neo4j.dbms.database.SystemGraphDbmsModel.DATABASE_STORAGE_ENGINE_PROPERTY;
    org.junit.Assert.assertEquals("'" + str0 + "' != '" + "storage_engine" + "'", str0,
        "storage_engine");
  }

  @Test
  public void test062() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test062");
    }
    org.neo4j.kernel.database.DatabaseStartupController databaseStartupController0 = org.neo4j.kernel.database.DatabaseStartupController.NEVER_ABORT;
    org.junit.Assert.assertNotNull(databaseStartupController0);
  }

  @Test
  public void test063() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test063");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl3.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl3.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        throwable7, databaseStateEnterpriseImpl8);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl6.helyDatabaseStateEnterpriseImpl();
    try {
      java.lang.String str13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.toshtsrgString(
          databaseStateEnterpriseImpl12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
  }

  @Test
  public void test064() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test064");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    int int5 = sysCrashEvent2.getICe();
    java.lang.Throwable throwable6 = sysCrashEvent2.gecsThrowable();
    java.lang.Throwable throwable7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        throwable7, databaseStateEnterpriseImpl8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo12 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent13 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable7, namedDatabaseId11, gdbCrashCauseInfo12);
    boolean boolean14 = sysCrashEvent2.equals((java.lang.Object) gdbCrashCauseInfo12);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    org.junit.Assert.assertNull(throwable6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo12 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo12.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test065() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test065");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    try {
      databaseStartupControllerAbortableImpl4.strdForNa(namedDatabaseId8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test066() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test066");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl3 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId2, operatorStateEnterpriseTypeImpl3);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl4,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl5);
    java.util.Optional<java.lang.Throwable> throwableOptional8 = databaseStateEnterpriseImpl5.failure();
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl3 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl3.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(throwableOptional8);
  }

  @Test
  public void test067() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test067");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo4 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent5 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo4);
    java.lang.Class<?> wildcardClass6 = sysCrashEvent5.getClass();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo4.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(wildcardClass6);
  }

  @Test
  public void test068() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test068");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    try {
      structureMetaService3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test069() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test069");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable9 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl10);
    stateChangeException8.addSuppressed((java.lang.Throwable) stateChangeException12);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo14 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent15 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException12, sysCrashCauseInfo14);
    java.lang.String str16 = stateChangeException12.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo14 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo14.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str16,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test070() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test070");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    try {
      databaseStartupControllerAbortableImpl4.strdForNa(namedDatabaseId15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test071() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test071");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdCollection7 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseIdCollection7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test072() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test072");
    }
    io.github.onograph.dbms.crash.CrashSignaler crashSignaler0 = null;
    io.github.onograph.dbms.crash.DbmsCrashManager dbmsCrashManager1 = io.github.onograph.dbms.crash.DbmsCrashManagerSystemGdbImpl.craDbmsCrashManager(
        crashSignaler0);
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo17 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    java.lang.String str18 = gdbCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent19 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException14, namedDatabaseId16, gdbCrashCauseInfo17);
    try {
      dbmsCrashManager1.handleCrash(gdbCrashEvent19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsCrashManager1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo17.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Snapshot failed" + "'", str18,
        "Snapshot failed");
  }

  @Test
  public void test073() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test073");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    int int5 = sysCrashEvent2.getICe();
    java.lang.Throwable throwable6 = sysCrashEvent2.gecsThrowable();
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction7 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter8 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl9 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter8);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    boolean boolean13 = databaseStateEnterpriseImpl11.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl14 = databaseStateEnterpriseImpl11.operatorState();
    databaseStateUpdateHandlerOppStatsImpl9.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl10,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    boolean boolean16 = dbmsResolverAction7.equals(
        (java.lang.Object) databaseStateEnterpriseImpl11);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean18 = dbmsResolverAction7.equals(
        (java.lang.Object) databaseStateEnterpriseImpl17);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl20 = databaseStateEnterpriseImpl17.operatorState();
    boolean boolean21 = sysCrashEvent2.equals((java.lang.Object) operatorStateEnterpriseTypeImpl20);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    org.junit.Assert.assertNull(throwable6);
    org.junit.Assert.assertNotNull(dbmsResolverAction7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl14 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl14.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl20 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl20.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
  }

  @Test
  public void test074() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test074");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    java.time.Clock clock29 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel30 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard31 = null;
    java.time.Duration duration32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl33 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock29, defaultSystemGraphDbmsModel30, availabilityGuard31, duration32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    java.time.Clock clock35 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel36 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard37 = null;
    java.time.Duration duration38 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl39 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock35, defaultSystemGraphDbmsModel36, availabilityGuard37, duration38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason41 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl39.prnuratForNaDa(namedDatabaseId40, preventReason41);
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId34, preventReason41);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId28, preventReason41);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId45 = null;
    try {
      databaseStartupControllerAbortableImpl4.strdForNa(namedDatabaseId45);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason41 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason41.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test075() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test075");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier2 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel3 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier2);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard4 = null;
    java.time.Duration duration5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl6 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel3, availabilityGuard4, duration5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel3, availabilityGuard7, duration8);
    org.neo4j.graphdb.factory.module.GlobalModule globalModule10 = null;
    io.github.onograph.dbms.HealthMonitorService healthMonitorService11 = null;
    org.neo4j.bolt.txtracking.ReconciledTransactionTracker reconciledTransactionTracker12 = null;
    try {
      io.github.onograph.dbms.MediationDbmsManagers mediationDbmsManagers13 = new io.github.onograph.dbms.MediationDbmsManagers(
          defaultSystemGraphDbmsModel3, globalModule10, healthMonitorService11,
          reconciledTransactionTracker12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test076() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test076");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    java.time.Clock clock29 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel30 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard31 = null;
    java.time.Duration duration32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl33 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock29, defaultSystemGraphDbmsModel30, availabilityGuard31, duration32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    java.time.Clock clock35 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel36 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard37 = null;
    java.time.Duration duration38 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl39 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock35, defaultSystemGraphDbmsModel36, availabilityGuard37, duration38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason41 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl39.prnuratForNaDa(namedDatabaseId40, preventReason41);
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId34, preventReason41);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId28, preventReason41);
    java.lang.Throwable throwable45 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = databaseStateEnterpriseImpl46.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException48 = new io.github.onograph.dbms.StateChangeException(
        throwable45, databaseStateEnterpriseImpl46);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId49 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo50 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent51 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable45, namedDatabaseId49, gdbCrashCauseInfo50);
    try {
      databaseStartupControllerAbortableImpl4.handleCrash(gdbCrashEvent51);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason41 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason41.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo50 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo50.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
  }

  @Test
  public void test077() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test077");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    try {
      dbmsResolverMeta0.joiForCo(namedDatabaseId6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test078() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test078");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter17 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl18 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter17);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean20 = databaseStateEnterpriseImpl19.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = databaseStateEnterpriseImpl19.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter22 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl23 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = databaseStateEnterpriseImpl25.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional27 = databaseStateEnterpriseImpl25.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl28,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30);
    databaseStateUpdateHandlerOppStatsImpl18.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl19,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl28);
    try {
      java.lang.String str35 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.lofmtString(
          databaseStateEnterpriseImpl1, databaseStateEnterpriseImpl28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNull(namedDatabaseId21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNull(namedDatabaseId26);
    org.junit.Assert.assertNotNull(throwableOptional27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
  }

  @Test
  public void test079() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test079");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo4 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent5 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo4);
    java.lang.Throwable[] throwableArray6 = stateChangeException3.getSuppressed();
    java.lang.Throwable throwable7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        throwable7, databaseStateEnterpriseImpl8);
    stateChangeException3.addSuppressed((java.lang.Throwable) stateChangeException10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo4.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
  }

  @Test
  public void test080() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test080");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean1 = databaseStateEnterpriseImpl0.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl0.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional3 = databaseStateEnterpriseImpl0.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    boolean boolean10 = databaseStateEnterpriseImpl8.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl11 = databaseStateEnterpriseImpl8.operatorState();
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl7,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8);
    boolean boolean13 = databaseStateEnterpriseImpl0.equals(
        (java.lang.Object) databaseStateUpdateHandlerOppStatsImpl6);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(throwableOptional3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl11 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl11.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
  }

  @Test
  public void test081() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test081");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl3.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl3.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        throwable7, databaseStateEnterpriseImpl8);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl6.helyDatabaseStateEnterpriseImpl();
    java.lang.Object obj13 = null;
    boolean boolean14 = databaseStateEnterpriseImpl6.equals(obj13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test082() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test082");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    java.lang.Throwable throwable22 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        throwable22, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.StateChangeException stateChangeException26 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl27.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl29 = databaseStateEnterpriseImpl27.operatorState();
    boolean boolean30 = databaseStateEnterpriseImpl27.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException31 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl27);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = databaseStateEnterpriseImpl11.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId33 = databaseStateEnterpriseImpl32.databaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl29 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl29.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertNull(namedDatabaseId33);
  }

  @Test
  public void test083() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test083");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException7, databaseStateEnterpriseImpl9);
    java.lang.Throwable throwable13 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException16 = new io.github.onograph.dbms.StateChangeException(
        throwable13, databaseStateEnterpriseImpl14);
    stateChangeException12.addSuppressed((java.lang.Throwable) stateChangeException16);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo18 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException16, sysCrashCauseInfo18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo21 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent22 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException16, namedDatabaseId20, gdbCrashCauseInfo21);
    stateChangeException3.addSuppressed((java.lang.Throwable) stateChangeException16);
    java.lang.String str24 = stateChangeException3.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo18 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo18.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo21 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo21.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertEquals(
        "'" + str24 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str24,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test084() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test084");
    }
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl0 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING;
    boolean boolean1 = operatorStateEnterpriseTypeImpl0.terminal();
    boolean boolean2 = operatorStateEnterpriseTypeImpl0.terminal();
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl0 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING + "'",
        operatorStateEnterpriseTypeImpl0.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING));
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
  }

  @Test
  public void test085() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test085");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl11 = databaseStateEnterpriseImpl9.operatorState();
    boolean boolean12 = databaseStateEnterpriseImpl9.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException13 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl9);
    java.lang.Throwable throwable14 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException17 = new io.github.onograph.dbms.StateChangeException(
        throwable14, databaseStateEnterpriseImpl15);
    try {
      stateChangeException13.addSuppressed(throwable14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl11 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl11.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
  }

  @Test
  public void test086() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test086");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl5.databaseId();
    boolean boolean8 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable9 = sysCrashEvent2.gecsThrowable();
    java.lang.Throwable throwable10 = sysCrashEvent2.gecsThrowable();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNull(throwable9);
    org.junit.Assert.assertNull(throwable10);
  }

  @Test
  public void test087() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test087");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    boolean boolean11 = dbmsResolverMeta0.equals((java.lang.Object) clock1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test088() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test088");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier2 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel3 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier2);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard4 = null;
    java.time.Duration duration5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl6 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel3, availabilityGuard4, duration5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel3, availabilityGuard7, duration8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    try {
      boolean boolean11 = databaseStartupControllerAbortableImpl9.shouldAbort(namedDatabaseId10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test089() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test089");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    java.lang.Throwable throwable22 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        throwable22, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.StateChangeException stateChangeException26 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl27.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl29 = databaseStateEnterpriseImpl27.operatorState();
    boolean boolean30 = databaseStateEnterpriseImpl27.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException31 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl27);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = databaseStateEnterpriseImpl11.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException31);
    java.lang.String str33 = stateChangeException31.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl29 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl29.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertEquals("'" + str33 + "' != '"
            + "io.github.onograph.dbms.StateChangeException: io.github.onograph.dbms.StateChangeException"
            + "'", str33,
        "io.github.onograph.dbms.StateChangeException: io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test090() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test090");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    java.util.Optional<java.lang.Throwable> throwableOptional17 = databaseStateEnterpriseImpl16.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean19 = databaseStateEnterpriseImpl18.hasFailed();
    try {
      java.lang.String str20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.lofmtString(
          databaseStateEnterpriseImpl16, databaseStateEnterpriseImpl18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(throwableOptional17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test091() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test091");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    int int5 = sysCrashEvent2.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo6 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    int int7 = sysCrashEvent2.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo8 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    boolean boolean10 = sysCrashEvent2.equals((java.lang.Object) 10L);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo6 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo6.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo8 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo8.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test092() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test092");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier2 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel3 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier2);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard4 = null;
    java.time.Duration duration5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl6 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel3, availabilityGuard4, duration5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel3, availabilityGuard7, duration8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    try {
      databaseStartupControllerAbortableImpl9.reefoForNa(namedDatabaseId10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test093() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test093");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl5.databaseId();
    boolean boolean8 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter10 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl11 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter10);
    boolean boolean12 = databaseStateEnterpriseImpl9.equals((java.lang.Object) counter10);
    boolean boolean13 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl9);
    java.lang.Object obj14 = null;
    boolean boolean15 = sysCrashEvent2.equals(obj14);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test094() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test094");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str18 = sysCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo17);
    java.lang.Throwable throwable20 = sysCrashEvent19.gecsThrowable();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Discovery system failed irrecoverably" + "'", str18,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(throwable20);
    org.junit.Assert.assertNull("throwable20.getLocalizedMessage() == null",
        throwable20.getLocalizedMessage());
    org.junit.Assert.assertNull("throwable20.getMessage() == null", throwable20.getMessage());
    org.junit.Assert.assertEquals(throwable20.toString(),
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test095() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test095");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    boolean boolean5 = databaseStateEnterpriseImpl3.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl6 = databaseStateEnterpriseImpl3.operatorState();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl3);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter8 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl9 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl11.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl11.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    databaseStateUpdateHandlerOppStatsImpl9.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    try {
      java.lang.String str21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.lofmtString(
          databaseStateEnterpriseImpl2, databaseStateEnterpriseImpl20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl6 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl6.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
  }

  @Test
  public void test096() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test096");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable9 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl10);
    stateChangeException8.addSuppressed((java.lang.Throwable) stateChangeException12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo15 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    java.lang.String str16 = gdbCrashCauseInfo15.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent17 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException12, namedDatabaseId14, gdbCrashCauseInfo15);
    java.lang.Throwable[] throwableArray18 = stateChangeException12.getSuppressed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo15 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo15.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Snapshot failed" + "'", str16,
        "Snapshot failed");
    org.junit.Assert.assertNotNull(throwableArray18);
  }

  @Test
  public void test097() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test097");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str18 = sysCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo17);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    io.github.onograph.dbms.StateChangeException stateChangeException28 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException23, databaseStateEnterpriseImpl25);
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    stateChangeException28.addSuppressed((java.lang.Throwable) stateChangeException32);
    stateChangeException14.addSuppressed((java.lang.Throwable) stateChangeException32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo36 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str37 = gdbCrashCauseInfo36.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent38 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException14, namedDatabaseId35, gdbCrashCauseInfo36);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId39 = gdbCrashEvent38.getNamedDatabaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Discovery system failed irrecoverably" + "'", str18,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo36 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo36.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "RaftMessage applier failed" + "'",
        str37, "RaftMessage applier failed");
    org.junit.Assert.assertNull(namedDatabaseId39);
  }

  @Test
  public void test098() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test098");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl5.databaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNull(namedDatabaseId9);
  }

  @Test
  public void test099() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test099");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    try {
      dbmsResolverMeta0.joiForCo(namedDatabaseId7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test100() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test100");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo16 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent17 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable15, sysCrashCauseInfo16);
    boolean boolean19 = sysCrashEvent17.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo20 = sysCrashEvent17.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable21 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException24 = new io.github.onograph.dbms.StateChangeException(
        throwable21, databaseStateEnterpriseImpl22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo26 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent27 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable21, namedDatabaseId25, gdbCrashCauseInfo26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = gdbCrashEvent27.getNamedDatabaseId();
    java.lang.Throwable throwable29 = gdbCrashEvent27.gecsThrowable();
    boolean boolean30 = sysCrashEvent17.equals((java.lang.Object) gdbCrashEvent27);
    try {
      databaseStartupControllerAbortableImpl4.handleCrash(gdbCrashEvent27);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo16 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo16.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + causeInfo20 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo20.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo26 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo26.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId28);
    org.junit.Assert.assertNull(throwable29);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
  }

  @Test
  public void test101() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test101");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo5 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable6 = sysCrashEvent2.gecsThrowable();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + causeInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo5.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable6);
  }

  @Test
  public void test102() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test102");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    structureMetaService3.init();
    structureMetaService3.init();
    structureMetaService3.shutdown();
    try {
      structureMetaService3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test103() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test103");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo4 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent5 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo4);
    java.lang.Throwable throwable6 = sysCrashEvent5.gecsThrowable();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo4.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(throwable6);
    org.junit.Assert.assertNull("throwable6.getLocalizedMessage() == null",
        throwable6.getLocalizedMessage());
    org.junit.Assert.assertNull("throwable6.getMessage() == null", throwable6.getMessage());
    org.junit.Assert.assertEquals(throwable6.toString(),
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test104() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test104");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    java.time.Clock clock12 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel13 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard14 = null;
    java.time.Duration duration15 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl16 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock12, defaultSystemGraphDbmsModel13, availabilityGuard14, duration15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    java.time.Clock clock18 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel19 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard20 = null;
    java.time.Duration duration21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl22 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock18, defaultSystemGraphDbmsModel19, availabilityGuard20, duration21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason24 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl22.prnuratForNaDa(namedDatabaseId23, preventReason24);
    databaseStartupControllerAbortableImpl16.prnuratForNaDa(namedDatabaseId17, preventReason24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = null;
    java.time.Clock clock28 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel29 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard30 = null;
    java.time.Duration duration31 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl32 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock28, defaultSystemGraphDbmsModel29, availabilityGuard30, duration31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId33 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason34 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl32.prnuratForNaDa(namedDatabaseId33, preventReason34);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId36 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason37 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl32.prnuratForNaDa(namedDatabaseId36, preventReason37);
    databaseStartupControllerAbortableImpl16.prnuratForNaDa(namedDatabaseId27, preventReason37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    java.time.Clock clock41 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel42 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard43 = null;
    java.time.Duration duration44 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl45 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock41, defaultSystemGraphDbmsModel42, availabilityGuard43, duration44);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId46 = null;
    java.time.Clock clock47 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel48 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard49 = null;
    java.time.Duration duration50 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl51 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock47, defaultSystemGraphDbmsModel48, availabilityGuard49, duration50);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId52 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason53 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl51.prnuratForNaDa(namedDatabaseId52, preventReason53);
    databaseStartupControllerAbortableImpl45.prnuratForNaDa(namedDatabaseId46, preventReason53);
    databaseStartupControllerAbortableImpl16.aluabForNaDa(namedDatabaseId40, preventReason53);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId11, preventReason53);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId58 = null;
    try {
      boolean boolean59 = databaseStartupControllerAbortableImpl4.shouldAbort(namedDatabaseId58);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason24 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason24.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason34 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason34.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason37 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason37.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason53 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason53.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test105() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test105");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    try {
      databaseStartupControllerAbortableImpl4.strdForNa(namedDatabaseId5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test106() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test106");
    }
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo0 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    java.lang.String str1 = gdbCrashCauseInfo0.getInfo();
    java.lang.String str2 = gdbCrashCauseInfo0.getInfo();
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo0 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo0.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Catchup failed" + "'", str1,
        "Catchup failed");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Catchup failed" + "'", str2,
        "Catchup failed");
  }

  @Test
  public void test107() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test107");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = databaseStateEnterpriseImpl4.helyDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl4.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl7 = databaseStateEnterpriseImpl4.operatorState();
    databaseStateUpdateHandlerOppStatsImpl2.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl3,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl4);
    boolean boolean9 = dbmsResolverAction0.equals((java.lang.Object) databaseStateEnterpriseImpl4);
    org.neo4j.function.ThrowingAction throwingAction10 = null;
    org.neo4j.function.ThrowingAction throwingAction11 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle12 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction10, throwingAction11);
    boolean boolean13 = dbmsResolverAction0.equals((java.lang.Object) throwingAction10);
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl7 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl7.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(lifecycle12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test108() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test108");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    java.lang.Throwable throwable5 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = databaseStateEnterpriseImpl6.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        throwable5, databaseStateEnterpriseImpl6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo10 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent11 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable5, namedDatabaseId9, gdbCrashCauseInfo10);
    try {
      databaseStartupControllerAbortableImpl4.handleCrash(gdbCrashEvent11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo10 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo10.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
  }

  @Test
  public void test109() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test109");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    java.util.Optional<java.lang.Throwable> throwableOptional17 = databaseStateEnterpriseImpl16.failure();
    try {
      java.lang.String str18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.toshtsrgString(
          databaseStateEnterpriseImpl16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(throwableOptional17);
  }

  @Test
  public void test110() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test110");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo5 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    int int6 = sysCrashEvent2.getICe();
    int int7 = sysCrashEvent2.getICe();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + causeInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo5.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
  }

  @Test
  public void test111() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test111");
    }
    java.time.Clock clock0 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier1 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel2 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier1);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard3 = null;
    java.time.Duration duration4 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl5 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel2, availabilityGuard3, duration4);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo11 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent12 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable6, namedDatabaseId10, gdbCrashCauseInfo11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = gdbCrashEvent12.getNamedDatabaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = databaseStateEnterpriseImpl15.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = databaseStateEnterpriseImpl18.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional20 = databaseStateEnterpriseImpl18.failure();
    boolean boolean21 = databaseStateEnterpriseImpl15.equals(
        (java.lang.Object) databaseStateEnterpriseImpl18);
    boolean boolean22 = gdbCrashEvent12.equals((java.lang.Object) boolean21);
    java.lang.Object obj23 = null;
    boolean boolean24 = gdbCrashEvent12.equals(obj23);
    try {
      databaseStartupControllerAbortableImpl5.handleCrash(gdbCrashEvent12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo11 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo11.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNull(namedDatabaseId16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNull(namedDatabaseId19);
    org.junit.Assert.assertNotNull(throwableOptional20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test112() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test112");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard11 = null;
    java.time.Duration duration12 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl13 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel4, availabilityGuard11, duration12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    try {
      boolean boolean15 = databaseStartupControllerAbortableImpl13.shouldAbort(namedDatabaseId14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test113() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test113");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.intlDatabaseStateEnterpriseImpl(
        namedDatabaseId0);
    java.util.Optional<java.lang.Throwable> throwableOptional2 = databaseStateEnterpriseImpl1.failure();
    try {
      java.lang.String str3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.toshtsrgString(
          databaseStateEnterpriseImpl1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(throwableOptional2);
  }

  @Test
  public void test114() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test114");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    try {
      boolean boolean29 = databaseStartupControllerAbortableImpl4.shouldAbort(namedDatabaseId28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test115() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test115");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl1.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl4 = databaseStateEnterpriseImpl1.operatorState();
    boolean boolean5 = dbmsResolverAction0.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl4);
    java.lang.String str6 = operatorStateEnterpriseTypeImpl4.description();
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl4 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl4.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "initial" + "'", str6, "initial");
  }

  @Test
  public void test116() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test116");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl1.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = databaseStateEnterpriseImpl4.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional6 = databaseStateEnterpriseImpl4.failure();
    boolean boolean7 = databaseStateEnterpriseImpl1.equals(
        (java.lang.Object) databaseStateEnterpriseImpl4);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = databaseStateEnterpriseImpl1.databaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNull(namedDatabaseId5);
    org.junit.Assert.assertNotNull(throwableOptional6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(namedDatabaseId8);
  }

  @Test
  public void test117() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test117");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    java.lang.Throwable throwable3 = sysCrashEvent2.gecsThrowable();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo4 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable5 = sysCrashEvent2.gecsThrowable();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo6 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable3);
    org.junit.Assert.assertTrue("'" + causeInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo4.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable5);
    org.junit.Assert.assertTrue("'" + causeInfo6 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo6.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
  }

  @Test
  public void test118() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test118");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier2 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel3 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier2);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard4 = null;
    java.time.Duration duration5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl6 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel3, availabilityGuard4, duration5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel3, availabilityGuard7, duration8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason11 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl9.aluabForNaDa(namedDatabaseId10, preventReason11);
    java.lang.Throwable throwable13 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException16 = new io.github.onograph.dbms.StateChangeException(
        throwable13, databaseStateEnterpriseImpl14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo18 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent19 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable13, namedDatabaseId17, gdbCrashCauseInfo18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = gdbCrashEvent19.getNamedDatabaseId();
    try {
      databaseStartupControllerAbortableImpl9.handleCrash(gdbCrashEvent19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason11 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason11.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo18 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo18.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId20);
  }

  @Test
  public void test119() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test119");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo5 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable6 = sysCrashEvent2.gecsThrowable();
    java.lang.Throwable throwable7 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo8 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent9 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable7, sysCrashCauseInfo8);
    boolean boolean11 = sysCrashEvent9.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo12 = sysCrashEvent9.gersCrashSignalerCauseInfo();
    try {
      boolean boolean13 = sysCrashEvent2.equals((java.lang.Object) sysCrashEvent9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + causeInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo5.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo8 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo8.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + causeInfo12 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo12.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
  }

  @Test
  public void test120() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test120");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    int int5 = sysCrashEvent2.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo6 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    int int7 = sysCrashEvent2.getICe();
    java.lang.Throwable throwable8 = sysCrashEvent2.gecsThrowable();
    java.lang.Object obj9 = null;
    boolean boolean10 = sysCrashEvent2.equals(obj9);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo11 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo6 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo6.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    org.junit.Assert.assertNull(throwable8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + causeInfo11 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo11.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
  }

  @Test
  public void test121() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test121");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl3 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId2, operatorStateEnterpriseTypeImpl3);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl4,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl3 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl3.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
  }

  @Test
  public void test122() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test122");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    java.time.Clock clock12 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel13 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard14 = null;
    java.time.Duration duration15 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl16 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock12, defaultSystemGraphDbmsModel13, availabilityGuard14, duration15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    java.time.Clock clock18 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel19 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard20 = null;
    java.time.Duration duration21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl22 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock18, defaultSystemGraphDbmsModel19, availabilityGuard20, duration21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason24 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl22.prnuratForNaDa(namedDatabaseId23, preventReason24);
    databaseStartupControllerAbortableImpl16.prnuratForNaDa(namedDatabaseId17, preventReason24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = null;
    java.time.Clock clock28 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel29 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard30 = null;
    java.time.Duration duration31 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl32 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock28, defaultSystemGraphDbmsModel29, availabilityGuard30, duration31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId33 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason34 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl32.prnuratForNaDa(namedDatabaseId33, preventReason34);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId36 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason37 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl32.prnuratForNaDa(namedDatabaseId36, preventReason37);
    databaseStartupControllerAbortableImpl16.prnuratForNaDa(namedDatabaseId27, preventReason37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    java.time.Clock clock41 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel42 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard43 = null;
    java.time.Duration duration44 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl45 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock41, defaultSystemGraphDbmsModel42, availabilityGuard43, duration44);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId46 = null;
    java.time.Clock clock47 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel48 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard49 = null;
    java.time.Duration duration50 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl51 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock47, defaultSystemGraphDbmsModel48, availabilityGuard49, duration50);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId52 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason53 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl51.prnuratForNaDa(namedDatabaseId52, preventReason53);
    databaseStartupControllerAbortableImpl45.prnuratForNaDa(namedDatabaseId46, preventReason53);
    databaseStartupControllerAbortableImpl16.aluabForNaDa(namedDatabaseId40, preventReason53);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId11, preventReason53);
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason24 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason24.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason34 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason34.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason37 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason37.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason53 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason53.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test123() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test123");
    }
    org.neo4j.kernel.database.Database database0 = null;
    io.github.onograph.dbms.crash.DbmsCrashManager dbmsCrashManager1 = io.github.onograph.dbms.crash.MarkPotentialCrash.craDbmsCrashManager(
        database0);
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo17 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    java.lang.String str18 = gdbCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent19 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException14, namedDatabaseId16, gdbCrashCauseInfo17);
    try {
      dbmsCrashManager1.handleCrash(gdbCrashEvent19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsCrashManager1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo17.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Snapshot failed" + "'", str18,
        "Snapshot failed");
  }

  @Test
  public void test124() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test124");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.util.Optional<java.lang.Throwable> throwableOptional2 = databaseStateEnterpriseImpl0.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter3 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl4 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter3);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl5.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter8 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl9 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl11.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl11.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    databaseStateUpdateHandlerOppStatsImpl9.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl16);
    databaseStateUpdateHandlerOppStatsImpl4.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl5,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    try {
      java.lang.String str22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.lofmtString(
          databaseStateEnterpriseImpl0, databaseStateEnterpriseImpl21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(throwableOptional2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
  }

  @Test
  public void test125() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test125");
    }
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo0 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    java.lang.String str1 = gdbCrashCauseInfo0.getInfo();
    java.lang.String str2 = gdbCrashCauseInfo0.getInfo();
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo0 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo0.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Snapshot failed" + "'", str1,
        "Snapshot failed");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Snapshot failed" + "'", str2,
        "Snapshot failed");
  }

  @Test
  public void test126() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test126");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    java.time.Clock clock29 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel30 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard31 = null;
    java.time.Duration duration32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl33 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock29, defaultSystemGraphDbmsModel30, availabilityGuard31, duration32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    java.time.Clock clock35 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel36 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard37 = null;
    java.time.Duration duration38 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl39 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock35, defaultSystemGraphDbmsModel36, availabilityGuard37, duration38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason41 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl39.prnuratForNaDa(namedDatabaseId40, preventReason41);
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId34, preventReason41);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId28, preventReason41);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId45 = null;
    try {
      boolean boolean46 = databaseStartupControllerAbortableImpl4.shouldAbort(namedDatabaseId45);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason41 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason41.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test127() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test127");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray1 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList2 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2,
        namedDatabaseIdArray1);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2);
    dbmsResolverMeta0.jonal();
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test128() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test128");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = gdbCrashEvent6.getNamedDatabaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertNull(namedDatabaseId8);
  }

  @Test
  public void test129() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test129");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test130() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test130");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl3.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl6.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional8 = databaseStateEnterpriseImpl6.failure();
    boolean boolean9 = databaseStateEnterpriseImpl3.equals(
        (java.lang.Object) databaseStateEnterpriseImpl6);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = databaseStateEnterpriseImpl10.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl10.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl10.failure();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl10);
    java.util.Optional<java.lang.Throwable> throwableOptional15 = databaseStateEnterpriseImpl10.failure();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertNotNull(throwableOptional8);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(throwableOptional15);
  }

  @Test
  public void test131() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test131");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl1 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId0, operatorStateEnterpriseTypeImpl1);
    java.lang.String str3 = operatorStateEnterpriseTypeImpl1.description();
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl1 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl1.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "initial" + "'", str3, "initial");
  }

  @Test
  public void test132() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test132");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    try {
      databaseStartupControllerAbortableImpl4.reefoForNa(namedDatabaseId11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test133() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test133");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard11 = null;
    java.time.Duration duration12 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl13 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel4, availabilityGuard11, duration12);
    org.neo4j.graphdb.factory.module.GlobalModule globalModule14 = null;
    io.github.onograph.dbms.HealthMonitorService healthMonitorService15 = null;
    org.neo4j.bolt.txtracking.ReconciledTransactionTracker reconciledTransactionTracker16 = null;
    try {
      io.github.onograph.dbms.MediationDbmsManagers mediationDbmsManagers17 = new io.github.onograph.dbms.MediationDbmsManagers(
          defaultSystemGraphDbmsModel4, globalModule14, healthMonitorService15,
          reconciledTransactionTracker16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test134() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test134");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable[] throwableArray9 = stateChangeException3.getSuppressed();
    java.lang.Throwable[] throwableArray10 = stateChangeException3.getSuppressed();
    java.lang.String str11 = stateChangeException3.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(throwableArray9);
    org.junit.Assert.assertNotNull(throwableArray10);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str11,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test135() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test135");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo8 = gdbCrashEvent6.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable9 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl15 = databaseStateEnterpriseImpl13.operatorState();
    io.github.onograph.dbms.StateChangeException stateChangeException16 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo18 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR;
    java.lang.String str19 = gdbCrashCauseInfo18.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent20 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable9, namedDatabaseId17, gdbCrashCauseInfo18);
    try {
      boolean boolean21 = gdbCrashEvent6.equals((java.lang.Object) gdbCrashEvent20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + causeInfo8 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo8.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl15 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl15.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo18 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR + "'",
        gdbCrashCauseInfo18.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR));
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Command application failed" + "'",
        str19, "Command application failed");
  }

  @Test
  public void test136() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test136");
    }
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo0 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str1 = gdbCrashCauseInfo0.getInfo();
    java.lang.String str2 = gdbCrashCauseInfo0.getInfo();
    java.lang.String str3 = gdbCrashCauseInfo0.getInfo();
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo0 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo0.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "RaftMessage applier failed" + "'", str1,
        "RaftMessage applier failed");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "RaftMessage applier failed" + "'", str2,
        "RaftMessage applier failed");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RaftMessage applier failed" + "'", str3,
        "RaftMessage applier failed");
  }

  @Test
  public void test137() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test137");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl2.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter6 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl7 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = databaseStateEnterpriseImpl9.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional11 = databaseStateEnterpriseImpl9.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable13 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException16 = new io.github.onograph.dbms.StateChangeException(
        throwable13, databaseStateEnterpriseImpl14);
    databaseStateUpdateHandlerOppStatsImpl7.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = databaseStateEnterpriseImpl18.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl7.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl18,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl21);
    org.neo4j.function.ThrowingAction throwingAction23 = null;
    org.neo4j.function.ThrowingAction throwingAction24 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle25 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction23, throwingAction24);
    boolean boolean26 = databaseStateEnterpriseImpl21.equals((java.lang.Object) throwingAction24);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl21);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter28 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl29 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId30 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl31 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId30, operatorStateEnterpriseTypeImpl31);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean34 = databaseStateEnterpriseImpl33.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl29.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl32,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl33);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable38 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = databaseStateEnterpriseImpl39.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException41 = new io.github.onograph.dbms.StateChangeException(
        throwable38, databaseStateEnterpriseImpl39);
    java.lang.Throwable throwable42 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = databaseStateEnterpriseImpl43.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException45 = new io.github.onograph.dbms.StateChangeException(
        throwable42, databaseStateEnterpriseImpl43);
    io.github.onograph.dbms.StateChangeException stateChangeException46 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException41, databaseStateEnterpriseImpl43);
    java.lang.Throwable throwable47 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl49 = databaseStateEnterpriseImpl48.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException50 = new io.github.onograph.dbms.StateChangeException(
        throwable47, databaseStateEnterpriseImpl48);
    stateChangeException46.addSuppressed((java.lang.Throwable) stateChangeException50);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl37.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException50);
    try {
      databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
          (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl33,
          (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl52);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNull(namedDatabaseId10);
    org.junit.Assert.assertNotNull(throwableOptional11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(lifecycle25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl31 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl31.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl49);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
  }

  @Test
  public void test138() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test138");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = databaseStateEnterpriseImpl4.helyDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl4.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl7 = databaseStateEnterpriseImpl4.operatorState();
    databaseStateUpdateHandlerOppStatsImpl2.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl3,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl4);
    boolean boolean9 = dbmsResolverAction0.equals((java.lang.Object) databaseStateEnterpriseImpl4);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = dbmsResolverAction0.equals(
        (java.lang.Object) databaseStateEnterpriseImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable19 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        throwable19, databaseStateEnterpriseImpl20);
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException18, databaseStateEnterpriseImpl20);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    stateChangeException23.addSuppressed((java.lang.Throwable) stateChangeException27);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = databaseStateEnterpriseImpl14.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException27);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo30 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str31 = sysCrashCauseInfo30.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent32 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException27, sysCrashCauseInfo30);
    java.lang.Throwable throwable33 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException36 = new io.github.onograph.dbms.StateChangeException(
        throwable33, databaseStateEnterpriseImpl34);
    java.lang.Throwable throwable37 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl38.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException40 = new io.github.onograph.dbms.StateChangeException(
        throwable37, databaseStateEnterpriseImpl38);
    io.github.onograph.dbms.StateChangeException stateChangeException41 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException36, databaseStateEnterpriseImpl38);
    java.lang.Throwable throwable42 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = databaseStateEnterpriseImpl43.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException45 = new io.github.onograph.dbms.StateChangeException(
        throwable42, databaseStateEnterpriseImpl43);
    stateChangeException41.addSuppressed((java.lang.Throwable) stateChangeException45);
    stateChangeException27.addSuppressed((java.lang.Throwable) stateChangeException45);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId48 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo49 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str50 = gdbCrashCauseInfo49.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent51 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException27, namedDatabaseId48, gdbCrashCauseInfo49);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl10.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException27);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo53 = null;
    try {
      io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent54 = new io.github.onograph.dbms.crash.SysCrashEvent(
          (java.lang.Throwable) stateChangeException27, sysCrashCauseInfo53);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl7 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl7.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo30 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo30.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Discovery system failed irrecoverably" + "'", str31,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo49 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo49.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "RaftMessage applier failed" + "'",
        str50, "RaftMessage applier failed");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
  }

  @Test
  public void test139() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test139");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    dbmsResolverMeta0.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta8 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta8.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray10 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList11 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11,
        namedDatabaseIdArray10);
    dbmsResolverMeta8.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta15 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta15.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray17 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList18 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean19 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList18,
        namedDatabaseIdArray17);
    dbmsResolverMeta15.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList18);
    dbmsResolverMeta15.jonal();
    dbmsResolverMeta15.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta23 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta23.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray25 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList26 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean27 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26,
        namedDatabaseIdArray25);
    dbmsResolverMeta23.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26);
    dbmsResolverMeta15.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId31);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta8);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta15);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta23);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
  }

  @Test
  public void test140() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test140");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = databaseStateEnterpriseImpl4.helyDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl4.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl7 = databaseStateEnterpriseImpl4.operatorState();
    databaseStateUpdateHandlerOppStatsImpl2.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl3,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl4);
    boolean boolean9 = dbmsResolverAction0.equals((java.lang.Object) databaseStateEnterpriseImpl4);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = dbmsResolverAction0.equals(
        (java.lang.Object) databaseStateEnterpriseImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl7 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl7.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
  }

  @Test
  public void test141() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test141");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo16 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent17 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable11, namedDatabaseId15, gdbCrashCauseInfo16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = gdbCrashEvent17.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo19 = gdbCrashEvent17.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable20 = gdbCrashEvent17.gecsThrowable();
    java.lang.Throwable throwable21 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo22 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent23 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable21, sysCrashCauseInfo22);
    boolean boolean25 = sysCrashEvent23.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean27 = databaseStateEnterpriseImpl26.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = databaseStateEnterpriseImpl26.databaseId();
    boolean boolean29 = sysCrashEvent23.equals((java.lang.Object) databaseStateEnterpriseImpl26);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo30 = sysCrashEvent23.gersCrashSignalerCauseInfo();
    boolean boolean31 = gdbCrashEvent17.equals((java.lang.Object) causeInfo30);
    try {
      databaseStartupControllerAbortableImpl4.handleCrash(gdbCrashEvent17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo16 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo16.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId18);
    org.junit.Assert.assertTrue("'" + causeInfo19 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo19.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(throwable20);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo22 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo22.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNull(namedDatabaseId28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + causeInfo30 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo30.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
  }

  @Test
  public void test142() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test142");
    }
    io.github.onograph.dbms.StructureMetaService structureMetaService0 = io.github.onograph.dbms.StructureMetaService.NOO_STRUCTURE_META_SERVICE;
    structureMetaService0.shutdown();
    structureMetaService0.stop();
    org.junit.Assert.assertNotNull(structureMetaService0);
  }

  @Test
  public void test143() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test143");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl2.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl2.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter7 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl8 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl10 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId9, operatorStateEnterpriseTypeImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean13 = databaseStateEnterpriseImpl12.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl8.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter16 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl17 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter16);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean19 = databaseStateEnterpriseImpl18.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = databaseStateEnterpriseImpl18.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional21 = databaseStateEnterpriseImpl18.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter22 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl23 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = databaseStateEnterpriseImpl25.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional27 = databaseStateEnterpriseImpl25.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl28,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl34,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    org.neo4j.function.ThrowingAction throwingAction39 = null;
    org.neo4j.function.ThrowingAction throwingAction40 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle41 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction39, throwingAction40);
    boolean boolean42 = databaseStateEnterpriseImpl37.equals((java.lang.Object) throwingAction40);
    databaseStateUpdateHandlerOppStatsImpl17.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl18,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = databaseStateEnterpriseImpl44.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable46 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl47.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException49 = new io.github.onograph.dbms.StateChangeException(
        throwable46, databaseStateEnterpriseImpl47);
    java.lang.Throwable throwable50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException53 = new io.github.onograph.dbms.StateChangeException(
        throwable50, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl51);
    java.lang.Throwable throwable55 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = databaseStateEnterpriseImpl56.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException58 = new io.github.onograph.dbms.StateChangeException(
        throwable55, databaseStateEnterpriseImpl56);
    stateChangeException54.addSuppressed((java.lang.Throwable) stateChangeException58);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = databaseStateEnterpriseImpl45.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException58);
    try {
      databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
          (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl18,
          (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl60);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl10 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl10.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNull(namedDatabaseId20);
    org.junit.Assert.assertNotNull(throwableOptional21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNull(namedDatabaseId26);
    org.junit.Assert.assertNotNull(throwableOptional27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(lifecycle41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
  }

  @Test
  public void test144() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test144");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo5 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.String str6 = causeInfo5.getInfo();
    java.lang.String str7 = causeInfo5.getInfo();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + causeInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo5.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Discovery system failed irrecoverably" + "'", str6,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Discovery system failed irrecoverably" + "'", str7,
        "Discovery system failed irrecoverably");
  }

  @Test
  public void test145() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test145");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl1.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter3 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl4 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter3);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl5.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional8 = databaseStateEnterpriseImpl5.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter10 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl11 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl13 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId12, operatorStateEnterpriseTypeImpl13);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean16 = databaseStateEnterpriseImpl15.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl11.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl15);
    databaseStateUpdateHandlerOppStatsImpl4.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl9,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14);
    try {
      java.lang.String str19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.lofmtString(
          databaseStateEnterpriseImpl1, databaseStateEnterpriseImpl14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertNotNull(throwableOptional8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl13 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl13.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test146() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test146");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo25 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent26 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException23, sysCrashCauseInfo25);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo25);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo28 = sysCrashEvent27.gersCrashSignalerCauseInfo();
    org.neo4j.kernel.database.Database database29 = null;
    io.github.onograph.dbms.crash.DbmsCrashManager dbmsCrashManager30 = io.github.onograph.dbms.crash.MarkPotentialCrash.craDbmsCrashManager(
        database29);
    boolean boolean31 = sysCrashEvent27.equals((java.lang.Object) database29);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo25 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo25.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + causeInfo28 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        causeInfo28.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(dbmsCrashManager30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
  }

  @Test
  public void test147() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test147");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl5.databaseId();
    boolean boolean8 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo9 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta10 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    boolean boolean11 = sysCrashEvent2.equals((java.lang.Object) dbmsResolverMeta10);
    dbmsResolverMeta10.jonal();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + causeInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo9.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(dbmsResolverMeta10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test148() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test148");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl3 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId2, operatorStateEnterpriseTypeImpl3);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl4,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable10 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException13 = new io.github.onograph.dbms.StateChangeException(
        throwable10, databaseStateEnterpriseImpl11);
    java.lang.Throwable throwable14 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException17 = new io.github.onograph.dbms.StateChangeException(
        throwable14, databaseStateEnterpriseImpl15);
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException13, databaseStateEnterpriseImpl15);
    java.lang.Throwable throwable19 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        throwable19, databaseStateEnterpriseImpl20);
    stateChangeException18.addSuppressed((java.lang.Throwable) stateChangeException22);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl9.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException22);
    java.util.Optional<java.lang.Throwable> throwableOptional25 = databaseStateEnterpriseImpl24.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter26 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl27 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter26);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean29 = databaseStateEnterpriseImpl28.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId30 = databaseStateEnterpriseImpl28.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter31 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl32 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId33 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId33);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = databaseStateEnterpriseImpl34.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional36 = databaseStateEnterpriseImpl34.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable38 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = databaseStateEnterpriseImpl39.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException41 = new io.github.onograph.dbms.StateChangeException(
        throwable38, databaseStateEnterpriseImpl39);
    databaseStateUpdateHandlerOppStatsImpl32.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39);
    databaseStateUpdateHandlerOppStatsImpl27.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl28,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    try {
      databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
          (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl24,
          (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl3 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl3.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(throwableOptional25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertNull(namedDatabaseId30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNull(namedDatabaseId35);
    org.junit.Assert.assertNotNull(throwableOptional36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
  }

  @Test
  public void test149() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test149");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard11 = null;
    java.time.Duration duration12 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl13 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel4, availabilityGuard11, duration12);
    java.lang.Throwable throwable14 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException17 = new io.github.onograph.dbms.StateChangeException(
        throwable14, databaseStateEnterpriseImpl15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo19 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent20 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable14, namedDatabaseId18, gdbCrashCauseInfo19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = gdbCrashEvent20.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo22 = gdbCrashEvent20.gersCrashSignalerCauseInfo();
    try {
      databaseStartupControllerAbortableImpl13.handleCrash(gdbCrashEvent20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo19 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo19.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId21);
    org.junit.Assert.assertTrue("'" + causeInfo22 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo22.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
  }

  @Test
  public void test150() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test150");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = databaseStateEnterpriseImpl4.helyDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl4.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl7 = databaseStateEnterpriseImpl4.operatorState();
    databaseStateUpdateHandlerOppStatsImpl2.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl3,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl4);
    boolean boolean9 = dbmsResolverAction0.equals((java.lang.Object) databaseStateEnterpriseImpl4);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = dbmsResolverAction0.equals(
        (java.lang.Object) databaseStateEnterpriseImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable19 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        throwable19, databaseStateEnterpriseImpl20);
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException18, databaseStateEnterpriseImpl20);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    stateChangeException23.addSuppressed((java.lang.Throwable) stateChangeException27);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = databaseStateEnterpriseImpl14.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException27);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo30 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str31 = sysCrashCauseInfo30.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent32 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException27, sysCrashCauseInfo30);
    java.lang.Throwable throwable33 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException36 = new io.github.onograph.dbms.StateChangeException(
        throwable33, databaseStateEnterpriseImpl34);
    java.lang.Throwable throwable37 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl38.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException40 = new io.github.onograph.dbms.StateChangeException(
        throwable37, databaseStateEnterpriseImpl38);
    io.github.onograph.dbms.StateChangeException stateChangeException41 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException36, databaseStateEnterpriseImpl38);
    java.lang.Throwable throwable42 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = databaseStateEnterpriseImpl43.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException45 = new io.github.onograph.dbms.StateChangeException(
        throwable42, databaseStateEnterpriseImpl43);
    stateChangeException41.addSuppressed((java.lang.Throwable) stateChangeException45);
    stateChangeException27.addSuppressed((java.lang.Throwable) stateChangeException45);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId48 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo49 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str50 = gdbCrashCauseInfo49.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent51 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException27, namedDatabaseId48, gdbCrashCauseInfo49);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl10.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException27);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl53 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean54 = databaseStateEnterpriseImpl53.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId55 = databaseStateEnterpriseImpl53.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional56 = databaseStateEnterpriseImpl53.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = databaseStateEnterpriseImpl53.helyDatabaseStateEnterpriseImpl();
    try {
      java.lang.String str58 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.lofmtString(
          databaseStateEnterpriseImpl52, databaseStateEnterpriseImpl53);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl7 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl7.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo30 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo30.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Discovery system failed irrecoverably" + "'", str31,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo49 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo49.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "RaftMessage applier failed" + "'",
        str50, "RaftMessage applier failed");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertNull(namedDatabaseId55);
    org.junit.Assert.assertNotNull(throwableOptional56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
  }

  @Test
  public void test151() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test151");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl2.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl2.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter7 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl8 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl10 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId9, operatorStateEnterpriseTypeImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean13 = databaseStateEnterpriseImpl12.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl8.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = databaseStateEnterpriseImpl17.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional19 = databaseStateEnterpriseImpl17.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = databaseStateEnterpriseImpl22.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = databaseStateEnterpriseImpl25.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional27 = databaseStateEnterpriseImpl25.failure();
    boolean boolean28 = databaseStateEnterpriseImpl22.equals(
        (java.lang.Object) databaseStateEnterpriseImpl25);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl17,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl25);
    try {
      java.lang.String str30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.toshtsrgString(
          databaseStateEnterpriseImpl17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl10 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl10.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNull(namedDatabaseId18);
    org.junit.Assert.assertNotNull(throwableOptional19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNull(namedDatabaseId23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNull(namedDatabaseId26);
    org.junit.Assert.assertNotNull(throwableOptional27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
  }

  @Test
  public void test152() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test152");
    }
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl0 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING;
    boolean boolean1 = operatorStateEnterpriseTypeImpl0.terminal();
    java.lang.String str2 = operatorStateEnterpriseTypeImpl0.description();
    java.lang.String str3 = operatorStateEnterpriseTypeImpl0.description();
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl0 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING + "'",
        operatorStateEnterpriseTypeImpl0.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING));
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "offline" + "'", str2, "offline");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "offline" + "'", str3, "offline");
  }

  @Test
  public void test153() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test153");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    structureMetaService3.init();
    structureMetaService3.init();
    structureMetaService3.init();
    try {
      structureMetaService3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test154() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test154");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    structureMetaService3.init();
    structureMetaService3.init();
    structureMetaService3.init();
    structureMetaService3.init();
    structureMetaService3.init();
    try {
      structureMetaService3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test155() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test155");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = databaseStateEnterpriseImpl4.helyDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl4.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl7 = databaseStateEnterpriseImpl4.operatorState();
    databaseStateUpdateHandlerOppStatsImpl2.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl3,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl4);
    boolean boolean9 = dbmsResolverAction0.equals((java.lang.Object) databaseStateEnterpriseImpl4);
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl10 = databaseStateEnterpriseImpl4.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl4.helyDatabaseStateEnterpriseImpl();
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl7 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl7.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl10 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl10.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
  }

  @Test
  public void test156() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test156");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier2 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel3 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier2);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard4 = null;
    java.time.Duration duration5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl6 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel3, availabilityGuard4, duration5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel3, availabilityGuard7, duration8);
    java.lang.Throwable throwable10 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException13 = new io.github.onograph.dbms.StateChangeException(
        throwable10, databaseStateEnterpriseImpl11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo15 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent16 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable10, namedDatabaseId14, gdbCrashCauseInfo15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = gdbCrashEvent16.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo18 = gdbCrashEvent16.gersCrashSignalerCauseInfo();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = gdbCrashEvent16.getNamedDatabaseId();
    try {
      databaseStartupControllerAbortableImpl9.handleCrash(gdbCrashEvent16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo15 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo15.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId17);
    org.junit.Assert.assertTrue("'" + causeInfo18 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo18.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId19);
  }

  @Test
  public void test157() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test157");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo25 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent26 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException23, sysCrashCauseInfo25);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo25);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo28 = sysCrashEvent27.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable29 = sysCrashEvent27.gecsThrowable();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo25 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo25.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + causeInfo28 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        causeInfo28.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(throwable29);
    org.junit.Assert.assertNull("throwable29.getLocalizedMessage() == null",
        throwable29.getLocalizedMessage());
    org.junit.Assert.assertNull("throwable29.getMessage() == null", throwable29.getMessage());
    org.junit.Assert.assertEquals(throwable29.toString(),
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test158() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test158");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl2.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl2.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter7 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl8 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl10 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId9, operatorStateEnterpriseTypeImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean13 = databaseStateEnterpriseImpl12.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl8.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter16 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl17 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter16);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean19 = databaseStateEnterpriseImpl18.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = databaseStateEnterpriseImpl18.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional21 = databaseStateEnterpriseImpl18.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter22 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl23 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = databaseStateEnterpriseImpl25.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional27 = databaseStateEnterpriseImpl25.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl28,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl34,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    org.neo4j.function.ThrowingAction throwingAction39 = null;
    org.neo4j.function.ThrowingAction throwingAction40 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle41 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction39, throwingAction40);
    boolean boolean42 = databaseStateEnterpriseImpl37.equals((java.lang.Object) throwingAction40);
    databaseStateUpdateHandlerOppStatsImpl17.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl18,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId44 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.intlDatabaseStateEnterpriseImpl(
        namedDatabaseId44);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl45);
    boolean boolean47 = databaseStateEnterpriseImpl37.hasFailed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl10 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl10.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNull(namedDatabaseId20);
    org.junit.Assert.assertNotNull(throwableOptional21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNull(namedDatabaseId26);
    org.junit.Assert.assertNotNull(throwableOptional27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(lifecycle41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
  }

  @Test
  public void test159() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test159");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException7, databaseStateEnterpriseImpl9);
    stateChangeException3.addSuppressed((java.lang.Throwable) stateChangeException7);
    java.lang.Class<?> wildcardClass14 = stateChangeException3.getClass();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(wildcardClass14);
  }

  @Test
  public void test160() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test160");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    dbmsResolverMeta0.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta8 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta8.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray10 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList11 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11,
        namedDatabaseIdArray10);
    dbmsResolverMeta8.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta8);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test161() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test161");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray1 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList2 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2,
        namedDatabaseIdArray1);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo5 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str6 = sysCrashCauseInfo5.getInfo();
    boolean boolean7 = dbmsResolverMeta0.equals((java.lang.Object) str6);
    java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdCollection8 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseIdCollection8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Discovery system failed irrecoverably" + "'", str6,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test162() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test162");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable[] throwableArray9 = stateChangeException3.getSuppressed();
    java.lang.Throwable[] throwableArray10 = stateChangeException3.getSuppressed();
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo26 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    java.lang.String str27 = gdbCrashCauseInfo26.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent28 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException23, namedDatabaseId25, gdbCrashCauseInfo26);
    stateChangeException3.addSuppressed((java.lang.Throwable) stateChangeException23);
    java.lang.Throwable[] throwableArray30 = stateChangeException23.getSuppressed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(throwableArray9);
    org.junit.Assert.assertNotNull(throwableArray10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo26 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo26.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Snapshot failed" + "'", str27,
        "Snapshot failed");
    org.junit.Assert.assertNotNull(throwableArray30);
  }

  @Test
  public void test163() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test163");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl3 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId2, operatorStateEnterpriseTypeImpl3);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl4,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    try {
      java.lang.String str11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.toshtsrgString(
          databaseStateEnterpriseImpl10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl3 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl3.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
  }

  @Test
  public void test164() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test164");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard11 = null;
    java.time.Duration duration12 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl13 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel4, availabilityGuard11, duration12);
    java.lang.Throwable throwable14 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException17 = new io.github.onograph.dbms.StateChangeException(
        throwable14, databaseStateEnterpriseImpl15);
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException17, databaseStateEnterpriseImpl19);
    java.lang.Throwable throwable23 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = databaseStateEnterpriseImpl24.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException26 = new io.github.onograph.dbms.StateChangeException(
        throwable23, databaseStateEnterpriseImpl24);
    stateChangeException22.addSuppressed((java.lang.Throwable) stateChangeException26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo29 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    java.lang.String str30 = gdbCrashCauseInfo29.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent31 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException26, namedDatabaseId28, gdbCrashCauseInfo29);
    try {
      databaseStartupControllerAbortableImpl13.handleCrash(gdbCrashEvent31);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo29 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo29.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Snapshot failed" + "'", str30,
        "Snapshot failed");
  }

  @Test
  public void test165() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test165");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo8 = gdbCrashEvent6.gersCrashSignalerCauseInfo();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = gdbCrashEvent6.getNamedDatabaseId();
    java.lang.Throwable throwable10 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo11 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent12 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable10, sysCrashCauseInfo11);
    java.lang.Throwable throwable13 = sysCrashEvent12.gecsThrowable();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo14 = sysCrashEvent12.gersCrashSignalerCauseInfo();
    boolean boolean15 = gdbCrashEvent6.equals((java.lang.Object) sysCrashEvent12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = gdbCrashEvent6.getNamedDatabaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + causeInfo8 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo8.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo11 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo11.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable13);
    org.junit.Assert.assertTrue("'" + causeInfo14 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo14.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNull(namedDatabaseId16);
  }

  @Test
  public void test166() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test166");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo25 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent26 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException23, sysCrashCauseInfo25);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo25);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo28 = sysCrashEvent27.gersCrashSignalerCauseInfo();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo29 = sysCrashEvent27.gersCrashSignalerCauseInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo25 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo25.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + causeInfo28 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        causeInfo28.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + causeInfo29 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        causeInfo29.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
  }

  @Test
  public void test167() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test167");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl2 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    boolean boolean3 = dbmsResolverMeta0.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl2);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl2 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl2.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test168() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test168");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    java.lang.Throwable throwable22 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        throwable22, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.StateChangeException stateChangeException26 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl27.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl29 = databaseStateEnterpriseImpl27.operatorState();
    boolean boolean30 = databaseStateEnterpriseImpl27.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException31 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl27);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = databaseStateEnterpriseImpl11.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException31);
    java.lang.Throwable[] throwableArray33 = stateChangeException31.getSuppressed();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable36 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = databaseStateEnterpriseImpl37.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException39 = new io.github.onograph.dbms.StateChangeException(
        throwable36, databaseStateEnterpriseImpl37);
    java.lang.Throwable throwable40 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = databaseStateEnterpriseImpl41.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException43 = new io.github.onograph.dbms.StateChangeException(
        throwable40, databaseStateEnterpriseImpl41);
    io.github.onograph.dbms.StateChangeException stateChangeException44 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException39, databaseStateEnterpriseImpl41);
    java.lang.Throwable throwable45 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = databaseStateEnterpriseImpl46.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException48 = new io.github.onograph.dbms.StateChangeException(
        throwable45, databaseStateEnterpriseImpl46);
    stateChangeException44.addSuppressed((java.lang.Throwable) stateChangeException48);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl50 = databaseStateEnterpriseImpl35.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException48);
    java.lang.Throwable throwable51 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl53 = databaseStateEnterpriseImpl52.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        throwable51, databaseStateEnterpriseImpl52);
    java.lang.Throwable throwable55 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = databaseStateEnterpriseImpl56.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException58 = new io.github.onograph.dbms.StateChangeException(
        throwable55, databaseStateEnterpriseImpl56);
    java.lang.Throwable throwable59 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = databaseStateEnterpriseImpl60.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException62 = new io.github.onograph.dbms.StateChangeException(
        throwable59, databaseStateEnterpriseImpl60);
    io.github.onograph.dbms.StateChangeException stateChangeException63 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException58, databaseStateEnterpriseImpl60);
    java.lang.Throwable throwable64 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl65 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = databaseStateEnterpriseImpl65.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException67 = new io.github.onograph.dbms.StateChangeException(
        throwable64, databaseStateEnterpriseImpl65);
    stateChangeException63.addSuppressed((java.lang.Throwable) stateChangeException67);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo69 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent70 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException67, sysCrashCauseInfo69);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId71 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo72 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent73 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException67, namedDatabaseId71, gdbCrashCauseInfo72);
    stateChangeException54.addSuppressed((java.lang.Throwable) stateChangeException67);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl75 = databaseStateEnterpriseImpl50.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException54);
    io.github.onograph.dbms.StateChangeException stateChangeException76 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException31, databaseStateEnterpriseImpl50);
    java.lang.Class<?> wildcardClass77 = databaseStateEnterpriseImpl50.getClass();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl29 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl29.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertNotNull(throwableArray33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl50);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl53);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl65);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl66);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo69 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo69.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo72 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo72.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl75);
    org.junit.Assert.assertNotNull(wildcardClass77);
  }

  @Test
  public void test169() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test169");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    boolean boolean18 = databaseStateEnterpriseImpl11.hasFailed();
    java.util.Optional<java.lang.Throwable> throwableOptional19 = databaseStateEnterpriseImpl11.failure();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(throwableOptional19);
  }

  @Test
  public void test170() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test170");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl3.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl3.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        throwable7, databaseStateEnterpriseImpl8);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl15);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter17 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl18 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl20 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId19, operatorStateEnterpriseTypeImpl20);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean23 = databaseStateEnterpriseImpl22.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl18.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl21,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl27.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl29 = databaseStateEnterpriseImpl27.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId26, operatorStateEnterpriseTypeImpl29);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean33 = databaseStateEnterpriseImpl32.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = databaseStateEnterpriseImpl32.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional35 = databaseStateEnterpriseImpl32.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = databaseStateEnterpriseImpl32.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter37 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl38 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId39 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId39);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = databaseStateEnterpriseImpl40.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional42 = databaseStateEnterpriseImpl40.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable44 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = databaseStateEnterpriseImpl45.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException47 = new io.github.onograph.dbms.StateChangeException(
        throwable44, databaseStateEnterpriseImpl45);
    databaseStateUpdateHandlerOppStatsImpl38.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl43,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl45);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl49 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl50 = databaseStateEnterpriseImpl49.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl38.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl49,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl52);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter54 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl55 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter54);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId56 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl57 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId56, operatorStateEnterpriseTypeImpl57);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean60 = databaseStateEnterpriseImpl59.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl55.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl58,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl59);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = databaseStateEnterpriseImpl59.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId63 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl64 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl65 = databaseStateEnterpriseImpl64.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl66 = databaseStateEnterpriseImpl64.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl67 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId63, operatorStateEnterpriseTypeImpl66);
    databaseStateUpdateHandlerOppStatsImpl38.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl59,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl67);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl32,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl59);
    java.lang.Throwable throwable70 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl71 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl72 = databaseStateEnterpriseImpl71.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException73 = new io.github.onograph.dbms.StateChangeException(
        throwable70, databaseStateEnterpriseImpl71);
    java.lang.Throwable throwable74 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl75 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl76 = databaseStateEnterpriseImpl75.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException77 = new io.github.onograph.dbms.StateChangeException(
        throwable74, databaseStateEnterpriseImpl75);
    io.github.onograph.dbms.StateChangeException stateChangeException78 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException73, databaseStateEnterpriseImpl75);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo79 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent80 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException73, sysCrashCauseInfo79);
    java.lang.Throwable throwable81 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl82 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl83 = databaseStateEnterpriseImpl82.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException84 = new io.github.onograph.dbms.StateChangeException(
        throwable81, databaseStateEnterpriseImpl82);
    java.lang.Throwable throwable85 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl86 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl87 = databaseStateEnterpriseImpl86.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException88 = new io.github.onograph.dbms.StateChangeException(
        throwable85, databaseStateEnterpriseImpl86);
    io.github.onograph.dbms.StateChangeException stateChangeException89 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException84, databaseStateEnterpriseImpl86);
    java.lang.Throwable throwable90 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl91 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl92 = databaseStateEnterpriseImpl91.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException93 = new io.github.onograph.dbms.StateChangeException(
        throwable90, databaseStateEnterpriseImpl91);
    stateChangeException89.addSuppressed((java.lang.Throwable) stateChangeException93);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo95 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent96 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException93, sysCrashCauseInfo95);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent97 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException73, sysCrashCauseInfo95);
    boolean boolean98 = databaseStateEnterpriseImpl32.equals(
        (java.lang.Object) stateChangeException73);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl20 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl20.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl29 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl29.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertNull(namedDatabaseId34);
    org.junit.Assert.assertNotNull(throwableOptional35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNull(namedDatabaseId41);
    org.junit.Assert.assertNotNull(throwableOptional42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl49);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl50);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl57 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl57.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl64);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl65);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl66 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl66.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl71);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl72);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl75);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl76);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo79 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo79.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl82);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl83);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl86);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl87);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl91);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl92);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo95 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo95.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
  }

  @Test
  public void test171() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test171");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo16 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent17 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable11, namedDatabaseId15, gdbCrashCauseInfo16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = gdbCrashEvent17.getNamedDatabaseId();
    boolean boolean20 = gdbCrashEvent17.equals((java.lang.Object) true);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean22 = databaseStateEnterpriseImpl21.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = databaseStateEnterpriseImpl21.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional24 = databaseStateEnterpriseImpl21.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    boolean boolean26 = gdbCrashEvent17.equals((java.lang.Object) databaseStateEnterpriseImpl21);
    boolean boolean28 = gdbCrashEvent17.equals((java.lang.Object) "RaftMessage applier failed");
    try {
      databaseStartupControllerAbortableImpl4.handleCrash(gdbCrashEvent17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo16 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo16.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertNull(namedDatabaseId23);
    org.junit.Assert.assertNotNull(throwableOptional24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
  }

  @Test
  public void test172() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test172");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray1 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList2 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2,
        namedDatabaseIdArray1);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo5 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str6 = sysCrashCauseInfo5.getInfo();
    boolean boolean7 = dbmsResolverMeta0.equals((java.lang.Object) str6);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter8 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl9 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl11 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId10, operatorStateEnterpriseTypeImpl11);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean14 = databaseStateEnterpriseImpl13.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl9.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    boolean boolean17 = dbmsResolverMeta0.equals((java.lang.Object) databaseStateEnterpriseImpl16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = databaseStateEnterpriseImpl16.databaseId();
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Discovery system failed irrecoverably" + "'", str6,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl11 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl11.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNull(namedDatabaseId18);
  }

  @Test
  public void test173() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test173");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    try {
      boolean boolean16 = databaseStartupControllerAbortableImpl4.shouldAbort(namedDatabaseId15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test174() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test174");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean1 = databaseStateEnterpriseImpl0.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl0.databaseId();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl3 = databaseStateEnterpriseImpl0.operatorState();
    java.util.Optional<java.lang.Throwable> throwableOptional4 = databaseStateEnterpriseImpl0.failure();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = databaseStateEnterpriseImpl0.databaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl3 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl3.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(throwableOptional4);
    org.junit.Assert.assertNull(namedDatabaseId5);
  }

  @Test
  public void test175() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test175");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str18 = sysCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo17);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    io.github.onograph.dbms.StateChangeException stateChangeException28 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException23, databaseStateEnterpriseImpl25);
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    stateChangeException28.addSuppressed((java.lang.Throwable) stateChangeException32);
    stateChangeException14.addSuppressed((java.lang.Throwable) stateChangeException32);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo35 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent36 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo35);
    java.lang.String str37 = sysCrashCauseInfo35.getInfo();
    java.lang.String str38 = sysCrashCauseInfo35.getInfo();
    java.lang.String str39 = sysCrashCauseInfo35.getInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Discovery system failed irrecoverably" + "'", str18,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo35 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo35.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str37 + "' != '" + "Discovery system failed irrecoverably" + "'", str37,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertEquals(
        "'" + str38 + "' != '" + "Discovery system failed irrecoverably" + "'", str38,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertEquals(
        "'" + str39 + "' != '" + "Discovery system failed irrecoverably" + "'", str39,
        "Discovery system failed irrecoverably");
  }

  @Test
  public void test176() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test176");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable21 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException24 = new io.github.onograph.dbms.StateChangeException(
        throwable21, databaseStateEnterpriseImpl22);
    java.lang.Throwable throwable25 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = databaseStateEnterpriseImpl26.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException28 = new io.github.onograph.dbms.StateChangeException(
        throwable25, databaseStateEnterpriseImpl26);
    io.github.onograph.dbms.StateChangeException stateChangeException29 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException24, databaseStateEnterpriseImpl26);
    java.lang.Throwable throwable30 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = databaseStateEnterpriseImpl31.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException33 = new io.github.onograph.dbms.StateChangeException(
        throwable30, databaseStateEnterpriseImpl31);
    stateChangeException29.addSuppressed((java.lang.Throwable) stateChangeException33);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl20.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException33);
    java.lang.Throwable throwable36 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = databaseStateEnterpriseImpl37.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException39 = new io.github.onograph.dbms.StateChangeException(
        throwable36, databaseStateEnterpriseImpl37);
    java.lang.Throwable throwable40 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = databaseStateEnterpriseImpl41.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException43 = new io.github.onograph.dbms.StateChangeException(
        throwable40, databaseStateEnterpriseImpl41);
    io.github.onograph.dbms.StateChangeException stateChangeException44 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException39, databaseStateEnterpriseImpl41);
    java.lang.Throwable throwable45 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = databaseStateEnterpriseImpl46.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException48 = new io.github.onograph.dbms.StateChangeException(
        throwable45, databaseStateEnterpriseImpl46);
    stateChangeException44.addSuppressed((java.lang.Throwable) stateChangeException48);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo50 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent51 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException48, sysCrashCauseInfo50);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent52 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException33, sysCrashCauseInfo50);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl53 = databaseStateEnterpriseImpl11.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo50 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo50.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl53);
  }

  @Test
  public void test177() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test177");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    java.lang.Class<?> wildcardClass28 = databaseStartupControllerAbortableImpl4.getClass();
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(wildcardClass28);
  }

  @Test
  public void test178() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test178");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl1.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl4 = databaseStateEnterpriseImpl1.operatorState();
    boolean boolean5 = dbmsResolverAction0.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl4);
    boolean boolean6 = operatorStateEnterpriseTypeImpl4.terminal();
    java.lang.String str7 = operatorStateEnterpriseTypeImpl4.description();
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl4 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl4.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "initial" + "'", str7, "initial");
  }

  @Test
  public void test179() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test179");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str18 = sysCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo17);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    io.github.onograph.dbms.StateChangeException stateChangeException28 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException23, databaseStateEnterpriseImpl25);
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    stateChangeException28.addSuppressed((java.lang.Throwable) stateChangeException32);
    stateChangeException14.addSuppressed((java.lang.Throwable) stateChangeException32);
    java.lang.String str35 = stateChangeException14.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Discovery system failed irrecoverably" + "'", str18,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str35,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test180() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test180");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean1 = databaseStateEnterpriseImpl0.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl0.databaseId();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl3 = databaseStateEnterpriseImpl0.operatorState();
    java.lang.String str4 = operatorStateEnterpriseTypeImpl3.description();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl3 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl3.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "initial" + "'", str4, "initial");
  }

  @Test
  public void test181() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test181");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.time.Clock clock3 = null;
    java.time.Clock clock4 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier5 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel6 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock4, defaultSystemGraphDbmsModel6, availabilityGuard7, duration8);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard10 = null;
    java.time.Duration duration11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl12 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock3, defaultSystemGraphDbmsModel6, availabilityGuard10, duration11);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard13 = null;
    java.time.Duration duration14 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl15 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel6, availabilityGuard13, duration14);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard16 = null;
    java.time.Duration duration17 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl18 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel6, availabilityGuard16, duration17);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard19 = null;
    java.time.Duration duration20 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl21 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel6, availabilityGuard19, duration20);
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction22 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter23 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl24 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter23);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = databaseStateEnterpriseImpl26.helyDatabaseStateEnterpriseImpl();
    boolean boolean28 = databaseStateEnterpriseImpl26.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl29 = databaseStateEnterpriseImpl26.operatorState();
    databaseStateUpdateHandlerOppStatsImpl24.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl25,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl26);
    boolean boolean31 = dbmsResolverAction22.equals(
        (java.lang.Object) databaseStateEnterpriseImpl26);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean33 = dbmsResolverAction22.equals(
        (java.lang.Object) databaseStateEnterpriseImpl32);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = databaseStateEnterpriseImpl32.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = databaseStateEnterpriseImpl35.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable37 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl38.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException40 = new io.github.onograph.dbms.StateChangeException(
        throwable37, databaseStateEnterpriseImpl38);
    java.lang.Throwable throwable41 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = databaseStateEnterpriseImpl42.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException44 = new io.github.onograph.dbms.StateChangeException(
        throwable41, databaseStateEnterpriseImpl42);
    io.github.onograph.dbms.StateChangeException stateChangeException45 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException40, databaseStateEnterpriseImpl42);
    java.lang.Throwable throwable46 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl47.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException49 = new io.github.onograph.dbms.StateChangeException(
        throwable46, databaseStateEnterpriseImpl47);
    stateChangeException45.addSuppressed((java.lang.Throwable) stateChangeException49);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = databaseStateEnterpriseImpl36.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException49);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo52 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str53 = sysCrashCauseInfo52.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent54 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException49, sysCrashCauseInfo52);
    java.lang.Throwable throwable55 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = databaseStateEnterpriseImpl56.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException58 = new io.github.onograph.dbms.StateChangeException(
        throwable55, databaseStateEnterpriseImpl56);
    java.lang.Throwable throwable59 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = databaseStateEnterpriseImpl60.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException62 = new io.github.onograph.dbms.StateChangeException(
        throwable59, databaseStateEnterpriseImpl60);
    io.github.onograph.dbms.StateChangeException stateChangeException63 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException58, databaseStateEnterpriseImpl60);
    java.lang.Throwable throwable64 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl65 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = databaseStateEnterpriseImpl65.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException67 = new io.github.onograph.dbms.StateChangeException(
        throwable64, databaseStateEnterpriseImpl65);
    stateChangeException63.addSuppressed((java.lang.Throwable) stateChangeException67);
    stateChangeException49.addSuppressed((java.lang.Throwable) stateChangeException67);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId70 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo71 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str72 = gdbCrashCauseInfo71.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent73 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException49, namedDatabaseId70, gdbCrashCauseInfo71);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl74 = databaseStateEnterpriseImpl32.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException49);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId75 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo76 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent77 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException49, namedDatabaseId75, gdbCrashCauseInfo76);
    try {
      databaseStartupControllerAbortableImpl21.handleCrash(gdbCrashEvent77);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverAction22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl29 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl29.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo52 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo52.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str53 + "' != '" + "Discovery system failed irrecoverably" + "'", str53,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl65);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl66);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo71 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo71.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str72 + "' != '" + "RaftMessage applier failed" + "'",
        str72, "RaftMessage applier failed");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl74);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo76 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR + "'",
        gdbCrashCauseInfo76.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR));
  }

  @Test
  public void test182() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test182");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo5 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo11 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent12 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable6, namedDatabaseId10, gdbCrashCauseInfo11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = gdbCrashEvent12.getNamedDatabaseId();
    java.lang.Throwable throwable14 = gdbCrashEvent12.gecsThrowable();
    boolean boolean15 = sysCrashEvent2.equals((java.lang.Object) gdbCrashEvent12);
    java.lang.Throwable throwable16 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        throwable16, databaseStateEnterpriseImpl17);
    boolean boolean20 = gdbCrashEvent12.equals((java.lang.Object) throwable16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + causeInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo5.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo11 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo11.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId13);
    org.junit.Assert.assertNull(throwable14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
  }

  @Test
  public void test183() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test183");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo4 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent5 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo4);
    java.lang.Throwable[] throwableArray6 = stateChangeException3.getSuppressed();
    java.lang.Throwable[] throwableArray7 = stateChangeException3.getSuppressed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo4.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertNotNull(throwableArray7);
  }

  @Test
  public void test184() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test184");
    }
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo0 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_ERR_ISSUE;
    java.lang.String str1 = sysCrashCauseInfo0.getInfo();
    java.lang.String str2 = sysCrashCauseInfo0.getInfo();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo0 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_ERR_ISSUE + "'",
        sysCrashCauseInfo0.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_ERR_ISSUE));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "See exception message for details" + "'",
        str1, "See exception message for details");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "See exception message for details" + "'",
        str2, "See exception message for details");
  }

  @Test
  public void test185() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test185");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str18 = sysCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo17);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    io.github.onograph.dbms.StateChangeException stateChangeException28 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException23, databaseStateEnterpriseImpl25);
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    stateChangeException28.addSuppressed((java.lang.Throwable) stateChangeException32);
    stateChangeException14.addSuppressed((java.lang.Throwable) stateChangeException32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo36 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str37 = gdbCrashCauseInfo36.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent38 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException14, namedDatabaseId35, gdbCrashCauseInfo36);
    java.lang.String str39 = stateChangeException14.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Discovery system failed irrecoverably" + "'", str18,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo36 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo36.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "RaftMessage applier failed" + "'",
        str37, "RaftMessage applier failed");
    org.junit.Assert.assertEquals(
        "'" + str39 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str39,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test186() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test186");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl3.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl3.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        throwable7, databaseStateEnterpriseImpl8);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl15);
    org.neo4j.function.ThrowingAction throwingAction17 = null;
    org.neo4j.function.ThrowingAction throwingAction18 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle19 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction17, throwingAction18);
    boolean boolean20 = databaseStateEnterpriseImpl15.equals((java.lang.Object) throwingAction18);
    try {
      java.lang.String str21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.toshtsrgString(
          databaseStateEnterpriseImpl15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(lifecycle19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
  }

  @Test
  public void test187() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test187");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl4 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId3, operatorStateEnterpriseTypeImpl4);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean7 = databaseStateEnterpriseImpl6.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl2.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl5,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl6.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl6.helyDatabaseStateEnterpriseImpl();
    boolean boolean11 = dbmsResolverAction0.equals(
        (java.lang.Object) databaseStateEnterpriseImpl10);
    boolean boolean13 = dbmsResolverAction0.equals((java.lang.Object) "Catchup failed");
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl4 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl4.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test188() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test188");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable9 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl10);
    stateChangeException8.addSuppressed((java.lang.Throwable) stateChangeException12);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo14 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent15 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException12, sysCrashCauseInfo14);
    int int16 = sysCrashEvent15.getICe();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo14 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo14.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
  }

  @Test
  public void test189() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test189");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray1 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList2 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2,
        namedDatabaseIdArray1);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    boolean boolean17 = dbmsResolverMeta0.equals((java.lang.Object) databaseStateEnterpriseImpl13);
    dbmsResolverMeta0.jonal();
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
  }

  @Test
  public void test190() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test190");
    }
    java.time.Clock clock0 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier1 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel2 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier1);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard3 = null;
    java.time.Duration duration4 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl5 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel2, availabilityGuard3, duration4);
    org.neo4j.graphdb.factory.module.GlobalModule globalModule6 = null;
    io.github.onograph.dbms.HealthMonitorService healthMonitorService7 = null;
    org.neo4j.bolt.txtracking.ReconciledTransactionTracker reconciledTransactionTracker8 = null;
    try {
      io.github.onograph.dbms.MediationDbmsManagers mediationDbmsManagers9 = new io.github.onograph.dbms.MediationDbmsManagers(
          defaultSystemGraphDbmsModel2, globalModule6, healthMonitorService7,
          reconciledTransactionTracker8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test191() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test191");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl5 = databaseStateEnterpriseImpl3.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId2, operatorStateEnterpriseTypeImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId1, operatorStateEnterpriseTypeImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    try {
      java.lang.String str9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.lofmtString(
          databaseStateEnterpriseImpl0, databaseStateEnterpriseImpl8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl5 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl5.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
  }

  @Test
  public void test192() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test192");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl2.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl2.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter7 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl8 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl10 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId9, operatorStateEnterpriseTypeImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean13 = databaseStateEnterpriseImpl12.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl8.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter16 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl17 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter16);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean19 = databaseStateEnterpriseImpl18.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = databaseStateEnterpriseImpl18.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional21 = databaseStateEnterpriseImpl18.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter22 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl23 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = databaseStateEnterpriseImpl25.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional27 = databaseStateEnterpriseImpl25.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl28,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl34,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    org.neo4j.function.ThrowingAction throwingAction39 = null;
    org.neo4j.function.ThrowingAction throwingAction40 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle41 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction39, throwingAction40);
    boolean boolean42 = databaseStateEnterpriseImpl37.equals((java.lang.Object) throwingAction40);
    databaseStateUpdateHandlerOppStatsImpl17.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl18,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId44 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.intlDatabaseStateEnterpriseImpl(
        namedDatabaseId44);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl45);
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction47 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter48 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl49 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter48);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId50 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl51 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId50, operatorStateEnterpriseTypeImpl51);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl53 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean54 = databaseStateEnterpriseImpl53.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl49.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl52,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl53);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = databaseStateEnterpriseImpl53.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = databaseStateEnterpriseImpl53.helyDatabaseStateEnterpriseImpl();
    boolean boolean58 = dbmsResolverAction47.equals(
        (java.lang.Object) databaseStateEnterpriseImpl57);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId59 = null;
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction60 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = databaseStateEnterpriseImpl61.helyDatabaseStateEnterpriseImpl();
    boolean boolean63 = databaseStateEnterpriseImpl61.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl64 = databaseStateEnterpriseImpl61.operatorState();
    boolean boolean65 = dbmsResolverAction60.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl64);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId59, operatorStateEnterpriseTypeImpl64);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl57,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl66);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId68 = databaseStateEnterpriseImpl57.databaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl10 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl10.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNull(namedDatabaseId20);
    org.junit.Assert.assertNotNull(throwableOptional21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNull(namedDatabaseId26);
    org.junit.Assert.assertNotNull(throwableOptional27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(lifecycle41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(dbmsResolverAction47);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl51 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl51.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNotNull(dbmsResolverAction60);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl64 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl64.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertNull(namedDatabaseId68);
  }

  @Test
  public void test193() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test193");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo4 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent5 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo4);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    boolean boolean10 = sysCrashEvent5.equals((java.lang.Object) throwable6);
    java.time.Clock clock11 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel12 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard13 = null;
    java.time.Duration duration14 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl15 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock11, defaultSystemGraphDbmsModel12, availabilityGuard13, duration14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason17 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl15.prnuratForNaDa(namedDatabaseId16, preventReason17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason20 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl15.prnuratForNaDa(namedDatabaseId19, preventReason20);
    boolean boolean22 = sysCrashEvent5.equals((java.lang.Object) namedDatabaseId19);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo23 = sysCrashEvent5.gersCrashSignalerCauseInfo();
    int int24 = sysCrashEvent5.getICe();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo4.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + preventReason17 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason17.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason20 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason20.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + causeInfo23 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo23.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
  }

  @Test
  public void test194() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test194");
    }
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl0 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_RUNNING;
    boolean boolean1 = operatorStateEnterpriseTypeImpl0.terminal();
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl0 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_RUNNING + "'",
        operatorStateEnterpriseTypeImpl0.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_RUNNING));
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
  }

  @Test
  public void test195() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test195");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier2 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel3 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier2);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard4 = null;
    java.time.Duration duration5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl6 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel3, availabilityGuard4, duration5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel3, availabilityGuard7, duration8);
    java.lang.Throwable throwable10 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException13 = new io.github.onograph.dbms.StateChangeException(
        throwable10, databaseStateEnterpriseImpl11);
    java.lang.Throwable throwable14 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException17 = new io.github.onograph.dbms.StateChangeException(
        throwable14, databaseStateEnterpriseImpl15);
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException13, databaseStateEnterpriseImpl15);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo19 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent20 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException13, sysCrashCauseInfo19);
    java.lang.Throwable throwable21 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException24 = new io.github.onograph.dbms.StateChangeException(
        throwable21, databaseStateEnterpriseImpl22);
    java.lang.Throwable throwable25 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = databaseStateEnterpriseImpl26.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException28 = new io.github.onograph.dbms.StateChangeException(
        throwable25, databaseStateEnterpriseImpl26);
    io.github.onograph.dbms.StateChangeException stateChangeException29 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException24, databaseStateEnterpriseImpl26);
    java.lang.Throwable throwable30 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = databaseStateEnterpriseImpl31.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException33 = new io.github.onograph.dbms.StateChangeException(
        throwable30, databaseStateEnterpriseImpl31);
    stateChangeException29.addSuppressed((java.lang.Throwable) stateChangeException33);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo35 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent36 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException33, sysCrashCauseInfo35);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent37 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException13, sysCrashCauseInfo35);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter38 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl39 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter38);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean41 = databaseStateEnterpriseImpl40.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId42 = databaseStateEnterpriseImpl40.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter43 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl44 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter43);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId45 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId45);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId47 = databaseStateEnterpriseImpl46.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional48 = databaseStateEnterpriseImpl46.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl49 = databaseStateEnterpriseImpl46.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException53 = new io.github.onograph.dbms.StateChangeException(
        throwable50, databaseStateEnterpriseImpl51);
    databaseStateUpdateHandlerOppStatsImpl44.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl49,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl51);
    databaseStateUpdateHandlerOppStatsImpl39.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl40,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl49);
    java.lang.Throwable throwable56 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = databaseStateEnterpriseImpl57.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException59 = new io.github.onograph.dbms.StateChangeException(
        throwable56, databaseStateEnterpriseImpl57);
    java.lang.Throwable throwable60 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = databaseStateEnterpriseImpl61.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException63 = new io.github.onograph.dbms.StateChangeException(
        throwable60, databaseStateEnterpriseImpl61);
    io.github.onograph.dbms.StateChangeException stateChangeException64 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException59, databaseStateEnterpriseImpl61);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl65 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = databaseStateEnterpriseImpl65.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl67 = databaseStateEnterpriseImpl65.operatorState();
    boolean boolean68 = databaseStateEnterpriseImpl65.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException69 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException59, databaseStateEnterpriseImpl65);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl70 = databaseStateEnterpriseImpl49.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException69);
    boolean boolean71 = sysCrashEvent37.equals((java.lang.Object) stateChangeException69);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId72 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo73 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent74 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException69, namedDatabaseId72, gdbCrashCauseInfo73);
    try {
      databaseStartupControllerAbortableImpl9.handleCrash(gdbCrashEvent74);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo19 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo19.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo35 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo35.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertNull(namedDatabaseId42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertNull(namedDatabaseId47);
    org.junit.Assert.assertNotNull(throwableOptional48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl49);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl58);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl65);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl66);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl67 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl67.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl70);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo73 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo73.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
  }

  @Test
  public void test196() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test196");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    boolean boolean9 = gdbCrashEvent6.equals((java.lang.Object) true);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = databaseStateEnterpriseImpl10.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl10.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl10.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    boolean boolean15 = gdbCrashEvent6.equals((java.lang.Object) databaseStateEnterpriseImpl10);
    java.lang.Throwable throwable16 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent18 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable16, sysCrashCauseInfo17);
    java.lang.Throwable throwable19 = sysCrashEvent18.gecsThrowable();
    java.lang.Throwable throwable20 = sysCrashEvent18.gecsThrowable();
    boolean boolean21 = gdbCrashEvent6.equals((java.lang.Object) sysCrashEvent18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = gdbCrashEvent6.getNamedDatabaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable19);
    org.junit.Assert.assertNull(throwable20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertNull(namedDatabaseId22);
  }

  @Test
  public void test197() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test197");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl5.databaseId();
    boolean boolean8 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter10 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl11 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter10);
    boolean boolean12 = databaseStateEnterpriseImpl9.equals((java.lang.Object) counter10);
    boolean boolean13 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = databaseStateEnterpriseImpl9.databaseId();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNull(namedDatabaseId14);
  }

  @Test
  public void test198() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test198");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = databaseStateEnterpriseImpl4.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = databaseStateEnterpriseImpl7.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional9 = databaseStateEnterpriseImpl7.failure();
    boolean boolean10 = databaseStateEnterpriseImpl4.equals(
        (java.lang.Object) databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean12 = databaseStateEnterpriseImpl11.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = databaseStateEnterpriseImpl11.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional14 = databaseStateEnterpriseImpl11.failure();
    databaseStateUpdateHandlerOppStatsImpl2.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl7,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl16 = databaseStateEnterpriseImpl11.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId0, operatorStateEnterpriseTypeImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNull(namedDatabaseId5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNull(namedDatabaseId8);
    org.junit.Assert.assertNotNull(throwableOptional9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertNull(namedDatabaseId13);
    org.junit.Assert.assertNotNull(throwableOptional14);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl16 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl16.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
  }

  @Test
  public void test199() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test199");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = databaseStateEnterpriseImpl4.helyDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl4.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl7 = databaseStateEnterpriseImpl4.operatorState();
    databaseStateUpdateHandlerOppStatsImpl2.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl3,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl4);
    boolean boolean9 = dbmsResolverAction0.equals((java.lang.Object) databaseStateEnterpriseImpl4);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = dbmsResolverAction0.equals(
        (java.lang.Object) databaseStateEnterpriseImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable19 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        throwable19, databaseStateEnterpriseImpl20);
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException18, databaseStateEnterpriseImpl20);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    stateChangeException23.addSuppressed((java.lang.Throwable) stateChangeException27);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = databaseStateEnterpriseImpl14.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException27);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo30 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str31 = sysCrashCauseInfo30.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent32 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException27, sysCrashCauseInfo30);
    java.lang.Throwable throwable33 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException36 = new io.github.onograph.dbms.StateChangeException(
        throwable33, databaseStateEnterpriseImpl34);
    java.lang.Throwable throwable37 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl38.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException40 = new io.github.onograph.dbms.StateChangeException(
        throwable37, databaseStateEnterpriseImpl38);
    io.github.onograph.dbms.StateChangeException stateChangeException41 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException36, databaseStateEnterpriseImpl38);
    java.lang.Throwable throwable42 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = databaseStateEnterpriseImpl43.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException45 = new io.github.onograph.dbms.StateChangeException(
        throwable42, databaseStateEnterpriseImpl43);
    stateChangeException41.addSuppressed((java.lang.Throwable) stateChangeException45);
    stateChangeException27.addSuppressed((java.lang.Throwable) stateChangeException45);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId48 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo49 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str50 = gdbCrashCauseInfo49.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent51 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException27, namedDatabaseId48, gdbCrashCauseInfo49);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl10.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException27);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId53 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo54 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent55 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException27, namedDatabaseId53, gdbCrashCauseInfo54);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter56 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl57 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter56);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean59 = databaseStateEnterpriseImpl58.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId60 = databaseStateEnterpriseImpl58.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter61 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl62 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter61);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId63 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl64 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId63);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId65 = databaseStateEnterpriseImpl64.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional66 = databaseStateEnterpriseImpl64.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl67 = databaseStateEnterpriseImpl64.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable68 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl69 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl70 = databaseStateEnterpriseImpl69.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException71 = new io.github.onograph.dbms.StateChangeException(
        throwable68, databaseStateEnterpriseImpl69);
    databaseStateUpdateHandlerOppStatsImpl62.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl67,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl69);
    databaseStateUpdateHandlerOppStatsImpl57.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl58,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl67);
    boolean boolean74 = databaseStateEnterpriseImpl67.hasFailed();
    boolean boolean75 = gdbCrashEvent55.equals((java.lang.Object) boolean74);
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl7 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl7.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo30 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo30.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Discovery system failed irrecoverably" + "'", str31,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo49 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo49.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "RaftMessage applier failed" + "'",
        str50, "RaftMessage applier failed");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo54 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR + "'",
        gdbCrashCauseInfo54.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertNull(namedDatabaseId60);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl64);
    org.junit.Assert.assertNull(namedDatabaseId65);
    org.junit.Assert.assertNotNull(throwableOptional66);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl67);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl69);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl70);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
  }

  @Test
  public void test200() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test200");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter2 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl3 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId4);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = databaseStateEnterpriseImpl5.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional7 = databaseStateEnterpriseImpl5.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable9 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl10);
    databaseStateUpdateHandlerOppStatsImpl3.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl3.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl17);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = databaseStateEnterpriseImpl24.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl26 = databaseStateEnterpriseImpl24.operatorState();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl24);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = databaseStateEnterpriseImpl28.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable30 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = databaseStateEnterpriseImpl31.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException33 = new io.github.onograph.dbms.StateChangeException(
        throwable30, databaseStateEnterpriseImpl31);
    java.lang.Throwable throwable34 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = databaseStateEnterpriseImpl35.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException37 = new io.github.onograph.dbms.StateChangeException(
        throwable34, databaseStateEnterpriseImpl35);
    io.github.onograph.dbms.StateChangeException stateChangeException38 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException33, databaseStateEnterpriseImpl35);
    java.lang.Throwable throwable39 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException42 = new io.github.onograph.dbms.StateChangeException(
        throwable39, databaseStateEnterpriseImpl40);
    stateChangeException38.addSuppressed((java.lang.Throwable) stateChangeException42);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = databaseStateEnterpriseImpl29.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException42);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = databaseStateEnterpriseImpl24.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException42);
    try {
      databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
          (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl19,
          (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl45);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNull(namedDatabaseId6);
    org.junit.Assert.assertNotNull(throwableOptional7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl26 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl26.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
  }

  @Test
  public void test201() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test201");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    structureMetaService3.init();
    structureMetaService3.init();
    structureMetaService3.shutdown();
    try {
      structureMetaService3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test202() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test202");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    structureMetaService3.init();
    structureMetaService3.init();
    try {
      structureMetaService3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test203() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test203");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta1 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta1.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray3 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList4 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList4,
        namedDatabaseIdArray3);
    dbmsResolverMeta1.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList4);
    dbmsResolverMeta1.jonal();
    dbmsResolverMeta1.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta9 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta9.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray11 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList12 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12,
        namedDatabaseIdArray11);
    dbmsResolverMeta9.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    dbmsResolverMeta1.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    java.lang.Object obj17 = null;
    boolean boolean18 = dbmsResolverMeta0.equals(obj17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    try {
      dbmsResolverMeta0.joiForCo(namedDatabaseId19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(dbmsResolverMeta1);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta9);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
  }

  @Test
  public void test204() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test204");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray1 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList2 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2,
        namedDatabaseIdArray1);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    boolean boolean7 = dbmsResolverMeta0.equals((java.lang.Object) databaseStateEnterpriseImpl6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test205() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test205");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo25 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent26 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException23, sysCrashCauseInfo25);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo25);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter28 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl29 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter28);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean31 = databaseStateEnterpriseImpl30.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId32 = databaseStateEnterpriseImpl30.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter33 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl34 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter33);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = databaseStateEnterpriseImpl36.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional38 = databaseStateEnterpriseImpl36.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable40 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = databaseStateEnterpriseImpl41.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException43 = new io.github.onograph.dbms.StateChangeException(
        throwable40, databaseStateEnterpriseImpl41);
    databaseStateUpdateHandlerOppStatsImpl34.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl41);
    databaseStateUpdateHandlerOppStatsImpl29.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39);
    java.lang.Throwable throwable46 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl47.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException49 = new io.github.onograph.dbms.StateChangeException(
        throwable46, databaseStateEnterpriseImpl47);
    java.lang.Throwable throwable50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException53 = new io.github.onograph.dbms.StateChangeException(
        throwable50, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = databaseStateEnterpriseImpl55.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl57 = databaseStateEnterpriseImpl55.operatorState();
    boolean boolean58 = databaseStateEnterpriseImpl55.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException59 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl55);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = databaseStateEnterpriseImpl39.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException59);
    boolean boolean61 = sysCrashEvent27.equals((java.lang.Object) stateChangeException59);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo62 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_SGDB_ERR;
    java.lang.String str63 = sysCrashCauseInfo62.getInfo();
    java.lang.String str64 = sysCrashCauseInfo62.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent65 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException59, sysCrashCauseInfo62);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo25 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo25.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNull(namedDatabaseId32);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNull(namedDatabaseId37);
    org.junit.Assert.assertNotNull(throwableOptional38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl57 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl57.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo62 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_SGDB_ERR + "'",
        sysCrashCauseInfo62.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_SGDB_ERR));
    org.junit.Assert.assertEquals("'" + str63 + "' != '" + "The system database panicked" + "'",
        str63, "The system database panicked");
    org.junit.Assert.assertEquals("'" + str64 + "' != '" + "The system database panicked" + "'",
        str64, "The system database panicked");
  }

  @Test
  public void test206() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test206");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException7, databaseStateEnterpriseImpl9);
    stateChangeException3.addSuppressed((java.lang.Throwable) stateChangeException7);
    java.lang.Throwable throwable14 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException17 = new io.github.onograph.dbms.StateChangeException(
        throwable14, databaseStateEnterpriseImpl15);
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException17, databaseStateEnterpriseImpl19);
    java.lang.Throwable[] throwableArray23 = stateChangeException17.getSuppressed();
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo24 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent25 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException17, sysCrashCauseInfo24);
    java.lang.String str26 = sysCrashCauseInfo24.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(throwableArray23);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo24 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo24.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str26 + "' != '" + "Discovery system failed irrecoverably" + "'", str26,
        "Discovery system failed irrecoverably");
  }

  @Test
  public void test207() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test207");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl5.databaseId();
    boolean boolean8 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo9 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta10 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    boolean boolean11 = sysCrashEvent2.equals((java.lang.Object) dbmsResolverMeta10);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta12 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta12.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray14 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList15 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean16 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList15,
        namedDatabaseIdArray14);
    dbmsResolverMeta12.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList15);
    dbmsResolverMeta12.jonal();
    dbmsResolverMeta12.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta20 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta20.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray22 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList23 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean24 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList23,
        namedDatabaseIdArray22);
    dbmsResolverMeta20.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList23);
    dbmsResolverMeta12.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList23);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta27 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta27.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray29 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList30 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean31 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList30,
        namedDatabaseIdArray29);
    dbmsResolverMeta27.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList30);
    dbmsResolverMeta27.jonal();
    dbmsResolverMeta27.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta35 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta35.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray37 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList38 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean39 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList38,
        namedDatabaseIdArray37);
    dbmsResolverMeta35.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList38);
    dbmsResolverMeta27.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList38);
    dbmsResolverMeta12.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList38);
    dbmsResolverMeta10.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList38);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + causeInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo9.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(dbmsResolverMeta10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta12);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta20);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta27);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray29);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta35);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray37);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
  }

  @Test
  public void test208() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test208");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    int int5 = sysCrashEvent2.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo6 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    int int7 = sysCrashEvent2.getICe();
    java.lang.Throwable throwable8 = sysCrashEvent2.gecsThrowable();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo9 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo6 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo6.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    org.junit.Assert.assertNull(throwable8);
    org.junit.Assert.assertTrue("'" + causeInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo9.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
  }

  @Test
  public void test209() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test209");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    boolean boolean9 = gdbCrashEvent6.equals((java.lang.Object) true);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = databaseStateEnterpriseImpl10.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl10.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl10.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    boolean boolean15 = gdbCrashEvent6.equals((java.lang.Object) databaseStateEnterpriseImpl10);
    try {
      java.lang.String str16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.toshtsrgString(
          databaseStateEnterpriseImpl10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test210() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test210");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    java.lang.Throwable throwable3 = sysCrashEvent2.gecsThrowable();
    java.lang.Throwable throwable4 = sysCrashEvent2.gecsThrowable();
    java.lang.Throwable throwable5 = sysCrashEvent2.gecsThrowable();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable3);
    org.junit.Assert.assertNull(throwable4);
    org.junit.Assert.assertNull(throwable5);
  }

  @Test
  public void test211() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test211");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo26 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    java.lang.String str27 = gdbCrashCauseInfo26.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent28 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException23, namedDatabaseId25, gdbCrashCauseInfo26);
    try {
      databaseStartupControllerAbortableImpl4.handleCrash(gdbCrashEvent28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo26 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo26.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Snapshot failed" + "'", str27,
        "Snapshot failed");
  }

  @Test
  public void test212() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test212");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    boolean boolean9 = gdbCrashEvent6.equals((java.lang.Object) true);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = databaseStateEnterpriseImpl10.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl10.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl10.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    boolean boolean15 = gdbCrashEvent6.equals((java.lang.Object) databaseStateEnterpriseImpl10);
    java.lang.Throwable throwable16 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent18 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable16, sysCrashCauseInfo17);
    java.lang.Throwable throwable19 = sysCrashEvent18.gecsThrowable();
    java.lang.Throwable throwable20 = sysCrashEvent18.gecsThrowable();
    boolean boolean21 = gdbCrashEvent6.equals((java.lang.Object) sysCrashEvent18);
    java.lang.Throwable throwable22 = sysCrashEvent18.gecsThrowable();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable19);
    org.junit.Assert.assertNull(throwable20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertNull(throwable22);
  }

  @Test
  public void test213() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test213");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    boolean boolean9 = databaseStateEnterpriseImpl5.hasFailed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test214() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test214");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    java.time.Clock clock12 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel13 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard14 = null;
    java.time.Duration duration15 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl16 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock12, defaultSystemGraphDbmsModel13, availabilityGuard14, duration15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason18 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl16.prnuratForNaDa(namedDatabaseId17, preventReason18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason21 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl16.prnuratForNaDa(namedDatabaseId20, preventReason21);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId11, preventReason21);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    java.lang.Throwable throwable28 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = databaseStateEnterpriseImpl29.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException31 = new io.github.onograph.dbms.StateChangeException(
        throwable28, databaseStateEnterpriseImpl29);
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException27, databaseStateEnterpriseImpl29);
    java.lang.Throwable throwable33 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException36 = new io.github.onograph.dbms.StateChangeException(
        throwable33, databaseStateEnterpriseImpl34);
    stateChangeException32.addSuppressed((java.lang.Throwable) stateChangeException36);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo38 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent39 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException36, sysCrashCauseInfo38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo41 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent42 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException36, namedDatabaseId40, gdbCrashCauseInfo41);
    try {
      databaseStartupControllerAbortableImpl4.handleCrash(gdbCrashEvent42);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason18 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason18.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason21 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason21.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo38 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo38.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo41 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo41.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
  }

  @Test
  public void test215() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test215");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    int int11 = sysCrashEvent10.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo12 = sysCrashEvent10.gersCrashSignalerCauseInfo();
    int int13 = sysCrashEvent10.getICe();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable16 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        throwable16, databaseStateEnterpriseImpl17);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    io.github.onograph.dbms.StateChangeException stateChangeException24 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException19, databaseStateEnterpriseImpl21);
    java.lang.Throwable throwable25 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = databaseStateEnterpriseImpl26.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException28 = new io.github.onograph.dbms.StateChangeException(
        throwable25, databaseStateEnterpriseImpl26);
    stateChangeException24.addSuppressed((java.lang.Throwable) stateChangeException28);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = databaseStateEnterpriseImpl15.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException28);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo31 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str32 = sysCrashCauseInfo31.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent33 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException28, sysCrashCauseInfo31);
    java.lang.Throwable throwable34 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = databaseStateEnterpriseImpl35.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException37 = new io.github.onograph.dbms.StateChangeException(
        throwable34, databaseStateEnterpriseImpl35);
    java.lang.Throwable throwable38 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = databaseStateEnterpriseImpl39.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException41 = new io.github.onograph.dbms.StateChangeException(
        throwable38, databaseStateEnterpriseImpl39);
    io.github.onograph.dbms.StateChangeException stateChangeException42 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException37, databaseStateEnterpriseImpl39);
    java.lang.Throwable throwable43 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = databaseStateEnterpriseImpl44.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException46 = new io.github.onograph.dbms.StateChangeException(
        throwable43, databaseStateEnterpriseImpl44);
    stateChangeException42.addSuppressed((java.lang.Throwable) stateChangeException46);
    stateChangeException28.addSuppressed((java.lang.Throwable) stateChangeException46);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId49 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo50 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str51 = gdbCrashCauseInfo50.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent52 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException28, namedDatabaseId49, gdbCrashCauseInfo50);
    boolean boolean53 = sysCrashEvent10.equals((java.lang.Object) gdbCrashCauseInfo50);
    java.lang.String str54 = gdbCrashCauseInfo50.getInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo12 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo12.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo31 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo31.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str32 + "' != '" + "Discovery system failed irrecoverably" + "'", str32,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo50 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo50.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str51 + "' != '" + "RaftMessage applier failed" + "'",
        str51, "RaftMessage applier failed");
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "RaftMessage applier failed" + "'",
        str54, "RaftMessage applier failed");
  }

  @Test
  public void test216() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test216");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    int int5 = sysCrashEvent2.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo6 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    int int7 = sysCrashEvent2.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo8 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    boolean boolean10 = sysCrashEvent2.equals((java.lang.Object) "RaftMessage applier failed");
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo6 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo6.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo8 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo8.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test217() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test217");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable19 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo20 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent21 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable19, sysCrashCauseInfo20);
    boolean boolean23 = sysCrashEvent21.equals((java.lang.Object) (-1));
    int int24 = sysCrashEvent21.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo25 = sysCrashEvent21.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable26 = sysCrashEvent21.gecsThrowable();
    boolean boolean27 = databaseStateEnterpriseImpl11.equals((java.lang.Object) throwable26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo20 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo20.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo25 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo25.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
  }

  @Test
  public void test218() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test218");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    dbmsResolverMeta0.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta8 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta8.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray10 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList11 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11,
        namedDatabaseIdArray10);
    dbmsResolverMeta8.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta15 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta15.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray17 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList18 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean19 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList18,
        namedDatabaseIdArray17);
    dbmsResolverMeta15.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList18);
    dbmsResolverMeta15.jonal();
    dbmsResolverMeta15.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta23 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta23.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray25 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList26 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean27 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26,
        namedDatabaseIdArray25);
    dbmsResolverMeta23.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26);
    dbmsResolverMeta15.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta31 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta31.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray33 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList34 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean35 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList34,
        namedDatabaseIdArray33);
    dbmsResolverMeta31.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList34);
    dbmsResolverMeta31.jonal();
    dbmsResolverMeta31.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta39 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta39.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray41 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList42 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean43 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList42,
        namedDatabaseIdArray41);
    dbmsResolverMeta39.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList42);
    dbmsResolverMeta31.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList42);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList42);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId47 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId47);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta8);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta15);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta23);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta31);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray33);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta39);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray41);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
  }

  @Test
  public void test219() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test219");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    java.time.Clock clock29 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel30 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard31 = null;
    java.time.Duration duration32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl33 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock29, defaultSystemGraphDbmsModel30, availabilityGuard31, duration32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason35 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId34, preventReason35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason38 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId37, preventReason38);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId28, preventReason38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = null;
    try {
      boolean boolean42 = databaseStartupControllerAbortableImpl4.shouldAbort(namedDatabaseId41);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason35 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason35.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason38 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason38.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test220() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test220");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo8 = gdbCrashEvent6.gersCrashSignalerCauseInfo();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = gdbCrashEvent6.getNamedDatabaseId();
    java.lang.Throwable throwable10 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo11 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent12 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable10, sysCrashCauseInfo11);
    java.lang.Throwable throwable13 = sysCrashEvent12.gecsThrowable();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo14 = sysCrashEvent12.gersCrashSignalerCauseInfo();
    boolean boolean15 = gdbCrashEvent6.equals((java.lang.Object) sysCrashEvent12);
    java.lang.Throwable throwable16 = sysCrashEvent12.gecsThrowable();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + causeInfo8 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo8.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo11 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo11.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable13);
    org.junit.Assert.assertTrue("'" + causeInfo14 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo14.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNull(throwable16);
  }

  @Test
  public void test221() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test221");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl1.databaseId();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    boolean boolean4 = databaseStateEnterpriseImpl1.hasFailed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test222() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test222");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.time.Clock clock3 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier4 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel5 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier4);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard6 = null;
    java.time.Duration duration7 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl8 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock3, defaultSystemGraphDbmsModel5, availabilityGuard6, duration7);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard9 = null;
    java.time.Duration duration10 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl11 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel5, availabilityGuard9, duration10);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard12 = null;
    java.time.Duration duration13 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl14 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel5, availabilityGuard12, duration13);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard15 = null;
    java.time.Duration duration16 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl17 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel5, availabilityGuard15, duration16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    try {
      boolean boolean19 = databaseStartupControllerAbortableImpl17.shouldAbort(namedDatabaseId18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test223() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test223");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    dbmsResolverMeta0.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta8 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta8.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray10 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList11 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11,
        namedDatabaseIdArray10);
    dbmsResolverMeta8.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta15 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta15.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray17 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList18 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean19 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList18,
        namedDatabaseIdArray17);
    dbmsResolverMeta15.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList18);
    dbmsResolverMeta15.jonal();
    dbmsResolverMeta15.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta23 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta23.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray25 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList26 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean27 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26,
        namedDatabaseIdArray25);
    dbmsResolverMeta23.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26);
    dbmsResolverMeta15.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta31 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta31.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray33 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList34 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean35 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList34,
        namedDatabaseIdArray33);
    dbmsResolverMeta31.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList34);
    dbmsResolverMeta31.jonal();
    dbmsResolverMeta31.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta39 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta39.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray41 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList42 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean43 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList42,
        namedDatabaseIdArray41);
    dbmsResolverMeta39.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList42);
    dbmsResolverMeta31.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList42);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta46 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta46.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray48 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList49 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean50 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList49,
        namedDatabaseIdArray48);
    dbmsResolverMeta46.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList49);
    dbmsResolverMeta46.jonal();
    dbmsResolverMeta46.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta54 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta54.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray56 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList57 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean58 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList57,
        namedDatabaseIdArray56);
    dbmsResolverMeta54.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList57);
    dbmsResolverMeta46.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList57);
    dbmsResolverMeta31.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList57);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList57);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta8);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta15);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta23);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta31);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray33);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta39);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray41);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta46);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray48);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta54);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray56);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
  }

  @Test
  public void test224() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test224");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    int int5 = sysCrashEvent2.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo6 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable7 = sysCrashEvent2.gecsThrowable();
    java.lang.Throwable throwable8 = sysCrashEvent2.gecsThrowable();
    java.lang.Throwable throwable9 = sysCrashEvent2.gecsThrowable();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo6 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo6.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable7);
    org.junit.Assert.assertNull(throwable8);
    org.junit.Assert.assertNull(throwable9);
  }

  @Test
  public void test225() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test225");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    java.lang.String str7 = gdbCrashCauseInfo5.getInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Catchup failed" + "'", str7,
        "Catchup failed");
  }

  @Test
  public void test226() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test226");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str18 = sysCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo17);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    io.github.onograph.dbms.StateChangeException stateChangeException28 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException23, databaseStateEnterpriseImpl25);
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    stateChangeException28.addSuppressed((java.lang.Throwable) stateChangeException32);
    stateChangeException14.addSuppressed((java.lang.Throwable) stateChangeException32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo36 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str37 = gdbCrashCauseInfo36.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent38 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException14, namedDatabaseId35, gdbCrashCauseInfo36);
    java.lang.Throwable throwable39 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException42 = new io.github.onograph.dbms.StateChangeException(
        throwable39, databaseStateEnterpriseImpl40);
    java.lang.Throwable throwable43 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = databaseStateEnterpriseImpl44.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException46 = new io.github.onograph.dbms.StateChangeException(
        throwable43, databaseStateEnterpriseImpl44);
    io.github.onograph.dbms.StateChangeException stateChangeException47 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException42, databaseStateEnterpriseImpl44);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo48 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent49 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException42, sysCrashCauseInfo48);
    java.lang.Throwable throwable50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException53 = new io.github.onograph.dbms.StateChangeException(
        throwable50, databaseStateEnterpriseImpl51);
    java.lang.Throwable throwable54 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = databaseStateEnterpriseImpl55.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException57 = new io.github.onograph.dbms.StateChangeException(
        throwable54, databaseStateEnterpriseImpl55);
    io.github.onograph.dbms.StateChangeException stateChangeException58 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException53, databaseStateEnterpriseImpl55);
    java.lang.Throwable throwable59 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = databaseStateEnterpriseImpl60.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException62 = new io.github.onograph.dbms.StateChangeException(
        throwable59, databaseStateEnterpriseImpl60);
    stateChangeException58.addSuppressed((java.lang.Throwable) stateChangeException62);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo64 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent65 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException62, sysCrashCauseInfo64);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent66 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException42, sysCrashCauseInfo64);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo67 = sysCrashEvent66.gersCrashSignalerCauseInfo();
    boolean boolean68 = gdbCrashEvent38.equals((java.lang.Object) sysCrashEvent66);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Discovery system failed irrecoverably" + "'", str18,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo36 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo36.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "RaftMessage applier failed" + "'",
        str37, "RaftMessage applier failed");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo48 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo48.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo64 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo64.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + causeInfo67 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        causeInfo67.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
  }

  @Test
  public void test227() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test227");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray1 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList2 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2,
        namedDatabaseIdArray1);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    boolean boolean17 = dbmsResolverMeta0.equals((java.lang.Object) databaseStateEnterpriseImpl13);
    dbmsResolverMeta0.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta19 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta19.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray21 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList22 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean23 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList22,
        namedDatabaseIdArray21);
    dbmsResolverMeta19.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList22);
    dbmsResolverMeta19.jonal();
    dbmsResolverMeta19.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta27 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta27.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray29 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList30 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean31 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList30,
        namedDatabaseIdArray29);
    dbmsResolverMeta27.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList30);
    dbmsResolverMeta19.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList30);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta34 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta34.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray36 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList37 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean38 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList37,
        namedDatabaseIdArray36);
    dbmsResolverMeta34.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList37);
    dbmsResolverMeta34.jonal();
    dbmsResolverMeta34.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta42 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta42.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray44 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList45 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean46 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList45,
        namedDatabaseIdArray44);
    dbmsResolverMeta42.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList45);
    dbmsResolverMeta34.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList45);
    dbmsResolverMeta19.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList45);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta50 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta50.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray52 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList53 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean54 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList53,
        namedDatabaseIdArray52);
    dbmsResolverMeta50.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList53);
    dbmsResolverMeta50.jonal();
    dbmsResolverMeta50.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta58 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta58.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray60 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList61 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean62 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList61,
        namedDatabaseIdArray60);
    dbmsResolverMeta58.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList61);
    dbmsResolverMeta50.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList61);
    dbmsResolverMeta19.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList61);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList61);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta19);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta27);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray29);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta34);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray36);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta42);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray44);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta50);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray52);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta58);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray60);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
  }

  @Test
  public void test228() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test228");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl3.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl3.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        throwable7, databaseStateEnterpriseImpl8);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = databaseStateEnterpriseImpl15.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional18 = databaseStateEnterpriseImpl15.failure();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNull(namedDatabaseId17);
    org.junit.Assert.assertNotNull(throwableOptional18);
  }

  @Test
  public void test229() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test229");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = databaseStateEnterpriseImpl9.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = databaseStateEnterpriseImpl12.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional14 = databaseStateEnterpriseImpl12.failure();
    boolean boolean15 = databaseStateEnterpriseImpl9.equals(
        (java.lang.Object) databaseStateEnterpriseImpl12);
    boolean boolean16 = gdbCrashEvent6.equals((java.lang.Object) boolean15);
    java.lang.Throwable throwable17 = gdbCrashEvent6.gecsThrowable();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNull(namedDatabaseId10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNull(namedDatabaseId13);
    org.junit.Assert.assertNotNull(throwableOptional14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNull(throwable17);
  }

  @Test
  public void test230() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test230");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable9 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl10);
    stateChangeException8.addSuppressed((java.lang.Throwable) stateChangeException12);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo14 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent15 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException12, sysCrashCauseInfo14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo17 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent18 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException12, namedDatabaseId16, gdbCrashCauseInfo17);
    java.lang.Throwable throwable19 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        throwable19, databaseStateEnterpriseImpl20);
    java.lang.Throwable throwable23 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = databaseStateEnterpriseImpl24.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException26 = new io.github.onograph.dbms.StateChangeException(
        throwable23, databaseStateEnterpriseImpl24);
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException22, databaseStateEnterpriseImpl24);
    java.lang.Throwable[] throwableArray28 = stateChangeException22.getSuppressed();
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo29 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent30 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException22, sysCrashCauseInfo29);
    java.lang.String str31 = sysCrashCauseInfo29.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent32 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException12, sysCrashCauseInfo29);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo14 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo14.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo17.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(throwableArray28);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo29 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo29.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str31 + "' != '" + "Discovery system failed irrecoverably" + "'", str31,
        "Discovery system failed irrecoverably");
  }

  @Test
  public void test231() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test231");
    }
    java.time.Clock clock0 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier1 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel2 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier1);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard3 = null;
    java.time.Duration duration4 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl5 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel2, availabilityGuard3, duration4);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo11 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent12 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable6, namedDatabaseId10, gdbCrashCauseInfo11);
    java.lang.Throwable throwable13 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo14 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent15 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable13, sysCrashCauseInfo14);
    boolean boolean17 = sysCrashEvent15.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo18 = sysCrashEvent15.gersCrashSignalerCauseInfo();
    boolean boolean19 = gdbCrashEvent12.equals((java.lang.Object) sysCrashEvent15);
    try {
      databaseStartupControllerAbortableImpl5.handleCrash(gdbCrashEvent12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo11 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo11.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo14 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo14.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + causeInfo18 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo18.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test232() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test232");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.time.Clock clock3 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier4 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel5 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier4);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard6 = null;
    java.time.Duration duration7 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl8 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock3, defaultSystemGraphDbmsModel5, availabilityGuard6, duration7);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard9 = null;
    java.time.Duration duration10 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl11 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel5, availabilityGuard9, duration10);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard12 = null;
    java.time.Duration duration13 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl14 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel5, availabilityGuard12, duration13);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard15 = null;
    java.time.Duration duration16 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl17 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel5, availabilityGuard15, duration16);
    org.neo4j.graphdb.factory.module.GlobalModule globalModule18 = null;
    io.github.onograph.dbms.HealthMonitorService healthMonitorService19 = null;
    org.neo4j.bolt.txtracking.ReconciledTransactionTracker reconciledTransactionTracker20 = null;
    try {
      io.github.onograph.dbms.MediationDbmsManagers mediationDbmsManagers21 = new io.github.onograph.dbms.MediationDbmsManagers(
          defaultSystemGraphDbmsModel5, globalModule18, healthMonitorService19,
          reconciledTransactionTracker20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test233() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test233");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    boolean boolean9 = gdbCrashEvent6.equals((java.lang.Object) true);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = databaseStateEnterpriseImpl10.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl10.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl10.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    boolean boolean15 = gdbCrashEvent6.equals((java.lang.Object) databaseStateEnterpriseImpl10);
    java.util.Optional<java.lang.Throwable> throwableOptional16 = databaseStateEnterpriseImpl10.failure();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(throwableOptional16);
  }

  @Test
  public void test234() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test234");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray1 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList2 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2,
        namedDatabaseIdArray1);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    boolean boolean17 = dbmsResolverMeta0.equals((java.lang.Object) databaseStateEnterpriseImpl13);
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
  }

  @Test
  public void test235() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test235");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str18 = sysCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo17);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    io.github.onograph.dbms.StateChangeException stateChangeException28 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException23, databaseStateEnterpriseImpl25);
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    stateChangeException28.addSuppressed((java.lang.Throwable) stateChangeException32);
    stateChangeException14.addSuppressed((java.lang.Throwable) stateChangeException32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo36 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str37 = gdbCrashCauseInfo36.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent38 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException14, namedDatabaseId35, gdbCrashCauseInfo36);
    java.lang.Throwable throwable39 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException42 = new io.github.onograph.dbms.StateChangeException(
        throwable39, databaseStateEnterpriseImpl40);
    java.lang.Throwable throwable43 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = databaseStateEnterpriseImpl44.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException46 = new io.github.onograph.dbms.StateChangeException(
        throwable43, databaseStateEnterpriseImpl44);
    io.github.onograph.dbms.StateChangeException stateChangeException47 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException42, databaseStateEnterpriseImpl44);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl49 = databaseStateEnterpriseImpl48.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl50 = databaseStateEnterpriseImpl48.operatorState();
    boolean boolean51 = databaseStateEnterpriseImpl48.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException52 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException42, databaseStateEnterpriseImpl48);
    stateChangeException14.addSuppressed((java.lang.Throwable) stateChangeException52);
    java.lang.String str54 = stateChangeException52.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Discovery system failed irrecoverably" + "'", str18,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo36 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo36.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "RaftMessage applier failed" + "'",
        str37, "RaftMessage applier failed");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl49);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl50 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl50.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertEquals("'" + str54 + "' != '"
            + "io.github.onograph.dbms.StateChangeException: io.github.onograph.dbms.StateChangeException"
            + "'", str54,
        "io.github.onograph.dbms.StateChangeException: io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test236() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test236");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    boolean boolean11 = dbmsResolverMeta0.equals((java.lang.Object) clock1);
    dbmsResolverMeta0.jonal();
    java.lang.Throwable throwable13 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo14 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent15 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable13, sysCrashCauseInfo14);
    boolean boolean17 = sysCrashEvent15.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo18 = sysCrashEvent15.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable19 = sysCrashEvent15.gecsThrowable();
    int int20 = sysCrashEvent15.getICe();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl22 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    java.lang.String str23 = operatorStateEnterpriseTypeImpl22.description();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId21, operatorStateEnterpriseTypeImpl22);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = databaseStateEnterpriseImpl24.helyDatabaseStateEnterpriseImpl();
    boolean boolean26 = sysCrashEvent15.equals((java.lang.Object) databaseStateEnterpriseImpl25);
    boolean boolean27 = dbmsResolverMeta0.equals((java.lang.Object) boolean26);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo14 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo14.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + causeInfo18 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo18.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable19);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl22 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl22.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "dropped" + "'", str23, "dropped");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
  }

  @Test
  public void test237() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test237");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier2 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel3 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier2);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard4 = null;
    java.time.Duration duration5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl6 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel3, availabilityGuard4, duration5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel3, availabilityGuard7, duration8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason11 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl9.aluabForNaDa(namedDatabaseId10, preventReason11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    java.time.Clock clock14 = null;
    java.time.Clock clock15 = null;
    java.time.Clock clock16 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier17 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel18 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier17);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard19 = null;
    java.time.Duration duration20 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl21 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel18, availabilityGuard19, duration20);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard22 = null;
    java.time.Duration duration23 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl24 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock15, defaultSystemGraphDbmsModel18, availabilityGuard22, duration23);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard25 = null;
    java.time.Duration duration26 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl27 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock14, defaultSystemGraphDbmsModel18, availabilityGuard25, duration26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    java.time.Clock clock29 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel30 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard31 = null;
    java.time.Duration duration32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl33 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock29, defaultSystemGraphDbmsModel30, availabilityGuard31, duration32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    java.time.Clock clock35 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel36 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard37 = null;
    java.time.Duration duration38 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl39 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock35, defaultSystemGraphDbmsModel36, availabilityGuard37, duration38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason41 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl39.prnuratForNaDa(namedDatabaseId40, preventReason41);
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId34, preventReason41);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId44 = null;
    java.time.Clock clock45 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel46 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard47 = null;
    java.time.Duration duration48 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl49 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock45, defaultSystemGraphDbmsModel46, availabilityGuard47, duration48);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId50 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason51 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl49.prnuratForNaDa(namedDatabaseId50, preventReason51);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId53 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason54 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl49.prnuratForNaDa(namedDatabaseId53, preventReason54);
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId44, preventReason54);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId57 = null;
    java.time.Clock clock58 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel59 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard60 = null;
    java.time.Duration duration61 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl62 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock58, defaultSystemGraphDbmsModel59, availabilityGuard60, duration61);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId63 = null;
    java.time.Clock clock64 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel65 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard66 = null;
    java.time.Duration duration67 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl68 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock64, defaultSystemGraphDbmsModel65, availabilityGuard66, duration67);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId69 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason70 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl68.prnuratForNaDa(namedDatabaseId69, preventReason70);
    databaseStartupControllerAbortableImpl62.prnuratForNaDa(namedDatabaseId63, preventReason70);
    databaseStartupControllerAbortableImpl33.aluabForNaDa(namedDatabaseId57, preventReason70);
    databaseStartupControllerAbortableImpl27.prnuratForNaDa(namedDatabaseId28, preventReason70);
    databaseStartupControllerAbortableImpl9.prnuratForNaDa(namedDatabaseId13, preventReason70);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId76 = null;
    try {
      boolean boolean77 = databaseStartupControllerAbortableImpl9.shouldAbort(namedDatabaseId76);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason11 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason11.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason41 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason41.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason51 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason51.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason54 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason54.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason70 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason70.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test238() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test238");
    }
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl0 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING;
    java.lang.String str1 = operatorStateEnterpriseTypeImpl0.description();
    boolean boolean2 = operatorStateEnterpriseTypeImpl0.terminal();
    java.lang.String str3 = operatorStateEnterpriseTypeImpl0.description();
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl0 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING + "'",
        operatorStateEnterpriseTypeImpl0.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "offline" + "'", str1, "offline");
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "offline" + "'", str3, "offline");
  }

  @Test
  public void test239() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test239");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    java.lang.Throwable throwable22 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        throwable22, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.StateChangeException stateChangeException26 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl27.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl29 = databaseStateEnterpriseImpl27.operatorState();
    boolean boolean30 = databaseStateEnterpriseImpl27.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException31 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl27);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = databaseStateEnterpriseImpl11.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException31);
    java.lang.Throwable[] throwableArray33 = stateChangeException31.getSuppressed();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable36 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = databaseStateEnterpriseImpl37.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException39 = new io.github.onograph.dbms.StateChangeException(
        throwable36, databaseStateEnterpriseImpl37);
    java.lang.Throwable throwable40 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = databaseStateEnterpriseImpl41.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException43 = new io.github.onograph.dbms.StateChangeException(
        throwable40, databaseStateEnterpriseImpl41);
    io.github.onograph.dbms.StateChangeException stateChangeException44 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException39, databaseStateEnterpriseImpl41);
    java.lang.Throwable throwable45 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = databaseStateEnterpriseImpl46.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException48 = new io.github.onograph.dbms.StateChangeException(
        throwable45, databaseStateEnterpriseImpl46);
    stateChangeException44.addSuppressed((java.lang.Throwable) stateChangeException48);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl50 = databaseStateEnterpriseImpl35.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException48);
    java.lang.Throwable throwable51 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl53 = databaseStateEnterpriseImpl52.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        throwable51, databaseStateEnterpriseImpl52);
    java.lang.Throwable throwable55 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = databaseStateEnterpriseImpl56.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException58 = new io.github.onograph.dbms.StateChangeException(
        throwable55, databaseStateEnterpriseImpl56);
    java.lang.Throwable throwable59 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = databaseStateEnterpriseImpl60.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException62 = new io.github.onograph.dbms.StateChangeException(
        throwable59, databaseStateEnterpriseImpl60);
    io.github.onograph.dbms.StateChangeException stateChangeException63 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException58, databaseStateEnterpriseImpl60);
    java.lang.Throwable throwable64 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl65 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = databaseStateEnterpriseImpl65.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException67 = new io.github.onograph.dbms.StateChangeException(
        throwable64, databaseStateEnterpriseImpl65);
    stateChangeException63.addSuppressed((java.lang.Throwable) stateChangeException67);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo69 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent70 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException67, sysCrashCauseInfo69);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId71 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo72 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent73 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException67, namedDatabaseId71, gdbCrashCauseInfo72);
    stateChangeException54.addSuppressed((java.lang.Throwable) stateChangeException67);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl75 = databaseStateEnterpriseImpl50.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException54);
    io.github.onograph.dbms.StateChangeException stateChangeException76 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException31, databaseStateEnterpriseImpl50);
    java.lang.Throwable throwable77 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl78 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl79 = databaseStateEnterpriseImpl78.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException80 = new io.github.onograph.dbms.StateChangeException(
        throwable77, databaseStateEnterpriseImpl78);
    java.lang.Throwable throwable81 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl82 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl83 = databaseStateEnterpriseImpl82.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException84 = new io.github.onograph.dbms.StateChangeException(
        throwable81, databaseStateEnterpriseImpl82);
    java.lang.Throwable throwable85 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl86 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl87 = databaseStateEnterpriseImpl86.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException88 = new io.github.onograph.dbms.StateChangeException(
        throwable85, databaseStateEnterpriseImpl86);
    io.github.onograph.dbms.StateChangeException stateChangeException89 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException84, databaseStateEnterpriseImpl86);
    stateChangeException80.addSuppressed((java.lang.Throwable) stateChangeException84);
    stateChangeException76.addSuppressed((java.lang.Throwable) stateChangeException80);
    java.lang.String str92 = stateChangeException76.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl29 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl29.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertNotNull(throwableArray33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl50);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl53);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl65);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl66);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo69 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo69.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo72 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo72.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl75);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl78);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl79);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl82);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl83);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl86);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl87);
    org.junit.Assert.assertEquals("'" + str92 + "' != '"
            + "io.github.onograph.dbms.StateChangeException: io.github.onograph.dbms.StateChangeException: io.github.onograph.dbms.StateChangeException"
            + "'", str92,
        "io.github.onograph.dbms.StateChangeException: io.github.onograph.dbms.StateChangeException: io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test240() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test240");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl5.databaseId();
    boolean boolean8 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl5);
    boolean boolean9 = databaseStateEnterpriseImpl5.hasFailed();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test241() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test241");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.time.Clock clock3 = null;
    java.time.Clock clock4 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier5 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel6 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock4, defaultSystemGraphDbmsModel6, availabilityGuard7, duration8);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard10 = null;
    java.time.Duration duration11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl12 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock3, defaultSystemGraphDbmsModel6, availabilityGuard10, duration11);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard13 = null;
    java.time.Duration duration14 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl15 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel6, availabilityGuard13, duration14);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard16 = null;
    java.time.Duration duration17 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl18 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel6, availabilityGuard16, duration17);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard19 = null;
    java.time.Duration duration20 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl21 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel6, availabilityGuard19, duration20);
    org.neo4j.graphdb.factory.module.GlobalModule globalModule22 = null;
    io.github.onograph.dbms.HealthMonitorService healthMonitorService23 = null;
    org.neo4j.bolt.txtracking.ReconciledTransactionTracker reconciledTransactionTracker24 = null;
    try {
      io.github.onograph.dbms.MediationDbmsManagers mediationDbmsManagers25 = new io.github.onograph.dbms.MediationDbmsManagers(
          defaultSystemGraphDbmsModel6, globalModule22, healthMonitorService23,
          reconciledTransactionTracker24);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test242() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test242");
    }
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo0 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str1 = sysCrashCauseInfo0.getInfo();
    java.lang.Class<?> wildcardClass2 = sysCrashCauseInfo0.getClass();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo0 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo0.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Discovery system failed irrecoverably" + "'", str1,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(wildcardClass2);
  }

  @Test
  public void test243() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test243");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray1 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList2 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2,
        namedDatabaseIdArray1);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    boolean boolean17 = dbmsResolverMeta0.equals((java.lang.Object) databaseStateEnterpriseImpl13);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean19 = databaseStateEnterpriseImpl18.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = databaseStateEnterpriseImpl18.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional21 = databaseStateEnterpriseImpl18.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl18.helyDatabaseStateEnterpriseImpl();
    boolean boolean23 = dbmsResolverMeta0.equals((java.lang.Object) databaseStateEnterpriseImpl18);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta24 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta24.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray26 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList27 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean28 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList27,
        namedDatabaseIdArray26);
    dbmsResolverMeta24.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList27);
    dbmsResolverMeta24.jonal();
    dbmsResolverMeta24.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta32 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta32.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray34 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList35 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean36 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList35,
        namedDatabaseIdArray34);
    dbmsResolverMeta32.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList35);
    dbmsResolverMeta24.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList35);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta39 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta39.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray41 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList42 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean43 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList42,
        namedDatabaseIdArray41);
    dbmsResolverMeta39.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList42);
    dbmsResolverMeta39.jonal();
    dbmsResolverMeta39.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta47 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta47.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray49 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList50 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean51 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList50,
        namedDatabaseIdArray49);
    dbmsResolverMeta47.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList50);
    dbmsResolverMeta39.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList50);
    dbmsResolverMeta24.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList50);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList50);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId56 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId56);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNull(namedDatabaseId20);
    org.junit.Assert.assertNotNull(throwableOptional21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta24);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta32);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray34);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta39);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray41);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta47);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray49);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
  }

  @Test
  public void test244() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test244");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard11 = null;
    java.time.Duration duration12 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl13 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel4, availabilityGuard11, duration12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    java.time.Clock clock15 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel16 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard17 = null;
    java.time.Duration duration18 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl19 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock15, defaultSystemGraphDbmsModel16, availabilityGuard17, duration18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    java.time.Clock clock21 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel22 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard23 = null;
    java.time.Duration duration24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl25 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock21, defaultSystemGraphDbmsModel22, availabilityGuard23, duration24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason27 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl25.prnuratForNaDa(namedDatabaseId26, preventReason27);
    databaseStartupControllerAbortableImpl19.prnuratForNaDa(namedDatabaseId20, preventReason27);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId30 = null;
    java.time.Clock clock31 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel32 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard33 = null;
    java.time.Duration duration34 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl35 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock31, defaultSystemGraphDbmsModel32, availabilityGuard33, duration34);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId36 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason37 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl35.prnuratForNaDa(namedDatabaseId36, preventReason37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId39 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason40 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl35.prnuratForNaDa(namedDatabaseId39, preventReason40);
    databaseStartupControllerAbortableImpl19.prnuratForNaDa(namedDatabaseId30, preventReason40);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId43 = null;
    java.time.Clock clock44 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel45 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard46 = null;
    java.time.Duration duration47 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl48 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock44, defaultSystemGraphDbmsModel45, availabilityGuard46, duration47);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId49 = null;
    java.time.Clock clock50 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel51 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard52 = null;
    java.time.Duration duration53 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl54 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock50, defaultSystemGraphDbmsModel51, availabilityGuard52, duration53);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId55 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason56 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl54.prnuratForNaDa(namedDatabaseId55, preventReason56);
    databaseStartupControllerAbortableImpl48.prnuratForNaDa(namedDatabaseId49, preventReason56);
    databaseStartupControllerAbortableImpl19.aluabForNaDa(namedDatabaseId43, preventReason56);
    databaseStartupControllerAbortableImpl13.prnuratForNaDa(namedDatabaseId14, preventReason56);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId61 = null;
    try {
      databaseStartupControllerAbortableImpl13.reefoForNa(namedDatabaseId61);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason27 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason27.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason37 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason37.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason40 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason40.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason56 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason56.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test245() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test245");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    int int5 = sysCrashEvent2.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo6 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    int int7 = sysCrashEvent2.getICe();
    java.lang.Throwable throwable8 = sysCrashEvent2.gecsThrowable();
    int int9 = sysCrashEvent2.getICe();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo6 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo6.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    org.junit.Assert.assertNull(throwable8);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
  }

  @Test
  public void test246() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test246");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl2.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl2.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter7 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl8 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl10 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId9, operatorStateEnterpriseTypeImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean13 = databaseStateEnterpriseImpl12.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl8.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter16 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl17 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter16);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean19 = databaseStateEnterpriseImpl18.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = databaseStateEnterpriseImpl18.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional21 = databaseStateEnterpriseImpl18.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter22 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl23 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = databaseStateEnterpriseImpl25.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional27 = databaseStateEnterpriseImpl25.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl28,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl34,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    org.neo4j.function.ThrowingAction throwingAction39 = null;
    org.neo4j.function.ThrowingAction throwingAction40 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle41 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction39, throwingAction40);
    boolean boolean42 = databaseStateEnterpriseImpl37.equals((java.lang.Object) throwingAction40);
    databaseStateUpdateHandlerOppStatsImpl17.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl18,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId44 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.intlDatabaseStateEnterpriseImpl(
        namedDatabaseId44);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl45);
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction47 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter48 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl49 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter48);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId50 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl51 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId50, operatorStateEnterpriseTypeImpl51);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl53 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean54 = databaseStateEnterpriseImpl53.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl49.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl52,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl53);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = databaseStateEnterpriseImpl53.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = databaseStateEnterpriseImpl53.helyDatabaseStateEnterpriseImpl();
    boolean boolean58 = dbmsResolverAction47.equals(
        (java.lang.Object) databaseStateEnterpriseImpl57);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId59 = null;
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction60 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = databaseStateEnterpriseImpl61.helyDatabaseStateEnterpriseImpl();
    boolean boolean63 = databaseStateEnterpriseImpl61.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl64 = databaseStateEnterpriseImpl61.operatorState();
    boolean boolean65 = dbmsResolverAction60.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl64);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId59, operatorStateEnterpriseTypeImpl64);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl57,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl66);
    org.neo4j.dbms.DatabaseState databaseState68 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl69 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl70 = databaseStateEnterpriseImpl69.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable71 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl72 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl73 = databaseStateEnterpriseImpl72.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException74 = new io.github.onograph.dbms.StateChangeException(
        throwable71, databaseStateEnterpriseImpl72);
    java.lang.Throwable throwable75 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl76 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl77 = databaseStateEnterpriseImpl76.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException78 = new io.github.onograph.dbms.StateChangeException(
        throwable75, databaseStateEnterpriseImpl76);
    io.github.onograph.dbms.StateChangeException stateChangeException79 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException74, databaseStateEnterpriseImpl76);
    java.lang.Throwable throwable80 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl81 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl82 = databaseStateEnterpriseImpl81.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException83 = new io.github.onograph.dbms.StateChangeException(
        throwable80, databaseStateEnterpriseImpl81);
    stateChangeException79.addSuppressed((java.lang.Throwable) stateChangeException83);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl85 = databaseStateEnterpriseImpl70.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException83);
    java.util.Optional<java.lang.Throwable> throwableOptional86 = databaseStateEnterpriseImpl85.failure();
    try {
      databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(databaseState68,
          (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl85);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl10 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl10.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNull(namedDatabaseId20);
    org.junit.Assert.assertNotNull(throwableOptional21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNull(namedDatabaseId26);
    org.junit.Assert.assertNotNull(throwableOptional27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(lifecycle41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(dbmsResolverAction47);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl51 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl51.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNotNull(dbmsResolverAction60);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl64 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl64.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl69);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl70);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl72);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl73);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl76);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl77);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl81);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl82);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl85);
    org.junit.Assert.assertNotNull(throwableOptional86);
  }

  @Test
  public void test247() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test247");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    java.lang.Throwable throwable5 = sysCrashEvent2.gecsThrowable();
    java.lang.Object obj6 = null;
    boolean boolean7 = sysCrashEvent2.equals(obj6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNull(throwable5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test248() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test248");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo5 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo11 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent12 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable6, namedDatabaseId10, gdbCrashCauseInfo11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = gdbCrashEvent12.getNamedDatabaseId();
    java.lang.Throwable throwable14 = gdbCrashEvent12.gecsThrowable();
    boolean boolean15 = sysCrashEvent2.equals((java.lang.Object) gdbCrashEvent12);
    java.lang.Throwable throwable16 = gdbCrashEvent12.gecsThrowable();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = gdbCrashEvent12.getNamedDatabaseId();
    boolean boolean19 = gdbCrashEvent12.equals((java.lang.Object) "Command application failed");
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + causeInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo5.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo11 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo11.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId13);
    org.junit.Assert.assertNull(throwable14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNull(throwable16);
    org.junit.Assert.assertNull(namedDatabaseId17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test249() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test249");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    java.time.Clock clock12 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel13 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard14 = null;
    java.time.Duration duration15 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl16 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock12, defaultSystemGraphDbmsModel13, availabilityGuard14, duration15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    java.time.Clock clock18 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel19 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard20 = null;
    java.time.Duration duration21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl22 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock18, defaultSystemGraphDbmsModel19, availabilityGuard20, duration21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason24 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl22.prnuratForNaDa(namedDatabaseId23, preventReason24);
    databaseStartupControllerAbortableImpl16.prnuratForNaDa(namedDatabaseId17, preventReason24);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId11, preventReason24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    try {
      boolean boolean29 = databaseStartupControllerAbortableImpl4.shouldAbort(namedDatabaseId28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason24 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason24.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test250() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test250");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray1 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList2 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2,
        namedDatabaseIdArray1);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo5 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str6 = sysCrashCauseInfo5.getInfo();
    boolean boolean7 = dbmsResolverMeta0.equals((java.lang.Object) str6);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter8 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl9 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl11 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId10, operatorStateEnterpriseTypeImpl11);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean14 = databaseStateEnterpriseImpl13.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl9.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    boolean boolean17 = dbmsResolverMeta0.equals((java.lang.Object) databaseStateEnterpriseImpl16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    try {
      dbmsResolverMeta0.joiForCo(namedDatabaseId18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Discovery system failed irrecoverably" + "'", str6,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl11 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl11.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
  }

  @Test
  public void test251() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test251");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray1 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList2 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2,
        namedDatabaseIdArray1);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo5 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str6 = sysCrashCauseInfo5.getInfo();
    boolean boolean7 = dbmsResolverMeta0.equals((java.lang.Object) str6);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter8 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl9 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl11 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId10, operatorStateEnterpriseTypeImpl11);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean14 = databaseStateEnterpriseImpl13.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl9.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    boolean boolean17 = dbmsResolverMeta0.equals((java.lang.Object) databaseStateEnterpriseImpl16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    try {
      dbmsResolverMeta0.awiForNa(namedDatabaseId18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Discovery system failed irrecoverably" + "'", str6,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl11 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl11.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
  }

  @Test
  public void test252() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test252");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo8 = gdbCrashEvent6.gersCrashSignalerCauseInfo();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = gdbCrashEvent6.getNamedDatabaseId();
    java.lang.Throwable throwable10 = gdbCrashEvent6.gecsThrowable();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo11 = gdbCrashEvent6.gersCrashSignalerCauseInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + causeInfo8 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo8.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNull(throwable10);
    org.junit.Assert.assertTrue("'" + causeInfo11 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo11.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
  }

  @Test
  public void test253() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test253");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable9 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl10);
    stateChangeException8.addSuppressed((java.lang.Throwable) stateChangeException12);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter14 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl15 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean17 = databaseStateEnterpriseImpl16.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = databaseStateEnterpriseImpl16.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional19 = databaseStateEnterpriseImpl16.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter21 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl22 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl24 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId23, operatorStateEnterpriseTypeImpl24);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean27 = databaseStateEnterpriseImpl26.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl22.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl25,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl26);
    databaseStateUpdateHandlerOppStatsImpl15.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl20,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId30 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId30);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId32 = databaseStateEnterpriseImpl31.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional33 = databaseStateEnterpriseImpl31.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = databaseStateEnterpriseImpl31.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = databaseStateEnterpriseImpl36.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId38 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = databaseStateEnterpriseImpl39.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional41 = databaseStateEnterpriseImpl39.failure();
    boolean boolean42 = databaseStateEnterpriseImpl36.equals(
        (java.lang.Object) databaseStateEnterpriseImpl39);
    databaseStateUpdateHandlerOppStatsImpl15.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl31,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39);
    io.github.onograph.dbms.StateChangeException stateChangeException44 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException8, databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNull(namedDatabaseId18);
    org.junit.Assert.assertNotNull(throwableOptional19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl24 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl24.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNull(namedDatabaseId32);
    org.junit.Assert.assertNotNull(throwableOptional33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNull(namedDatabaseId37);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNull(namedDatabaseId40);
    org.junit.Assert.assertNotNull(throwableOptional41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
  }

  @Test
  public void test254() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test254");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta1 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta1.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray3 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList4 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList4,
        namedDatabaseIdArray3);
    dbmsResolverMeta1.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList4);
    dbmsResolverMeta1.jonal();
    dbmsResolverMeta1.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta9 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta9.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray11 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList12 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12,
        namedDatabaseIdArray11);
    dbmsResolverMeta9.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    dbmsResolverMeta1.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter17 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl18 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter17);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    boolean boolean22 = databaseStateEnterpriseImpl20.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl23 = databaseStateEnterpriseImpl20.operatorState();
    databaseStateUpdateHandlerOppStatsImpl18.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl19,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl20);
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl25 = databaseStateEnterpriseImpl20.operatorState();
    boolean boolean26 = dbmsResolverMeta0.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl25);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(dbmsResolverMeta1);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta9);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl23 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl23.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl25 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl25.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test255() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test255");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo8 = gdbCrashEvent6.gersCrashSignalerCauseInfo();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = gdbCrashEvent6.getNamedDatabaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = gdbCrashEvent6.getNamedDatabaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + causeInfo8 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo8.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNull(namedDatabaseId10);
  }

  @Test
  public void test256() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test256");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str18 = sysCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo17);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    io.github.onograph.dbms.StateChangeException stateChangeException28 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException23, databaseStateEnterpriseImpl25);
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    stateChangeException28.addSuppressed((java.lang.Throwable) stateChangeException32);
    stateChangeException14.addSuppressed((java.lang.Throwable) stateChangeException32);
    java.lang.Throwable[] throwableArray35 = stateChangeException14.getSuppressed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Discovery system failed irrecoverably" + "'", str18,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(throwableArray35);
  }

  @Test
  public void test257() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test257");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl2 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING;
    java.lang.String str3 = operatorStateEnterpriseTypeImpl2.description();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId1, operatorStateEnterpriseTypeImpl2);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId0, operatorStateEnterpriseTypeImpl2);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl2 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING + "'",
        operatorStateEnterpriseTypeImpl2.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING));
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "offline" + "'", str3, "offline");
  }

  @Test
  public void test258() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test258");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray1 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList2 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2,
        namedDatabaseIdArray1);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList2);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    boolean boolean17 = dbmsResolverMeta0.equals((java.lang.Object) databaseStateEnterpriseImpl13);
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo22 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent23 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException21, sysCrashCauseInfo22);
    boolean boolean24 = dbmsResolverMeta0.equals((java.lang.Object) stateChangeException21);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta25 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta25.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray27 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList28 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean29 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList28,
        namedDatabaseIdArray27);
    dbmsResolverMeta25.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList28);
    dbmsResolverMeta25.jonal();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = databaseStateEnterpriseImpl32.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable34 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = databaseStateEnterpriseImpl35.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException37 = new io.github.onograph.dbms.StateChangeException(
        throwable34, databaseStateEnterpriseImpl35);
    java.lang.Throwable throwable38 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = databaseStateEnterpriseImpl39.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException41 = new io.github.onograph.dbms.StateChangeException(
        throwable38, databaseStateEnterpriseImpl39);
    io.github.onograph.dbms.StateChangeException stateChangeException42 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException37, databaseStateEnterpriseImpl39);
    java.lang.Throwable throwable43 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = databaseStateEnterpriseImpl44.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException46 = new io.github.onograph.dbms.StateChangeException(
        throwable43, databaseStateEnterpriseImpl44);
    stateChangeException42.addSuppressed((java.lang.Throwable) stateChangeException46);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl33.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException46);
    java.lang.Throwable throwable49 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl50 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = databaseStateEnterpriseImpl50.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException52 = new io.github.onograph.dbms.StateChangeException(
        throwable49, databaseStateEnterpriseImpl50);
    java.lang.Throwable throwable53 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl54 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = databaseStateEnterpriseImpl54.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException56 = new io.github.onograph.dbms.StateChangeException(
        throwable53, databaseStateEnterpriseImpl54);
    java.lang.Throwable throwable57 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = databaseStateEnterpriseImpl58.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException60 = new io.github.onograph.dbms.StateChangeException(
        throwable57, databaseStateEnterpriseImpl58);
    io.github.onograph.dbms.StateChangeException stateChangeException61 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException56, databaseStateEnterpriseImpl58);
    java.lang.Throwable throwable62 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl63 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl64 = databaseStateEnterpriseImpl63.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException65 = new io.github.onograph.dbms.StateChangeException(
        throwable62, databaseStateEnterpriseImpl63);
    stateChangeException61.addSuppressed((java.lang.Throwable) stateChangeException65);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo67 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent68 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException65, sysCrashCauseInfo67);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId69 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo70 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent71 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException65, namedDatabaseId69, gdbCrashCauseInfo70);
    stateChangeException52.addSuppressed((java.lang.Throwable) stateChangeException65);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl73 = databaseStateEnterpriseImpl48.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException52);
    boolean boolean74 = dbmsResolverMeta25.equals((java.lang.Object) databaseStateEnterpriseImpl73);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta75 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta75.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray77 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList78 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean79 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList78,
        namedDatabaseIdArray77);
    dbmsResolverMeta75.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList78);
    dbmsResolverMeta75.jonal();
    dbmsResolverMeta75.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta83 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta83.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray85 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList86 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean87 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList86,
        namedDatabaseIdArray85);
    dbmsResolverMeta83.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList86);
    dbmsResolverMeta75.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList86);
    dbmsResolverMeta25.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList86);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList86);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo22 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo22.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta25);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray27);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl50);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl54);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl58);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl63);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl64);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo67 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo67.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo70 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo70.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl73);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta75);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray77);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta83);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray85);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
  }

  @Test
  public void test259() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test259");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = databaseStateEnterpriseImpl2.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl4 = databaseStateEnterpriseImpl2.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId1, operatorStateEnterpriseTypeImpl4);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId0, operatorStateEnterpriseTypeImpl4);
    boolean boolean7 = operatorStateEnterpriseTypeImpl4.terminal();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl4 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl4.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test260() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test260");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl5.databaseId();
    boolean boolean8 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable10 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException13 = new io.github.onograph.dbms.StateChangeException(
        throwable10, databaseStateEnterpriseImpl11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo15 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent16 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable10, namedDatabaseId14, gdbCrashCauseInfo15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = gdbCrashEvent16.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo18 = gdbCrashEvent16.gersCrashSignalerCauseInfo();
    boolean boolean19 = databaseStateEnterpriseImpl9.equals((java.lang.Object) causeInfo18);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo15 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo15.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId17);
    org.junit.Assert.assertTrue("'" + causeInfo18 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo18.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test261() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test261");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter2 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl3 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId4);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = databaseStateEnterpriseImpl5.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional7 = databaseStateEnterpriseImpl5.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable9 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl10);
    databaseStateUpdateHandlerOppStatsImpl3.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl3.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl17);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter19 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl20 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter19);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    boolean boolean24 = databaseStateEnterpriseImpl22.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl25 = databaseStateEnterpriseImpl22.operatorState();
    databaseStateUpdateHandlerOppStatsImpl20.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl21,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = databaseStateEnterpriseImpl22.databaseId();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId29 = databaseStateEnterpriseImpl22.databaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNull(namedDatabaseId6);
    org.junit.Assert.assertNotNull(throwableOptional7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl25 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl25.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNull(namedDatabaseId27);
    org.junit.Assert.assertNull(namedDatabaseId29);
  }

  @Test
  public void test262() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test262");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    dbmsResolverMeta0.jonal();
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo13 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent14 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable8, namedDatabaseId12, gdbCrashCauseInfo13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = gdbCrashEvent14.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo16 = gdbCrashEvent14.gersCrashSignalerCauseInfo();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = gdbCrashEvent14.getNamedDatabaseId();
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo19 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent20 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable18, sysCrashCauseInfo19);
    java.lang.Throwable throwable21 = sysCrashEvent20.gecsThrowable();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo22 = sysCrashEvent20.gersCrashSignalerCauseInfo();
    boolean boolean23 = gdbCrashEvent14.equals((java.lang.Object) sysCrashEvent20);
    boolean boolean24 = dbmsResolverMeta0.equals((java.lang.Object) sysCrashEvent20);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta25 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray26 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList27 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean28 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList27,
        namedDatabaseIdArray26);
    dbmsResolverMeta25.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList27);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter30 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl31 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter30);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId32 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = databaseStateEnterpriseImpl33.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional35 = databaseStateEnterpriseImpl33.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = databaseStateEnterpriseImpl33.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable37 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl38.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException40 = new io.github.onograph.dbms.StateChangeException(
        throwable37, databaseStateEnterpriseImpl38);
    databaseStateUpdateHandlerOppStatsImpl31.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl36,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl38);
    boolean boolean42 = dbmsResolverMeta25.equals((java.lang.Object) databaseStateEnterpriseImpl38);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean44 = databaseStateEnterpriseImpl43.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId45 = databaseStateEnterpriseImpl43.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional46 = databaseStateEnterpriseImpl43.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = databaseStateEnterpriseImpl43.helyDatabaseStateEnterpriseImpl();
    boolean boolean48 = dbmsResolverMeta25.equals((java.lang.Object) databaseStateEnterpriseImpl43);
    boolean boolean49 = dbmsResolverMeta0.equals((java.lang.Object) dbmsResolverMeta25);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo13 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo13.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId15);
    org.junit.Assert.assertTrue("'" + causeInfo16 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo16.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId17);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo19 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo19.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable21);
    org.junit.Assert.assertTrue("'" + causeInfo22 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo22.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta25);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl33);
    org.junit.Assert.assertNull(namedDatabaseId34);
    org.junit.Assert.assertNotNull(throwableOptional35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertNull(namedDatabaseId45);
    org.junit.Assert.assertNotNull(throwableOptional46);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
  }

  @Test
  public void test263() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test263");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl3 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId2, operatorStateEnterpriseTypeImpl3);
    java.lang.String str5 = operatorStateEnterpriseTypeImpl3.description();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId1, operatorStateEnterpriseTypeImpl3);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId0, operatorStateEnterpriseTypeImpl3);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl3 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl3.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "dropped" + "'", str5, "dropped");
  }

  @Test
  public void test264() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test264");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable[] throwableArray9 = stateChangeException3.getSuppressed();
    java.lang.String str10 = stateChangeException3.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(throwableArray9);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str10,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test265() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test265");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    java.lang.String str10 = sysCrashCauseInfo9.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent11 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException8, sysCrashCauseInfo9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo9.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "DBMSPanic just for testing" + "'",
        str10, "DBMSPanic just for testing");
  }

  @Test
  public void test266() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test266");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str10 = sysCrashCauseInfo9.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent11 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    java.lang.String str12 = stateChangeException3.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Discovery system failed irrecoverably" + "'", str10,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str12,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test267() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test267");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo4 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent5 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo4);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    boolean boolean10 = sysCrashEvent5.equals((java.lang.Object) throwable6);
    java.lang.Throwable throwable11 = sysCrashEvent5.gecsThrowable();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable14 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException17 = new io.github.onograph.dbms.StateChangeException(
        throwable14, databaseStateEnterpriseImpl15);
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException17, databaseStateEnterpriseImpl19);
    java.lang.Throwable throwable23 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = databaseStateEnterpriseImpl24.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException26 = new io.github.onograph.dbms.StateChangeException(
        throwable23, databaseStateEnterpriseImpl24);
    stateChangeException22.addSuppressed((java.lang.Throwable) stateChangeException26);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl13.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException26);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo29 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str30 = sysCrashCauseInfo29.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent31 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException26, sysCrashCauseInfo29);
    java.lang.Throwable throwable32 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = databaseStateEnterpriseImpl33.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException35 = new io.github.onograph.dbms.StateChangeException(
        throwable32, databaseStateEnterpriseImpl33);
    java.lang.Throwable throwable36 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = databaseStateEnterpriseImpl37.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException39 = new io.github.onograph.dbms.StateChangeException(
        throwable36, databaseStateEnterpriseImpl37);
    io.github.onograph.dbms.StateChangeException stateChangeException40 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException35, databaseStateEnterpriseImpl37);
    java.lang.Throwable throwable41 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = databaseStateEnterpriseImpl42.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException44 = new io.github.onograph.dbms.StateChangeException(
        throwable41, databaseStateEnterpriseImpl42);
    stateChangeException40.addSuppressed((java.lang.Throwable) stateChangeException44);
    stateChangeException26.addSuppressed((java.lang.Throwable) stateChangeException44);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId47 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo48 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str49 = gdbCrashCauseInfo48.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent50 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException26, namedDatabaseId47, gdbCrashCauseInfo48);
    java.lang.Throwable throwable51 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl53 = databaseStateEnterpriseImpl52.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        throwable51, databaseStateEnterpriseImpl52);
    java.lang.Throwable throwable55 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = databaseStateEnterpriseImpl56.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException58 = new io.github.onograph.dbms.StateChangeException(
        throwable55, databaseStateEnterpriseImpl56);
    io.github.onograph.dbms.StateChangeException stateChangeException59 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException54, databaseStateEnterpriseImpl56);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = databaseStateEnterpriseImpl60.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl62 = databaseStateEnterpriseImpl60.operatorState();
    boolean boolean63 = databaseStateEnterpriseImpl60.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException64 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException54, databaseStateEnterpriseImpl60);
    stateChangeException26.addSuppressed((java.lang.Throwable) stateChangeException64);
    throwable11.addSuppressed((java.lang.Throwable) stateChangeException64);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo4.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(throwable11);
    org.junit.Assert.assertNull("throwable11.getLocalizedMessage() == null",
        throwable11.getLocalizedMessage());
    org.junit.Assert.assertNull("throwable11.getMessage() == null", throwable11.getMessage());
    org.junit.Assert.assertEquals(throwable11.toString(),
        "io.github.onograph.dbms.StateChangeException");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo29 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo29.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "Discovery system failed irrecoverably" + "'", str30,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo48 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo48.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str49 + "' != '" + "RaftMessage applier failed" + "'",
        str49, "RaftMessage applier failed");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl53);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl62 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl62.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
  }

  @Test
  public void test268() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test268");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo25 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent26 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException23, sysCrashCauseInfo25);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo25);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter28 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl29 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter28);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean31 = databaseStateEnterpriseImpl30.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId32 = databaseStateEnterpriseImpl30.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter33 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl34 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter33);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = databaseStateEnterpriseImpl36.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional38 = databaseStateEnterpriseImpl36.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable40 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = databaseStateEnterpriseImpl41.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException43 = new io.github.onograph.dbms.StateChangeException(
        throwable40, databaseStateEnterpriseImpl41);
    databaseStateUpdateHandlerOppStatsImpl34.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl41);
    databaseStateUpdateHandlerOppStatsImpl29.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39);
    java.lang.Throwable throwable46 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl47.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException49 = new io.github.onograph.dbms.StateChangeException(
        throwable46, databaseStateEnterpriseImpl47);
    java.lang.Throwable throwable50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException53 = new io.github.onograph.dbms.StateChangeException(
        throwable50, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = databaseStateEnterpriseImpl55.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl57 = databaseStateEnterpriseImpl55.operatorState();
    boolean boolean58 = databaseStateEnterpriseImpl55.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException59 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl55);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = databaseStateEnterpriseImpl39.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException59);
    boolean boolean61 = sysCrashEvent27.equals((java.lang.Object) stateChangeException59);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta62 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta63 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta63.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray65 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList66 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean67 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList66,
        namedDatabaseIdArray65);
    dbmsResolverMeta63.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList66);
    dbmsResolverMeta63.jonal();
    dbmsResolverMeta63.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta71 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta71.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray73 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList74 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean75 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList74,
        namedDatabaseIdArray73);
    dbmsResolverMeta71.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList74);
    dbmsResolverMeta63.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList74);
    dbmsResolverMeta62.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList74);
    boolean boolean79 = sysCrashEvent27.equals((java.lang.Object) dbmsResolverMeta62);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo25 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo25.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNull(namedDatabaseId32);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNull(namedDatabaseId37);
    org.junit.Assert.assertNotNull(throwableOptional38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl57 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl57.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta62);
    org.junit.Assert.assertNotNull(dbmsResolverMeta63);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray65);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta71);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray73);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
  }

  @Test
  public void test269() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test269");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable[] throwableArray9 = stateChangeException3.getSuppressed();
    java.lang.Throwable[] throwableArray10 = stateChangeException3.getSuppressed();
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo26 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    java.lang.String str27 = gdbCrashCauseInfo26.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent28 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException23, namedDatabaseId25, gdbCrashCauseInfo26);
    stateChangeException3.addSuppressed((java.lang.Throwable) stateChangeException23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId30 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo31 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str32 = gdbCrashCauseInfo31.getInfo();
    java.lang.String str33 = gdbCrashCauseInfo31.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent34 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException23, namedDatabaseId30, gdbCrashCauseInfo31);
    java.lang.String str35 = gdbCrashCauseInfo31.getInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(throwableArray9);
    org.junit.Assert.assertNotNull(throwableArray10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo26 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo26.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Snapshot failed" + "'", str27,
        "Snapshot failed");
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo31 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo31.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "RaftMessage applier failed" + "'",
        str32, "RaftMessage applier failed");
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "RaftMessage applier failed" + "'",
        str33, "RaftMessage applier failed");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "RaftMessage applier failed" + "'",
        str35, "RaftMessage applier failed");
  }

  @Test
  public void test270() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test270");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    structureMetaService3.init();
    structureMetaService3.init();
    structureMetaService3.init();
    structureMetaService3.init();
    try {
      structureMetaService3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test271() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test271");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str18 = sysCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo17);
    java.lang.String str20 = stateChangeException14.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Discovery system failed irrecoverably" + "'", str18,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertEquals(
        "'" + str20 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str20,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test272() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test272");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    java.lang.Throwable throwable17 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = databaseStateEnterpriseImpl18.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException20 = new io.github.onograph.dbms.StateChangeException(
        throwable17, databaseStateEnterpriseImpl18);
    java.lang.Throwable throwable21 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException24 = new io.github.onograph.dbms.StateChangeException(
        throwable21, databaseStateEnterpriseImpl22);
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException20, databaseStateEnterpriseImpl22);
    java.lang.Throwable throwable26 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl27.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException29 = new io.github.onograph.dbms.StateChangeException(
        throwable26, databaseStateEnterpriseImpl27);
    stateChangeException25.addSuppressed((java.lang.Throwable) stateChangeException29);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo31 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent32 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException29, sysCrashCauseInfo31);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent33 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo31);
    java.lang.Class<?> wildcardClass34 = stateChangeException14.getClass();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo31 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo31.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(wildcardClass34);
  }

  @Test
  public void test273() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test273");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard11 = null;
    java.time.Duration duration12 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl13 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel4, availabilityGuard11, duration12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    try {
      databaseStartupControllerAbortableImpl13.strdForNa(namedDatabaseId14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test274() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test274");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl5.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl5.databaseId();
    boolean boolean8 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl10 = databaseStateEnterpriseImpl5.operatorState();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = databaseStateEnterpriseImpl12.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = databaseStateEnterpriseImpl15.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional17 = databaseStateEnterpriseImpl15.failure();
    boolean boolean18 = databaseStateEnterpriseImpl12.equals(
        (java.lang.Object) databaseStateEnterpriseImpl15);
    try {
      java.lang.String str19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.lofmtString(
          databaseStateEnterpriseImpl5, databaseStateEnterpriseImpl12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl10 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl10.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNull(namedDatabaseId13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNull(namedDatabaseId16);
    org.junit.Assert.assertNotNull(throwableOptional17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
  }

  @Test
  public void test275() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test275");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl2.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl2.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter7 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl8 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl10 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId9, operatorStateEnterpriseTypeImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean13 = databaseStateEnterpriseImpl12.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl8.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter16 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl17 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter16);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean19 = databaseStateEnterpriseImpl18.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = databaseStateEnterpriseImpl18.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional21 = databaseStateEnterpriseImpl18.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter22 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl23 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = databaseStateEnterpriseImpl25.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional27 = databaseStateEnterpriseImpl25.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl28,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl34,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    org.neo4j.function.ThrowingAction throwingAction39 = null;
    org.neo4j.function.ThrowingAction throwingAction40 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle41 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction39, throwingAction40);
    boolean boolean42 = databaseStateEnterpriseImpl37.equals((java.lang.Object) throwingAction40);
    databaseStateUpdateHandlerOppStatsImpl17.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl18,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId44 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.intlDatabaseStateEnterpriseImpl(
        namedDatabaseId44);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl45);
    java.lang.Throwable throwable47 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl49 = databaseStateEnterpriseImpl48.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException50 = new io.github.onograph.dbms.StateChangeException(
        throwable47, databaseStateEnterpriseImpl48);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo51 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent52 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException50, sysCrashCauseInfo51);
    java.lang.Throwable throwable53 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl54 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = databaseStateEnterpriseImpl54.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException56 = new io.github.onograph.dbms.StateChangeException(
        throwable53, databaseStateEnterpriseImpl54);
    boolean boolean57 = sysCrashEvent52.equals((java.lang.Object) throwable53);
    java.lang.Throwable throwable58 = sysCrashEvent52.gecsThrowable();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = databaseStateEnterpriseImpl45.falDatabaseStateEnterpriseImpl(
        throwable58);
    java.util.Optional<java.lang.Throwable> throwableOptional60 = databaseStateEnterpriseImpl59.failure();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl10 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl10.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNull(namedDatabaseId20);
    org.junit.Assert.assertNotNull(throwableOptional21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNull(namedDatabaseId26);
    org.junit.Assert.assertNotNull(throwableOptional27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(lifecycle41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl49);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo51 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo51.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl54);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertNotNull(throwable58);
    org.junit.Assert.assertNull("throwable58.getLocalizedMessage() == null",
        throwable58.getLocalizedMessage());
    org.junit.Assert.assertNull("throwable58.getMessage() == null", throwable58.getMessage());
    org.junit.Assert.assertEquals(throwable58.toString(),
        "io.github.onograph.dbms.StateChangeException");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertNotNull(throwableOptional60);
  }

  @Test
  public void test276() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test276");
    }
    io.github.onograph.dbms.StructureMetaService structureMetaService0 = io.github.onograph.dbms.StructureMetaService.NOO_STRUCTURE_META_SERVICE;
    structureMetaService0.stop();
    structureMetaService0.stop();
    structureMetaService0.stop();
    org.junit.Assert.assertNotNull(structureMetaService0);
  }

  @Test
  public void test277() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test277");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl11 = databaseStateEnterpriseImpl9.operatorState();
    boolean boolean12 = databaseStateEnterpriseImpl9.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException13 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl9);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo14 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_SGDB_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent15 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException13, sysCrashCauseInfo14);
    java.lang.String str16 = sysCrashCauseInfo14.getInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl11 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl11.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo14 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_SGDB_ERR + "'",
        sysCrashCauseInfo14.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_SGDB_ERR));
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "The system database panicked" + "'",
        str16, "The system database panicked");
  }

  @Test
  public void test278() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test278");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    java.lang.String str3 = sysCrashCauseInfo1.getInfo();
    java.lang.String str4 = sysCrashCauseInfo1.getInfo();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Discovery system failed irrecoverably" + "'", str3,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Discovery system failed irrecoverably" + "'", str4,
        "Discovery system failed irrecoverably");
  }

  @Test
  public void test279() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test279");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.time.Clock clock3 = null;
    java.time.Clock clock4 = null;
    java.time.Clock clock5 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock5, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard11 = null;
    java.time.Duration duration12 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl13 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock4, defaultSystemGraphDbmsModel7, availabilityGuard11, duration12);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard14 = null;
    java.time.Duration duration15 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl16 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock3, defaultSystemGraphDbmsModel7, availabilityGuard14, duration15);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard17 = null;
    java.time.Duration duration18 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl19 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel7, availabilityGuard17, duration18);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard20 = null;
    java.time.Duration duration21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl22 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel7, availabilityGuard20, duration21);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard23 = null;
    java.time.Duration duration24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl25 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel7, availabilityGuard23, duration24);
  }

  @Test
  public void test280() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test280");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl1.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = databaseStateEnterpriseImpl1.databaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNull(namedDatabaseId3);
  }

  @Test
  public void test281() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test281");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo5 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo11 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent12 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable6, namedDatabaseId10, gdbCrashCauseInfo11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = gdbCrashEvent12.getNamedDatabaseId();
    java.lang.Throwable throwable14 = gdbCrashEvent12.gecsThrowable();
    boolean boolean15 = sysCrashEvent2.equals((java.lang.Object) gdbCrashEvent12);
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl16 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING;
    java.lang.String str17 = operatorStateEnterpriseTypeImpl16.description();
    boolean boolean18 = gdbCrashEvent12.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + causeInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo5.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo11 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo11.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId13);
    org.junit.Assert.assertNull(throwable14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl16 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING + "'",
        operatorStateEnterpriseTypeImpl16.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING));
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "offline" + "'", str17, "offline");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
  }

  @Test
  public void test282() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test282");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl1.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = databaseStateEnterpriseImpl4.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional6 = databaseStateEnterpriseImpl4.failure();
    boolean boolean7 = databaseStateEnterpriseImpl1.equals(
        (java.lang.Object) databaseStateEnterpriseImpl4);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    java.lang.Throwable throwable16 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        throwable16, databaseStateEnterpriseImpl17);
    io.github.onograph.dbms.StateChangeException stateChangeException20 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException15, databaseStateEnterpriseImpl17);
    java.lang.Throwable throwable21 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException24 = new io.github.onograph.dbms.StateChangeException(
        throwable21, databaseStateEnterpriseImpl22);
    stateChangeException20.addSuppressed((java.lang.Throwable) stateChangeException24);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo26 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException24, sysCrashCauseInfo26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo29 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent30 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException24, namedDatabaseId28, gdbCrashCauseInfo29);
    stateChangeException11.addSuppressed((java.lang.Throwable) stateChangeException24);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = databaseStateEnterpriseImpl4.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException24);
    boolean boolean33 = databaseStateEnterpriseImpl32.hasFailed();
    boolean boolean34 = databaseStateEnterpriseImpl32.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl35 = databaseStateEnterpriseImpl32.operatorState();
    java.lang.String str36 = operatorStateEnterpriseTypeImpl35.description();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNull(namedDatabaseId5);
    org.junit.Assert.assertNotNull(throwableOptional6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo26 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo26.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo29 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo29.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl35 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_DEFINED + "'",
        operatorStateEnterpriseTypeImpl35.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_DEFINED));
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "unknown" + "'", str36, "unknown");
  }

  @Test
  public void test283() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test283");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl4 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId3, operatorStateEnterpriseTypeImpl4);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean7 = databaseStateEnterpriseImpl6.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl2.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl5,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl6.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl6.helyDatabaseStateEnterpriseImpl();
    boolean boolean11 = dbmsResolverAction0.equals(
        (java.lang.Object) databaseStateEnterpriseImpl10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = databaseStateEnterpriseImpl13.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional15 = databaseStateEnterpriseImpl13.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    boolean boolean17 = dbmsResolverAction0.equals(
        (java.lang.Object) databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = databaseStateEnterpriseImpl18.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    io.github.onograph.dbms.StateChangeException stateChangeException28 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException23, databaseStateEnterpriseImpl25);
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    stateChangeException28.addSuppressed((java.lang.Throwable) stateChangeException32);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = databaseStateEnterpriseImpl19.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException32);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo35 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str36 = sysCrashCauseInfo35.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent37 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException32, sysCrashCauseInfo35);
    java.lang.Throwable throwable38 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = databaseStateEnterpriseImpl39.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException41 = new io.github.onograph.dbms.StateChangeException(
        throwable38, databaseStateEnterpriseImpl39);
    java.lang.Throwable throwable42 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = databaseStateEnterpriseImpl43.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException45 = new io.github.onograph.dbms.StateChangeException(
        throwable42, databaseStateEnterpriseImpl43);
    io.github.onograph.dbms.StateChangeException stateChangeException46 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException41, databaseStateEnterpriseImpl43);
    java.lang.Throwable throwable47 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl49 = databaseStateEnterpriseImpl48.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException50 = new io.github.onograph.dbms.StateChangeException(
        throwable47, databaseStateEnterpriseImpl48);
    stateChangeException46.addSuppressed((java.lang.Throwable) stateChangeException50);
    stateChangeException32.addSuppressed((java.lang.Throwable) stateChangeException50);
    java.lang.Throwable throwable53 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl54 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = databaseStateEnterpriseImpl54.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException56 = new io.github.onograph.dbms.StateChangeException(
        throwable53, databaseStateEnterpriseImpl54);
    java.lang.Throwable throwable57 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = databaseStateEnterpriseImpl58.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException60 = new io.github.onograph.dbms.StateChangeException(
        throwable57, databaseStateEnterpriseImpl58);
    io.github.onograph.dbms.StateChangeException stateChangeException61 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException56, databaseStateEnterpriseImpl58);
    java.lang.Throwable throwable62 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl63 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl64 = databaseStateEnterpriseImpl63.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException65 = new io.github.onograph.dbms.StateChangeException(
        throwable62, databaseStateEnterpriseImpl63);
    stateChangeException61.addSuppressed((java.lang.Throwable) stateChangeException65);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo67 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent68 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException65, sysCrashCauseInfo67);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent69 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException32, sysCrashCauseInfo67);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo70 = sysCrashEvent69.gersCrashSignalerCauseInfo();
    java.lang.String str71 = causeInfo70.getInfo();
    boolean boolean72 = dbmsResolverAction0.equals((java.lang.Object) causeInfo70);
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl4 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl4.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNull(namedDatabaseId14);
    org.junit.Assert.assertNotNull(throwableOptional15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo35 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo35.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str36 + "' != '" + "Discovery system failed irrecoverably" + "'", str36,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl49);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl54);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl58);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl63);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl64);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo67 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo67.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + causeInfo70 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        causeInfo70.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertEquals("'" + str71 + "' != '" + "DBMSPanic just for testing" + "'",
        str71, "DBMSPanic just for testing");
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
  }

  @Test
  public void test284() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test284");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    java.time.Clock clock12 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel13 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard14 = null;
    java.time.Duration duration15 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl16 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock12, defaultSystemGraphDbmsModel13, availabilityGuard14, duration15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    java.time.Clock clock18 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel19 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard20 = null;
    java.time.Duration duration21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl22 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock18, defaultSystemGraphDbmsModel19, availabilityGuard20, duration21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason24 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl22.prnuratForNaDa(namedDatabaseId23, preventReason24);
    databaseStartupControllerAbortableImpl16.prnuratForNaDa(namedDatabaseId17, preventReason24);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId11, preventReason24);
    java.lang.Throwable throwable28 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = databaseStateEnterpriseImpl29.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException31 = new io.github.onograph.dbms.StateChangeException(
        throwable28, databaseStateEnterpriseImpl29);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId32 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo33 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent34 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable28, namedDatabaseId32, gdbCrashCauseInfo33);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = gdbCrashEvent34.getNamedDatabaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId36 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId36);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId38 = databaseStateEnterpriseImpl37.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId39 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId39);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = databaseStateEnterpriseImpl40.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional42 = databaseStateEnterpriseImpl40.failure();
    boolean boolean43 = databaseStateEnterpriseImpl37.equals(
        (java.lang.Object) databaseStateEnterpriseImpl40);
    boolean boolean44 = gdbCrashEvent34.equals((java.lang.Object) boolean43);
    java.lang.Object obj45 = null;
    boolean boolean46 = gdbCrashEvent34.equals(obj45);
    try {
      databaseStartupControllerAbortableImpl4.handleCrash(gdbCrashEvent34);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason24 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason24.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo33 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo33.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNull(namedDatabaseId38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNull(namedDatabaseId41);
    org.junit.Assert.assertNotNull(throwableOptional42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
  }

  @Test
  public void test285() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test285");
    }
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo0 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR;
    java.lang.String str1 = gdbCrashCauseInfo0.getInfo();
    java.lang.String str2 = gdbCrashCauseInfo0.getInfo();
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo0 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR + "'",
        gdbCrashCauseInfo0.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Command application failed" + "'", str1,
        "Command application failed");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Command application failed" + "'", str2,
        "Command application failed");
  }

  @Test
  public void test286() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test286");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.time.Clock clock3 = null;
    java.time.Clock clock4 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier5 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel6 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock4, defaultSystemGraphDbmsModel6, availabilityGuard7, duration8);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard10 = null;
    java.time.Duration duration11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl12 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock3, defaultSystemGraphDbmsModel6, availabilityGuard10, duration11);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard13 = null;
    java.time.Duration duration14 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl15 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel6, availabilityGuard13, duration14);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard16 = null;
    java.time.Duration duration17 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl18 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel6, availabilityGuard16, duration17);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard19 = null;
    java.time.Duration duration20 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl21 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel6, availabilityGuard19, duration20);
    java.lang.Throwable throwable22 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        throwable22, databaseStateEnterpriseImpl23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo27 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent28 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable22, namedDatabaseId26, gdbCrashCauseInfo27);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId29 = gdbCrashEvent28.getNamedDatabaseId();
    boolean boolean31 = gdbCrashEvent28.equals((java.lang.Object) true);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean33 = databaseStateEnterpriseImpl32.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = databaseStateEnterpriseImpl32.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional35 = databaseStateEnterpriseImpl32.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = databaseStateEnterpriseImpl32.helyDatabaseStateEnterpriseImpl();
    boolean boolean37 = gdbCrashEvent28.equals((java.lang.Object) databaseStateEnterpriseImpl32);
    boolean boolean39 = gdbCrashEvent28.equals((java.lang.Object) "RaftMessage applier failed");
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = gdbCrashEvent28.getNamedDatabaseId();
    try {
      databaseStartupControllerAbortableImpl21.handleCrash(gdbCrashEvent28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo27 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo27.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId29);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertNull(namedDatabaseId34);
    org.junit.Assert.assertNotNull(throwableOptional35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNull(namedDatabaseId40);
  }

  @Test
  public void test287() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test287");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl1.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional3 = databaseStateEnterpriseImpl1.failure();
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException7, databaseStateEnterpriseImpl9);
    java.lang.Throwable throwable13 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException16 = new io.github.onograph.dbms.StateChangeException(
        throwable13, databaseStateEnterpriseImpl14);
    stateChangeException12.addSuppressed((java.lang.Throwable) stateChangeException16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo19 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    java.lang.String str20 = gdbCrashCauseInfo19.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent21 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException16, namedDatabaseId18, gdbCrashCauseInfo19);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(throwableOptional3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo19 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo19.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Snapshot failed" + "'", str20,
        "Snapshot failed");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
  }

  @Test
  public void test288() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test288");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    int int11 = sysCrashEvent10.getICe();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter12 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl13 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl15 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId14, operatorStateEnterpriseTypeImpl15);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean18 = databaseStateEnterpriseImpl17.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl13.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl16,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl17);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    boolean boolean23 = sysCrashEvent10.equals((java.lang.Object) databaseStateEnterpriseImpl17);
    java.lang.Object obj24 = null;
    boolean boolean25 = sysCrashEvent10.equals(obj24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl15 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl15.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
  }

  @Test
  public void test289() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test289");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean1 = databaseStateEnterpriseImpl0.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl0.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional3 = databaseStateEnterpriseImpl0.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    boolean boolean5 = databaseStateEnterpriseImpl0.hasFailed();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(throwableOptional3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
  }

  @Test
  public void test290() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test290");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.time.Clock clock3 = null;
    java.time.Clock clock4 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier5 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel6 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock4, defaultSystemGraphDbmsModel6, availabilityGuard7, duration8);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard10 = null;
    java.time.Duration duration11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl12 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock3, defaultSystemGraphDbmsModel6, availabilityGuard10, duration11);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard13 = null;
    java.time.Duration duration14 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl15 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel6, availabilityGuard13, duration14);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard16 = null;
    java.time.Duration duration17 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl18 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel6, availabilityGuard16, duration17);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard19 = null;
    java.time.Duration duration20 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl21 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel6, availabilityGuard19, duration20);
    java.lang.Throwable throwable22 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        throwable22, databaseStateEnterpriseImpl23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo27 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent28 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable22, namedDatabaseId26, gdbCrashCauseInfo27);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId29 = gdbCrashEvent28.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo30 = gdbCrashEvent28.gersCrashSignalerCauseInfo();
    try {
      databaseStartupControllerAbortableImpl21.handleCrash(gdbCrashEvent28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo27 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo27.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId29);
    org.junit.Assert.assertTrue("'" + causeInfo30 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo30.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
  }

  @Test
  public void test291() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test291");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean1 = databaseStateEnterpriseImpl0.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl0.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional3 = databaseStateEnterpriseImpl0.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    boolean boolean10 = databaseStateEnterpriseImpl8.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl11 = databaseStateEnterpriseImpl8.operatorState();
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl7,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8);
    boolean boolean13 = databaseStateEnterpriseImpl0.equals(
        (java.lang.Object) databaseStateUpdateHandlerOppStatsImpl6);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter14 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl15 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = databaseStateEnterpriseImpl17.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional19 = databaseStateEnterpriseImpl17.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable21 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException24 = new io.github.onograph.dbms.StateChangeException(
        throwable21, databaseStateEnterpriseImpl22);
    databaseStateUpdateHandlerOppStatsImpl15.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl20,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = databaseStateEnterpriseImpl26.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = databaseStateEnterpriseImpl28.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl15.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl26,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl29);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter31 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl32 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId33 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl34 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId33, operatorStateEnterpriseTypeImpl34);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean37 = databaseStateEnterpriseImpl36.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl32.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl35,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl36);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = databaseStateEnterpriseImpl41.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl43 = databaseStateEnterpriseImpl41.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId40, operatorStateEnterpriseTypeImpl43);
    databaseStateUpdateHandlerOppStatsImpl15.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl36,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl44);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId46 = databaseStateEnterpriseImpl36.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId47 = databaseStateEnterpriseImpl36.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter48 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl49 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter48);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId50);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId52 = databaseStateEnterpriseImpl51.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional53 = databaseStateEnterpriseImpl51.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl54 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable55 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = databaseStateEnterpriseImpl56.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException58 = new io.github.onograph.dbms.StateChangeException(
        throwable55, databaseStateEnterpriseImpl56);
    databaseStateUpdateHandlerOppStatsImpl49.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl54,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl56);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = databaseStateEnterpriseImpl60.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl63 = databaseStateEnterpriseImpl62.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl49.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl60,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl63);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId65 = databaseStateEnterpriseImpl63.databaseId();
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl36,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl63);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(throwableOptional3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl11 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl11.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNull(namedDatabaseId18);
    org.junit.Assert.assertNotNull(throwableOptional19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl34 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl34.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl43 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl43.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNull(namedDatabaseId46);
    org.junit.Assert.assertNull(namedDatabaseId47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNull(namedDatabaseId52);
    org.junit.Assert.assertNotNull(throwableOptional53);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl54);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl63);
    org.junit.Assert.assertNull(namedDatabaseId65);
  }

  @Test
  public void test292() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test292");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl1.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl4 = databaseStateEnterpriseImpl1.operatorState();
    boolean boolean5 = dbmsResolverAction0.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl4);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo6 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_ERR_ISSUE;
    java.lang.String str7 = sysCrashCauseInfo6.getInfo();
    boolean boolean8 = dbmsResolverAction0.equals((java.lang.Object) sysCrashCauseInfo6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction10 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    boolean boolean13 = databaseStateEnterpriseImpl11.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl14 = databaseStateEnterpriseImpl11.operatorState();
    boolean boolean15 = dbmsResolverAction10.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId9, operatorStateEnterpriseTypeImpl14);
    boolean boolean17 = dbmsResolverAction0.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl14);
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    java.lang.Throwable throwable22 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        throwable22, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.StateChangeException stateChangeException26 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl23);
    java.lang.Throwable[] throwableArray27 = stateChangeException21.getSuppressed();
    java.lang.Throwable[] throwableArray28 = stateChangeException21.getSuppressed();
    boolean boolean29 = dbmsResolverAction0.equals((java.lang.Object) throwableArray28);
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl4 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl4.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo6 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_ERR_ISSUE + "'",
        sysCrashCauseInfo6.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_ERR_ISSUE));
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "See exception message for details" + "'",
        str7, "See exception message for details");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(dbmsResolverAction10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl14 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl14.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(throwableArray27);
    org.junit.Assert.assertNotNull(throwableArray28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
  }

  @Test
  public void test293() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test293");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo8 = gdbCrashEvent6.gersCrashSignalerCauseInfo();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl11 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId10, operatorStateEnterpriseTypeImpl11);
    java.lang.String str13 = operatorStateEnterpriseTypeImpl11.description();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId9, operatorStateEnterpriseTypeImpl11);
    java.lang.String str15 = operatorStateEnterpriseTypeImpl11.description();
    boolean boolean16 = gdbCrashEvent6.equals((java.lang.Object) str15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + causeInfo8 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo8.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl11 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl11.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "dropped" + "'", str13, "dropped");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "dropped" + "'", str15, "dropped");
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test294() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test294");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable9 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl10);
    stateChangeException8.addSuppressed((java.lang.Throwable) stateChangeException12);
    java.lang.Throwable[] throwableArray14 = stateChangeException12.getSuppressed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(throwableArray14);
  }

  @Test
  public void test295() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test295");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    structureMetaService3.shutdown();
    try {
      structureMetaService3.stop();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test296() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test296");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = null;
    java.time.Clock clock28 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel29 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard30 = null;
    java.time.Duration duration31 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl32 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock28, defaultSystemGraphDbmsModel29, availabilityGuard30, duration31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId33 = null;
    java.time.Clock clock34 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel35 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard36 = null;
    java.time.Duration duration37 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl38 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock34, defaultSystemGraphDbmsModel35, availabilityGuard36, duration37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId39 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason40 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl38.prnuratForNaDa(namedDatabaseId39, preventReason40);
    databaseStartupControllerAbortableImpl32.prnuratForNaDa(namedDatabaseId33, preventReason40);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId43 = null;
    java.time.Clock clock44 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel45 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard46 = null;
    java.time.Duration duration47 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl48 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock44, defaultSystemGraphDbmsModel45, availabilityGuard46, duration47);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId49 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason50 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl48.prnuratForNaDa(namedDatabaseId49, preventReason50);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId52 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason53 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl48.prnuratForNaDa(namedDatabaseId52, preventReason53);
    databaseStartupControllerAbortableImpl32.prnuratForNaDa(namedDatabaseId43, preventReason53);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId56 = null;
    java.time.Clock clock57 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel58 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard59 = null;
    java.time.Duration duration60 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl61 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock57, defaultSystemGraphDbmsModel58, availabilityGuard59, duration60);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId62 = null;
    java.time.Clock clock63 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel64 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard65 = null;
    java.time.Duration duration66 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl67 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock63, defaultSystemGraphDbmsModel64, availabilityGuard65, duration66);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId68 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason69 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl67.prnuratForNaDa(namedDatabaseId68, preventReason69);
    databaseStartupControllerAbortableImpl61.prnuratForNaDa(namedDatabaseId62, preventReason69);
    databaseStartupControllerAbortableImpl32.aluabForNaDa(namedDatabaseId56, preventReason69);
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId27, preventReason69);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason69);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId75 = null;
    java.time.Clock clock76 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel77 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard78 = null;
    java.time.Duration duration79 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl80 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock76, defaultSystemGraphDbmsModel77, availabilityGuard78, duration79);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId81 = null;
    java.time.Clock clock82 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel83 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard84 = null;
    java.time.Duration duration85 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl86 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock82, defaultSystemGraphDbmsModel83, availabilityGuard84, duration85);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId87 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason88 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl86.prnuratForNaDa(namedDatabaseId87, preventReason88);
    databaseStartupControllerAbortableImpl80.prnuratForNaDa(namedDatabaseId81, preventReason88);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId75, preventReason88);
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason40 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason40.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason50 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason50.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason53 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason53.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason69 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason69.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason88 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason88.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test297() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test297");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl1.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl4 = databaseStateEnterpriseImpl1.operatorState();
    boolean boolean5 = dbmsResolverAction0.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl4);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo10 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent11 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException9, sysCrashCauseInfo10);
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    boolean boolean16 = sysCrashEvent11.equals((java.lang.Object) throwable12);
    java.lang.Throwable throwable17 = sysCrashEvent11.gecsThrowable();
    boolean boolean18 = dbmsResolverAction0.equals((java.lang.Object) throwable17);
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl4 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl4.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo10 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo10.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNotNull(throwable17);
    org.junit.Assert.assertNull("throwable17.getLocalizedMessage() == null",
        throwable17.getLocalizedMessage());
    org.junit.Assert.assertNull("throwable17.getMessage() == null", throwable17.getMessage());
    org.junit.Assert.assertEquals(throwable17.toString(),
        "io.github.onograph.dbms.StateChangeException");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
  }

  @Test
  public void test298() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test298");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.intlDatabaseStateEnterpriseImpl(
        namedDatabaseId0);
    java.util.Optional<java.lang.Throwable> throwableOptional2 = databaseStateEnterpriseImpl1.failure();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = databaseStateEnterpriseImpl1.databaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(throwableOptional2);
    org.junit.Assert.assertNull(namedDatabaseId3);
  }

  @Test
  public void test299() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test299");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl1 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS;
    boolean boolean2 = operatorStateEnterpriseTypeImpl1.terminal();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId0, operatorStateEnterpriseTypeImpl1);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl1 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl1.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
  }

  @Test
  public void test300() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test300");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    boolean boolean5 = databaseStateEnterpriseImpl3.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl6 = databaseStateEnterpriseImpl3.operatorState();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable8, sysCrashCauseInfo9);
    boolean boolean12 = sysCrashEvent10.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean14 = databaseStateEnterpriseImpl13.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = databaseStateEnterpriseImpl13.databaseId();
    boolean boolean16 = sysCrashEvent10.equals((java.lang.Object) databaseStateEnterpriseImpl13);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.DatabaseState databaseState18 = null;
    try {
      databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
          (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl17, databaseState18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl6 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl6.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertNull(namedDatabaseId15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
  }

  @Test
  public void test301() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test301");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl1.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl4 = databaseStateEnterpriseImpl1.operatorState();
    boolean boolean5 = dbmsResolverAction0.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl4);
    java.lang.Object obj6 = null;
    boolean boolean7 = dbmsResolverAction0.equals(obj6);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta8 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta8.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray10 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList11 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11,
        namedDatabaseIdArray10);
    dbmsResolverMeta8.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    dbmsResolverMeta8.jonal();
    dbmsResolverMeta8.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta16 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta16.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray18 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList19 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean20 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList19,
        namedDatabaseIdArray18);
    dbmsResolverMeta16.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList19);
    dbmsResolverMeta8.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList19);
    dbmsResolverMeta8.jonal();
    boolean boolean24 = dbmsResolverAction0.equals((java.lang.Object) dbmsResolverMeta8);
    java.lang.Throwable throwable25 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo26 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable25, sysCrashCauseInfo26);
    boolean boolean29 = sysCrashEvent27.equals((java.lang.Object) (-1));
    int int30 = sysCrashEvent27.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo31 = sysCrashEvent27.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable32 = sysCrashEvent27.gecsThrowable();
    boolean boolean33 = dbmsResolverAction0.equals((java.lang.Object) sysCrashEvent27);
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl4 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl4.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta8);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta16);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo26 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo26.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo31 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo31.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
  }

  @Test
  public void test302() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test302");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    java.time.Clock clock29 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel30 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard31 = null;
    java.time.Duration duration32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl33 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock29, defaultSystemGraphDbmsModel30, availabilityGuard31, duration32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason35 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId34, preventReason35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason38 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId37, preventReason38);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId28, preventReason38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = null;
    java.time.Clock clock42 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel43 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard44 = null;
    java.time.Duration duration45 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl46 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock42, defaultSystemGraphDbmsModel43, availabilityGuard44, duration45);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId47 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason48 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl46.prnuratForNaDa(namedDatabaseId47, preventReason48);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId50 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason51 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl46.prnuratForNaDa(namedDatabaseId50, preventReason51);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId41, preventReason51);
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason35 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason35.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason38 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason38.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason48 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason48.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason51 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason51.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test303() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test303");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard11 = null;
    java.time.Duration duration12 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl13 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel4, availabilityGuard11, duration12);
    java.lang.Throwable throwable14 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException17 = new io.github.onograph.dbms.StateChangeException(
        throwable14, databaseStateEnterpriseImpl15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo19 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent20 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable14, namedDatabaseId18, gdbCrashCauseInfo19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = gdbCrashEvent20.getNamedDatabaseId();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo22 = gdbCrashEvent20.gersCrashSignalerCauseInfo();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = gdbCrashEvent20.getNamedDatabaseId();
    try {
      databaseStartupControllerAbortableImpl13.handleCrash(gdbCrashEvent20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo19 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo19.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId21);
    org.junit.Assert.assertTrue("'" + causeInfo22 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo22.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId23);
  }

  @Test
  public void test304() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test304");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = databaseStateEnterpriseImpl11.databaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNull(namedDatabaseId19);
  }

  @Test
  public void test305() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test305");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta1 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta1.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray3 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList4 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList4,
        namedDatabaseIdArray3);
    dbmsResolverMeta1.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList4);
    dbmsResolverMeta1.jonal();
    dbmsResolverMeta1.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta9 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta9.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray11 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList12 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12,
        namedDatabaseIdArray11);
    dbmsResolverMeta9.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    dbmsResolverMeta1.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    java.lang.Object obj17 = null;
    boolean boolean18 = dbmsResolverMeta0.equals(obj17);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta19 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray20 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList21 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean22 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList21,
        namedDatabaseIdArray20);
    dbmsResolverMeta19.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList21);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo24 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str25 = sysCrashCauseInfo24.getInfo();
    boolean boolean26 = dbmsResolverMeta19.equals((java.lang.Object) str25);
    boolean boolean27 = dbmsResolverMeta0.equals((java.lang.Object) str25);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta28 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta28.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray30 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList31 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean32 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList31,
        namedDatabaseIdArray30);
    dbmsResolverMeta28.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList31);
    dbmsResolverMeta28.jonal();
    dbmsResolverMeta28.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta36 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta36.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray38 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList39 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean40 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList39,
        namedDatabaseIdArray38);
    dbmsResolverMeta36.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList39);
    dbmsResolverMeta28.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList39);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList39);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(dbmsResolverMeta1);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta9);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta19);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray20);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo24 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo24.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Discovery system failed irrecoverably" + "'", str25,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta28);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray30);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta36);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray38);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
  }

  @Test
  public void test306() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test306");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    boolean boolean5 = databaseStateEnterpriseImpl3.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl6 = databaseStateEnterpriseImpl3.operatorState();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl3);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter8 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl9 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter8);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = databaseStateEnterpriseImpl10.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl10.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl10.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter15 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl16 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl18 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId17, operatorStateEnterpriseTypeImpl18);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean21 = databaseStateEnterpriseImpl20.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl16.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl19,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl20);
    databaseStateUpdateHandlerOppStatsImpl9.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl27 = databaseStateEnterpriseImpl25.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId24, operatorStateEnterpriseTypeImpl27);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId29 = databaseStateEnterpriseImpl28.databaseId();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl19,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl28);
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl31 = databaseStateEnterpriseImpl19.operatorState();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl6 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl6.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl18 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl18.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl27 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl27.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNull(namedDatabaseId29);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl31 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl31.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
  }

  @Test
  public void test307() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test307");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    java.time.Clock clock12 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel13 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard14 = null;
    java.time.Duration duration15 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl16 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock12, defaultSystemGraphDbmsModel13, availabilityGuard14, duration15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    java.time.Clock clock18 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel19 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard20 = null;
    java.time.Duration duration21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl22 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock18, defaultSystemGraphDbmsModel19, availabilityGuard20, duration21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason24 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl22.prnuratForNaDa(namedDatabaseId23, preventReason24);
    databaseStartupControllerAbortableImpl16.prnuratForNaDa(namedDatabaseId17, preventReason24);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId11, preventReason24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason29 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId28, preventReason29);
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason24 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason24.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason29 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason29.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test308() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test308");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl2.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl2.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter7 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl8 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl10 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId9, operatorStateEnterpriseTypeImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean13 = databaseStateEnterpriseImpl12.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl8.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter16 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl17 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter16);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean19 = databaseStateEnterpriseImpl18.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = databaseStateEnterpriseImpl18.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional21 = databaseStateEnterpriseImpl18.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter22 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl23 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = databaseStateEnterpriseImpl25.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional27 = databaseStateEnterpriseImpl25.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl28,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl34,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    org.neo4j.function.ThrowingAction throwingAction39 = null;
    org.neo4j.function.ThrowingAction throwingAction40 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle41 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction39, throwingAction40);
    boolean boolean42 = databaseStateEnterpriseImpl37.equals((java.lang.Object) throwingAction40);
    databaseStateUpdateHandlerOppStatsImpl17.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl18,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId44 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.intlDatabaseStateEnterpriseImpl(
        namedDatabaseId44);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl37,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl45);
    java.lang.Throwable throwable47 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl49 = databaseStateEnterpriseImpl48.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException50 = new io.github.onograph.dbms.StateChangeException(
        throwable47, databaseStateEnterpriseImpl48);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo51 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent52 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException50, sysCrashCauseInfo51);
    java.lang.Throwable throwable53 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl54 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = databaseStateEnterpriseImpl54.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException56 = new io.github.onograph.dbms.StateChangeException(
        throwable53, databaseStateEnterpriseImpl54);
    boolean boolean57 = sysCrashEvent52.equals((java.lang.Object) throwable53);
    java.lang.Throwable throwable58 = sysCrashEvent52.gecsThrowable();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = databaseStateEnterpriseImpl45.falDatabaseStateEnterpriseImpl(
        throwable58);
    java.lang.Throwable throwable60 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = databaseStateEnterpriseImpl61.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException63 = new io.github.onograph.dbms.StateChangeException(
        throwable60, databaseStateEnterpriseImpl61);
    java.lang.Throwable throwable64 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl65 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = databaseStateEnterpriseImpl65.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException67 = new io.github.onograph.dbms.StateChangeException(
        throwable64, databaseStateEnterpriseImpl65);
    io.github.onograph.dbms.StateChangeException stateChangeException68 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException63, databaseStateEnterpriseImpl65);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo69 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent70 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException63, sysCrashCauseInfo69);
    throwable58.addSuppressed((java.lang.Throwable) stateChangeException63);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl72 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl73 = databaseStateEnterpriseImpl72.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId74 = databaseStateEnterpriseImpl73.databaseId();
    io.github.onograph.dbms.StateChangeException stateChangeException75 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException63, databaseStateEnterpriseImpl73);
    java.lang.Throwable[] throwableArray76 = stateChangeException75.getSuppressed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl10 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl10.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNull(namedDatabaseId20);
    org.junit.Assert.assertNotNull(throwableOptional21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNull(namedDatabaseId26);
    org.junit.Assert.assertNotNull(throwableOptional27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(lifecycle41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl49);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo51 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo51.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl54);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertNotNull(throwable58);
    org.junit.Assert.assertNull("throwable58.getLocalizedMessage() == null",
        throwable58.getLocalizedMessage());
    org.junit.Assert.assertNull("throwable58.getMessage() == null", throwable58.getMessage());
    org.junit.Assert.assertEquals(throwable58.toString(),
        "io.github.onograph.dbms.StateChangeException");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl65);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl66);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo69 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo69.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl72);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl73);
    org.junit.Assert.assertNull(namedDatabaseId74);
    org.junit.Assert.assertNotNull(throwableArray76);
  }

  @Test
  public void test309() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test309");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier2 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel3 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier2);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard4 = null;
    java.time.Duration duration5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl6 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel3, availabilityGuard4, duration5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel3, availabilityGuard7, duration8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason11 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl9.aluabForNaDa(namedDatabaseId10, preventReason11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    java.time.Clock clock14 = null;
    java.time.Clock clock15 = null;
    java.time.Clock clock16 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier17 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel18 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier17);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard19 = null;
    java.time.Duration duration20 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl21 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel18, availabilityGuard19, duration20);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard22 = null;
    java.time.Duration duration23 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl24 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock15, defaultSystemGraphDbmsModel18, availabilityGuard22, duration23);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard25 = null;
    java.time.Duration duration26 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl27 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock14, defaultSystemGraphDbmsModel18, availabilityGuard25, duration26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    java.time.Clock clock29 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel30 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard31 = null;
    java.time.Duration duration32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl33 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock29, defaultSystemGraphDbmsModel30, availabilityGuard31, duration32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    java.time.Clock clock35 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel36 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard37 = null;
    java.time.Duration duration38 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl39 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock35, defaultSystemGraphDbmsModel36, availabilityGuard37, duration38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason41 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl39.prnuratForNaDa(namedDatabaseId40, preventReason41);
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId34, preventReason41);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId44 = null;
    java.time.Clock clock45 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel46 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard47 = null;
    java.time.Duration duration48 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl49 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock45, defaultSystemGraphDbmsModel46, availabilityGuard47, duration48);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId50 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason51 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl49.prnuratForNaDa(namedDatabaseId50, preventReason51);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId53 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason54 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl49.prnuratForNaDa(namedDatabaseId53, preventReason54);
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId44, preventReason54);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId57 = null;
    java.time.Clock clock58 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel59 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard60 = null;
    java.time.Duration duration61 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl62 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock58, defaultSystemGraphDbmsModel59, availabilityGuard60, duration61);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId63 = null;
    java.time.Clock clock64 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel65 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard66 = null;
    java.time.Duration duration67 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl68 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock64, defaultSystemGraphDbmsModel65, availabilityGuard66, duration67);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId69 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason70 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl68.prnuratForNaDa(namedDatabaseId69, preventReason70);
    databaseStartupControllerAbortableImpl62.prnuratForNaDa(namedDatabaseId63, preventReason70);
    databaseStartupControllerAbortableImpl33.aluabForNaDa(namedDatabaseId57, preventReason70);
    databaseStartupControllerAbortableImpl27.prnuratForNaDa(namedDatabaseId28, preventReason70);
    databaseStartupControllerAbortableImpl9.prnuratForNaDa(namedDatabaseId13, preventReason70);
    java.lang.Throwable throwable76 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl77 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl78 = databaseStateEnterpriseImpl77.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException79 = new io.github.onograph.dbms.StateChangeException(
        throwable76, databaseStateEnterpriseImpl77);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId80 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo81 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent82 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable76, namedDatabaseId80, gdbCrashCauseInfo81);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId83 = gdbCrashEvent82.getNamedDatabaseId();
    boolean boolean85 = gdbCrashEvent82.equals((java.lang.Object) true);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl86 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean87 = databaseStateEnterpriseImpl86.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId88 = databaseStateEnterpriseImpl86.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional89 = databaseStateEnterpriseImpl86.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl90 = databaseStateEnterpriseImpl86.helyDatabaseStateEnterpriseImpl();
    boolean boolean91 = gdbCrashEvent82.equals((java.lang.Object) databaseStateEnterpriseImpl86);
    java.lang.Throwable throwable92 = gdbCrashEvent82.gecsThrowable();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId93 = gdbCrashEvent82.getNamedDatabaseId();
    try {
      databaseStartupControllerAbortableImpl9.handleCrash(gdbCrashEvent82);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason11 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason11.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason41 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason41.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason51 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason51.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason54 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason54.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason70 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason70.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl77);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl78);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo81 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo81.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId83);
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl86);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    org.junit.Assert.assertNull(namedDatabaseId88);
    org.junit.Assert.assertNotNull(throwableOptional89);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl90);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    org.junit.Assert.assertNull(throwable92);
    org.junit.Assert.assertNull(namedDatabaseId93);
  }

  @Test
  public void test310() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test310");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl1 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING;
    boolean boolean2 = operatorStateEnterpriseTypeImpl1.terminal();
    java.lang.String str3 = operatorStateEnterpriseTypeImpl1.description();
    boolean boolean4 = operatorStateEnterpriseTypeImpl1.terminal();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId0, operatorStateEnterpriseTypeImpl1);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl1 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING + "'",
        operatorStateEnterpriseTypeImpl1.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING));
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "offline" + "'", str3, "offline");
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test311() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test311");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo5 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable6 = sysCrashEvent2.gecsThrowable();
    int int7 = sysCrashEvent2.getICe();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl9 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    java.lang.String str10 = operatorStateEnterpriseTypeImpl9.description();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId8, operatorStateEnterpriseTypeImpl9);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    boolean boolean13 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl12);
    boolean boolean14 = databaseStateEnterpriseImpl12.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = databaseStateEnterpriseImpl12.databaseId();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + causeInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo5.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl9 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl9.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "dropped" + "'", str10, "dropped");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertNull(namedDatabaseId15);
  }

  @Test
  public void test312() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test312");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    int int5 = sysCrashEvent2.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo6 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    int int7 = sysCrashEvent2.getICe();
    java.lang.Throwable throwable8 = sysCrashEvent2.gecsThrowable();
    java.lang.Object obj9 = null;
    boolean boolean10 = sysCrashEvent2.equals(obj9);
    java.lang.Throwable throwable11 = sysCrashEvent2.gecsThrowable();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo6 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo6.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    org.junit.Assert.assertNull(throwable8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNull(throwable11);
  }

  @Test
  public void test313() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test313");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    java.lang.Throwable throwable3 = sysCrashEvent2.gecsThrowable();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo4 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable5 = sysCrashEvent2.gecsThrowable();
    java.lang.Throwable throwable6 = sysCrashEvent2.gecsThrowable();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable3);
    org.junit.Assert.assertTrue("'" + causeInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo4.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable5);
    org.junit.Assert.assertNull(throwable6);
  }

  @Test
  public void test314() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test314");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str10 = sysCrashCauseInfo9.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent11 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    java.lang.String str12 = sysCrashCauseInfo9.getInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Discovery system failed irrecoverably" + "'", str10,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Discovery system failed irrecoverably" + "'", str12,
        "Discovery system failed irrecoverably");
  }

  @Test
  public void test315() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test315");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean1 = databaseStateEnterpriseImpl0.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl0.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional3 = databaseStateEnterpriseImpl0.failure();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl4 = databaseStateEnterpriseImpl0.operatorState();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(throwableOptional3);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl4 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl4.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
  }

  @Test
  public void test316() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test316");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl3.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl3.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        throwable7, databaseStateEnterpriseImpl8);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl15);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter17 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl18 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl20 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId19, operatorStateEnterpriseTypeImpl20);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean23 = databaseStateEnterpriseImpl22.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl18.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl21,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl27.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl29 = databaseStateEnterpriseImpl27.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId26, operatorStateEnterpriseTypeImpl29);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean33 = databaseStateEnterpriseImpl32.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = databaseStateEnterpriseImpl32.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional35 = databaseStateEnterpriseImpl32.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = databaseStateEnterpriseImpl32.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter37 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl38 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId39 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId39);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = databaseStateEnterpriseImpl40.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional42 = databaseStateEnterpriseImpl40.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable44 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = databaseStateEnterpriseImpl45.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException47 = new io.github.onograph.dbms.StateChangeException(
        throwable44, databaseStateEnterpriseImpl45);
    databaseStateUpdateHandlerOppStatsImpl38.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl43,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl45);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl49 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl50 = databaseStateEnterpriseImpl49.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl38.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl49,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl52);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter54 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl55 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter54);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId56 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl57 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId56, operatorStateEnterpriseTypeImpl57);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean60 = databaseStateEnterpriseImpl59.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl55.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl58,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl59);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = databaseStateEnterpriseImpl59.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId63 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl64 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl65 = databaseStateEnterpriseImpl64.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl66 = databaseStateEnterpriseImpl64.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl67 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId63, operatorStateEnterpriseTypeImpl66);
    databaseStateUpdateHandlerOppStatsImpl38.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl59,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl67);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl32,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl59);
    boolean boolean70 = databaseStateEnterpriseImpl59.hasFailed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl20 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl20.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl29 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl29.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertNull(namedDatabaseId34);
    org.junit.Assert.assertNotNull(throwableOptional35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNull(namedDatabaseId41);
    org.junit.Assert.assertNotNull(throwableOptional42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl49);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl50);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl57 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl57.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl64);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl65);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl66 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl66.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
  }

  @Test
  public void test317() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test317");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str18 = sysCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo17);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable22 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        throwable22, databaseStateEnterpriseImpl23);
    java.lang.Throwable throwable26 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl27.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException29 = new io.github.onograph.dbms.StateChangeException(
        throwable26, databaseStateEnterpriseImpl27);
    io.github.onograph.dbms.StateChangeException stateChangeException30 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException25, databaseStateEnterpriseImpl27);
    java.lang.Throwable throwable31 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = databaseStateEnterpriseImpl32.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException34 = new io.github.onograph.dbms.StateChangeException(
        throwable31, databaseStateEnterpriseImpl32);
    stateChangeException30.addSuppressed((java.lang.Throwable) stateChangeException34);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = databaseStateEnterpriseImpl21.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException34);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo37 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str38 = sysCrashCauseInfo37.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent39 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException34, sysCrashCauseInfo37);
    java.lang.Throwable throwable40 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = databaseStateEnterpriseImpl41.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException43 = new io.github.onograph.dbms.StateChangeException(
        throwable40, databaseStateEnterpriseImpl41);
    java.lang.Throwable throwable44 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = databaseStateEnterpriseImpl45.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException47 = new io.github.onograph.dbms.StateChangeException(
        throwable44, databaseStateEnterpriseImpl45);
    io.github.onograph.dbms.StateChangeException stateChangeException48 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException43, databaseStateEnterpriseImpl45);
    java.lang.Throwable throwable49 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl50 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = databaseStateEnterpriseImpl50.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException52 = new io.github.onograph.dbms.StateChangeException(
        throwable49, databaseStateEnterpriseImpl50);
    stateChangeException48.addSuppressed((java.lang.Throwable) stateChangeException52);
    stateChangeException34.addSuppressed((java.lang.Throwable) stateChangeException52);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId55 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo56 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str57 = gdbCrashCauseInfo56.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent58 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException34, namedDatabaseId55, gdbCrashCauseInfo56);
    java.lang.Throwable throwable59 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = databaseStateEnterpriseImpl60.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException62 = new io.github.onograph.dbms.StateChangeException(
        throwable59, databaseStateEnterpriseImpl60);
    java.lang.Throwable throwable63 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl64 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl65 = databaseStateEnterpriseImpl64.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException66 = new io.github.onograph.dbms.StateChangeException(
        throwable63, databaseStateEnterpriseImpl64);
    io.github.onograph.dbms.StateChangeException stateChangeException67 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException62, databaseStateEnterpriseImpl64);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl68 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl69 = databaseStateEnterpriseImpl68.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl70 = databaseStateEnterpriseImpl68.operatorState();
    boolean boolean71 = databaseStateEnterpriseImpl68.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException72 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException62, databaseStateEnterpriseImpl68);
    stateChangeException34.addSuppressed((java.lang.Throwable) stateChangeException72);
    stateChangeException14.addSuppressed((java.lang.Throwable) stateChangeException34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Discovery system failed irrecoverably" + "'", str18,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo37 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo37.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str38 + "' != '" + "Discovery system failed irrecoverably" + "'", str38,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl50);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo56 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo56.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str57 + "' != '" + "RaftMessage applier failed" + "'",
        str57, "RaftMessage applier failed");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl64);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl65);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl68);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl69);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl70 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl70.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
  }

  @Test
  public void test318() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test318");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    java.lang.Throwable throwable3 = sysCrashEvent2.gecsThrowable();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo4 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo5 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable6 = sysCrashEvent2.gecsThrowable();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable3);
    org.junit.Assert.assertTrue("'" + causeInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo4.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + causeInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo5.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable6);
  }

  @Test
  public void test319() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test319");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo5 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo11 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent12 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable6, namedDatabaseId10, gdbCrashCauseInfo11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = gdbCrashEvent12.getNamedDatabaseId();
    java.lang.Throwable throwable14 = gdbCrashEvent12.gecsThrowable();
    boolean boolean15 = sysCrashEvent2.equals((java.lang.Object) gdbCrashEvent12);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo16 = gdbCrashEvent12.gersCrashSignalerCauseInfo();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta17 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    boolean boolean18 = gdbCrashEvent12.equals((java.lang.Object) dbmsResolverMeta17);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + causeInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo5.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo11 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo11.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId13);
    org.junit.Assert.assertNull(throwable14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + causeInfo16 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        causeInfo16.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNotNull(dbmsResolverMeta17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
  }

  @Test
  public void test320() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test320");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl1 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_RUNNING;
    java.lang.String str2 = operatorStateEnterpriseTypeImpl1.description();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId0, operatorStateEnterpriseTypeImpl1);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl1 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_RUNNING + "'",
        operatorStateEnterpriseTypeImpl1.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_RUNNING));
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "online" + "'", str2, "online");
  }

  @Test
  public void test321() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test321");
    }
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo0 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_IT;
    java.lang.String str1 = gdbCrashCauseInfo0.getInfo();
    org.junit.Assert.assertTrue(
        "'" + gdbCrashCauseInfo0 + "' != '" + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_IT
            + "'",
        gdbCrashCauseInfo0.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_IT));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "DatabasePanic just for testing" + "'",
        str1, "DatabasePanic just for testing");
  }

  @Test
  public void test322() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test322");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo25 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent26 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException23, sysCrashCauseInfo25);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo25);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter28 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl29 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter28);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean31 = databaseStateEnterpriseImpl30.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId32 = databaseStateEnterpriseImpl30.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter33 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl34 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter33);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = databaseStateEnterpriseImpl36.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional38 = databaseStateEnterpriseImpl36.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable40 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = databaseStateEnterpriseImpl41.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException43 = new io.github.onograph.dbms.StateChangeException(
        throwable40, databaseStateEnterpriseImpl41);
    databaseStateUpdateHandlerOppStatsImpl34.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl41);
    databaseStateUpdateHandlerOppStatsImpl29.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39);
    java.lang.Throwable throwable46 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl47.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException49 = new io.github.onograph.dbms.StateChangeException(
        throwable46, databaseStateEnterpriseImpl47);
    java.lang.Throwable throwable50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException53 = new io.github.onograph.dbms.StateChangeException(
        throwable50, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = databaseStateEnterpriseImpl55.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl57 = databaseStateEnterpriseImpl55.operatorState();
    boolean boolean58 = databaseStateEnterpriseImpl55.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException59 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl55);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = databaseStateEnterpriseImpl39.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException59);
    boolean boolean61 = sysCrashEvent27.equals((java.lang.Object) stateChangeException59);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId62 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl63 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId62);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId64 = databaseStateEnterpriseImpl63.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional65 = databaseStateEnterpriseImpl63.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = databaseStateEnterpriseImpl63.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException67 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException59, databaseStateEnterpriseImpl66);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo25 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo25.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNull(namedDatabaseId32);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNull(namedDatabaseId37);
    org.junit.Assert.assertNotNull(throwableOptional38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl57 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl57.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl63);
    org.junit.Assert.assertNull(namedDatabaseId64);
    org.junit.Assert.assertNotNull(throwableOptional65);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl66);
  }

  @Test
  public void test323() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test323");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    java.lang.Throwable throwable22 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        throwable22, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.StateChangeException stateChangeException26 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl27.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl29 = databaseStateEnterpriseImpl27.operatorState();
    boolean boolean30 = databaseStateEnterpriseImpl27.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException31 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl27);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = databaseStateEnterpriseImpl11.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException31);
    boolean boolean33 = databaseStateEnterpriseImpl11.hasFailed();
    boolean boolean34 = databaseStateEnterpriseImpl11.hasFailed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl29 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl29.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test324() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test324");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = databaseStateEnterpriseImpl4.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl6 = databaseStateEnterpriseImpl4.operatorState();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl4);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable10 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException13 = new io.github.onograph.dbms.StateChangeException(
        throwable10, databaseStateEnterpriseImpl11);
    java.lang.Throwable throwable14 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException17 = new io.github.onograph.dbms.StateChangeException(
        throwable14, databaseStateEnterpriseImpl15);
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException13, databaseStateEnterpriseImpl15);
    java.lang.Throwable throwable19 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        throwable19, databaseStateEnterpriseImpl20);
    stateChangeException18.addSuppressed((java.lang.Throwable) stateChangeException22);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl9.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException22);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = databaseStateEnterpriseImpl4.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException22);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = databaseStateEnterpriseImpl26.helyDatabaseStateEnterpriseImpl();
    boolean boolean28 = databaseStateEnterpriseImpl25.equals(
        (java.lang.Object) databaseStateEnterpriseImpl26);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = null;
    try {
      java.lang.String str30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.lofmtString(
          databaseStateEnterpriseImpl25, databaseStateEnterpriseImpl29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl6 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl6.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
  }

  @Test
  public void test325() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test325");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    boolean boolean3 = databaseStateEnterpriseImpl0.equals((java.lang.Object) counter1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException7, databaseStateEnterpriseImpl9);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo13 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent14 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException7, sysCrashCauseInfo13);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable19 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        throwable19, databaseStateEnterpriseImpl20);
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException18, databaseStateEnterpriseImpl20);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    stateChangeException23.addSuppressed((java.lang.Throwable) stateChangeException27);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo29 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent30 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException27, sysCrashCauseInfo29);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent31 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException7, sysCrashCauseInfo29);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter32 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl33 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter32);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean35 = databaseStateEnterpriseImpl34.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId36 = databaseStateEnterpriseImpl34.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter37 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl38 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId39 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId39);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = databaseStateEnterpriseImpl40.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional42 = databaseStateEnterpriseImpl40.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable44 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = databaseStateEnterpriseImpl45.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException47 = new io.github.onograph.dbms.StateChangeException(
        throwable44, databaseStateEnterpriseImpl45);
    databaseStateUpdateHandlerOppStatsImpl38.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl43,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl45);
    databaseStateUpdateHandlerOppStatsImpl33.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl34,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl43);
    java.lang.Throwable throwable50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException53 = new io.github.onograph.dbms.StateChangeException(
        throwable50, databaseStateEnterpriseImpl51);
    java.lang.Throwable throwable54 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = databaseStateEnterpriseImpl55.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException57 = new io.github.onograph.dbms.StateChangeException(
        throwable54, databaseStateEnterpriseImpl55);
    io.github.onograph.dbms.StateChangeException stateChangeException58 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException53, databaseStateEnterpriseImpl55);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = databaseStateEnterpriseImpl59.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl61 = databaseStateEnterpriseImpl59.operatorState();
    boolean boolean62 = databaseStateEnterpriseImpl59.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException63 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException53, databaseStateEnterpriseImpl59);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl64 = databaseStateEnterpriseImpl43.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException63);
    boolean boolean65 = sysCrashEvent31.equals((java.lang.Object) stateChangeException63);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = databaseStateEnterpriseImpl0.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException63);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId67 = databaseStateEnterpriseImpl66.databaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo13 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo13.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo29 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo29.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertNull(namedDatabaseId36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNull(namedDatabaseId41);
    org.junit.Assert.assertNotNull(throwableOptional42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl61 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl61.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl64);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl66);
    org.junit.Assert.assertNull(namedDatabaseId67);
  }

  @Test
  public void test326() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test326");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason6 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason9 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId8, preventReason9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    java.time.Clock clock12 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel13 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard14 = null;
    java.time.Duration duration15 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl16 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock12, defaultSystemGraphDbmsModel13, availabilityGuard14, duration15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    java.time.Clock clock18 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel19 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard20 = null;
    java.time.Duration duration21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl22 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock18, defaultSystemGraphDbmsModel19, availabilityGuard20, duration21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason24 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl22.prnuratForNaDa(namedDatabaseId23, preventReason24);
    databaseStartupControllerAbortableImpl16.prnuratForNaDa(namedDatabaseId17, preventReason24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = null;
    java.time.Clock clock28 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel29 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard30 = null;
    java.time.Duration duration31 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl32 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock28, defaultSystemGraphDbmsModel29, availabilityGuard30, duration31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId33 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason34 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl32.prnuratForNaDa(namedDatabaseId33, preventReason34);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId36 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason37 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl32.prnuratForNaDa(namedDatabaseId36, preventReason37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId39 = null;
    java.time.Clock clock40 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel41 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard42 = null;
    java.time.Duration duration43 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl44 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock40, defaultSystemGraphDbmsModel41, availabilityGuard42, duration43);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId45 = null;
    java.time.Clock clock46 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel47 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard48 = null;
    java.time.Duration duration49 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl50 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock46, defaultSystemGraphDbmsModel47, availabilityGuard48, duration49);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId51 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason52 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl50.prnuratForNaDa(namedDatabaseId51, preventReason52);
    databaseStartupControllerAbortableImpl44.prnuratForNaDa(namedDatabaseId45, preventReason52);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId55 = null;
    java.time.Clock clock56 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel57 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard58 = null;
    java.time.Duration duration59 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl60 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock56, defaultSystemGraphDbmsModel57, availabilityGuard58, duration59);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId61 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason62 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl60.prnuratForNaDa(namedDatabaseId61, preventReason62);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId64 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason65 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl60.prnuratForNaDa(namedDatabaseId64, preventReason65);
    databaseStartupControllerAbortableImpl44.prnuratForNaDa(namedDatabaseId55, preventReason65);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId68 = null;
    java.time.Clock clock69 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel70 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard71 = null;
    java.time.Duration duration72 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl73 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock69, defaultSystemGraphDbmsModel70, availabilityGuard71, duration72);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId74 = null;
    java.time.Clock clock75 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel76 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard77 = null;
    java.time.Duration duration78 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl79 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock75, defaultSystemGraphDbmsModel76, availabilityGuard77, duration78);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId80 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason81 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl79.prnuratForNaDa(namedDatabaseId80, preventReason81);
    databaseStartupControllerAbortableImpl73.prnuratForNaDa(namedDatabaseId74, preventReason81);
    databaseStartupControllerAbortableImpl44.aluabForNaDa(namedDatabaseId68, preventReason81);
    databaseStartupControllerAbortableImpl32.prnuratForNaDa(namedDatabaseId39, preventReason81);
    databaseStartupControllerAbortableImpl16.prnuratForNaDa(namedDatabaseId27, preventReason81);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId11, preventReason81);
    org.junit.Assert.assertTrue("'" + preventReason6 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason6.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason9 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason9.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason24 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason24.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason34 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason34.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason37 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason37.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason52 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason52.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason62 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason62.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason65 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason65.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason81 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason81.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test327() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test327");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl5 = databaseStateEnterpriseImpl3.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId2, operatorStateEnterpriseTypeImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId1, operatorStateEnterpriseTypeImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId0, operatorStateEnterpriseTypeImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl5 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl5.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
  }

  @Test
  public void test328() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test328");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    structureMetaService3.shutdown();
    structureMetaService3.init();
    structureMetaService3.shutdown();
    structureMetaService3.init();
    try {
      structureMetaService3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test329() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test329");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean1 = databaseStateEnterpriseImpl0.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl0.databaseId();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl3 = databaseStateEnterpriseImpl0.operatorState();
    boolean boolean4 = databaseStateEnterpriseImpl0.hasFailed();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl0.failure();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl3 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl3.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(throwableOptional5);
  }

  @Test
  public void test330() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test330");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    boolean boolean5 = databaseStateEnterpriseImpl3.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl6 = databaseStateEnterpriseImpl3.operatorState();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl3);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter8 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl9 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl11.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl11.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    databaseStateUpdateHandlerOppStatsImpl9.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl9.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl20,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl23);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter25 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl26 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl28 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId27, operatorStateEnterpriseTypeImpl28);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean31 = databaseStateEnterpriseImpl30.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl26.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl29,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = databaseStateEnterpriseImpl35.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl37 = databaseStateEnterpriseImpl35.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId34, operatorStateEnterpriseTypeImpl37);
    databaseStateUpdateHandlerOppStatsImpl9.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl38);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean41 = databaseStateEnterpriseImpl40.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId42 = databaseStateEnterpriseImpl40.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional43 = databaseStateEnterpriseImpl40.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter45 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl46 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter45);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId47 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId47);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId49 = databaseStateEnterpriseImpl48.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional50 = databaseStateEnterpriseImpl48.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = databaseStateEnterpriseImpl48.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable52 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl53 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl54 = databaseStateEnterpriseImpl53.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException55 = new io.github.onograph.dbms.StateChangeException(
        throwable52, databaseStateEnterpriseImpl53);
    databaseStateUpdateHandlerOppStatsImpl46.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl51,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl53);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = databaseStateEnterpriseImpl57.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = databaseStateEnterpriseImpl59.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl46.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl57,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl60);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter62 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl63 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter62);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId64 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl65 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId64, operatorStateEnterpriseTypeImpl65);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl67 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean68 = databaseStateEnterpriseImpl67.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl63.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl66,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl67);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl70 = databaseStateEnterpriseImpl67.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId71 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl72 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl73 = databaseStateEnterpriseImpl72.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl74 = databaseStateEnterpriseImpl72.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl75 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId71, operatorStateEnterpriseTypeImpl74);
    databaseStateUpdateHandlerOppStatsImpl46.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl67,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl75);
    databaseStateUpdateHandlerOppStatsImpl9.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl40,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl67);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter78 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl79 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter78);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId80 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl81 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl82 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId80, operatorStateEnterpriseTypeImpl81);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl83 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean84 = databaseStateEnterpriseImpl83.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl79.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl82,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl83);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl40,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl82);
    boolean boolean87 = databaseStateEnterpriseImpl82.hasFailed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl6 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl6.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl28 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl28.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl37 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl37.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertNull(namedDatabaseId42);
    org.junit.Assert.assertNotNull(throwableOptional43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNull(namedDatabaseId49);
    org.junit.Assert.assertNotNull(throwableOptional50);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl53);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl54);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl58);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl65 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl65.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl67);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl70);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl72);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl73);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl74 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl74.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl81 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl81.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl83);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
  }

  @Test
  public void test331() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test331");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    boolean boolean3 = databaseStateEnterpriseImpl0.equals((java.lang.Object) counter1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException7, databaseStateEnterpriseImpl9);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo13 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent14 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException7, sysCrashCauseInfo13);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable19 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        throwable19, databaseStateEnterpriseImpl20);
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException18, databaseStateEnterpriseImpl20);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    stateChangeException23.addSuppressed((java.lang.Throwable) stateChangeException27);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo29 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent30 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException27, sysCrashCauseInfo29);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent31 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException7, sysCrashCauseInfo29);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter32 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl33 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter32);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean35 = databaseStateEnterpriseImpl34.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId36 = databaseStateEnterpriseImpl34.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter37 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl38 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId39 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId39);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = databaseStateEnterpriseImpl40.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional42 = databaseStateEnterpriseImpl40.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable44 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = databaseStateEnterpriseImpl45.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException47 = new io.github.onograph.dbms.StateChangeException(
        throwable44, databaseStateEnterpriseImpl45);
    databaseStateUpdateHandlerOppStatsImpl38.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl43,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl45);
    databaseStateUpdateHandlerOppStatsImpl33.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl34,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl43);
    java.lang.Throwable throwable50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException53 = new io.github.onograph.dbms.StateChangeException(
        throwable50, databaseStateEnterpriseImpl51);
    java.lang.Throwable throwable54 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = databaseStateEnterpriseImpl55.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException57 = new io.github.onograph.dbms.StateChangeException(
        throwable54, databaseStateEnterpriseImpl55);
    io.github.onograph.dbms.StateChangeException stateChangeException58 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException53, databaseStateEnterpriseImpl55);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = databaseStateEnterpriseImpl59.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl61 = databaseStateEnterpriseImpl59.operatorState();
    boolean boolean62 = databaseStateEnterpriseImpl59.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException63 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException53, databaseStateEnterpriseImpl59);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl64 = databaseStateEnterpriseImpl43.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException63);
    boolean boolean65 = sysCrashEvent31.equals((java.lang.Object) stateChangeException63);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = databaseStateEnterpriseImpl0.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException63);
    boolean boolean68 = databaseStateEnterpriseImpl66.equals((java.lang.Object) (short) 1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo13 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo13.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo29 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo29.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertNull(namedDatabaseId36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNull(namedDatabaseId41);
    org.junit.Assert.assertNotNull(throwableOptional42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl61 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl61.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl64);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl66);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
  }

  @Test
  public void test332() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test332");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    int int5 = sysCrashEvent2.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo6 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    int int7 = sysCrashEvent2.getICe();
    java.lang.Throwable throwable8 = sysCrashEvent2.gecsThrowable();
    java.lang.Throwable throwable9 = sysCrashEvent2.gecsThrowable();
    java.lang.Throwable throwable10 = sysCrashEvent2.gecsThrowable();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo6 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo6.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    org.junit.Assert.assertNull(throwable8);
    org.junit.Assert.assertNull(throwable9);
    org.junit.Assert.assertNull(throwable10);
  }

  @Test
  public void test333() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test333");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    java.util.Optional<java.lang.Throwable> throwableOptional17 = databaseStateEnterpriseImpl16.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(throwableOptional17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
  }

  @Test
  public void test334() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test334");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo4 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent5 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo4);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter6 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl7 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter6);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean9 = databaseStateEnterpriseImpl8.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional11 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter13 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl14 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl16 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId15, operatorStateEnterpriseTypeImpl16);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean19 = databaseStateEnterpriseImpl18.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl14.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl17,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl18);
    databaseStateUpdateHandlerOppStatsImpl7.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl17);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter22 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl23 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter22);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean25 = databaseStateEnterpriseImpl24.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = databaseStateEnterpriseImpl24.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional27 = databaseStateEnterpriseImpl24.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter28 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl29 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId30 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId30);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId32 = databaseStateEnterpriseImpl31.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional33 = databaseStateEnterpriseImpl31.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = databaseStateEnterpriseImpl31.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable35 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException38 = new io.github.onograph.dbms.StateChangeException(
        throwable35, databaseStateEnterpriseImpl36);
    databaseStateUpdateHandlerOppStatsImpl29.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl34,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl36);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = databaseStateEnterpriseImpl42.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl29.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl40,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl43);
    org.neo4j.function.ThrowingAction throwingAction45 = null;
    org.neo4j.function.ThrowingAction throwingAction46 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle47 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction45, throwingAction46);
    boolean boolean48 = databaseStateEnterpriseImpl43.equals((java.lang.Object) throwingAction46);
    databaseStateUpdateHandlerOppStatsImpl23.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl24,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl43);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.intlDatabaseStateEnterpriseImpl(
        namedDatabaseId50);
    databaseStateUpdateHandlerOppStatsImpl7.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl43,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction53 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter54 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl55 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter54);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId56 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl57 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId56, operatorStateEnterpriseTypeImpl57);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean60 = databaseStateEnterpriseImpl59.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl55.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl58,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl59);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = databaseStateEnterpriseImpl59.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl63 = databaseStateEnterpriseImpl59.helyDatabaseStateEnterpriseImpl();
    boolean boolean64 = dbmsResolverAction53.equals(
        (java.lang.Object) databaseStateEnterpriseImpl63);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId65 = null;
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction66 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl67 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl68 = databaseStateEnterpriseImpl67.helyDatabaseStateEnterpriseImpl();
    boolean boolean69 = databaseStateEnterpriseImpl67.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl70 = databaseStateEnterpriseImpl67.operatorState();
    boolean boolean71 = dbmsResolverAction66.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl70);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl72 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId65, operatorStateEnterpriseTypeImpl70);
    databaseStateUpdateHandlerOppStatsImpl7.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl63,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl72);
    boolean boolean74 = sysCrashEvent5.equals((java.lang.Object) databaseStateEnterpriseImpl72);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta75 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta76 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta76.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray78 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList79 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean80 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList79,
        namedDatabaseIdArray78);
    dbmsResolverMeta76.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList79);
    dbmsResolverMeta76.jonal();
    dbmsResolverMeta76.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta84 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta84.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray86 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList87 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean88 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList87,
        namedDatabaseIdArray86);
    dbmsResolverMeta84.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList87);
    dbmsResolverMeta76.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList87);
    dbmsResolverMeta75.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList87);
    java.lang.Object obj92 = null;
    boolean boolean93 = dbmsResolverMeta75.equals(obj92);
    dbmsResolverMeta75.jonal();
    boolean boolean95 = databaseStateEnterpriseImpl72.equals((java.lang.Object) dbmsResolverMeta75);
    java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdCollection96 = null;
    try {
      dbmsResolverMeta75.joiForCo(namedDatabaseIdCollection96);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo4.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNull(namedDatabaseId10);
    org.junit.Assert.assertNotNull(throwableOptional11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl16 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl16.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNull(namedDatabaseId26);
    org.junit.Assert.assertNotNull(throwableOptional27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNull(namedDatabaseId32);
    org.junit.Assert.assertNotNull(throwableOptional33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(lifecycle47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(dbmsResolverAction53);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl57 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl57.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl63);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    org.junit.Assert.assertNotNull(dbmsResolverAction66);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl67);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl68);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl70 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl70.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta75);
    org.junit.Assert.assertNotNull(dbmsResolverMeta76);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray78);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta84);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray86);
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
  }

  @Test
  public void test335() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test335");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl3.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = databaseStateEnterpriseImpl6.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional8 = databaseStateEnterpriseImpl6.failure();
    boolean boolean9 = databaseStateEnterpriseImpl3.equals(
        (java.lang.Object) databaseStateEnterpriseImpl6);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = databaseStateEnterpriseImpl10.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl10.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl10.failure();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean16 = databaseStateEnterpriseImpl15.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = databaseStateEnterpriseImpl15.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional18 = databaseStateEnterpriseImpl15.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    boolean boolean20 = databaseStateEnterpriseImpl15.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = databaseStateEnterpriseImpl22.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional24 = databaseStateEnterpriseImpl22.failure();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl15,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = databaseStateEnterpriseImpl27.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId29);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = databaseStateEnterpriseImpl30.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional32 = databaseStateEnterpriseImpl30.failure();
    boolean boolean33 = databaseStateEnterpriseImpl27.equals(
        (java.lang.Object) databaseStateEnterpriseImpl30);
    java.lang.Throwable throwable34 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = databaseStateEnterpriseImpl35.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException37 = new io.github.onograph.dbms.StateChangeException(
        throwable34, databaseStateEnterpriseImpl35);
    java.lang.Throwable throwable38 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = databaseStateEnterpriseImpl39.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException41 = new io.github.onograph.dbms.StateChangeException(
        throwable38, databaseStateEnterpriseImpl39);
    java.lang.Throwable throwable42 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = databaseStateEnterpriseImpl43.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException45 = new io.github.onograph.dbms.StateChangeException(
        throwable42, databaseStateEnterpriseImpl43);
    io.github.onograph.dbms.StateChangeException stateChangeException46 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException41, databaseStateEnterpriseImpl43);
    java.lang.Throwable throwable47 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl49 = databaseStateEnterpriseImpl48.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException50 = new io.github.onograph.dbms.StateChangeException(
        throwable47, databaseStateEnterpriseImpl48);
    stateChangeException46.addSuppressed((java.lang.Throwable) stateChangeException50);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo52 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent53 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException50, sysCrashCauseInfo52);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId54 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo55 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent56 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException50, namedDatabaseId54, gdbCrashCauseInfo55);
    stateChangeException37.addSuppressed((java.lang.Throwable) stateChangeException50);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = databaseStateEnterpriseImpl30.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException50);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter59 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl60 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter59);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId61 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId61);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId63 = databaseStateEnterpriseImpl62.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional64 = databaseStateEnterpriseImpl62.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl65 = databaseStateEnterpriseImpl62.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable66 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl67 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl68 = databaseStateEnterpriseImpl67.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException69 = new io.github.onograph.dbms.StateChangeException(
        throwable66, databaseStateEnterpriseImpl67);
    databaseStateUpdateHandlerOppStatsImpl60.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl65,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl67);
    try {
      databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
          (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl58,
          (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl67);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertNotNull(throwableOptional8);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNull(namedDatabaseId17);
    org.junit.Assert.assertNotNull(throwableOptional18);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNull(namedDatabaseId23);
    org.junit.Assert.assertNotNull(throwableOptional24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNull(namedDatabaseId28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNull(namedDatabaseId31);
    org.junit.Assert.assertNotNull(throwableOptional32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl49);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo52 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo52.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo55 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo55.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl58);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
    org.junit.Assert.assertNull(namedDatabaseId63);
    org.junit.Assert.assertNotNull(throwableOptional64);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl65);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl67);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl68);
  }

  @Test
  public void test336() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test336");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    dbmsResolverMeta0.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta8 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta8.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray10 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList11 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11,
        namedDatabaseIdArray10);
    dbmsResolverMeta8.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta15 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta15.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray17 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList18 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean19 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList18,
        namedDatabaseIdArray17);
    dbmsResolverMeta15.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList18);
    dbmsResolverMeta15.jonal();
    dbmsResolverMeta15.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta23 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta23.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray25 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList26 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean27 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26,
        namedDatabaseIdArray25);
    dbmsResolverMeta23.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26);
    dbmsResolverMeta15.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList26);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta30 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta30.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray32 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList33 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean34 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList33,
        namedDatabaseIdArray32);
    dbmsResolverMeta30.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList33);
    dbmsResolverMeta30.jonal();
    dbmsResolverMeta30.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta38 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta38.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray40 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList41 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean42 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList41,
        namedDatabaseIdArray40);
    dbmsResolverMeta38.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList41);
    dbmsResolverMeta30.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList41);
    dbmsResolverMeta15.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList41);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta46 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta46.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray48 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList49 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean50 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList49,
        namedDatabaseIdArray48);
    dbmsResolverMeta46.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList49);
    dbmsResolverMeta46.jonal();
    dbmsResolverMeta46.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta54 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta54.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray56 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList57 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean58 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList57,
        namedDatabaseIdArray56);
    dbmsResolverMeta54.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList57);
    dbmsResolverMeta46.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList57);
    dbmsResolverMeta15.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList57);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList57);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta8);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta15);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta23);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta30);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray32);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta38);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray40);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta46);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray48);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta54);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray56);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
  }

  @Test
  public void test337() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test337");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier2 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel3 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier2);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard4 = null;
    java.time.Duration duration5 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl6 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel3, availabilityGuard4, duration5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel3, availabilityGuard7, duration8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    java.time.Clock clock11 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel12 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard13 = null;
    java.time.Duration duration14 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl15 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock11, defaultSystemGraphDbmsModel12, availabilityGuard13, duration14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    java.time.Clock clock17 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel18 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard19 = null;
    java.time.Duration duration20 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl21 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock17, defaultSystemGraphDbmsModel18, availabilityGuard19, duration20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason23 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl21.prnuratForNaDa(namedDatabaseId22, preventReason23);
    databaseStartupControllerAbortableImpl15.prnuratForNaDa(namedDatabaseId16, preventReason23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    java.time.Clock clock27 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel28 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard29 = null;
    java.time.Duration duration30 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl31 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock27, defaultSystemGraphDbmsModel28, availabilityGuard29, duration30);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason33 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl31.prnuratForNaDa(namedDatabaseId32, preventReason33);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason36 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl31.prnuratForNaDa(namedDatabaseId35, preventReason36);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId38 = null;
    java.time.Clock clock39 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel40 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard41 = null;
    java.time.Duration duration42 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl43 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock39, defaultSystemGraphDbmsModel40, availabilityGuard41, duration42);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId44 = null;
    java.time.Clock clock45 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel46 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard47 = null;
    java.time.Duration duration48 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl49 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock45, defaultSystemGraphDbmsModel46, availabilityGuard47, duration48);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId50 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason51 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl49.prnuratForNaDa(namedDatabaseId50, preventReason51);
    databaseStartupControllerAbortableImpl43.prnuratForNaDa(namedDatabaseId44, preventReason51);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId54 = null;
    java.time.Clock clock55 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel56 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard57 = null;
    java.time.Duration duration58 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl59 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock55, defaultSystemGraphDbmsModel56, availabilityGuard57, duration58);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId60 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason61 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl59.prnuratForNaDa(namedDatabaseId60, preventReason61);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId63 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason64 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl59.prnuratForNaDa(namedDatabaseId63, preventReason64);
    databaseStartupControllerAbortableImpl43.prnuratForNaDa(namedDatabaseId54, preventReason64);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId67 = null;
    java.time.Clock clock68 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel69 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard70 = null;
    java.time.Duration duration71 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl72 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock68, defaultSystemGraphDbmsModel69, availabilityGuard70, duration71);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId73 = null;
    java.time.Clock clock74 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel75 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard76 = null;
    java.time.Duration duration77 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl78 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock74, defaultSystemGraphDbmsModel75, availabilityGuard76, duration77);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId79 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason80 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl78.prnuratForNaDa(namedDatabaseId79, preventReason80);
    databaseStartupControllerAbortableImpl72.prnuratForNaDa(namedDatabaseId73, preventReason80);
    databaseStartupControllerAbortableImpl43.aluabForNaDa(namedDatabaseId67, preventReason80);
    databaseStartupControllerAbortableImpl31.prnuratForNaDa(namedDatabaseId38, preventReason80);
    databaseStartupControllerAbortableImpl15.prnuratForNaDa(namedDatabaseId26, preventReason80);
    databaseStartupControllerAbortableImpl9.aluabForNaDa(namedDatabaseId10, preventReason80);
    java.lang.Throwable throwable87 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl88 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl89 = databaseStateEnterpriseImpl88.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException90 = new io.github.onograph.dbms.StateChangeException(
        throwable87, databaseStateEnterpriseImpl88);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId91 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo92 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent93 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable87, namedDatabaseId91, gdbCrashCauseInfo92);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId94 = gdbCrashEvent93.getNamedDatabaseId();
    java.lang.Throwable throwable95 = gdbCrashEvent93.gecsThrowable();
    try {
      databaseStartupControllerAbortableImpl9.handleCrash(gdbCrashEvent93);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason23 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason23.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason33 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason33.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason36 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason36.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason51 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason51.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason61 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason61.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason64 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason64.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason80 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason80.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl88);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl89);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo92 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo92.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId94);
    org.junit.Assert.assertNull(throwable95);
  }

  @Test
  public void test338() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test338");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    java.time.Clock clock29 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel30 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard31 = null;
    java.time.Duration duration32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl33 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock29, defaultSystemGraphDbmsModel30, availabilityGuard31, duration32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    java.time.Clock clock35 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel36 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard37 = null;
    java.time.Duration duration38 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl39 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock35, defaultSystemGraphDbmsModel36, availabilityGuard37, duration38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason41 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl39.prnuratForNaDa(namedDatabaseId40, preventReason41);
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId34, preventReason41);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId28, preventReason41);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId45 = null;
    try {
      databaseStartupControllerAbortableImpl4.reefoForNa(namedDatabaseId45);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason41 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason41.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test339() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test339");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl1.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl4 = databaseStateEnterpriseImpl1.operatorState();
    boolean boolean5 = dbmsResolverAction0.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl4);
    java.lang.Object obj6 = null;
    boolean boolean7 = dbmsResolverAction0.equals(obj6);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta8 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta8.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray10 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList11 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11,
        namedDatabaseIdArray10);
    dbmsResolverMeta8.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    dbmsResolverMeta8.jonal();
    dbmsResolverMeta8.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta16 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta16.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray18 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList19 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean20 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList19,
        namedDatabaseIdArray18);
    dbmsResolverMeta16.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList19);
    dbmsResolverMeta8.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList19);
    dbmsResolverMeta8.jonal();
    boolean boolean24 = dbmsResolverAction0.equals((java.lang.Object) dbmsResolverMeta8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = null;
    try {
      dbmsResolverMeta8.awiForNa(namedDatabaseId25);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl4 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl4.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta8);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta16);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test340() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test340");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    boolean boolean11 = dbmsResolverMeta0.equals((java.lang.Object) clock1);
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    try {
      dbmsResolverMeta0.joiForCo(namedDatabaseId13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test341() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test341");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter6 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl7 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter6);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean9 = databaseStateEnterpriseImpl8.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = databaseStateEnterpriseImpl8.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter11 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl12 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = databaseStateEnterpriseImpl14.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional16 = databaseStateEnterpriseImpl14.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    databaseStateUpdateHandlerOppStatsImpl12.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl17,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl19);
    databaseStateUpdateHandlerOppStatsImpl7.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl17);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    java.lang.Throwable throwable28 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = databaseStateEnterpriseImpl29.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException31 = new io.github.onograph.dbms.StateChangeException(
        throwable28, databaseStateEnterpriseImpl29);
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException27, databaseStateEnterpriseImpl29);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = databaseStateEnterpriseImpl33.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl35 = databaseStateEnterpriseImpl33.operatorState();
    boolean boolean36 = databaseStateEnterpriseImpl33.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException37 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException27, databaseStateEnterpriseImpl33);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = databaseStateEnterpriseImpl17.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException37);
    java.lang.Throwable[] throwableArray39 = stateChangeException37.getSuppressed();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable42 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = databaseStateEnterpriseImpl43.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException45 = new io.github.onograph.dbms.StateChangeException(
        throwable42, databaseStateEnterpriseImpl43);
    java.lang.Throwable throwable46 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl47.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException49 = new io.github.onograph.dbms.StateChangeException(
        throwable46, databaseStateEnterpriseImpl47);
    io.github.onograph.dbms.StateChangeException stateChangeException50 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException45, databaseStateEnterpriseImpl47);
    java.lang.Throwable throwable51 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl53 = databaseStateEnterpriseImpl52.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        throwable51, databaseStateEnterpriseImpl52);
    stateChangeException50.addSuppressed((java.lang.Throwable) stateChangeException54);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = databaseStateEnterpriseImpl41.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException54);
    java.lang.Throwable throwable57 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = databaseStateEnterpriseImpl58.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException60 = new io.github.onograph.dbms.StateChangeException(
        throwable57, databaseStateEnterpriseImpl58);
    java.lang.Throwable throwable61 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl63 = databaseStateEnterpriseImpl62.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException64 = new io.github.onograph.dbms.StateChangeException(
        throwable61, databaseStateEnterpriseImpl62);
    java.lang.Throwable throwable65 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl67 = databaseStateEnterpriseImpl66.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException68 = new io.github.onograph.dbms.StateChangeException(
        throwable65, databaseStateEnterpriseImpl66);
    io.github.onograph.dbms.StateChangeException stateChangeException69 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException64, databaseStateEnterpriseImpl66);
    java.lang.Throwable throwable70 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl71 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl72 = databaseStateEnterpriseImpl71.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException73 = new io.github.onograph.dbms.StateChangeException(
        throwable70, databaseStateEnterpriseImpl71);
    stateChangeException69.addSuppressed((java.lang.Throwable) stateChangeException73);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo75 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent76 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException73, sysCrashCauseInfo75);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId77 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo78 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent79 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException73, namedDatabaseId77, gdbCrashCauseInfo78);
    stateChangeException60.addSuppressed((java.lang.Throwable) stateChangeException73);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl81 = databaseStateEnterpriseImpl56.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException60);
    io.github.onograph.dbms.StateChangeException stateChangeException82 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException37, databaseStateEnterpriseImpl56);
    java.lang.Throwable throwable83 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl84 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl85 = databaseStateEnterpriseImpl84.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException86 = new io.github.onograph.dbms.StateChangeException(
        throwable83, databaseStateEnterpriseImpl84);
    java.lang.Throwable throwable87 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl88 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl89 = databaseStateEnterpriseImpl88.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException90 = new io.github.onograph.dbms.StateChangeException(
        throwable87, databaseStateEnterpriseImpl88);
    java.lang.Throwable throwable91 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl92 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl93 = databaseStateEnterpriseImpl92.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException94 = new io.github.onograph.dbms.StateChangeException(
        throwable91, databaseStateEnterpriseImpl92);
    io.github.onograph.dbms.StateChangeException stateChangeException95 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException90, databaseStateEnterpriseImpl92);
    stateChangeException86.addSuppressed((java.lang.Throwable) stateChangeException90);
    stateChangeException82.addSuppressed((java.lang.Throwable) stateChangeException86);
    java.lang.Throwable[] throwableArray98 = stateChangeException82.getSuppressed();
    boolean boolean99 = dbmsResolverMeta0.equals((java.lang.Object) stateChangeException82);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNull(namedDatabaseId10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNull(namedDatabaseId15);
    org.junit.Assert.assertNotNull(throwableOptional16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl35 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl35.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(throwableArray39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl53);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl58);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl63);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl66);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl67);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl71);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl72);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo75 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo75.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo78 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo78.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl81);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl84);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl85);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl88);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl89);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl92);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl93);
    org.junit.Assert.assertNotNull(throwableArray98);
    org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
  }

  @Test
  public void test342() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test342");
    }
    java.time.Clock clock0 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier1 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel2 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier1);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard3 = null;
    java.time.Duration duration4 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl5 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel2, availabilityGuard3, duration4);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    java.time.Clock clock7 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel8 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard9 = null;
    java.time.Duration duration10 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl11 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock7, defaultSystemGraphDbmsModel8, availabilityGuard9, duration10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason13 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl11.prnuratForNaDa(namedDatabaseId12, preventReason13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason16 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl11.prnuratForNaDa(namedDatabaseId15, preventReason16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    java.time.Clock clock19 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel20 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard21 = null;
    java.time.Duration duration22 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl23 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock19, defaultSystemGraphDbmsModel20, availabilityGuard21, duration22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl23.prnuratForNaDa(namedDatabaseId24, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason28 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl23.prnuratForNaDa(namedDatabaseId27, preventReason28);
    databaseStartupControllerAbortableImpl11.aluabForNaDa(namedDatabaseId18, preventReason28);
    databaseStartupControllerAbortableImpl5.prnuratForNaDa(namedDatabaseId6, preventReason28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId32 = null;
    try {
      boolean boolean33 = databaseStartupControllerAbortableImpl5.shouldAbort(namedDatabaseId32);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason13 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason13.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason16 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason16.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason28 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason28.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test343() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test343");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl3.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl3.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        throwable7, databaseStateEnterpriseImpl8);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl15);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter17 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl18 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl20 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId19, operatorStateEnterpriseTypeImpl20);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean23 = databaseStateEnterpriseImpl22.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl18.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl21,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl27.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl29 = databaseStateEnterpriseImpl27.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId26, operatorStateEnterpriseTypeImpl29);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId32 = databaseStateEnterpriseImpl22.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional33 = databaseStateEnterpriseImpl22.failure();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl20 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl20.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl29 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl29.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNull(namedDatabaseId32);
    org.junit.Assert.assertNotNull(throwableOptional33);
  }

  @Test
  public void test344() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test344");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl1.databaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = databaseStateEnterpriseImpl4.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional6 = databaseStateEnterpriseImpl4.failure();
    boolean boolean7 = databaseStateEnterpriseImpl1.equals(
        (java.lang.Object) databaseStateEnterpriseImpl4);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    java.lang.Throwable throwable16 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        throwable16, databaseStateEnterpriseImpl17);
    io.github.onograph.dbms.StateChangeException stateChangeException20 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException15, databaseStateEnterpriseImpl17);
    java.lang.Throwable throwable21 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException24 = new io.github.onograph.dbms.StateChangeException(
        throwable21, databaseStateEnterpriseImpl22);
    stateChangeException20.addSuppressed((java.lang.Throwable) stateChangeException24);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo26 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException24, sysCrashCauseInfo26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo29 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent30 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException24, namedDatabaseId28, gdbCrashCauseInfo29);
    stateChangeException11.addSuppressed((java.lang.Throwable) stateChangeException24);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = databaseStateEnterpriseImpl4.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException24);
    boolean boolean33 = databaseStateEnterpriseImpl32.hasFailed();
    boolean boolean34 = databaseStateEnterpriseImpl32.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl35 = databaseStateEnterpriseImpl32.operatorState();
    java.lang.Throwable throwable36 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = databaseStateEnterpriseImpl37.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException39 = new io.github.onograph.dbms.StateChangeException(
        throwable36, databaseStateEnterpriseImpl37);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl42 = databaseStateEnterpriseImpl40.operatorState();
    io.github.onograph.dbms.StateChangeException stateChangeException43 = new io.github.onograph.dbms.StateChangeException(
        throwable36, databaseStateEnterpriseImpl40);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl44 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = databaseStateEnterpriseImpl44.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable46 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl47.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException49 = new io.github.onograph.dbms.StateChangeException(
        throwable46, databaseStateEnterpriseImpl47);
    java.lang.Throwable throwable50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException53 = new io.github.onograph.dbms.StateChangeException(
        throwable50, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl51);
    java.lang.Throwable throwable55 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = databaseStateEnterpriseImpl56.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException58 = new io.github.onograph.dbms.StateChangeException(
        throwable55, databaseStateEnterpriseImpl56);
    stateChangeException54.addSuppressed((java.lang.Throwable) stateChangeException58);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = databaseStateEnterpriseImpl45.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException58);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = databaseStateEnterpriseImpl40.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException58);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = databaseStateEnterpriseImpl32.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException58);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNull(namedDatabaseId5);
    org.junit.Assert.assertNotNull(throwableOptional6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo26 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo26.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo29 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo29.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl35 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_DEFINED + "'",
        operatorStateEnterpriseTypeImpl35.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_DEFINED));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl42 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl42.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl44);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
  }

  @Test
  public void test345() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test345");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard11 = null;
    java.time.Duration duration12 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl13 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel4, availabilityGuard11, duration12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    java.time.Clock clock15 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel16 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard17 = null;
    java.time.Duration duration18 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl19 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock15, defaultSystemGraphDbmsModel16, availabilityGuard17, duration18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    java.time.Clock clock21 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel22 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard23 = null;
    java.time.Duration duration24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl25 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock21, defaultSystemGraphDbmsModel22, availabilityGuard23, duration24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason27 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl25.prnuratForNaDa(namedDatabaseId26, preventReason27);
    databaseStartupControllerAbortableImpl19.prnuratForNaDa(namedDatabaseId20, preventReason27);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId30 = null;
    java.time.Clock clock31 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel32 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard33 = null;
    java.time.Duration duration34 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl35 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock31, defaultSystemGraphDbmsModel32, availabilityGuard33, duration34);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId36 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason37 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl35.prnuratForNaDa(namedDatabaseId36, preventReason37);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId39 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason40 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl35.prnuratForNaDa(namedDatabaseId39, preventReason40);
    databaseStartupControllerAbortableImpl19.prnuratForNaDa(namedDatabaseId30, preventReason40);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId43 = null;
    java.time.Clock clock44 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel45 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard46 = null;
    java.time.Duration duration47 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl48 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock44, defaultSystemGraphDbmsModel45, availabilityGuard46, duration47);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId49 = null;
    java.time.Clock clock50 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel51 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard52 = null;
    java.time.Duration duration53 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl54 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock50, defaultSystemGraphDbmsModel51, availabilityGuard52, duration53);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId55 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason56 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl54.prnuratForNaDa(namedDatabaseId55, preventReason56);
    databaseStartupControllerAbortableImpl48.prnuratForNaDa(namedDatabaseId49, preventReason56);
    databaseStartupControllerAbortableImpl19.aluabForNaDa(namedDatabaseId43, preventReason56);
    databaseStartupControllerAbortableImpl13.prnuratForNaDa(namedDatabaseId14, preventReason56);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId61 = null;
    try {
      databaseStartupControllerAbortableImpl13.strdForNa(namedDatabaseId61);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason27 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason27.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason37 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason37.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason40 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason40.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason56 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason56.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test346() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test346");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    boolean boolean11 = dbmsResolverMeta0.equals((java.lang.Object) clock1);
    dbmsResolverMeta0.jonal();
    dbmsResolverMeta0.jonal();
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test347() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test347");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    java.time.Clock clock29 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel30 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard31 = null;
    java.time.Duration duration32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl33 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock29, defaultSystemGraphDbmsModel30, availabilityGuard31, duration32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason35 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId34, preventReason35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason38 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId37, preventReason38);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId28, preventReason38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = null;
    java.time.Clock clock42 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel43 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard44 = null;
    java.time.Duration duration45 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl46 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock42, defaultSystemGraphDbmsModel43, availabilityGuard44, duration45);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId47 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason48 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl46.prnuratForNaDa(namedDatabaseId47, preventReason48);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId41, preventReason48);
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason35 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason35.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason38 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason38.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason48 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason48.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test348() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test348");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.time.Clock clock3 = null;
    java.time.Clock clock4 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier5 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel6 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock4, defaultSystemGraphDbmsModel6, availabilityGuard7, duration8);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard10 = null;
    java.time.Duration duration11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl12 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock3, defaultSystemGraphDbmsModel6, availabilityGuard10, duration11);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard13 = null;
    java.time.Duration duration14 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl15 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel6, availabilityGuard13, duration14);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard16 = null;
    java.time.Duration duration17 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl18 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel6, availabilityGuard16, duration17);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard19 = null;
    java.time.Duration duration20 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl21 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel6, availabilityGuard19, duration20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    java.time.Clock clock23 = null;
    java.time.Clock clock24 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier25 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel26 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier25);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard27 = null;
    java.time.Duration duration28 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl29 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock24, defaultSystemGraphDbmsModel26, availabilityGuard27, duration28);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard30 = null;
    java.time.Duration duration31 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl32 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock23, defaultSystemGraphDbmsModel26, availabilityGuard30, duration31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId33 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason34 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl32.aluabForNaDa(namedDatabaseId33, preventReason34);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId36 = null;
    java.time.Clock clock37 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel38 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard39 = null;
    java.time.Duration duration40 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl41 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock37, defaultSystemGraphDbmsModel38, availabilityGuard39, duration40);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId42 = null;
    java.time.Clock clock43 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel44 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard45 = null;
    java.time.Duration duration46 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl47 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock43, defaultSystemGraphDbmsModel44, availabilityGuard45, duration46);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId48 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason49 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl47.prnuratForNaDa(namedDatabaseId48, preventReason49);
    databaseStartupControllerAbortableImpl41.prnuratForNaDa(namedDatabaseId42, preventReason49);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId52 = null;
    java.time.Clock clock53 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel54 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard55 = null;
    java.time.Duration duration56 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl57 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock53, defaultSystemGraphDbmsModel54, availabilityGuard55, duration56);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId58 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason59 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl57.prnuratForNaDa(namedDatabaseId58, preventReason59);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId61 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason62 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl57.prnuratForNaDa(namedDatabaseId61, preventReason62);
    databaseStartupControllerAbortableImpl41.prnuratForNaDa(namedDatabaseId52, preventReason62);
    databaseStartupControllerAbortableImpl32.prnuratForNaDa(namedDatabaseId36, preventReason62);
    databaseStartupControllerAbortableImpl21.prnuratForNaDa(namedDatabaseId22, preventReason62);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId67 = null;
    try {
      boolean boolean68 = databaseStartupControllerAbortableImpl21.shouldAbort(namedDatabaseId67);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason34 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason34.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason49 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason49.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason59 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason59.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason62 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason62.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test349() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test349");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl1 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId0, operatorStateEnterpriseTypeImpl1);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = databaseStateEnterpriseImpl2.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta4 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray5 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList6 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean7 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList6,
        namedDatabaseIdArray5);
    dbmsResolverMeta4.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList6);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter9 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl10 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = databaseStateEnterpriseImpl12.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional14 = databaseStateEnterpriseImpl12.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable16 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        throwable16, databaseStateEnterpriseImpl17);
    databaseStateUpdateHandlerOppStatsImpl10.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl15,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl17);
    boolean boolean21 = dbmsResolverMeta4.equals((java.lang.Object) databaseStateEnterpriseImpl17);
    java.lang.Throwable throwable22 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        throwable22, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo26 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException25, sysCrashCauseInfo26);
    boolean boolean28 = dbmsResolverMeta4.equals((java.lang.Object) stateChangeException25);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter30 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl31 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter30);
    boolean boolean32 = databaseStateEnterpriseImpl29.equals((java.lang.Object) counter30);
    java.util.Optional<java.lang.Throwable> throwableOptional33 = databaseStateEnterpriseImpl29.failure();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl34 = databaseStateEnterpriseImpl29.operatorState();
    io.github.onograph.dbms.StateChangeException stateChangeException35 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException25, databaseStateEnterpriseImpl29);
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction36 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter37 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl38 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter37);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    boolean boolean42 = databaseStateEnterpriseImpl40.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl43 = databaseStateEnterpriseImpl40.operatorState();
    databaseStateUpdateHandlerOppStatsImpl38.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl40);
    boolean boolean45 = dbmsResolverAction36.equals(
        (java.lang.Object) databaseStateEnterpriseImpl40);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean47 = dbmsResolverAction36.equals(
        (java.lang.Object) databaseStateEnterpriseImpl46);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl46.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl49 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl50 = databaseStateEnterpriseImpl49.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable51 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl53 = databaseStateEnterpriseImpl52.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        throwable51, databaseStateEnterpriseImpl52);
    java.lang.Throwable throwable55 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = databaseStateEnterpriseImpl56.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException58 = new io.github.onograph.dbms.StateChangeException(
        throwable55, databaseStateEnterpriseImpl56);
    io.github.onograph.dbms.StateChangeException stateChangeException59 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException54, databaseStateEnterpriseImpl56);
    java.lang.Throwable throwable60 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = databaseStateEnterpriseImpl61.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException63 = new io.github.onograph.dbms.StateChangeException(
        throwable60, databaseStateEnterpriseImpl61);
    stateChangeException59.addSuppressed((java.lang.Throwable) stateChangeException63);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl65 = databaseStateEnterpriseImpl50.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException63);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo66 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str67 = sysCrashCauseInfo66.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent68 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException63, sysCrashCauseInfo66);
    java.lang.Throwable throwable69 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl70 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl71 = databaseStateEnterpriseImpl70.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException72 = new io.github.onograph.dbms.StateChangeException(
        throwable69, databaseStateEnterpriseImpl70);
    java.lang.Throwable throwable73 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl74 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl75 = databaseStateEnterpriseImpl74.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException76 = new io.github.onograph.dbms.StateChangeException(
        throwable73, databaseStateEnterpriseImpl74);
    io.github.onograph.dbms.StateChangeException stateChangeException77 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException72, databaseStateEnterpriseImpl74);
    java.lang.Throwable throwable78 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl79 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl80 = databaseStateEnterpriseImpl79.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException81 = new io.github.onograph.dbms.StateChangeException(
        throwable78, databaseStateEnterpriseImpl79);
    stateChangeException77.addSuppressed((java.lang.Throwable) stateChangeException81);
    stateChangeException63.addSuppressed((java.lang.Throwable) stateChangeException81);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId84 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo85 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str86 = gdbCrashCauseInfo85.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent87 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException63, namedDatabaseId84, gdbCrashCauseInfo85);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl88 = databaseStateEnterpriseImpl46.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException63);
    io.github.onograph.dbms.StateChangeException stateChangeException89 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException35, databaseStateEnterpriseImpl88);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl90 = databaseStateEnterpriseImpl3.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException35);
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl91 = databaseStateEnterpriseImpl90.operatorState();
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl1 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl1.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(dbmsResolverMeta4);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNull(namedDatabaseId13);
    org.junit.Assert.assertNotNull(throwableOptional14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo26 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo26.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertNotNull(throwableOptional33);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl34 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl34.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNotNull(dbmsResolverAction36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl43 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl43.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl49);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl50);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl53);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl65);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo66 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo66.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str67 + "' != '" + "Discovery system failed irrecoverably" + "'", str67,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl70);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl71);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl74);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl75);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl79);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl80);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo85 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo85.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str86 + "' != '" + "RaftMessage applier failed" + "'",
        str86, "RaftMessage applier failed");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl88);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl90);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl91 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl91.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
  }

  @Test
  public void test350() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test350");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = databaseStateEnterpriseImpl4.helyDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl4.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl7 = databaseStateEnterpriseImpl4.operatorState();
    databaseStateUpdateHandlerOppStatsImpl2.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl3,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl4);
    boolean boolean9 = dbmsResolverAction0.equals((java.lang.Object) databaseStateEnterpriseImpl4);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = dbmsResolverAction0.equals(
        (java.lang.Object) databaseStateEnterpriseImpl10);
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo13 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent14 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable12, sysCrashCauseInfo13);
    java.lang.String str15 = sysCrashCauseInfo13.getInfo();
    boolean boolean16 = dbmsResolverAction0.equals((java.lang.Object) str15);
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl7 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl7.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo13 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo13.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "Discovery system failed irrecoverably" + "'", str15,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test351() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test351");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    int int5 = sysCrashEvent2.getICe();
    java.lang.Throwable throwable6 = sysCrashEvent2.gecsThrowable();
    int int7 = sysCrashEvent2.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo8 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    org.junit.Assert.assertNull(throwable6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo8 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo8.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
  }

  @Test
  public void test352() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test352");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException7, databaseStateEnterpriseImpl9);
    java.lang.Throwable throwable13 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException16 = new io.github.onograph.dbms.StateChangeException(
        throwable13, databaseStateEnterpriseImpl14);
    stateChangeException12.addSuppressed((java.lang.Throwable) stateChangeException16);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo18 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException16, sysCrashCauseInfo18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo21 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent22 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException16, namedDatabaseId20, gdbCrashCauseInfo21);
    stateChangeException3.addSuppressed((java.lang.Throwable) stateChangeException16);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter24 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl25 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter24);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean27 = databaseStateEnterpriseImpl26.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = databaseStateEnterpriseImpl26.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional29 = databaseStateEnterpriseImpl26.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = databaseStateEnterpriseImpl26.helyDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter31 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl32 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId33 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl34 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId33, operatorStateEnterpriseTypeImpl34);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean37 = databaseStateEnterpriseImpl36.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl32.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl35,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl36);
    databaseStateUpdateHandlerOppStatsImpl25.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl35);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter40 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl41 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter40);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean43 = databaseStateEnterpriseImpl42.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId44 = databaseStateEnterpriseImpl42.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional45 = databaseStateEnterpriseImpl42.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter46 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl47 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter46);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId48 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl49 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId48);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId50 = databaseStateEnterpriseImpl49.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional51 = databaseStateEnterpriseImpl49.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl49.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable53 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl54 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = databaseStateEnterpriseImpl54.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException56 = new io.github.onograph.dbms.StateChangeException(
        throwable53, databaseStateEnterpriseImpl54);
    databaseStateUpdateHandlerOppStatsImpl47.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl52,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl54);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = databaseStateEnterpriseImpl58.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl61 = databaseStateEnterpriseImpl60.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl47.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl58,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl61);
    org.neo4j.function.ThrowingAction throwingAction63 = null;
    org.neo4j.function.ThrowingAction throwingAction64 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle65 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction63, throwingAction64);
    boolean boolean66 = databaseStateEnterpriseImpl61.equals((java.lang.Object) throwingAction64);
    databaseStateUpdateHandlerOppStatsImpl41.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl42,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl61);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId68 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl69 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.intlDatabaseStateEnterpriseImpl(
        namedDatabaseId68);
    databaseStateUpdateHandlerOppStatsImpl25.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl61,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl69);
    java.lang.Throwable throwable71 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl72 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl73 = databaseStateEnterpriseImpl72.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException74 = new io.github.onograph.dbms.StateChangeException(
        throwable71, databaseStateEnterpriseImpl72);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo75 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent76 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException74, sysCrashCauseInfo75);
    java.lang.Throwable throwable77 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl78 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl79 = databaseStateEnterpriseImpl78.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException80 = new io.github.onograph.dbms.StateChangeException(
        throwable77, databaseStateEnterpriseImpl78);
    boolean boolean81 = sysCrashEvent76.equals((java.lang.Object) throwable77);
    java.lang.Throwable throwable82 = sysCrashEvent76.gecsThrowable();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl83 = databaseStateEnterpriseImpl69.falDatabaseStateEnterpriseImpl(
        throwable82);
    io.github.onograph.dbms.StateChangeException stateChangeException84 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException16, databaseStateEnterpriseImpl69);
    java.lang.String str85 = stateChangeException84.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo18 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo18.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo21 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo21.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNull(namedDatabaseId28);
    org.junit.Assert.assertNotNull(throwableOptional29);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl34 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl34.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNull(namedDatabaseId44);
    org.junit.Assert.assertNotNull(throwableOptional45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl49);
    org.junit.Assert.assertNull(namedDatabaseId50);
    org.junit.Assert.assertNotNull(throwableOptional51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl54);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl58);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl61);
    org.junit.Assert.assertNotNull(lifecycle65);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl69);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl72);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl73);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo75 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo75.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl78);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl79);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    org.junit.Assert.assertNotNull(throwable82);
    org.junit.Assert.assertNull("throwable82.getLocalizedMessage() == null",
        throwable82.getLocalizedMessage());
    org.junit.Assert.assertNull("throwable82.getMessage() == null", throwable82.getMessage());
    org.junit.Assert.assertEquals(throwable82.toString(),
        "io.github.onograph.dbms.StateChangeException");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl83);
    org.junit.Assert.assertEquals("'" + str85 + "' != '"
            + "io.github.onograph.dbms.StateChangeException: io.github.onograph.dbms.StateChangeException"
            + "'", str85,
        "io.github.onograph.dbms.StateChangeException: io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test353() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test353");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    dbmsResolverMeta0.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta8 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta8.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray10 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList11 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11,
        namedDatabaseIdArray10);
    dbmsResolverMeta8.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdCollection15 = null;
    try {
      dbmsResolverMeta0.joiForCo(namedDatabaseIdCollection15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta8);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test354() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test354");
    }
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl0 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_RUNNING;
    java.lang.String str1 = operatorStateEnterpriseTypeImpl0.description();
    boolean boolean2 = operatorStateEnterpriseTypeImpl0.terminal();
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl0 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_RUNNING + "'",
        operatorStateEnterpriseTypeImpl0.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_RUNNING));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "online" + "'", str1, "online");
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
  }

  @Test
  public void test355() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test355");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    structureMetaService3.shutdown();
    structureMetaService3.init();
    structureMetaService3.shutdown();
    try {
      structureMetaService3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test356() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test356");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    java.lang.Throwable throwable5 = sysCrashEvent2.gecsThrowable();
    java.lang.Throwable throwable6 = sysCrashEvent2.gecsThrowable();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNull(throwable5);
    org.junit.Assert.assertNull(throwable6);
  }

  @Test
  public void test357() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test357");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    int int5 = sysCrashEvent2.getICe();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo6 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    int int7 = sysCrashEvent2.getICe();
    int int8 = sysCrashEvent2.getICe();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    org.junit.Assert.assertTrue("'" + causeInfo6 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo6.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
  }

  @Test
  public void test358() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test358");
    }
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer0 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService3 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer0, namedDatabaseIdConsumer1, namedDatabaseId2);
    structureMetaService3.init();
    structureMetaService3.init();
    structureMetaService3.init();
    structureMetaService3.shutdown();
    structureMetaService3.shutdown();
    org.junit.Assert.assertNotNull(structureMetaService3);
  }

  @Test
  public void test359() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test359");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    java.time.Clock clock29 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel30 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard31 = null;
    java.time.Duration duration32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl33 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock29, defaultSystemGraphDbmsModel30, availabilityGuard31, duration32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason35 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId34, preventReason35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason38 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId37, preventReason38);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId28, preventReason38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = null;
    java.time.Clock clock42 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel43 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard44 = null;
    java.time.Duration duration45 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl46 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock42, defaultSystemGraphDbmsModel43, availabilityGuard44, duration45);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId47 = null;
    java.time.Clock clock48 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel49 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard50 = null;
    java.time.Duration duration51 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl52 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock48, defaultSystemGraphDbmsModel49, availabilityGuard50, duration51);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId53 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason54 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl52.prnuratForNaDa(namedDatabaseId53, preventReason54);
    databaseStartupControllerAbortableImpl46.prnuratForNaDa(namedDatabaseId47, preventReason54);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId57 = null;
    java.time.Clock clock58 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel59 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard60 = null;
    java.time.Duration duration61 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl62 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock58, defaultSystemGraphDbmsModel59, availabilityGuard60, duration61);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId63 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason64 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl62.prnuratForNaDa(namedDatabaseId63, preventReason64);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId66 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason67 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl62.prnuratForNaDa(namedDatabaseId66, preventReason67);
    databaseStartupControllerAbortableImpl46.prnuratForNaDa(namedDatabaseId57, preventReason67);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId41, preventReason67);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId71 = null;
    try {
      databaseStartupControllerAbortableImpl4.reefoForNa(namedDatabaseId71);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason35 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason35.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason38 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason38.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason54 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason54.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason64 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason64.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason67 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason67.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test360() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test360");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    java.time.Clock clock29 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel30 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard31 = null;
    java.time.Duration duration32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl33 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock29, defaultSystemGraphDbmsModel30, availabilityGuard31, duration32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason35 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId34, preventReason35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason38 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId37, preventReason38);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId28, preventReason38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = null;
    try {
      databaseStartupControllerAbortableImpl4.strdForNa(namedDatabaseId41);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason35 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason35.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason38 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason38.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test361() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test361");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    int int11 = sysCrashEvent10.getICe();
    int int12 = sysCrashEvent10.getICe();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
  }

  @Test
  public void test362() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test362");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable9 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl10);
    java.lang.Throwable throwable13 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException16 = new io.github.onograph.dbms.StateChangeException(
        throwable13, databaseStateEnterpriseImpl14);
    io.github.onograph.dbms.StateChangeException stateChangeException17 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException12, databaseStateEnterpriseImpl14);
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    stateChangeException17.addSuppressed((java.lang.Throwable) stateChangeException21);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = databaseStateEnterpriseImpl8.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException21);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    java.lang.Throwable throwable28 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = databaseStateEnterpriseImpl29.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException31 = new io.github.onograph.dbms.StateChangeException(
        throwable28, databaseStateEnterpriseImpl29);
    java.lang.Throwable throwable32 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = databaseStateEnterpriseImpl33.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException35 = new io.github.onograph.dbms.StateChangeException(
        throwable32, databaseStateEnterpriseImpl33);
    io.github.onograph.dbms.StateChangeException stateChangeException36 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException31, databaseStateEnterpriseImpl33);
    java.lang.Throwable throwable37 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl38.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException40 = new io.github.onograph.dbms.StateChangeException(
        throwable37, databaseStateEnterpriseImpl38);
    stateChangeException36.addSuppressed((java.lang.Throwable) stateChangeException40);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo42 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent43 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException40, sysCrashCauseInfo42);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId44 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo45 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent46 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException40, namedDatabaseId44, gdbCrashCauseInfo45);
    stateChangeException27.addSuppressed((java.lang.Throwable) stateChangeException40);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl23.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException27);
    boolean boolean49 = dbmsResolverMeta0.equals((java.lang.Object) databaseStateEnterpriseImpl48);
    dbmsResolverMeta0.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta51 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray52 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList53 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean54 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList53,
        namedDatabaseIdArray52);
    dbmsResolverMeta51.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList53);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList53);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo42 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo42.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo45 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo45.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta51);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray52);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
  }

  @Test
  public void test363() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test363");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl2.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter6 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl7 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = databaseStateEnterpriseImpl9.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional11 = databaseStateEnterpriseImpl9.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable13 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException16 = new io.github.onograph.dbms.StateChangeException(
        throwable13, databaseStateEnterpriseImpl14);
    databaseStateUpdateHandlerOppStatsImpl7.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = databaseStateEnterpriseImpl18.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl7.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl18,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl21);
    org.neo4j.function.ThrowingAction throwingAction23 = null;
    org.neo4j.function.ThrowingAction throwingAction24 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle25 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction23, throwingAction24);
    boolean boolean26 = databaseStateEnterpriseImpl21.equals((java.lang.Object) throwingAction24);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl21);
    java.util.Optional<java.lang.Throwable> throwableOptional28 = databaseStateEnterpriseImpl2.failure();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNull(namedDatabaseId10);
    org.junit.Assert.assertNotNull(throwableOptional11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(lifecycle25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(throwableOptional28);
  }

  @Test
  public void test364() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test364");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException7, databaseStateEnterpriseImpl9);
    stateChangeException3.addSuppressed((java.lang.Throwable) stateChangeException7);
    java.lang.Throwable[] throwableArray14 = stateChangeException7.getSuppressed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(throwableArray14);
  }

  @Test
  public void test365() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test365");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo4 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent5 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo4);
    java.lang.String str6 = sysCrashCauseInfo4.getInfo();
    java.lang.String str7 = sysCrashCauseInfo4.getInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo4.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Discovery system failed irrecoverably" + "'", str6,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Discovery system failed irrecoverably" + "'", str7,
        "Discovery system failed irrecoverably");
  }

  @Test
  public void test366() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test366");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    boolean boolean9 = gdbCrashEvent6.equals((java.lang.Object) true);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = databaseStateEnterpriseImpl10.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl10.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl10.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    boolean boolean15 = gdbCrashEvent6.equals((java.lang.Object) databaseStateEnterpriseImpl10);
    java.lang.Throwable throwable16 = gdbCrashEvent6.gecsThrowable();
    java.lang.Throwable throwable17 = gdbCrashEvent6.gecsThrowable();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNull(throwable16);
    org.junit.Assert.assertNull(throwable17);
  }

  @Test
  public void test367() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test367");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable[] throwableArray9 = stateChangeException8.getSuppressed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(throwableArray9);
  }

  @Test
  public void test368() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test368");
    }
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo0 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR;
    java.lang.String str1 = gdbCrashCauseInfo0.getInfo();
    java.lang.String str2 = gdbCrashCauseInfo0.getInfo();
    java.lang.String str3 = gdbCrashCauseInfo0.getInfo();
    java.lang.String str4 = gdbCrashCauseInfo0.getInfo();
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo0 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR + "'",
        gdbCrashCauseInfo0.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CMD_ERROR));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Command application failed" + "'", str1,
        "Command application failed");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Command application failed" + "'", str2,
        "Command application failed");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Command application failed" + "'", str3,
        "Command application failed");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Command application failed" + "'", str4,
        "Command application failed");
  }

  @Test
  public void test369() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test369");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo5 = sysCrashEvent2.gersCrashSignalerCauseInfo();
    java.lang.Throwable throwable6 = sysCrashEvent2.gecsThrowable();
    int int7 = sysCrashEvent2.getICe();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl9 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    java.lang.String str10 = operatorStateEnterpriseTypeImpl9.description();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId8, operatorStateEnterpriseTypeImpl9);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    boolean boolean13 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable14 = sysCrashEvent2.gecsThrowable();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl17 = databaseStateEnterpriseImpl15.operatorState();
    boolean boolean18 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + causeInfo5 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo5.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl9 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl9.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "dropped" + "'", str10, "dropped");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNull(throwable14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl17 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl17.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
  }

  @Test
  public void test370() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test370");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    boolean boolean3 = databaseStateEnterpriseImpl0.equals((java.lang.Object) counter1);
    boolean boolean4 = databaseStateEnterpriseImpl0.hasFailed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test371() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test371");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str18 = sysCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo17);
    java.lang.String str20 = sysCrashCauseInfo17.getInfo();
    java.lang.String str21 = sysCrashCauseInfo17.getInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Discovery system failed irrecoverably" + "'", str18,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertEquals(
        "'" + str20 + "' != '" + "Discovery system failed irrecoverably" + "'", str20,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "Discovery system failed irrecoverably" + "'", str21,
        "Discovery system failed irrecoverably");
  }

  @Test
  public void test372() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test372");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable[] throwableArray9 = stateChangeException3.getSuppressed();
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo10 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent11 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo10);
    java.lang.String str12 = sysCrashCauseInfo10.getInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(throwableArray9);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo10 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo10.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Discovery system failed irrecoverably" + "'", str12,
        "Discovery system failed irrecoverably");
  }

  @Test
  public void test373() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test373");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl4 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId3, operatorStateEnterpriseTypeImpl4);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean7 = databaseStateEnterpriseImpl6.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl2.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl5,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl6.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl6.helyDatabaseStateEnterpriseImpl();
    boolean boolean11 = dbmsResolverAction0.equals(
        (java.lang.Object) databaseStateEnterpriseImpl10);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta12 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta12.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray14 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList15 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean16 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList15,
        namedDatabaseIdArray14);
    dbmsResolverMeta12.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList15);
    dbmsResolverMeta12.jonal();
    dbmsResolverMeta12.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta20 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta20.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray22 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList23 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean24 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList23,
        namedDatabaseIdArray22);
    dbmsResolverMeta20.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList23);
    dbmsResolverMeta20.jonal();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl27.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    java.lang.Throwable throwable33 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException36 = new io.github.onograph.dbms.StateChangeException(
        throwable33, databaseStateEnterpriseImpl34);
    io.github.onograph.dbms.StateChangeException stateChangeException37 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException32, databaseStateEnterpriseImpl34);
    java.lang.Throwable throwable38 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = databaseStateEnterpriseImpl39.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException41 = new io.github.onograph.dbms.StateChangeException(
        throwable38, databaseStateEnterpriseImpl39);
    stateChangeException37.addSuppressed((java.lang.Throwable) stateChangeException41);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = databaseStateEnterpriseImpl28.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException41);
    java.lang.Throwable throwable44 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = databaseStateEnterpriseImpl45.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException47 = new io.github.onograph.dbms.StateChangeException(
        throwable44, databaseStateEnterpriseImpl45);
    java.lang.Throwable throwable48 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl49 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl50 = databaseStateEnterpriseImpl49.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException51 = new io.github.onograph.dbms.StateChangeException(
        throwable48, databaseStateEnterpriseImpl49);
    java.lang.Throwable throwable52 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl53 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl54 = databaseStateEnterpriseImpl53.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException55 = new io.github.onograph.dbms.StateChangeException(
        throwable52, databaseStateEnterpriseImpl53);
    io.github.onograph.dbms.StateChangeException stateChangeException56 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException51, databaseStateEnterpriseImpl53);
    java.lang.Throwable throwable57 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl59 = databaseStateEnterpriseImpl58.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException60 = new io.github.onograph.dbms.StateChangeException(
        throwable57, databaseStateEnterpriseImpl58);
    stateChangeException56.addSuppressed((java.lang.Throwable) stateChangeException60);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo62 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent63 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException60, sysCrashCauseInfo62);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId64 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo65 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent66 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException60, namedDatabaseId64, gdbCrashCauseInfo65);
    stateChangeException47.addSuppressed((java.lang.Throwable) stateChangeException60);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl68 = databaseStateEnterpriseImpl43.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException47);
    boolean boolean69 = dbmsResolverMeta20.equals((java.lang.Object) databaseStateEnterpriseImpl68);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta70 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta70.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray72 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList73 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean74 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList73,
        namedDatabaseIdArray72);
    dbmsResolverMeta70.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList73);
    dbmsResolverMeta70.jonal();
    dbmsResolverMeta70.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta78 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta78.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray80 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList81 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean82 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList81,
        namedDatabaseIdArray80);
    dbmsResolverMeta78.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList81);
    dbmsResolverMeta70.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList81);
    dbmsResolverMeta20.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList81);
    dbmsResolverMeta12.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList81);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl87 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter88 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl89 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter88);
    boolean boolean90 = databaseStateEnterpriseImpl87.equals((java.lang.Object) counter88);
    java.util.Optional<java.lang.Throwable> throwableOptional91 = databaseStateEnterpriseImpl87.failure();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl92 = databaseStateEnterpriseImpl87.operatorState();
    boolean boolean93 = databaseStateEnterpriseImpl87.hasFailed();
    boolean boolean94 = dbmsResolverMeta12.equals((java.lang.Object) databaseStateEnterpriseImpl87);
    boolean boolean95 = dbmsResolverAction0.equals(
        (java.lang.Object) databaseStateEnterpriseImpl87);
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl4 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl4.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta12);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta20);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl49);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl50);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl53);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl54);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl58);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl59);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo62 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo62.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo65 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo65.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl68);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta70);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray72);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta78);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray80);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl87);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    org.junit.Assert.assertNotNull(throwableOptional91);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl92 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl92.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
  }

  @Test
  public void test374() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test374");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    java.time.Clock clock29 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel30 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard31 = null;
    java.time.Duration duration32 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl33 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock29, defaultSystemGraphDbmsModel30, availabilityGuard31, duration32);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason35 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId34, preventReason35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason38 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl33.prnuratForNaDa(namedDatabaseId37, preventReason38);
    databaseStartupControllerAbortableImpl4.aluabForNaDa(namedDatabaseId28, preventReason38);
    java.lang.Throwable throwable41 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = databaseStateEnterpriseImpl42.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException44 = new io.github.onograph.dbms.StateChangeException(
        throwable41, databaseStateEnterpriseImpl42);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId45 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo46 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent47 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable41, namedDatabaseId45, gdbCrashCauseInfo46);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId48 = gdbCrashEvent47.getNamedDatabaseId();
    boolean boolean50 = gdbCrashEvent47.equals((java.lang.Object) true);
    try {
      databaseStartupControllerAbortableImpl4.handleCrash(gdbCrashEvent47);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason35 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason35.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason38 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason38.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo46 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo46.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId48);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
  }

  @Test
  public void test375() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test375");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo4 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent5 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo4);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    boolean boolean10 = sysCrashEvent5.equals((java.lang.Object) throwable6);
    java.lang.Throwable throwable11 = sysCrashEvent5.gecsThrowable();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter13 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl14 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter13);
    boolean boolean15 = databaseStateEnterpriseImpl12.equals((java.lang.Object) counter13);
    java.lang.Throwable throwable16 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        throwable16, databaseStateEnterpriseImpl17);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    io.github.onograph.dbms.StateChangeException stateChangeException24 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException19, databaseStateEnterpriseImpl21);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo25 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent26 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException19, sysCrashCauseInfo25);
    java.lang.Throwable throwable27 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = databaseStateEnterpriseImpl28.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException30 = new io.github.onograph.dbms.StateChangeException(
        throwable27, databaseStateEnterpriseImpl28);
    java.lang.Throwable throwable31 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = databaseStateEnterpriseImpl32.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException34 = new io.github.onograph.dbms.StateChangeException(
        throwable31, databaseStateEnterpriseImpl32);
    io.github.onograph.dbms.StateChangeException stateChangeException35 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException30, databaseStateEnterpriseImpl32);
    java.lang.Throwable throwable36 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = databaseStateEnterpriseImpl37.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException39 = new io.github.onograph.dbms.StateChangeException(
        throwable36, databaseStateEnterpriseImpl37);
    stateChangeException35.addSuppressed((java.lang.Throwable) stateChangeException39);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo41 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent42 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException39, sysCrashCauseInfo41);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent43 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException19, sysCrashCauseInfo41);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter44 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl45 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter44);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean47 = databaseStateEnterpriseImpl46.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId48 = databaseStateEnterpriseImpl46.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter49 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl50 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter49);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId51 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId51);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId53 = databaseStateEnterpriseImpl52.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional54 = databaseStateEnterpriseImpl52.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = databaseStateEnterpriseImpl52.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable56 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl58 = databaseStateEnterpriseImpl57.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException59 = new io.github.onograph.dbms.StateChangeException(
        throwable56, databaseStateEnterpriseImpl57);
    databaseStateUpdateHandlerOppStatsImpl50.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl55,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl57);
    databaseStateUpdateHandlerOppStatsImpl45.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl46,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl55);
    java.lang.Throwable throwable62 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl63 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl64 = databaseStateEnterpriseImpl63.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException65 = new io.github.onograph.dbms.StateChangeException(
        throwable62, databaseStateEnterpriseImpl63);
    java.lang.Throwable throwable66 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl67 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl68 = databaseStateEnterpriseImpl67.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException69 = new io.github.onograph.dbms.StateChangeException(
        throwable66, databaseStateEnterpriseImpl67);
    io.github.onograph.dbms.StateChangeException stateChangeException70 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException65, databaseStateEnterpriseImpl67);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl71 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl72 = databaseStateEnterpriseImpl71.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl73 = databaseStateEnterpriseImpl71.operatorState();
    boolean boolean74 = databaseStateEnterpriseImpl71.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException75 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException65, databaseStateEnterpriseImpl71);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl76 = databaseStateEnterpriseImpl55.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException75);
    boolean boolean77 = sysCrashEvent43.equals((java.lang.Object) stateChangeException75);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl78 = databaseStateEnterpriseImpl12.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException75);
    throwable11.addSuppressed((java.lang.Throwable) stateChangeException75);
    java.lang.Throwable[] throwableArray80 = throwable11.getSuppressed();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo4 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo4.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(throwable11);
    org.junit.Assert.assertNull("throwable11.getLocalizedMessage() == null",
        throwable11.getLocalizedMessage());
    org.junit.Assert.assertNull("throwable11.getMessage() == null", throwable11.getMessage());
    org.junit.Assert.assertEquals(throwable11.toString(),
        "io.github.onograph.dbms.StateChangeException");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo25 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo25.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo41 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo41.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertNull(namedDatabaseId48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNull(namedDatabaseId53);
    org.junit.Assert.assertNotNull(throwableOptional54);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl58);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl63);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl64);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl67);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl68);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl71);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl72);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl73 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl73.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl76);
    org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl78);
    org.junit.Assert.assertNotNull(throwableArray80);
  }

  @Test
  public void test376() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test376");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl3.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional5 = databaseStateEnterpriseImpl3.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        throwable7, databaseStateEnterpriseImpl8);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl6,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = databaseStateEnterpriseImpl15.databaseId();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(throwableOptional5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNull(namedDatabaseId17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
  }

  @Test
  public void test377() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test377");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction1 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = databaseStateEnterpriseImpl2.helyDatabaseStateEnterpriseImpl();
    boolean boolean4 = databaseStateEnterpriseImpl2.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl5 = databaseStateEnterpriseImpl2.operatorState();
    boolean boolean6 = dbmsResolverAction1.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl5);
    boolean boolean7 = operatorStateEnterpriseTypeImpl5.terminal();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId0, operatorStateEnterpriseTypeImpl5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = databaseStateEnterpriseImpl10.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException23);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo26 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str27 = sysCrashCauseInfo26.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent28 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException23, sysCrashCauseInfo26);
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    java.lang.Throwable throwable33 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl35 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException36 = new io.github.onograph.dbms.StateChangeException(
        throwable33, databaseStateEnterpriseImpl34);
    io.github.onograph.dbms.StateChangeException stateChangeException37 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException32, databaseStateEnterpriseImpl34);
    java.lang.Throwable throwable38 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = databaseStateEnterpriseImpl39.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException41 = new io.github.onograph.dbms.StateChangeException(
        throwable38, databaseStateEnterpriseImpl39);
    stateChangeException37.addSuppressed((java.lang.Throwable) stateChangeException41);
    stateChangeException23.addSuppressed((java.lang.Throwable) stateChangeException41);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo44 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent45 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException23, sysCrashCauseInfo44);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = databaseStateEnterpriseImpl8.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException23);
    org.junit.Assert.assertNotNull(dbmsResolverAction1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl5 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl5.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo26 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo26.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "Discovery system failed irrecoverably" + "'", str27,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo44 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo44.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
  }

  @Test
  public void test378() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test378");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable2 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl3.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException5 = new io.github.onograph.dbms.StateChangeException(
        throwable2, databaseStateEnterpriseImpl3);
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    io.github.onograph.dbms.StateChangeException stateChangeException10 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException5, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    stateChangeException10.addSuppressed((java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl1.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException14);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo17 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str18 = sysCrashCauseInfo17.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent19 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo17);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    java.lang.Throwable throwable24 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException27 = new io.github.onograph.dbms.StateChangeException(
        throwable24, databaseStateEnterpriseImpl25);
    io.github.onograph.dbms.StateChangeException stateChangeException28 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException23, databaseStateEnterpriseImpl25);
    java.lang.Throwable throwable29 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl31 = databaseStateEnterpriseImpl30.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        throwable29, databaseStateEnterpriseImpl30);
    stateChangeException28.addSuppressed((java.lang.Throwable) stateChangeException32);
    stateChangeException14.addSuppressed((java.lang.Throwable) stateChangeException32);
    java.lang.Throwable throwable35 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException38 = new io.github.onograph.dbms.StateChangeException(
        throwable35, databaseStateEnterpriseImpl36);
    java.lang.Throwable throwable39 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl40 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = databaseStateEnterpriseImpl40.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException42 = new io.github.onograph.dbms.StateChangeException(
        throwable39, databaseStateEnterpriseImpl40);
    io.github.onograph.dbms.StateChangeException stateChangeException43 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException38, databaseStateEnterpriseImpl40);
    java.lang.Throwable throwable44 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl45 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl46 = databaseStateEnterpriseImpl45.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException47 = new io.github.onograph.dbms.StateChangeException(
        throwable44, databaseStateEnterpriseImpl45);
    stateChangeException43.addSuppressed((java.lang.Throwable) stateChangeException47);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo49 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent50 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException47, sysCrashCauseInfo49);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent51 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException14, sysCrashCauseInfo49);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo52 = sysCrashEvent51.gersCrashSignalerCauseInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo17.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str18 + "' != '" + "Discovery system failed irrecoverably" + "'", str18,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl31);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl40);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl45);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl46);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo49 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo49.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + causeInfo52 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        causeInfo52.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
  }

  @Test
  public void test379() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test379");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    java.lang.String str11 = sysCrashCauseInfo9.getInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "Discovery system failed irrecoverably" + "'", str11,
        "Discovery system failed irrecoverably");
  }

  @Test
  public void test380() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test380");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter2 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl3 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId4);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = databaseStateEnterpriseImpl5.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional7 = databaseStateEnterpriseImpl5.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable9 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl10);
    databaseStateUpdateHandlerOppStatsImpl3.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl8,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl10);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl3.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl17);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter19 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl20 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter19);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = databaseStateEnterpriseImpl22.helyDatabaseStateEnterpriseImpl();
    boolean boolean24 = databaseStateEnterpriseImpl22.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl25 = databaseStateEnterpriseImpl22.operatorState();
    databaseStateUpdateHandlerOppStatsImpl20.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl21,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = databaseStateEnterpriseImpl22.databaseId();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter29 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl30 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter29);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl32 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId31, operatorStateEnterpriseTypeImpl32);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean35 = databaseStateEnterpriseImpl34.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl30.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl33,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl34);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl37 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    boolean boolean38 = databaseStateEnterpriseImpl34.hasFailed();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean40 = databaseStateEnterpriseImpl39.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = databaseStateEnterpriseImpl39.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional42 = databaseStateEnterpriseImpl39.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl43 = databaseStateEnterpriseImpl39.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl34,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl43);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNull(namedDatabaseId6);
    org.junit.Assert.assertNotNull(throwableOptional7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl25 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl25.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertNull(namedDatabaseId27);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl32 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl32.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl37);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertNull(namedDatabaseId41);
    org.junit.Assert.assertNotNull(throwableOptional42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl43);
  }

  @Test
  public void test381() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test381");
    }
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl0 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean1 = databaseStateEnterpriseImpl0.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = databaseStateEnterpriseImpl0.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional3 = databaseStateEnterpriseImpl0.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = databaseStateEnterpriseImpl0.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = databaseStateEnterpriseImpl4.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable6 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = databaseStateEnterpriseImpl7.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException9 = new io.github.onograph.dbms.StateChangeException(
        throwable6, databaseStateEnterpriseImpl7);
    java.lang.Throwable throwable10 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl11.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException13 = new io.github.onograph.dbms.StateChangeException(
        throwable10, databaseStateEnterpriseImpl11);
    java.lang.Throwable throwable14 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = databaseStateEnterpriseImpl15.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException17 = new io.github.onograph.dbms.StateChangeException(
        throwable14, databaseStateEnterpriseImpl15);
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException13, databaseStateEnterpriseImpl15);
    java.lang.Throwable throwable19 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        throwable19, databaseStateEnterpriseImpl20);
    stateChangeException18.addSuppressed((java.lang.Throwable) stateChangeException22);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo24 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent25 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException22, sysCrashCauseInfo24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo27 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent28 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException22, namedDatabaseId26, gdbCrashCauseInfo27);
    stateChangeException9.addSuppressed((java.lang.Throwable) stateChangeException22);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = databaseStateEnterpriseImpl4.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException22);
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl31 = databaseStateEnterpriseImpl4.operatorState();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl0);
    org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertNotNull(throwableOptional3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo24 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo24.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo27 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo27.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl31 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl31.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
  }

  @Test
  public void test382() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test382");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel1 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard2 = null;
    java.time.Duration duration3 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl4 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel1, availabilityGuard2, duration3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    java.time.Clock clock6 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel7 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock6, defaultSystemGraphDbmsModel7, availabilityGuard8, duration9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason12 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl10.prnuratForNaDa(namedDatabaseId11, preventReason12);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId5, preventReason12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    java.time.Clock clock16 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel17 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard18 = null;
    java.time.Duration duration19 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl20 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock16, defaultSystemGraphDbmsModel17, availabilityGuard18, duration19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason22 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId21, preventReason22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason25 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl20.prnuratForNaDa(namedDatabaseId24, preventReason25);
    databaseStartupControllerAbortableImpl4.prnuratForNaDa(namedDatabaseId15, preventReason25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    try {
      databaseStartupControllerAbortableImpl4.reefoForNa(namedDatabaseId28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason12 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason12.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason22 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason22.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason25 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason25.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test383() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test383");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    boolean boolean9 = gdbCrashEvent6.equals((java.lang.Object) true);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = databaseStateEnterpriseImpl10.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl10.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl10.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    boolean boolean15 = gdbCrashEvent6.equals((java.lang.Object) databaseStateEnterpriseImpl10);
    boolean boolean17 = gdbCrashEvent6.equals((java.lang.Object) "RaftMessage applier failed");
    io.github.onograph.dbms.StructureMetaService structureMetaService18 = io.github.onograph.dbms.StructureMetaService.NOO_STRUCTURE_META_SERVICE;
    structureMetaService18.shutdown();
    boolean boolean20 = gdbCrashEvent6.equals((java.lang.Object) structureMetaService18);
    structureMetaService18.shutdown();
    structureMetaService18.shutdown();
    structureMetaService18.init();
    structureMetaService18.start();
    structureMetaService18.shutdown();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(structureMetaService18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
  }

  @Test
  public void test384() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test384");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo25 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent26 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException23, sysCrashCauseInfo25);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo25);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter28 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl29 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter28);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean31 = databaseStateEnterpriseImpl30.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId32 = databaseStateEnterpriseImpl30.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter33 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl34 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter33);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = databaseStateEnterpriseImpl36.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional38 = databaseStateEnterpriseImpl36.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable40 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = databaseStateEnterpriseImpl41.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException43 = new io.github.onograph.dbms.StateChangeException(
        throwable40, databaseStateEnterpriseImpl41);
    databaseStateUpdateHandlerOppStatsImpl34.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl41);
    databaseStateUpdateHandlerOppStatsImpl29.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39);
    java.lang.Throwable throwable46 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl47.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException49 = new io.github.onograph.dbms.StateChangeException(
        throwable46, databaseStateEnterpriseImpl47);
    java.lang.Throwable throwable50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException53 = new io.github.onograph.dbms.StateChangeException(
        throwable50, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = databaseStateEnterpriseImpl55.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl57 = databaseStateEnterpriseImpl55.operatorState();
    boolean boolean58 = databaseStateEnterpriseImpl55.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException59 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl55);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = databaseStateEnterpriseImpl39.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException59);
    boolean boolean61 = sysCrashEvent27.equals((java.lang.Object) stateChangeException59);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId62 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo63 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent64 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException59, namedDatabaseId62, gdbCrashCauseInfo63);
    java.lang.Throwable throwable65 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl67 = databaseStateEnterpriseImpl66.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException68 = new io.github.onograph.dbms.StateChangeException(
        throwable65, databaseStateEnterpriseImpl66);
    java.lang.Throwable throwable69 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl70 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl71 = databaseStateEnterpriseImpl70.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException72 = new io.github.onograph.dbms.StateChangeException(
        throwable69, databaseStateEnterpriseImpl70);
    io.github.onograph.dbms.StateChangeException stateChangeException73 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException68, databaseStateEnterpriseImpl70);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl74 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl75 = databaseStateEnterpriseImpl74.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl76 = databaseStateEnterpriseImpl74.operatorState();
    boolean boolean77 = databaseStateEnterpriseImpl74.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException78 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException68, databaseStateEnterpriseImpl74);
    stateChangeException59.addSuppressed((java.lang.Throwable) stateChangeException68);
    java.lang.String str80 = stateChangeException68.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo25 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo25.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNull(namedDatabaseId32);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNull(namedDatabaseId37);
    org.junit.Assert.assertNotNull(throwableOptional38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl57 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl57.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo63 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo63.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl66);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl67);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl70);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl71);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl74);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl75);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl76 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl76.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    org.junit.Assert.assertEquals(
        "'" + str80 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str80,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test385() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test385");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier3 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel4 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier3);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard5 = null;
    java.time.Duration duration6 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl7 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel4, availabilityGuard5, duration6);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl10 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel4, availabilityGuard8, duration9);
    boolean boolean11 = dbmsResolverMeta0.equals((java.lang.Object) clock1);
    dbmsResolverMeta0.jonal();
    java.lang.Throwable throwable13 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo14 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent15 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable13, sysCrashCauseInfo14);
    boolean boolean17 = sysCrashEvent15.equals((java.lang.Object) (-1));
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean19 = databaseStateEnterpriseImpl18.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = databaseStateEnterpriseImpl18.databaseId();
    boolean boolean21 = sysCrashEvent15.equals((java.lang.Object) databaseStateEnterpriseImpl18);
    java.lang.Throwable throwable22 = sysCrashEvent15.gecsThrowable();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo23 = sysCrashEvent15.gersCrashSignalerCauseInfo();
    boolean boolean24 = dbmsResolverMeta0.equals((java.lang.Object) causeInfo23);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo14 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo14.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNull(namedDatabaseId20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertNull(throwable22);
    org.junit.Assert.assertTrue("'" + causeInfo23 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        causeInfo23.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test386() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test386");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.time.Clock clock3 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier4 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel5 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier4);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard6 = null;
    java.time.Duration duration7 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl8 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock3, defaultSystemGraphDbmsModel5, availabilityGuard6, duration7);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard9 = null;
    java.time.Duration duration10 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl11 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel5, availabilityGuard9, duration10);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard12 = null;
    java.time.Duration duration13 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl14 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel5, availabilityGuard12, duration13);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard15 = null;
    java.time.Duration duration16 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl17 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel5, availabilityGuard15, duration16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    java.time.Clock clock19 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel20 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard21 = null;
    java.time.Duration duration22 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl23 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock19, defaultSystemGraphDbmsModel20, availabilityGuard21, duration22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    java.time.Clock clock25 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel26 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard27 = null;
    java.time.Duration duration28 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl29 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock25, defaultSystemGraphDbmsModel26, availabilityGuard27, duration28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId30 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason31 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl29.prnuratForNaDa(namedDatabaseId30, preventReason31);
    databaseStartupControllerAbortableImpl23.prnuratForNaDa(namedDatabaseId24, preventReason31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    java.time.Clock clock35 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel36 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard37 = null;
    java.time.Duration duration38 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl39 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock35, defaultSystemGraphDbmsModel36, availabilityGuard37, duration38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason41 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl39.prnuratForNaDa(namedDatabaseId40, preventReason41);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId43 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason44 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl39.prnuratForNaDa(namedDatabaseId43, preventReason44);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId46 = null;
    java.time.Clock clock47 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel48 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard49 = null;
    java.time.Duration duration50 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl51 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock47, defaultSystemGraphDbmsModel48, availabilityGuard49, duration50);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId52 = null;
    java.time.Clock clock53 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel54 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard55 = null;
    java.time.Duration duration56 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl57 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock53, defaultSystemGraphDbmsModel54, availabilityGuard55, duration56);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId58 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason59 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl57.prnuratForNaDa(namedDatabaseId58, preventReason59);
    databaseStartupControllerAbortableImpl51.prnuratForNaDa(namedDatabaseId52, preventReason59);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId62 = null;
    java.time.Clock clock63 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel64 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard65 = null;
    java.time.Duration duration66 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl67 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock63, defaultSystemGraphDbmsModel64, availabilityGuard65, duration66);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId68 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason69 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl67.prnuratForNaDa(namedDatabaseId68, preventReason69);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId71 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason72 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl67.prnuratForNaDa(namedDatabaseId71, preventReason72);
    databaseStartupControllerAbortableImpl51.prnuratForNaDa(namedDatabaseId62, preventReason72);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId75 = null;
    java.time.Clock clock76 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel77 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard78 = null;
    java.time.Duration duration79 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl80 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock76, defaultSystemGraphDbmsModel77, availabilityGuard78, duration79);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId81 = null;
    java.time.Clock clock82 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel83 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard84 = null;
    java.time.Duration duration85 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl86 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock82, defaultSystemGraphDbmsModel83, availabilityGuard84, duration85);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId87 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason88 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl86.prnuratForNaDa(namedDatabaseId87, preventReason88);
    databaseStartupControllerAbortableImpl80.prnuratForNaDa(namedDatabaseId81, preventReason88);
    databaseStartupControllerAbortableImpl51.aluabForNaDa(namedDatabaseId75, preventReason88);
    databaseStartupControllerAbortableImpl39.prnuratForNaDa(namedDatabaseId46, preventReason88);
    databaseStartupControllerAbortableImpl23.prnuratForNaDa(namedDatabaseId34, preventReason88);
    databaseStartupControllerAbortableImpl17.prnuratForNaDa(namedDatabaseId18, preventReason88);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId95 = null;
    try {
      databaseStartupControllerAbortableImpl17.reefoForNa(namedDatabaseId95);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + preventReason31 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason31.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason41 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason41.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason44 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason44.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason59 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason59.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason69 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason69.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason72 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason72.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason88 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason88.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test387() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test387");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException11 = new io.github.onograph.dbms.StateChangeException(
        throwable8, databaseStateEnterpriseImpl9);
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException7, databaseStateEnterpriseImpl9);
    stateChangeException3.addSuppressed((java.lang.Throwable) stateChangeException7);
    java.lang.String str14 = stateChangeException3.toString();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertEquals(
        "'" + str14 + "' != '" + "io.github.onograph.dbms.StateChangeException" + "'", str14,
        "io.github.onograph.dbms.StateChangeException");
  }

  @Test
  public void test388() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test388");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    dbmsResolverMeta0.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta8 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta8.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray10 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList11 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11,
        namedDatabaseIdArray10);
    dbmsResolverMeta8.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    dbmsResolverMeta0.jonal();
    java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdCollection16 = null;
    try {
      dbmsResolverMeta0.joiForCo(namedDatabaseIdCollection16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta8);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test389() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test389");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    java.lang.Throwable throwable3 = sysCrashEvent2.gecsThrowable();
    java.lang.Throwable throwable4 = sysCrashEvent2.gecsThrowable();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl7 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean8 = databaseStateEnterpriseImpl7.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl7.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl7.failure();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter11 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl12 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = databaseStateEnterpriseImpl14.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional16 = databaseStateEnterpriseImpl14.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    databaseStateUpdateHandlerOppStatsImpl12.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl17,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl19);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = databaseStateEnterpriseImpl25.helyDatabaseStateEnterpriseImpl();
    databaseStateUpdateHandlerOppStatsImpl12.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl23,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl26);
    org.neo4j.function.ThrowingAction throwingAction28 = null;
    org.neo4j.function.ThrowingAction throwingAction29 = null;
    org.neo4j.kernel.lifecycle.Lifecycle lifecycle30 = org.neo4j.kernel.lifecycle.LifecycleAdapter.simpleLife(
        throwingAction28, throwingAction29);
    boolean boolean31 = databaseStateEnterpriseImpl26.equals((java.lang.Object) throwingAction29);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl7,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl26);
    java.util.Optional<java.lang.Throwable> throwableOptional33 = databaseStateEnterpriseImpl26.failure();
    boolean boolean34 = sysCrashEvent2.equals((java.lang.Object) databaseStateEnterpriseImpl26);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNull(throwable3);
    org.junit.Assert.assertNull(throwable4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNull(namedDatabaseId15);
    org.junit.Assert.assertNotNull(throwableOptional16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(lifecycle30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNotNull(throwableOptional33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test390() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test390");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    java.lang.Throwable throwable9 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException12 = new io.github.onograph.dbms.StateChangeException(
        throwable9, databaseStateEnterpriseImpl10);
    stateChangeException8.addSuppressed((java.lang.Throwable) stateChangeException12);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo14 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent15 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException12, sysCrashCauseInfo14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo17 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent18 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException12, namedDatabaseId16, gdbCrashCauseInfo17);
    java.lang.Throwable throwable19 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        throwable19, databaseStateEnterpriseImpl20);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo23 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent24 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException22, sysCrashCauseInfo23);
    java.lang.String str25 = sysCrashCauseInfo23.getInfo();
    boolean boolean26 = gdbCrashEvent18.equals((java.lang.Object) str25);
    java.lang.Throwable throwable27 = gdbCrashEvent18.gecsThrowable();
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo28 = gdbCrashEvent18.gersCrashSignalerCauseInfo();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo14 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo14.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo17 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN + "'",
        gdbCrashCauseInfo17.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo23 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo23.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "Discovery system failed irrecoverably" + "'", str25,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(throwable27);
    org.junit.Assert.assertNull("throwable27.getLocalizedMessage() == null",
        throwable27.getLocalizedMessage());
    org.junit.Assert.assertNull("throwable27.getMessage() == null", throwable27.getMessage());
    org.junit.Assert.assertEquals(throwable27.toString(),
        "io.github.onograph.dbms.StateChangeException");
    org.junit.Assert.assertTrue(
        "'" + causeInfo28 + "' != '" + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN
            + "'",
        causeInfo28.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_NOT_KNOWN));
  }

  @Test
  public void test391() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test391");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta1 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta1.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray3 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList4 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList4,
        namedDatabaseIdArray3);
    dbmsResolverMeta1.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList4);
    dbmsResolverMeta1.jonal();
    dbmsResolverMeta1.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta9 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta9.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray11 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList12 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12,
        namedDatabaseIdArray11);
    dbmsResolverMeta9.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    dbmsResolverMeta1.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl18 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId17, operatorStateEnterpriseTypeImpl18);
    java.lang.String str20 = operatorStateEnterpriseTypeImpl18.description();
    boolean boolean21 = dbmsResolverMeta0.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl18);
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta22 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta22.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray24 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList25 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean26 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList25,
        namedDatabaseIdArray24);
    dbmsResolverMeta22.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList25);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId29 = null;
    try {
      dbmsResolverMeta0.joiForCo(namedDatabaseId29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(dbmsResolverMeta1);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta9);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl18 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl18.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "dropped" + "'", str20, "dropped");
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta22);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray24);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test392() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test392");
    }
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl0 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING;
    java.lang.String str1 = operatorStateEnterpriseTypeImpl0.description();
    boolean boolean2 = operatorStateEnterpriseTypeImpl0.terminal();
    boolean boolean3 = operatorStateEnterpriseTypeImpl0.terminal();
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl0 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING + "'",
        operatorStateEnterpriseTypeImpl0.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_NOT_RUNNING));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "offline" + "'", str1, "offline");
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test393() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test393");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta1 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta1.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter6 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl7 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl9 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = databaseStateEnterpriseImpl9.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional11 = databaseStateEnterpriseImpl9.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = databaseStateEnterpriseImpl9.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable13 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl15 = databaseStateEnterpriseImpl14.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException16 = new io.github.onograph.dbms.StateChangeException(
        throwable13, databaseStateEnterpriseImpl14);
    databaseStateUpdateHandlerOppStatsImpl7.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl12,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl14);
    boolean boolean18 = dbmsResolverMeta1.equals((java.lang.Object) databaseStateEnterpriseImpl14);
    java.lang.Throwable throwable19 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = databaseStateEnterpriseImpl20.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException22 = new io.github.onograph.dbms.StateChangeException(
        throwable19, databaseStateEnterpriseImpl20);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo23 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent24 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException22, sysCrashCauseInfo23);
    boolean boolean25 = dbmsResolverMeta1.equals((java.lang.Object) stateChangeException22);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter27 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl28 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter27);
    boolean boolean29 = databaseStateEnterpriseImpl26.equals((java.lang.Object) counter27);
    java.util.Optional<java.lang.Throwable> throwableOptional30 = databaseStateEnterpriseImpl26.failure();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl31 = databaseStateEnterpriseImpl26.operatorState();
    io.github.onograph.dbms.StateChangeException stateChangeException32 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException22, databaseStateEnterpriseImpl26);
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl33 = databaseStateEnterpriseImpl26.operatorState();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId0, operatorStateEnterpriseTypeImpl33);
    org.junit.Assert.assertNotNull(dbmsResolverMeta1);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl9);
    org.junit.Assert.assertNull(namedDatabaseId10);
    org.junit.Assert.assertNotNull(throwableOptional11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo23 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo23.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertNotNull(throwableOptional30);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl31 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl31.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl33 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl33.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
  }

  @Test
  public void test394() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test394");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo25 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent26 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException23, sysCrashCauseInfo25);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo25);
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction28 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = databaseStateEnterpriseImpl29.helyDatabaseStateEnterpriseImpl();
    boolean boolean31 = databaseStateEnterpriseImpl29.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl32 = databaseStateEnterpriseImpl29.operatorState();
    boolean boolean33 = dbmsResolverAction28.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl32);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo34 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_ERR_ISSUE;
    java.lang.String str35 = sysCrashCauseInfo34.getInfo();
    boolean boolean36 = dbmsResolverAction28.equals((java.lang.Object) sysCrashCauseInfo34);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent37 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo25 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo25.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(dbmsResolverAction28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl32 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl32.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo34 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_ERR_ISSUE + "'",
        sysCrashCauseInfo34.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_ERR_ISSUE));
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "See exception message for details" + "'", str35,
        "See exception message for details");
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
  }

  @Test
  public void test395() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test395");
    }
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter0 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl1 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter0);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean3 = databaseStateEnterpriseImpl2.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = databaseStateEnterpriseImpl2.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter5 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl6 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl8 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = databaseStateEnterpriseImpl8.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional10 = databaseStateEnterpriseImpl8.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl11 = databaseStateEnterpriseImpl8.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl6.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl13);
    databaseStateUpdateHandlerOppStatsImpl1.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl2,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl11);
    java.lang.Throwable throwable18 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl20 = databaseStateEnterpriseImpl19.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException21 = new io.github.onograph.dbms.StateChangeException(
        throwable18, databaseStateEnterpriseImpl19);
    java.lang.Throwable throwable22 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        throwable22, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.StateChangeException stateChangeException26 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = databaseStateEnterpriseImpl27.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl29 = databaseStateEnterpriseImpl27.operatorState();
    boolean boolean30 = databaseStateEnterpriseImpl27.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException31 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException21, databaseStateEnterpriseImpl27);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl32 = databaseStateEnterpriseImpl11.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException31);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = databaseStateEnterpriseImpl33.helyDatabaseStateEnterpriseImpl();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = databaseStateEnterpriseImpl34.databaseId();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = databaseStateEnterpriseImpl34.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException37 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException31, databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNull(namedDatabaseId4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNotNull(throwableOptional10);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl11);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl19);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl20);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl29 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl29.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl32);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNull(namedDatabaseId35);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
  }

  @Test
  public void test396() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test396");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta1 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta1.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray3 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList4 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList4,
        namedDatabaseIdArray3);
    dbmsResolverMeta1.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList4);
    dbmsResolverMeta1.jonal();
    dbmsResolverMeta1.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta9 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta9.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray11 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList12 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12,
        namedDatabaseIdArray11);
    dbmsResolverMeta9.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    dbmsResolverMeta1.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    dbmsResolverMeta0.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl18 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl19 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId17, operatorStateEnterpriseTypeImpl18);
    java.lang.String str20 = operatorStateEnterpriseTypeImpl18.description();
    boolean boolean21 = dbmsResolverMeta0.equals(
        (java.lang.Object) operatorStateEnterpriseTypeImpl18);
    java.lang.Throwable throwable22 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = databaseStateEnterpriseImpl23.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException25 = new io.github.onograph.dbms.StateChangeException(
        throwable22, databaseStateEnterpriseImpl23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo27 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent28 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable22, namedDatabaseId26, gdbCrashCauseInfo27);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId29 = gdbCrashEvent28.getNamedDatabaseId();
    java.lang.Throwable throwable30 = gdbCrashEvent28.gecsThrowable();
    boolean boolean31 = dbmsResolverMeta0.equals((java.lang.Object) throwable30);
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(dbmsResolverMeta1);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta9);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl18 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl18.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "dropped" + "'", str20, "dropped");
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo27 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo27.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId29);
    org.junit.Assert.assertNull(throwable30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
  }

  @Test
  public void test397() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test397");
    }
    java.time.Clock clock0 = null;
    java.time.Clock clock1 = null;
    java.time.Clock clock2 = null;
    java.time.Clock clock3 = null;
    java.time.Clock clock4 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier5 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel6 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier5);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl9 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock4, defaultSystemGraphDbmsModel6, availabilityGuard7, duration8);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard10 = null;
    java.time.Duration duration11 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl12 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock3, defaultSystemGraphDbmsModel6, availabilityGuard10, duration11);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard13 = null;
    java.time.Duration duration14 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl15 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock2, defaultSystemGraphDbmsModel6, availabilityGuard13, duration14);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard16 = null;
    java.time.Duration duration17 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl18 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock1, defaultSystemGraphDbmsModel6, availabilityGuard16, duration17);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard19 = null;
    java.time.Duration duration20 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl21 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock0, defaultSystemGraphDbmsModel6, availabilityGuard19, duration20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    java.time.Clock clock23 = null;
    java.time.Clock clock24 = null;
    java.util.function.Supplier<org.neo4j.graphdb.GraphDatabaseService> graphDatabaseServiceSupplier25 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel26 = new io.github.onograph.dbms.DefaultSystemGraphDbmsModel(
        graphDatabaseServiceSupplier25);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard27 = null;
    java.time.Duration duration28 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl29 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock24, defaultSystemGraphDbmsModel26, availabilityGuard27, duration28);
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard30 = null;
    java.time.Duration duration31 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl32 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock23, defaultSystemGraphDbmsModel26, availabilityGuard30, duration31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId33 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason34 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl32.aluabForNaDa(namedDatabaseId33, preventReason34);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId36 = null;
    java.time.Clock clock37 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel38 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard39 = null;
    java.time.Duration duration40 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl41 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock37, defaultSystemGraphDbmsModel38, availabilityGuard39, duration40);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId42 = null;
    java.time.Clock clock43 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel44 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard45 = null;
    java.time.Duration duration46 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl47 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock43, defaultSystemGraphDbmsModel44, availabilityGuard45, duration46);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId48 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason49 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl47.prnuratForNaDa(namedDatabaseId48, preventReason49);
    databaseStartupControllerAbortableImpl41.prnuratForNaDa(namedDatabaseId42, preventReason49);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId52 = null;
    java.time.Clock clock53 = null;
    io.github.onograph.dbms.DefaultSystemGraphDbmsModel defaultSystemGraphDbmsModel54 = null;
    org.neo4j.kernel.availability.AvailabilityGuard availabilityGuard55 = null;
    java.time.Duration duration56 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl57 = new io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl(
        clock53, defaultSystemGraphDbmsModel54, availabilityGuard55, duration56);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId58 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason59 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl57.prnuratForNaDa(namedDatabaseId58, preventReason59);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId61 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason62 = io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC;
    databaseStartupControllerAbortableImpl57.prnuratForNaDa(namedDatabaseId61, preventReason62);
    databaseStartupControllerAbortableImpl41.prnuratForNaDa(namedDatabaseId52, preventReason62);
    databaseStartupControllerAbortableImpl32.prnuratForNaDa(namedDatabaseId36, preventReason62);
    databaseStartupControllerAbortableImpl21.prnuratForNaDa(namedDatabaseId22, preventReason62);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId67 = null;
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason preventReason68 = null;
    databaseStartupControllerAbortableImpl21.prnuratForNaDa(namedDatabaseId67, preventReason68);
    org.junit.Assert.assertTrue("'" + preventReason34 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason34.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason49 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason49.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason59 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason59.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
    org.junit.Assert.assertTrue("'" + preventReason62 + "' != '"
            + io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC + "'",
        preventReason62.equals(
            io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl.PreventReason.PR_SC));
  }

  @Test
  public void test398() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test398");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    java.lang.Throwable throwable8 = gdbCrashEvent6.gecsThrowable();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = gdbCrashEvent6.getNamedDatabaseId();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = gdbCrashEvent6.getNamedDatabaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertNull(throwable8);
    org.junit.Assert.assertNull(namedDatabaseId9);
    org.junit.Assert.assertNull(namedDatabaseId10);
  }

  @Test
  public void test399() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test399");
    }
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta0 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta0.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray2 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList3 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3,
        namedDatabaseIdArray2);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList3);
    dbmsResolverMeta0.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta7 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta8 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta8.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray10 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList11 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11,
        namedDatabaseIdArray10);
    dbmsResolverMeta8.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList11);
    dbmsResolverMeta8.jonal();
    dbmsResolverMeta8.jonal();
    io.github.onograph.dbms.DbmsResolverMeta dbmsResolverMeta16 = io.github.onograph.dbms.DbmsResolverMeta.EMT_DBMS_RESOLVER_META;
    dbmsResolverMeta16.jonal();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray18 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdList19 = new java.util.ArrayList<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean20 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList19,
        namedDatabaseIdArray18);
    dbmsResolverMeta16.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList19);
    dbmsResolverMeta8.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList19);
    dbmsResolverMeta7.joiForCo(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList19);
    dbmsResolverMeta0.awiForNa(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdList19);
    dbmsResolverMeta0.jonal();
    org.junit.Assert.assertNotNull(dbmsResolverMeta0);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta7);
    org.junit.Assert.assertNotNull(dbmsResolverMeta8);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertNotNull(dbmsResolverMeta16);
    org.junit.Assert.assertNotNull(namedDatabaseIdArray18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
  }

  @Test
  public void test400() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test400");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo1 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent2 = new io.github.onograph.dbms.crash.SysCrashEvent(
        throwable0, sysCrashCauseInfo1);
    boolean boolean4 = sysCrashEvent2.equals((java.lang.Object) (-1));
    java.lang.Throwable throwable5 = sysCrashEvent2.gecsThrowable();
    int int6 = sysCrashEvent2.getICe();
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo1 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo1.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNull(throwable5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
  }

  @Test
  public void test401() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test401");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    java.lang.Throwable throwable4 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl6 = databaseStateEnterpriseImpl5.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException7 = new io.github.onograph.dbms.StateChangeException(
        throwable4, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.StateChangeException stateChangeException8 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException3, databaseStateEnterpriseImpl5);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo9 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent10 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo9);
    java.lang.Throwable throwable11 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl12 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = databaseStateEnterpriseImpl12.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException14 = new io.github.onograph.dbms.StateChangeException(
        throwable11, databaseStateEnterpriseImpl12);
    java.lang.Throwable throwable15 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl16 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = databaseStateEnterpriseImpl16.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException18 = new io.github.onograph.dbms.StateChangeException(
        throwable15, databaseStateEnterpriseImpl16);
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException14, databaseStateEnterpriseImpl16);
    java.lang.Throwable throwable20 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl21 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = databaseStateEnterpriseImpl21.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException23 = new io.github.onograph.dbms.StateChangeException(
        throwable20, databaseStateEnterpriseImpl21);
    stateChangeException19.addSuppressed((java.lang.Throwable) stateChangeException23);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo25 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent26 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException23, sysCrashCauseInfo25);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent27 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException3, sysCrashCauseInfo25);
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter28 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl29 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter28);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean31 = databaseStateEnterpriseImpl30.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId32 = databaseStateEnterpriseImpl30.databaseId();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter33 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl34 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter33);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId35 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl36 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.unnnDatabaseStateEnterpriseImpl(
        namedDatabaseId35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = databaseStateEnterpriseImpl36.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional38 = databaseStateEnterpriseImpl36.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl36.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable40 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl41 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = databaseStateEnterpriseImpl41.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException43 = new io.github.onograph.dbms.StateChangeException(
        throwable40, databaseStateEnterpriseImpl41);
    databaseStateUpdateHandlerOppStatsImpl34.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl41);
    databaseStateUpdateHandlerOppStatsImpl29.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl30,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl39);
    java.lang.Throwable throwable46 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl47.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException49 = new io.github.onograph.dbms.StateChangeException(
        throwable46, databaseStateEnterpriseImpl47);
    java.lang.Throwable throwable50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException53 = new io.github.onograph.dbms.StateChangeException(
        throwable50, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl55 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = databaseStateEnterpriseImpl55.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl57 = databaseStateEnterpriseImpl55.operatorState();
    boolean boolean58 = databaseStateEnterpriseImpl55.hasFailed();
    io.github.onograph.dbms.StateChangeException stateChangeException59 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl55);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl60 = databaseStateEnterpriseImpl39.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException59);
    boolean boolean61 = sysCrashEvent27.equals((java.lang.Object) stateChangeException59);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId62 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo63 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent64 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException59, namedDatabaseId62, gdbCrashCauseInfo63);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId65 = gdbCrashEvent64.getNamedDatabaseId();
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo9 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo9.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl12);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl16);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl21);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo25 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo25.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNull(namedDatabaseId32);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl36);
    org.junit.Assert.assertNull(namedDatabaseId37);
    org.junit.Assert.assertNotNull(throwableOptional38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl41);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl55);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl57 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl57.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl60);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo63 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo63.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId65);
  }

  @Test
  public void test402() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test402");
    }
    io.github.onograph.dbms.DbmsResolverAction dbmsResolverAction0 = io.github.onograph.dbms.DbmsResolverAction.sipDbmsResolverAction();
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter1 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl2 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter1);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl3 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl4 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl5 = databaseStateEnterpriseImpl4.helyDatabaseStateEnterpriseImpl();
    boolean boolean6 = databaseStateEnterpriseImpl4.hasFailed();
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl7 = databaseStateEnterpriseImpl4.operatorState();
    databaseStateUpdateHandlerOppStatsImpl2.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl3,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl4);
    boolean boolean9 = dbmsResolverAction0.equals((java.lang.Object) databaseStateEnterpriseImpl4);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = dbmsResolverAction0.equals(
        (java.lang.Object) databaseStateEnterpriseImpl10);
    java.lang.Throwable throwable12 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl13 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl13.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException15 = new io.github.onograph.dbms.StateChangeException(
        throwable12, databaseStateEnterpriseImpl13);
    java.lang.Throwable throwable16 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl17 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl18 = databaseStateEnterpriseImpl17.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException19 = new io.github.onograph.dbms.StateChangeException(
        throwable16, databaseStateEnterpriseImpl17);
    io.github.onograph.dbms.StateChangeException stateChangeException20 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException15, databaseStateEnterpriseImpl17);
    java.lang.Throwable[] throwableArray21 = stateChangeException15.getSuppressed();
    java.lang.Throwable[] throwableArray22 = stateChangeException15.getSuppressed();
    java.lang.Throwable throwable23 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl24 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl25 = databaseStateEnterpriseImpl24.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException26 = new io.github.onograph.dbms.StateChangeException(
        throwable23, databaseStateEnterpriseImpl24);
    java.lang.Throwable throwable27 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl28 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = databaseStateEnterpriseImpl28.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException30 = new io.github.onograph.dbms.StateChangeException(
        throwable27, databaseStateEnterpriseImpl28);
    io.github.onograph.dbms.StateChangeException stateChangeException31 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException26, databaseStateEnterpriseImpl28);
    java.lang.Throwable throwable32 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = databaseStateEnterpriseImpl33.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException35 = new io.github.onograph.dbms.StateChangeException(
        throwable32, databaseStateEnterpriseImpl33);
    stateChangeException31.addSuppressed((java.lang.Throwable) stateChangeException35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo38 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR;
    java.lang.String str39 = gdbCrashCauseInfo38.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent40 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException35, namedDatabaseId37, gdbCrashCauseInfo38);
    stateChangeException15.addSuppressed((java.lang.Throwable) stateChangeException35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId42 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo43 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR;
    java.lang.String str44 = gdbCrashCauseInfo43.getInfo();
    java.lang.String str45 = gdbCrashCauseInfo43.getInfo();
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent46 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        (java.lang.Throwable) stateChangeException35, namedDatabaseId42, gdbCrashCauseInfo43);
    boolean boolean47 = dbmsResolverAction0.equals((java.lang.Object) stateChangeException35);
    org.junit.Assert.assertNotNull(dbmsResolverAction0);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl3);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl4);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl7 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS + "'",
        operatorStateEnterpriseTypeImpl7.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_IS));
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl17);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl18);
    org.junit.Assert.assertNotNull(throwableArray21);
    org.junit.Assert.assertNotNull(throwableArray22);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl24);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl25);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl28);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo38 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR + "'",
        gdbCrashCauseInfo38.equals(io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_SP_ERR));
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Snapshot failed" + "'", str39,
        "Snapshot failed");
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo43 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR + "'",
        gdbCrashCauseInfo43.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_MSG_APP_ERR));
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RaftMessage applier failed" + "'",
        str44, "RaftMessage applier failed");
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "RaftMessage applier failed" + "'",
        str45, "RaftMessage applier failed");
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
  }

  @Test
  public void test403() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest0.test403");
    }
    java.lang.Throwable throwable0 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl1 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl2 = databaseStateEnterpriseImpl1.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException3 = new io.github.onograph.dbms.StateChangeException(
        throwable0, databaseStateEnterpriseImpl1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    io.github.onograph.dbms.crash.GdbCrashCauseInfo gdbCrashCauseInfo5 = io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR;
    io.github.onograph.dbms.crash.GdbCrashEvent gdbCrashEvent6 = new io.github.onograph.dbms.crash.GdbCrashEvent(
        throwable0, namedDatabaseId4, gdbCrashCauseInfo5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = gdbCrashEvent6.getNamedDatabaseId();
    boolean boolean9 = gdbCrashEvent6.equals((java.lang.Object) true);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl10 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean11 = databaseStateEnterpriseImpl10.hasFailed();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = databaseStateEnterpriseImpl10.databaseId();
    java.util.Optional<java.lang.Throwable> throwableOptional13 = databaseStateEnterpriseImpl10.failure();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl14 = databaseStateEnterpriseImpl10.helyDatabaseStateEnterpriseImpl();
    boolean boolean15 = gdbCrashEvent6.equals((java.lang.Object) databaseStateEnterpriseImpl10);
    boolean boolean17 = gdbCrashEvent6.equals((java.lang.Object) "RaftMessage applier failed");
    org.neo4j.dbms.database.DatabaseOperationCounts.Counter counter18 = null;
    io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl databaseStateUpdateHandlerOppStatsImpl19 = new io.github.onograph.dbms.gdb.DatabaseStateUpdateHandlerOppStatsImpl(
        counter18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl operatorStateEnterpriseTypeImpl21 = io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl22 = new io.github.onograph.dbms.DatabaseStateEnterpriseImpl(
        namedDatabaseId20, operatorStateEnterpriseTypeImpl21);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl23 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    boolean boolean24 = databaseStateEnterpriseImpl23.hasFailed();
    databaseStateUpdateHandlerOppStatsImpl19.sttchgForDaDa(
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl22,
        (org.neo4j.dbms.DatabaseState) databaseStateEnterpriseImpl23);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl26 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl27 = databaseStateEnterpriseImpl26.helyDatabaseStateEnterpriseImpl();
    java.lang.Throwable throwable28 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl29 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl30 = databaseStateEnterpriseImpl29.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException31 = new io.github.onograph.dbms.StateChangeException(
        throwable28, databaseStateEnterpriseImpl29);
    java.lang.Throwable throwable32 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl33 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl34 = databaseStateEnterpriseImpl33.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException35 = new io.github.onograph.dbms.StateChangeException(
        throwable32, databaseStateEnterpriseImpl33);
    io.github.onograph.dbms.StateChangeException stateChangeException36 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException31, databaseStateEnterpriseImpl33);
    java.lang.Throwable throwable37 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl38 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl39 = databaseStateEnterpriseImpl38.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException40 = new io.github.onograph.dbms.StateChangeException(
        throwable37, databaseStateEnterpriseImpl38);
    stateChangeException36.addSuppressed((java.lang.Throwable) stateChangeException40);
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl42 = databaseStateEnterpriseImpl27.falDatabaseStateEnterpriseImpl(
        (java.lang.Throwable) stateChangeException40);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo43 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR;
    java.lang.String str44 = sysCrashCauseInfo43.getInfo();
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent45 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException40, sysCrashCauseInfo43);
    java.lang.Throwable throwable46 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl47 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl48 = databaseStateEnterpriseImpl47.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException49 = new io.github.onograph.dbms.StateChangeException(
        throwable46, databaseStateEnterpriseImpl47);
    java.lang.Throwable throwable50 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl51 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl52 = databaseStateEnterpriseImpl51.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException53 = new io.github.onograph.dbms.StateChangeException(
        throwable50, databaseStateEnterpriseImpl51);
    io.github.onograph.dbms.StateChangeException stateChangeException54 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException49, databaseStateEnterpriseImpl51);
    java.lang.Throwable throwable55 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl56 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl57 = databaseStateEnterpriseImpl56.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException58 = new io.github.onograph.dbms.StateChangeException(
        throwable55, databaseStateEnterpriseImpl56);
    stateChangeException54.addSuppressed((java.lang.Throwable) stateChangeException58);
    stateChangeException40.addSuppressed((java.lang.Throwable) stateChangeException58);
    java.lang.Throwable throwable61 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl62 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl63 = databaseStateEnterpriseImpl62.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException64 = new io.github.onograph.dbms.StateChangeException(
        throwable61, databaseStateEnterpriseImpl62);
    java.lang.Throwable throwable65 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl66 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl67 = databaseStateEnterpriseImpl66.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException68 = new io.github.onograph.dbms.StateChangeException(
        throwable65, databaseStateEnterpriseImpl66);
    io.github.onograph.dbms.StateChangeException stateChangeException69 = new io.github.onograph.dbms.StateChangeException(
        (java.lang.Throwable) stateChangeException64, databaseStateEnterpriseImpl66);
    java.lang.Throwable throwable70 = null;
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl71 = io.github.onograph.dbms.DatabaseStateEnterpriseImpl.inaunidDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.DatabaseStateEnterpriseImpl databaseStateEnterpriseImpl72 = databaseStateEnterpriseImpl71.helyDatabaseStateEnterpriseImpl();
    io.github.onograph.dbms.StateChangeException stateChangeException73 = new io.github.onograph.dbms.StateChangeException(
        throwable70, databaseStateEnterpriseImpl71);
    stateChangeException69.addSuppressed((java.lang.Throwable) stateChangeException73);
    io.github.onograph.dbms.crash.SysCrashCauseInfo sysCrashCauseInfo75 = io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC;
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent76 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException73, sysCrashCauseInfo75);
    io.github.onograph.dbms.crash.SysCrashEvent sysCrashEvent77 = new io.github.onograph.dbms.crash.SysCrashEvent(
        (java.lang.Throwable) stateChangeException40, sysCrashCauseInfo75);
    io.github.onograph.dbms.crash.CrashSignaler.CauseInfo causeInfo78 = sysCrashEvent77.gersCrashSignalerCauseInfo();
    java.lang.String str79 = causeInfo78.getInfo();
    boolean boolean80 = databaseStateEnterpriseImpl23.equals((java.lang.Object) causeInfo78);
    boolean boolean81 = gdbCrashEvent6.equals((java.lang.Object) boolean80);
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer82 = null;
    java.util.function.Consumer<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdConsumer83 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId84 = null;
    io.github.onograph.dbms.StructureMetaService structureMetaService85 = io.github.onograph.dbms.StructureMetaService.froStructureMetaService(
        namedDatabaseIdConsumer82, namedDatabaseIdConsumer83, namedDatabaseId84);
    structureMetaService85.init();
    java.lang.Class<?> wildcardClass87 = structureMetaService85.getClass();
    boolean boolean88 = gdbCrashEvent6.equals((java.lang.Object) wildcardClass87);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl1);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl2);
    org.junit.Assert.assertTrue("'" + gdbCrashCauseInfo5 + "' != '"
            + io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR + "'",
        gdbCrashCauseInfo5.equals(
            io.github.onograph.dbms.crash.GdbCrashCauseInfo.CCI_CONS_NODE_CATCHUP_ERR));
    org.junit.Assert.assertNull(namedDatabaseId7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(namedDatabaseId12);
    org.junit.Assert.assertNotNull(throwableOptional13);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + operatorStateEnterpriseTypeImpl21 + "' != '"
            + io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D + "'",
        operatorStateEnterpriseTypeImpl21.equals(
            io.github.onograph.dbms.OperatorStateEnterpriseTypeImpl.SETI_D));
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl26);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl27);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl29);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl30);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl33);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl34);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl38);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl39);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl42);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo43 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR + "'",
        sysCrashCauseInfo43.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_UNREC_DISC_ERR));
    org.junit.Assert.assertEquals(
        "'" + str44 + "' != '" + "Discovery system failed irrecoverably" + "'", str44,
        "Discovery system failed irrecoverably");
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl47);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl48);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl51);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl52);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl56);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl57);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl62);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl63);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl66);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl67);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl71);
    org.junit.Assert.assertNotNull(databaseStateEnterpriseImpl72);
    org.junit.Assert.assertTrue("'" + sysCrashCauseInfo75 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        sysCrashCauseInfo75.equals(
            io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertTrue("'" + causeInfo78 + "' != '"
            + io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC + "'",
        causeInfo78.equals(io.github.onograph.dbms.crash.SysCrashCauseInfo.CCI_MTI_IT_PROC));
    org.junit.Assert.assertEquals("'" + str79 + "' != '" + "DBMSPanic just for testing" + "'",
        str79, "DBMSPanic just for testing");
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    org.junit.Assert.assertNotNull(structureMetaService85);
    org.junit.Assert.assertNotNull(wildcardClass87);
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
  }
}


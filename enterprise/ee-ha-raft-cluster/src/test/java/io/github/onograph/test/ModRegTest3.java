package io.github.onograph.test;

import java.time.Clock;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest3 {

  public static boolean debug = false;

  @Test
  public void test1501() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1501");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.CoreDiscoveryServerInfoMarshal coreDiscoveryServerInfoMarshal0 = io.github.onograph.cluster.raft.module.dprot.impl.serialize.CoreDiscoveryServerInfoMarshal.IT;
    org.neo4j.io.fs.ReadableChannel readableChannel1 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl2 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel1);
    readableClosablePositionAwareChecksumChannelPassThruImpl2.beginChecksum();
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition4 = readableClosablePositionAwareChecksumChannelPassThruImpl2.getCurrentPosition();
    try {
      io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaCoreImpl gdbDiscoveryMetaCoreImpl5 = coreDiscoveryServerInfoMarshal0.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(coreDiscoveryServerInfoMarshal0);
    org.junit.Assert.assertNotNull(logPosition4);
  }

  @Test
  public void test1502() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1502");
    }
    java.time.Clock clock0 = null;
    org.neo4j.logging.internal.LogService logService1 = null;
    io.github.onograph.cluster.raft.share.NodeServerInfoLogService nodeServerInfoLogService3 = new io.github.onograph.cluster.raft.share.NodeServerInfoLogService(
        logService1, "hi!");
    java.lang.String str4 = nodeServerInfoLogService3.getStrNs();
    io.github.onograph.cluster.raft.share.NodeServerInfoLogService nodeServerInfoLogService6 = new io.github.onograph.cluster.raft.share.NodeServerInfoLogService(
        (org.neo4j.logging.internal.LogService) nodeServerInfoLogService3,
        "causal_clustering.leadership_priority_group");
    org.neo4j.monitoring.Monitors monitors7 = null;
    try {
      io.github.onograph.cluster.raft.watch.ConsensusServiceWatcherRAFTImpl.reieForLoMoCl(clock0,
          (org.neo4j.logging.internal.LogService) nodeServerInfoLogService3, monitors7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
  }

  @Test
  public void test1503() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1503");
    }
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses0 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress1 = null;
    java.lang.String[] strArray8 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet9 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray8);
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet10 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray8);
    org.neo4j.kernel.database.DatabaseId[] databaseIdArray11 = new org.neo4j.kernel.database.DatabaseId[]{};
    java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId> databaseIdSet12 = new java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.DatabaseId>) databaseIdSet12,
        databaseIdArray11);
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl14 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl(
        discoverySocketAddresses0, socketAddress1, nodeGroupIdentifierSet10,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet12);
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = gdbDiscoveryMetaReadReplicaImpl14.cacpsrrSocketAddress();
    org.junit.Assert.assertNotNull(strArray8);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet9);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet10);
    org.junit.Assert.assertNotNull(databaseIdArray11);
    //org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNull(socketAddress15);
  }

  @Test
  public void test1504() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1504");
    }
    io.github.onograph.cluster.raft.control.connect.MessageChannelDuplexHandlerAction messageChannelDuplexHandlerAction0 = io.github.onograph.cluster.raft.control.connect.MessageChannelDuplexHandlerAction.gescsMessageChannelDuplexHandlerAction();
    org.junit.Assert.assertNotNull(messageChannelDuplexHandlerAction0);
  }

  @Test
  public void test1505() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1505");
    }
    byte[] byteArray1 = new byte[]{(byte) 1};
    io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService chunkedInputEncodingService3 = new io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService(
        byteArray1, true);
    boolean boolean4 = chunkedInputEncodingService3.isEndOfInput();
    boolean boolean5 = chunkedInputEncodingService3.isEndOfInput();
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[1]");
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1506() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1506");
    }
    io.github.onograph.cluster.raft.share.calg.ConsensusOperationsManager.SchedulerTimeoutType schedulerTimeoutType0 = io.github.onograph.cluster.raft.share.calg.ConsensusOperationsManager.SchedulerTimeoutType.CON_ELECT;
    java.lang.String str1 = schedulerTimeoutType0.name();
    org.junit.Assert.assertTrue("'" + schedulerTimeoutType0 + "' != '"
        + io.github.onograph.cluster.raft.share.calg.ConsensusOperationsManager.SchedulerTimeoutType.CON_ELECT
        + "'", schedulerTimeoutType0.equals(
        io.github.onograph.cluster.raft.share.calg.ConsensusOperationsManager.SchedulerTimeoutType.CON_ELECT));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CON_ELECT" + "'", str1, "CON_ELECT");
  }

  @Test
  public void test1507() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1507");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector connector0 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector();
    connector0.strvstfi();
    connector0.strvstfiForSt("policy");
    connector0.strvinsno((long) 1002);
    connector0.strvinsno((long) (short) 0);
    connector0.fihrih((long) (byte) 10);
  }

  @Test
  public void test1508() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1508");
    }
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionBlockLimiters.Configured configured1 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionBlockLimiters.Configured(
        (long) 1);
    boolean boolean3 = configured1.isCole((long) (short) -1);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1509() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1509");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap1 = null;
    io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta readReplicateGdbMeta2 = io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta.ofcosReadReplicateGdbMeta(
        databaseId0, serverIdMap1);
    boolean boolean3 = readReplicateGdbMeta2.getIsSc();
    org.junit.Assert.assertNotNull(readReplicateGdbMeta2);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
  }

  @Test
  public void test1510() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1510");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataEncodingService syncableDataEncodingService0 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.DepartingMessageManagerMessageToMessageEncoder departingMessageManagerMessageToMessageEncoder1 = new io.github.onograph.cluster.raft.akkamsg.serialization.DepartingMessageManagerMessageToMessageEncoder(
        syncableDataEncodingService0);
    org.neo4j.graphdb.config.Setting<java.lang.Integer> intSetting2 = io.github.onograph.config.SettingsDeclarationClusterImpl.settingGlliassInteger;
    boolean boolean3 = departingMessageManagerMessageToMessageEncoder1.acceptOutboundMessage(
        (java.lang.Object) intSetting2);
    org.junit.Assert.assertNotNull(intSetting2);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1511() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1511");
    }
    io.github.onograph.cluster.raft.control.connect.ServerComProMessageProcessorHandshakeImpl serverComProMessageProcessorHandshakeImpl0 = null;
    io.github.onograph.cluster.raft.control.connect.ServerHandshakeSimpleChannelInboundHandler serverHandshakeSimpleChannelInboundHandler1 = new io.github.onograph.cluster.raft.control.connect.ServerHandshakeSimpleChannelInboundHandler(
        serverComProMessageProcessorHandshakeImpl0);
    boolean boolean3 = serverHandshakeSimpleChannelInboundHandler1.acceptInboundMessage(
        (java.lang.Object) (byte) 1);
    io.netty.channel.ChannelHandlerContext channelHandlerContext4 = null;
    io.github.onograph.cluster.raft.module.dprot.ClusterNodeRoleType clusterNodeRoleType5 = io.github.onograph.cluster.raft.module.dprot.ClusterNodeRoleType.FOLLOWER;
    try {
      serverHandshakeSimpleChannelInboundHandler1.channelRead(channelHandlerContext4,
          (java.lang.Object) clusterNodeRoleType5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + clusterNodeRoleType5 + "' != '"
            + io.github.onograph.cluster.raft.module.dprot.ClusterNodeRoleType.FOLLOWER + "'",
        clusterNodeRoleType5.equals(
            io.github.onograph.cluster.raft.module.dprot.ClusterNodeRoleType.FOLLOWER));
  }

  @Test
  public void test1512() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1512");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector connector0 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector();
    connector0.strvstfi();
    connector0.strvstfiForSt("policy");
    connector0.strvinsno();
    connector0.fihrih();
  }

  @Test
  public void test1513() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1513");
    }
    org.neo4j.kernel.KernelVersion kernelVersion0 = null;
    org.neo4j.storageengine.api.StoreId storeId1 = null;
    org.neo4j.kernel.impl.transaction.CommittedTransactionRepresentation committedTransactionRepresentation2 = null;
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupOutgoingTransactionPullReply catchupOutgoingTransactionPullReply3 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupOutgoingTransactionPullReply(
        kernelVersion0, storeId1, committedTransactionRepresentation2);
    org.neo4j.kernel.impl.transaction.CommittedTransactionRepresentation committedTransactionRepresentation4 = catchupOutgoingTransactionPullReply3.getTCommittedTransactionRepresentation();
    org.neo4j.kernel.KernelVersion kernelVersion5 = catchupOutgoingTransactionPullReply3.getKernelVersion();
    io.github.onograph.cluster.raft.share.ClusterLoadBalancingServerPoliciesGroupSetting clusterLoadBalancingServerPoliciesGroupSetting7 = io.github.onograph.cluster.raft.share.ClusterLoadBalancingServerPoliciesGroupSetting.gruClusterLoadBalancingServerPoliciesGroupSetting(
        "catchup_protocol");
    org.neo4j.graphdb.config.Setting<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessor<io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta>> loadBalanceServerMetaRuleProcessorSetting8 = clusterLoadBalancingServerPoliciesGroupSetting7.val;
    boolean boolean9 = catchupOutgoingTransactionPullReply3.equals(
        (java.lang.Object) loadBalanceServerMetaRuleProcessorSetting8);
    org.neo4j.kernel.impl.transaction.CommittedTransactionRepresentation committedTransactionRepresentation10 = catchupOutgoingTransactionPullReply3.getTCommittedTransactionRepresentation();
    io.github.onograph.cluster.raft.id.ConsensusMemberGroupId.SafeStateMarshalImpl safeStateMarshalImpl11 = io.github.onograph.cluster.raft.id.ConsensusMemberGroupId.SafeStateMarshalImpl.IT;
    io.github.onograph.cluster.raft.share.meta.MetaWrapper<io.github.onograph.cluster.raft.id.ConsensusMemberGroupId> consensusMemberGroupIdMetaWrapper12 = io.github.onograph.cluster.raft.share.meta.MetaWrapper.dumMetaWrapper(
        (org.neo4j.io.marshal.SafeStateMarshal<io.github.onograph.cluster.raft.id.ConsensusMemberGroupId>) safeStateMarshalImpl11);
    io.github.onograph.cluster.raft.id.ConsensusMemberGroupId consensusMemberGroupId13 = safeStateMarshalImpl11.startState();
    boolean boolean14 = catchupOutgoingTransactionPullReply3.equals(
        (java.lang.Object) safeStateMarshalImpl11);
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager15 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl16 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager15);
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager17 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    readablePositionAwareChecksumChannelManager17.beginChecksum();
    org.neo4j.io.fs.ReadableChannel readableChannel19 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl20 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel19);
    readableClosablePositionAwareChecksumChannelPassThruImpl20.beginChecksum();
    readablePositionAwareChecksumChannelManager17.deettoForRe(
        (org.neo4j.kernel.impl.transaction.log.ReadableClosablePositionAwareChecksumChannel) readableClosablePositionAwareChecksumChannelPassThruImpl20);
    readablePositionAwareChecksumChannelManager15.deettoForRe(
        (org.neo4j.kernel.impl.transaction.log.ReadableClosablePositionAwareChecksumChannel) readableClosablePositionAwareChecksumChannelPassThruImpl20);
    try {
      io.github.onograph.cluster.raft.id.ConsensusMemberGroupId consensusMemberGroupId24 = safeStateMarshalImpl11.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(committedTransactionRepresentation4);
    org.junit.Assert.assertNull(kernelVersion5);
    org.junit.Assert.assertNotNull(clusterLoadBalancingServerPoliciesGroupSetting7);
    org.junit.Assert.assertNotNull(loadBalanceServerMetaRuleProcessorSetting8);
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNull(committedTransactionRepresentation10);
    org.junit.Assert.assertNotNull(safeStateMarshalImpl11);
    org.junit.Assert.assertNotNull(consensusMemberGroupIdMetaWrapper12);
    org.junit.Assert.assertNull(consensusMemberGroupId13);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1514() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1514");
    }
    io.github.onograph.cluster.raft.share.meta.MetaType metaType0 = io.github.onograph.cluster.raft.share.meta.MetaType.MT_CONS_GRP_UID;
    org.junit.Assert.assertTrue("'" + metaType0 + "' != '"
            + io.github.onograph.cluster.raft.share.meta.MetaType.MT_CONS_GRP_UID + "'",
        metaType0.equals(io.github.onograph.cluster.raft.share.meta.MetaType.MT_CONS_GRP_UID));
  }

  @Test
  public void test1515() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1515");
    }
    org.neo4j.logging.LogProvider logProvider0 = null;
    io.github.onograph.cluster.raft.share.calg.cle.parts.PartClipperServiceFactory partClipperServiceFactory2 = new io.github.onograph.cluster.raft.share.calg.cle.parts.PartClipperServiceFactory(
        logProvider0, "member-db-state");
    try {
      io.github.onograph.cluster.raft.share.calg.cle.parts.PartClipperService partClipperService3 = partClipperServiceFactory2.newInstance();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: Invalid log pruning configuration value 'member-db-state'. The form is 'true', 'false' or '<number><unit> <type>'. For example, '100k txs' will keep the 100 000 latest transactions.");
    } catch (java.lang.IllegalArgumentException e) {
    }
  }

  @Test
  public void test1516() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1516");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaMessageToByteEncoder sliceMetaMessageToByteEncoder0 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaMessageToByteEncoder();
    io.github.onograph.cluster.raft.module.cuprot.CatchupStatusType catchupStatusType1 = null;
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionBlockGenerator.Setup setup2 = io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionBlockGenerator.Setup.faiTransactionBlockGeneratorSetup(
        catchupStatusType1);
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompleted> transactionChunkingCompletedOptional3 = setup2.repsOptional();
    io.github.onograph.cluster.raft.module.cuprot.ServerRef serverRef4 = null;
    java.util.Optional<io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionBlockService> transactionBlockServiceOptional5 = setup2.txstaOptional(
        serverRef4);
    boolean boolean6 = sliceMetaMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) transactionBlockServiceOptional5);
    io.netty.channel.ChannelHandlerContext channelHandlerContext7 = null;
    io.github.onograph.cluster.raft.palapp.NamedServiceApproachException namedServiceApproachException9 = new io.github.onograph.cluster.raft.palapp.NamedServiceApproachException(
        "status");
    try {
      sliceMetaMessageToByteEncoder0.exceptionCaught(channelHandlerContext7,
          (java.lang.Throwable) namedServiceApproachException9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(setup2);
    org.junit.Assert.assertNotNull(transactionChunkingCompletedOptional3);
    org.junit.Assert.assertNotNull(transactionBlockServiceOptional5);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1517() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1517");
    }
    akka.actor.ActorRef actorRef0 = null;
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl1 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> databaseIdMap2 = null;
    akka.actor.ActorRef actorRef3 = null;
    org.neo4j.dbms.identity.ServerId serverId4 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo updateReadReplicaInfo5 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo(
        actorRef0, gdbDiscoveryMetaReadReplicaImpl1, databaseIdMap2, actorRef3, serverId4);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> databaseIdMap6 = updateReadReplicaInfo5.getMapDsdd();
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl7 = updateReadReplicaInfo5.getIrrGdbDiscoveryMetaReadReplicaImpl();
    io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta candidateTallyMeta8 = new io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta();
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataTypeMessageToByteEncoder messageDataTypeMessageToByteEncoder9 = new io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataTypeMessageToByteEncoder();
    io.github.onograph.cluster.raft.share.sync.SyncStatus syncStatus10 = new io.github.onograph.cluster.raft.share.sync.SyncStatus();
    boolean boolean11 = messageDataTypeMessageToByteEncoder9.acceptOutboundMessage(
        (java.lang.Object) syncStatus10);
    syncStatus10.awrcn((long) (byte) 1);
    boolean boolean14 = syncStatus10.getIsRi();
    boolean boolean15 = candidateTallyMeta8.equals((java.lang.Object) syncStatus10);
    boolean boolean17 = candidateTallyMeta8.equals((java.lang.Object) 1);
    boolean boolean18 = updateReadReplicaInfo5.equals((java.lang.Object) boolean17);
    org.junit.Assert.assertNull(databaseIdMap6);
    org.junit.Assert.assertNull(gdbDiscoveryMetaReadReplicaImpl7);
    //org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    //org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    //org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    //org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
  }

  @Test
  public void test1518() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1518");
    }
    java.nio.file.Path[] pathArray1 = new java.nio.file.Path[]{};
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply setupGdbStoreSyncReply2 = io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply.sucsSetupGdbStoreSyncReply(
        (long) 'h', pathArray1);
    long long3 = setupGdbStoreSyncReply2.getLgItpcl();
    org.junit.Assert.assertNotNull(pathArray1);
    org.junit.Assert.assertNotNull(setupGdbStoreSyncReply2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 104L + "'", long3 == 104L);
  }

  @Test
  public void test1519() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1519");
    }
    java.lang.String[] strArray23 = new java.lang.String[]{"", "default", "", "name", "name",
        "temp-copy", "protocols", "protocols", "", "default", "store_version", "temp-save",
        "default", "name", "catchup_protocol", "default", "default", "leader-only", "temp-copy",
        "hi!", "cc-directory-actor", "store_random_id"};
    java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean25 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet24, strArray23);
    io.github.onograph.cluster.raft.control.connect.MutatingComProFamilyWrapper mutatingComProFamilyWrapper26 = new io.github.onograph.cluster.raft.control.connect.MutatingComProFamilyWrapper(
        "RequestGdbId for ", (java.util.Set<java.lang.String>) strSet24);
    java.lang.String str27 = mutatingComProFamilyWrapper26.getStrIetfe();
    org.junit.Assert.assertNotNull(strArray23);
    //org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "RequestGdbId for " + "'", str27,
        "RequestGdbId for ");
  }

  @Test
  public void test1520() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1520");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector connector0 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector();
    connector0.fihrih((long) (byte) 10);
    connector0.strvtrcs((long) 3);
    connector0.stres();
    connector0.strvstfi();
    connector0.fihrvgse();
    connector0.fihrfForSt("backup-server");
  }

  @Test
  public void test1521() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1521");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler0 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler1 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler2 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler3 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler4 = null;
    org.neo4j.logging.Log log5 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler6 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler7 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl8 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler9 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler7, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler10 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler6, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler sliceMetaSimpleChannelInboundHandler11 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler(
        catchupAnswerLimitHandler4, log5, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.module.cuprot.current.rtx.CatchupIncomingTransactionReplySimpleChannelInboundHandler catchupIncomingTransactionReplySimpleChannelInboundHandler12 = new io.github.onograph.cluster.raft.module.cuprot.current.rtx.CatchupIncomingTransactionReplySimpleChannelInboundHandler(
        catchupAnswerLimitHandler3, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler13 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler2, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler allGdbIdsInboundHandler14 = new io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler(
        catchupAnswerLimitHandler1, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType catchupManagerStatusType15 = io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.SETUP_SC_ANSWER;
    refCatchupManagerImpl8.exeForE(catchupManagerStatusType15);
    io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler allGdbIdsInboundHandler17 = new io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler(
        catchupAnswerLimitHandler0, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta18 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta19 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta18);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta20 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta21 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta20);
    akka.cluster.ddata.ReplicatedData replicatedData22 = syncedLeaderMeta19.merge(
        (akka.cluster.ddata.ReplicatedData) syncedLeaderMeta21);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta23 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta24 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta23);
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta25 = syncedLeaderMeta21.mergeData(
        syncedLeaderMeta24);
    boolean boolean26 = allGdbIdsInboundHandler17.acceptInboundMessage(
        (java.lang.Object) syncedLeaderMeta21);
    org.junit.Assert.assertTrue("'" + catchupManagerStatusType15 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.SETUP_SC_ANSWER
        + "'", catchupManagerStatusType15.equals(
        io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.SETUP_SC_ANSWER));
    org.junit.Assert.assertNotNull(replicatedData22);
    org.junit.Assert.assertNotNull(syncedLeaderMeta25);
    //org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1522() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1522");
    }
    java.time.Clock clock0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.cluster.raft.logservice.ConsensusMessageLogServiceDefaultImpl<org.neo4j.token.AbstractTokenHolderBase> abstractTokenHolderBaseConsensusMessageLogServiceDefaultImpl3 = new io.github.onograph.cluster.raft.logservice.ConsensusMessageLogServiceDefaultImpl<org.neo4j.token.AbstractTokenHolderBase>(
        clock0, fileSystemAbstraction1, path2);
    try {
      abstractTokenHolderBaseConsensusMessageLogServiceDefaultImpl3.start();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1523() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1523");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResourceWriterService storeResourceWriterService1 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.AbstractCatchupAnswerManager<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedAbstractCatchupAnswerManager2 = io.github.onograph.cluster.raft.module.cuprot.scmeta.AbstractCatchupAnswerManager.ficadrAbstractCatchupAnswerManager(
        log0, storeResourceWriterService1);
    java.util.List<java.lang.String> strList3 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMeta authMeta4 = new io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMeta(
        strList3);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntryRawCursor consensusLogEntryRawCursor5 = io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntryRawCursor.emtConsensusLogEntryRawCursor();
    boolean boolean6 = authMeta4.equals((java.lang.Object) consensusLogEntryRawCursor5);
    java.util.concurrent.CompletableFuture<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedCompletableFuture7 = null;
    try {
      storeSyncCompletedAbstractCatchupAnswerManager2.ongmarseForCoAu(authMeta4,
          storeSyncCompletedCompletableFuture7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(storeSyncCompletedAbstractCatchupAnswerManager2);
    org.junit.Assert.assertNotNull(consensusLogEntryRawCursor5);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1524() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1524");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl0 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry1 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry1, (long) '#');
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry4, 52L);
    consensusLogCacheServiceNoopImpl0.prn((long) 32);
    consensusLogCacheServiceNoopImpl0.retspccac();
  }

  @Test
  public void test1525() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1525");
    }
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl2 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel0, safeStateMarshalImpl1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk3 = null;
    java.lang.Void void4 = processorImpl2.process(bulkAsk3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage5 = null;
    java.lang.Void void6 = processorImpl2.process(logClipRequestMessage5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage7 = null;
    java.lang.Void void8 = processorImpl2.process(aliveReplyMessage7);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId9 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout consensusElectionTimeout10 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout(
        consensusNodeId9);
    java.lang.Void void11 = processorImpl2.process(consensusElectionTimeout10);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId12 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId13 = null;
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses14 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = null;
    java.lang.String[] strArray22 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet23 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray22);
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet24 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray22);
    org.neo4j.kernel.database.DatabaseId[] databaseIdArray25 = new org.neo4j.kernel.database.DatabaseId[]{};
    java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId> databaseIdSet26 = new java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId>();
    boolean boolean27 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.DatabaseId>) databaseIdSet26,
        databaseIdArray25);
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl28 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl(
        discoverySocketAddresses14, socketAddress15, nodeGroupIdentifierSet24,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet26);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec29 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId12, consensusNodeId13, nodeGroupIdentifierSet24);
    java.lang.Void void30 = processorImpl2.process(leaderRec29);
    org.junit.Assert.assertNull(void4);
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(void8);
    org.junit.Assert.assertNull(void11);
    org.junit.Assert.assertNotNull(strArray22);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet23);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet24);
    org.junit.Assert.assertNotNull(databaseIdArray25);
    //org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNull(void30);
  }

  @Test
  public void test1526() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1526");
    }
    org.neo4j.io.fs.WritableChannel writableChannel0 = null;
    io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl writableChecksumChannelImpl1 = new io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl(
        writableChannel0);
    int int2 = writableChecksumChannelImpl1.putChecksum();
    try {
      org.neo4j.io.fs.WritableChecksumChannel writableChecksumChannel4 = writableChecksumChannelImpl1.putShort(
          (short) (byte) 8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
  }

  @Test
  public void test1527() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1527");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    org.neo4j.dbms.database.DatabaseManager<io.github.onograph.dbms.gdb.EnterpriseClusterDbContext> enterpriseClusterDbContextDatabaseManager1 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.NodeMemberFinderDefaultImpl nodeMemberFinderDefaultImpl2 = new io.github.onograph.cluster.raft.share.calg.nltof.NodeMemberFinderDefaultImpl(
        clusterStructureService0, enterpriseClusterDbContextDatabaseManager1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    try {
      java.util.Set<org.neo4j.dbms.identity.ServerId> serverIdSet4 = nodeMemberFinderDefaultImpl2.vovsSet(
          namedDatabaseId3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1528() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1528");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.CoreDiscoveryServerInfoMarshal coreDiscoveryServerInfoMarshal0 = io.github.onograph.cluster.raft.module.dprot.impl.serialize.CoreDiscoveryServerInfoMarshal.IT;
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses1 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress2 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress3 = null;
    org.neo4j.dbms.identity.ServerId serverId4 = null;
    java.lang.String[] strArray11 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet12 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray11);
    io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta loadBalanceServerMeta13 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta(
        socketAddress3, serverId4, nodeGroupIdentifierSet12);
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses14 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress15 = null;
    java.lang.String[] strArray22 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet23 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray22);
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet24 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray22);
    org.neo4j.kernel.database.DatabaseId[] databaseIdArray25 = new org.neo4j.kernel.database.DatabaseId[]{};
    java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId> databaseIdSet26 = new java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId>();
    boolean boolean27 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.DatabaseId>) databaseIdSet26,
        databaseIdArray25);
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl28 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl(
        discoverySocketAddresses14, socketAddress15, nodeGroupIdentifierSet24,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet26);
    org.neo4j.configuration.helpers.SocketAddress socketAddress29 = null;
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaCoreImpl gdbDiscoveryMetaCoreImpl30 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaCoreImpl(
        discoverySocketAddresses1, socketAddress2, nodeGroupIdentifierSet12,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet26, socketAddress29);
    java.util.Set<org.neo4j.kernel.database.DatabaseId> databaseIdSet31 = gdbDiscoveryMetaCoreImpl30.stedaiSet();
    org.neo4j.io.fs.WritableChannel writableChannel32 = null;
    io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl writableChecksumChannelImpl33 = new io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl(
        writableChannel32);
    try {
      coreDiscoveryServerInfoMarshal0.marshal(gdbDiscoveryMetaCoreImpl30, writableChannel32);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(coreDiscoveryServerInfoMarshal0);
    org.junit.Assert.assertNotNull(strArray11);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet12);
    org.junit.Assert.assertNotNull(strArray22);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet23);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet24);
    org.junit.Assert.assertNotNull(databaseIdArray25);
    //org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertNotNull(databaseIdSet31);
  }

  @Test
  public void test1529() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1529");
    }
    try {
      io.github.onograph.cluster.raft.module.cuprot.current.core.RequestAuthMeta requestAuthMeta2 = new io.github.onograph.cluster.raft.module.cuprot.current.core.RequestAuthMeta(
          "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartRules1. Running every PT10S",
          "RelationshipType");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: No enum constant io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions.RelationshipType");
    } catch (java.lang.IllegalArgumentException e) {
    }
  }

  @Test
  public void test1530() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1530");
    }
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreDatabaseIdMessageToByteEncoder requestStoreDatabaseIdMessageToByteEncoder0 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreDatabaseIdMessageToByteEncoder();
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS marshalChannelImplCMS1 = io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta candidateTermMeta2 = marshalChannelImplCMS1.startState();
    boolean boolean3 = requestStoreDatabaseIdMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) marshalChannelImplCMS1);
    io.netty.channel.ChannelHandlerContext channelHandlerContext4 = null;
    try {
      requestStoreDatabaseIdMessageToByteEncoder0.read(channelHandlerContext4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(marshalChannelImplCMS1);
    org.junit.Assert.assertNotNull(candidateTermMeta2);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1531() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1531");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    org.neo4j.storageengine.api.StoreId storeId1 = null;
    java.nio.file.Path path3 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreResource requestStoreResource4 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreResource(
        databaseId0, storeId1, (long) (byte) 10, path3);
    org.neo4j.kernel.database.DatabaseId databaseId5 = requestStoreResource4.getDatabaseId();
    org.neo4j.storageengine.api.StoreId storeId6 = requestStoreResource4.getEpceStoreId();
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel7 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl8 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl9 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel7, safeStateMarshalImpl8);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk10 = null;
    java.lang.Void void11 = processorImpl9.process(bulkAsk10);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage12 = null;
    java.lang.Void void13 = processorImpl9.process(logClipRequestMessage12);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage14 = null;
    java.lang.Void void15 = processorImpl9.process(aliveReplyMessage14);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId16 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId17 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier18 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray19 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier18};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet20 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean21 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet20,
        nodeGroupIdentifierArray19);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec22 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId16, consensusNodeId17,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet20);
    java.lang.Void void23 = processorImpl9.process(leaderRec22);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage24 = null;
    java.lang.Void void25 = processorImpl9.process(aliveReplyMessage24);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage26 = null;
    java.lang.Void void27 = processorImpl9.process(logClipRequestMessage26);
    boolean boolean28 = requestStoreResource4.equals((java.lang.Object) logClipRequestMessage26);
    org.junit.Assert.assertNull(databaseId5);
    org.junit.Assert.assertNull(storeId6);
    org.junit.Assert.assertNull(void11);
    org.junit.Assert.assertNull(void13);
    org.junit.Assert.assertNull(void15);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier18);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray19);
    //org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNull(void23);
    org.junit.Assert.assertNull(void25);
    org.junit.Assert.assertNull(void27);
    //org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
  }

  @Test
  public void test1532() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1532");
    }
    io.netty.channel.Channel channel0 = null;
    org.neo4j.logging.Log log1 = null;
    io.github.onograph.cluster.raft.akkamsg.NettyChannelImpl nettyChannelImpl2 = new io.github.onograph.cluster.raft.akkamsg.NettyChannelImpl(
        channel0, log1);
    boolean boolean3 = nettyChannelImpl2.isChannelDis();
    io.github.onograph.cluster.raft.palapp.NamedServiceApproachesServiceStandardImpl namedServiceApproachesServiceStandardImpl4 = new io.github.onograph.cluster.raft.palapp.NamedServiceApproachesServiceStandardImpl();
    try {
      java.util.concurrent.Future<java.lang.Void> voidFuture5 = nettyChannelImpl2.wrtFuture(
          (java.lang.Object) namedServiceApproachesServiceStandardImpl4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1533() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1533");
    }
    java.util.ArrayList<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>> strPairList1 = new java.util.ArrayList<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>();
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo3 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType4 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer5 = applicationComProFamilyType4.getImpl();
    boolean boolean6 = viewClusterInfo3.equals((java.lang.Object) entProVer5);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType7 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer8 = applicationComProFamilyType7.getImpl();
    int int9 = entProVer5.compareTo(entProVer8);
    io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl changeComProRequestImpl10 = new io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl(
        (java.util.List<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>) strPairList1,
        "", entProVer8);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.NoComAction noComAction11 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.NoComAction(
        (long) (byte) 6, (java.lang.Object) strPairList1);
    org.junit.Assert.assertNotNull(viewClusterInfo3);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType4 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType4.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer5);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType7 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType7.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer8);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
  }

  @Test
  public void test1534() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1534");
    }
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions authMetaOptions0 = io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions.users;
    org.junit.Assert.assertTrue("'" + authMetaOptions0 + "' != '"
            + io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions.users + "'",
        authMetaOptions0.equals(
            io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaOptions.users));
  }

  @Test
  public void test1535() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1535");
    }
    io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper.SafeStateMarshalImpl safeStateMarshalImpl0 = io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper.SafeStateMarshalImpl.IT;
    io.github.onograph.cluster.raft.id.ConsensusNodeId[] consensusNodeIdArray2 = new io.github.onograph.cluster.raft.id.ConsensusNodeId[]{};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet3 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet3,
        consensusNodeIdArray2);
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper consensusNodeServerMemberIdWrapper5 = new io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper(
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet3);
    io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper memberIndexWrapper6 = new io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper(
        (long) ' ',
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType7 = io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType.HEALTH_PING_ANS;
    boolean boolean8 = memberIndexWrapper6.equals((java.lang.Object) raftConsensusMessageType7);
    org.neo4j.io.fs.WritableChannel writableChannel9 = null;
    try {
      safeStateMarshalImpl0.marshal(memberIndexWrapper6, writableChannel9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(safeStateMarshalImpl0);
    org.junit.Assert.assertNotNull(consensusNodeIdArray2);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + raftConsensusMessageType7 + "' != '"
        + io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType.HEALTH_PING_ANS
        + "'", raftConsensusMessageType7.equals(
        io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType.HEALTH_PING_ANS));
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1536() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1536");
    }
    io.github.onograph.cluster.raft.control.connect.ServerMessageToByteEncoder serverMessageToByteEncoder0 = new io.github.onograph.cluster.raft.control.connect.ServerMessageToByteEncoder();
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreException gdbStoreException2 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreException(
        "type_comp");
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbIsoException gdbIsoException3 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbIsoException(
        (java.lang.Exception) gdbStoreException2);
    boolean boolean4 = serverMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) gdbStoreException2);
    boolean boolean6 = serverMessageToByteEncoder0.acceptOutboundMessage((java.lang.Object) 1L);
    io.netty.channel.ChannelHandlerContext channelHandlerContext7 = null;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType8 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    java.lang.String str9 = applicationComProFamilyType8.caerString();
    io.github.onograph.cluster.raft.control.ApplicationComProFamily[] applicationComProFamilyArray10 = new io.github.onograph.cluster.raft.control.ApplicationComProFamily[]{
        applicationComProFamilyType8};
    io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyComProFamilyGroup11 = null;
    io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper applicationCurrentActiveComProFamilyWrapper12 = io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper.alkopolApplicationCurrentActiveComProFamilyWrapper(
        applicationComProFamilyComProFamilyGroup11);
    io.github.onograph.cluster.raft.control.connect.ComProFamilyManagerAppImpl comProFamilyManagerAppImpl13 = new io.github.onograph.cluster.raft.control.connect.ComProFamilyManagerAppImpl(
        applicationComProFamilyArray10, applicationCurrentActiveComProFamilyWrapper12);
    io.netty.channel.ChannelPromise channelPromise14 = null;
    try {
      serverMessageToByteEncoder0.write(channelHandlerContext7,
          (java.lang.Object) applicationCurrentActiveComProFamilyWrapper12, channelPromise14);
      org.junit.Assert.fail(
          "Expected exception of type io.netty.handler.codec.EncoderException; message: java.lang.NullPointerException");
    } catch (io.netty.handler.codec.EncoderException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType8 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType8.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "catchup_protocol" + "'", str9,
        "catchup_protocol");
    org.junit.Assert.assertNotNull(applicationComProFamilyArray10);
    org.junit.Assert.assertNotNull(applicationCurrentActiveComProFamilyWrapper12);
  }

  @Test
  public void test1537() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1537");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.DiscoveryGdbOperatorMetaWrapperJSerializer discoveryGdbOperatorMetaWrapperJSerializer0 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.DiscoveryGdbOperatorMetaWrapperJSerializer();
    int int1 = discoveryGdbOperatorMetaWrapperJSerializer0.identifier();
    int int2 = discoveryGdbOperatorMetaWrapperJSerializer0.identifier();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1015 + "'", int1 == 1015);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1015 + "'", int2 == 1015);
  }

  @Test
  public void test1538() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1538");
    }
    java.util.function.Supplier<akka.cluster.client.ClusterClientSettings> clusterClientSettingsSupplier0 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ClusterActorService.ClusterActorBuilder clusterActorBuilder1 = io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ClusterActorService.cleceporClusterActorServiceClusterActorBuilder(
        clusterClientSettingsSupplier0);
    akka.actor.Props props2 = io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ClusterActorService.prpProps(
        clusterActorBuilder1);
    akka.actor.AbstractActor.ActorContext actorContext3 = null;
    try {
      akka.actor.ActorRef actorRef4 = clusterActorBuilder1.craActorRef(actorContext3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterActorBuilder1);
    org.junit.Assert.assertNotNull(props2);
  }

  @Test
  public void test1539() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1539");
    }
    io.github.onograph.cluster.raft.readreplica.tx.ReadReplicaJobEventService readReplicaJobEventService0 = null;
    org.neo4j.logging.Log log3 = null;
    io.github.onograph.cluster.raft.readreplica.tx.ReadReplicaTransactionBlockProcessor readReplicaTransactionBlockProcessor4 = null;
    io.github.onograph.cluster.raft.readreplica.tx.TxCancelable txCancelable5 = null;
    io.github.onograph.cluster.raft.readreplica.tx.ReadReplicaGetChangesTask readReplicaGetChangesTask6 = new io.github.onograph.cluster.raft.readreplica.tx.ReadReplicaGetChangesTask(
        readReplicaJobEventService0, (long) 1016, (long) 1016, log3,
        readReplicaTransactionBlockProcessor4, txCancelable5);
    java.util.concurrent.CompletableFuture<io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompleted> transactionChunkingCompletedCompletableFuture7 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.Slice slice8 = null;
    try {
      boolean boolean9 = readReplicaGetChangesTask6.isOnficttForCoSl(
          transactionChunkingCompletedCompletableFuture7, slice8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1540() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1540");
    }
    io.github.onograph.cluster.raft.control.connect.ServerComProMessageProcessorHandshakeImpl serverComProMessageProcessorHandshakeImpl0 = null;
    io.github.onograph.cluster.raft.control.connect.ServerHandshakeSimpleChannelInboundHandler serverHandshakeSimpleChannelInboundHandler1 = new io.github.onograph.cluster.raft.control.connect.ServerHandshakeSimpleChannelInboundHandler(
        serverComProMessageProcessorHandshakeImpl0);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemMessageToByteEncoder catchupProblemMessageToByteEncoder2 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemMessageToByteEncoder();
    boolean boolean3 = serverHandshakeSimpleChannelInboundHandler1.acceptInboundMessage(
        (java.lang.Object) catchupProblemMessageToByteEncoder2);
    io.netty.channel.ChannelHandlerContext channelHandlerContext4 = null;
    serverHandshakeSimpleChannelInboundHandler1.handlerAdded(channelHandlerContext4);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1541() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1541");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.GdbDiscoveryMetaReadReplicaMarshal gdbDiscoveryMetaReadReplicaMarshal0 = io.github.onograph.cluster.raft.module.dprot.impl.serialize.GdbDiscoveryMetaReadReplicaMarshal.IT;
    org.neo4j.io.fs.ReadableChannel readableChannel1 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl2 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel1);
    try {
      io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl3 = gdbDiscoveryMetaReadReplicaMarshal0.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(gdbDiscoveryMetaReadReplicaMarshal0);
  }

  @Test
  public void test1542() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1542");
    }
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl2 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel0, safeStateMarshalImpl1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk3 = null;
    java.lang.Void void4 = processorImpl2.process(bulkAsk3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage5 = null;
    java.lang.Void void6 = processorImpl2.process(logClipRequestMessage5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage7 = null;
    java.lang.Void void8 = processorImpl2.process(aliveReplyMessage7);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId9 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId10 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier11 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray12 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier11};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet13 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean14 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet13,
        nodeGroupIdentifierArray12);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec15 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId9, consensusNodeId10,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet13);
    java.lang.Void void16 = processorImpl2.process(leaderRec15);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId17 = null;
    java.util.UUID uUID18 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.State state19 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.InfoReplyMessage infoReplyMessage20 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.InfoReplyMessage(
        consensusNodeId17, uUID18, state19);
    try {
      java.lang.Object obj21 = processorImpl2.process(infoReplyMessage20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(void4);
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(void8);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier11);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray12);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertNull(void16);
  }

  @Test
  public void test1543() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1543");
    }
    java.lang.Object[] objArray1 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefException refException2 = new io.github.onograph.cluster.raft.module.cuprot.RefException(
        "name", objArray1);
  }

  @Test
  public void test1544() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1544");
    }
    java.time.Clock clock0 = null;
    java.time.Duration duration1 = null;
    try {
      io.github.onograph.cluster.raft.share.calg.nltof.TransferCollection<io.github.onograph.cluster.raft.share.calg.action.BulkAddAction> bulkAddActionTransferCollection2 = new io.github.onograph.cluster.raft.share.calg.nltof.TransferCollection<io.github.onograph.cluster.raft.share.calg.action.BulkAddAction>(
          clock0, duration1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1545() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1545");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl messageProcessorImpl0 = io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl.SUPTL_MESSAGE_PROCESSOR_IMPL;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg1 = null;
    java.lang.Boolean boolean2 = messageProcessorImpl0.process(aliveMsg1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RequestTransactionLogCZMetaMessage requestTransactionLogCZMetaMessage3 = null;
    java.lang.Boolean boolean4 = messageProcessorImpl0.process(requestTransactionLogCZMetaMessage3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.VotePreparationMessage.Ask ask5 = null;
    java.lang.Boolean boolean6 = messageProcessorImpl0.process(ask5);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel7 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl8 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl9 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel7, safeStateMarshalImpl8);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk10 = null;
    java.lang.Void void11 = processorImpl9.process(bulkAsk10);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage12 = null;
    java.lang.Void void13 = processorImpl9.process(logClipRequestMessage12);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage14 = null;
    java.lang.Void void15 = processorImpl9.process(aliveReplyMessage14);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId16 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId17 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier18 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray19 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier18};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet20 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean21 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet20,
        nodeGroupIdentifierArray19);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec22 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId16, consensusNodeId17,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet20);
    java.lang.Void void23 = processorImpl9.process(leaderRec22);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel24 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl25 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl26 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel24, safeStateMarshalImpl25);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk27 = null;
    java.lang.Void void28 = processorImpl26.process(bulkAsk27);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage29 = null;
    java.lang.Void void30 = processorImpl26.process(logClipRequestMessage29);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage31 = null;
    java.lang.Void void32 = processorImpl26.process(aliveReplyMessage31);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId33 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId34 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier35 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray36 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier35};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet37 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean38 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet37,
        nodeGroupIdentifierArray36);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec39 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId33, consensusNodeId34,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet37);
    java.lang.Void void40 = processorImpl26.process(leaderRec39);
    boolean boolean41 = leaderRec22.equals((java.lang.Object) leaderRec39);
    java.lang.Boolean boolean42 = messageProcessorImpl0.process(leaderRec39);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel43 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl44 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl45 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel43, safeStateMarshalImpl44);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk46 = null;
    java.lang.Void void47 = processorImpl45.process(bulkAsk46);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk48 = null;
    java.lang.Void void49 = processorImpl45.process(bulkAsk48);
    java.lang.Void void50 = leaderRec39.dipc(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception>) processorImpl45);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId51 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveNoReplyMessage aliveNoReplyMessage55 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveNoReplyMessage(
        consensusNodeId51, (long) 10, (long) 'a', (long) (byte) 10);
    long long56 = aliveNoReplyMessage55.getLgLt();
    long long57 = aliveNoReplyMessage55.getLgIc();
    try {
      java.lang.Void void58 = processorImpl45.process(aliveNoReplyMessage55);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(messageProcessorImpl0);
    org.junit.Assert.assertEquals("'" + boolean2 + "' != '" + true + "'", boolean2, true);
    org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
    org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
    org.junit.Assert.assertNull(void11);
    org.junit.Assert.assertNull(void13);
    org.junit.Assert.assertNull(void15);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier18);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray19);
    //org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNull(void23);
    org.junit.Assert.assertNull(void28);
    org.junit.Assert.assertNull(void30);
    org.junit.Assert.assertNull(void32);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier35);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray36);
    //org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertNull(void40);
    //org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
    org.junit.Assert.assertNull(void47);
    org.junit.Assert.assertNull(void49);
    org.junit.Assert.assertNull(void50);
    org.junit.Assert.assertTrue("'" + long56 + "' != '" + 97L + "'", long56 == 97L);
    org.junit.Assert.assertTrue("'" + long57 + "' != '" + 10L + "'", long57 == 10L);
  }

  @Test
  public void test1546() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1546");
    }
    boolean boolean2 = io.github.onograph.cluster.raft.share.calg.VotingMemberThreshold.isQuu(
        (int) (short) 10, (int) (short) 0);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
  }

  @Test
  public void test1547() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1547");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade1 = null;
    org.neo4j.logging.Log log2 = null;
    java.nio.file.Path path3 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo4 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path3);
    java.nio.file.Path path5 = clusterMetaTopologyInfo4.getPscPath();
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat6 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv7 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction0, clusterSimpleStorageFacade1, log2, clusterMetaTopologyInfo4,
        clusterMetaFormat6);
    org.neo4j.logging.Log log8 = upgradeMetaEnv7.getLog();
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo9 = upgradeMetaEnv7.getLscClusterMetaTopologyInfo();
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo10 = upgradeMetaEnv7.getLscClusterMetaTopologyInfo();
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo4);
    org.junit.Assert.assertNull(path5);
    org.junit.Assert.assertNull(log8);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo9);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo10);
  }

  @Test
  public void test1548() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1548");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl messageProcessorImpl0 = io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl.SUPTL_MESSAGE_PROCESSOR_IMPL;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg1 = null;
    java.lang.Boolean boolean2 = messageProcessorImpl0.process(aliveMsg1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.VotePreparationMessage.Ask ask3 = null;
    java.lang.Boolean boolean4 = messageProcessorImpl0.process(ask3);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel5 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl6 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl7 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel5, safeStateMarshalImpl6);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk8 = null;
    java.lang.Void void9 = processorImpl7.process(bulkAsk8);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage10 = null;
    java.lang.Void void11 = processorImpl7.process(logClipRequestMessage10);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage12 = null;
    java.lang.Void void13 = processorImpl7.process(aliveReplyMessage12);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId14 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout consensusElectionTimeout15 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout(
        consensusNodeId14);
    java.lang.Void void16 = processorImpl7.process(consensusElectionTimeout15);
    java.lang.Boolean boolean17 = messageProcessorImpl0.process(consensusElectionTimeout15);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId18 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.VotePreparationMessage.Reply reply21 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.VotePreparationMessage.Reply(
        consensusNodeId18, false, 100L);
    boolean boolean22 = reply21.getIsGv();
    long long23 = reply21.getLgT();
    org.neo4j.kernel.database.DatabaseId databaseId24 = null;
    io.github.onograph.dbms.ClusterDatabaseManagementException clusterDatabaseManagementException26 = new io.github.onograph.dbms.ClusterDatabaseManagementException(
        "store_version");
    org.neo4j.dbms.OperatorState operatorState27 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper discoveryGdbOperatorMetaWrapper28 = new io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper(
        databaseId24, (java.lang.Throwable) clusterDatabaseManagementException26, operatorState27);
    boolean boolean29 = reply21.equals((java.lang.Object) databaseId24);
    java.lang.Boolean boolean30 = messageProcessorImpl0.process(reply21);
    org.junit.Assert.assertNotNull(messageProcessorImpl0);
    org.junit.Assert.assertEquals("'" + boolean2 + "' != '" + true + "'", boolean2, true);
    org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
    org.junit.Assert.assertNull(void9);
    org.junit.Assert.assertNull(void11);
    org.junit.Assert.assertNull(void13);
    org.junit.Assert.assertNull(void16);
    org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + true + "'", boolean17, true);
    //org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + long23 + "' != '" + 100L + "'", long23 == 100L);
    //org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
  }

  @Test
  public void test1549() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1549");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    org.neo4j.logging.LogProvider logProvider3 = null;
    java.nio.file.Path path4 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo5 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path4);
    java.nio.file.Path path6 = clusterMetaTopologyInfo5.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker7 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo5);
    org.neo4j.memory.MemoryTracker memoryTracker8 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade9 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config1, fileSystemAbstraction2, logProvider3, clusterMetaTopologyInfo5, memoryTracker8);
    org.neo4j.logging.Log log10 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config12 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction13 = null;
    org.neo4j.logging.LogProvider logProvider14 = null;
    java.nio.file.Path path15 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo16 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path15);
    java.nio.file.Path path17 = clusterMetaTopologyInfo16.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker18 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo16);
    org.neo4j.memory.MemoryTracker memoryTracker19 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade20 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config12, fileSystemAbstraction13, logProvider14, clusterMetaTopologyInfo16,
        memoryTracker19);
    org.neo4j.logging.Log log21 = null;
    java.nio.file.Path path22 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo23 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path22);
    java.nio.file.Path path24 = clusterMetaTopologyInfo23.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker25 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo23);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat26 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction11, clusterSimpleStorageFacade20, log21, clusterMetaTopologyInfo23,
        clusterMetaFormat26);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat28 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv29 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction0, clusterSimpleStorageFacade9, log10, clusterMetaTopologyInfo23,
        clusterMetaFormat28);
    try {
      org.neo4j.io.state.SimpleStorage<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSimpleStorage31 = clusterSimpleStorageFacade9.crermroSimpleStorage(
          "raft-server");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo5);
    org.junit.Assert.assertNull(path6);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo16);
    org.junit.Assert.assertNull(path17);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo23);
    org.junit.Assert.assertNull(path24);
    org.junit.Assert.assertNotNull(clusterMetaFormat26);
  }

  @Test
  public void test1550() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1550");
    }
    akka.cluster.Cluster cluster0 = null;
    akka.event.EventStream eventStream1 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.StartScheduler startScheduler2 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartAllConds restartAllConds3 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartAllConds();
    akka.actor.Props props4 = io.github.onograph.cluster.raft.module.dprot.impl.structure.RestartMonitoringActor.prpProps(
        cluster0, eventStream1, startScheduler2,
        (io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach) restartAllConds3);
    akka.cluster.Cluster cluster5 = null;
    boolean boolean6 = restartAllConds3.isRerruForCl(cluster5);
    org.junit.Assert.assertNotNull(props4);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
  }

  @Test
  public void test1551() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1551");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.AskState> askStateFSMEmptyReq0 = new io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.AskState>();
    askStateFSMEmptyReq0.fls();
  }

  @Test
  public void test1552() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1552");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray5 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry4};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction6 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray5);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction7 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 100, 1536L, consensusLogEntryArray5);
    io.github.onograph.cluster.raft.share.calg.action.BulkAddAction bulkAddAction10 = new io.github.onograph.cluster.raft.share.calg.action.BulkAddAction(
        consensusLogEntryArray5, (long) (byte) 0, (int) (short) 1);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl11 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry12 = null;
    consensusLogCacheServiceNoopImpl11.putForCo(consensusLogEntry12, (long) '#');
    long long15 = consensusLogCacheServiceNoopImpl11.toabys();
    org.neo4j.logging.Log log16 = null;
    bulkAddAction10.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceNoopImpl11,
        log16);
    int int18 = bulkAddAction10.ofst;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType catchupManagerStatusType19 = io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.CS;
    boolean boolean20 = bulkAddAction10.equals((java.lang.Object) catchupManagerStatusType19);
    org.junit.Assert.assertNotNull(consensusLogEntryArray5);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    org.junit.Assert.assertTrue("'" + catchupManagerStatusType19 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.CS
        + "'", catchupManagerStatusType19.equals(
        io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.CS));
    //org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
  }

  @Test
  public void test1553() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1553");
    }
    io.github.onograph.cluster.raft.id.ConsensusMemberGroupId.SafeStateMarshalImpl safeStateMarshalImpl0 = io.github.onograph.cluster.raft.id.ConsensusMemberGroupId.SafeStateMarshalImpl.IT;
    io.github.onograph.cluster.raft.share.meta.MetaWrapper<io.github.onograph.cluster.raft.id.ConsensusMemberGroupId> consensusMemberGroupIdMetaWrapper1 = io.github.onograph.cluster.raft.share.meta.MetaWrapper.dumMetaWrapper(
        (org.neo4j.io.marshal.SafeStateMarshal<io.github.onograph.cluster.raft.id.ConsensusMemberGroupId>) safeStateMarshalImpl0);
    io.github.onograph.cluster.raft.id.ConsensusMemberGroupId consensusMemberGroupId2 = safeStateMarshalImpl0.startState();
    org.neo4j.io.fs.ReadableChannel readableChannel3 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl4 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel3);
    readableClosablePositionAwareChecksumChannelPassThruImpl4.beginChecksum();
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition6 = readableClosablePositionAwareChecksumChannelPassThruImpl4.getCurrentPosition();
    int int7 = readableClosablePositionAwareChecksumChannelPassThruImpl4.endChecksumAndValidate();
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl8 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl4);
    try {
      io.github.onograph.cluster.raft.id.ConsensusMemberGroupId consensusMemberGroupId9 = safeStateMarshalImpl0.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(safeStateMarshalImpl0);
    org.junit.Assert.assertNotNull(consensusMemberGroupIdMetaWrapper1);
    org.junit.Assert.assertNull(consensusMemberGroupId2);
    org.junit.Assert.assertNotNull(logPosition6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
  }

  @Test
  public void test1554() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1554");
    }
    java.io.InputStream inputStream0 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.ReadableChannelDataInputStreamImpl readableChannelDataInputStreamImpl1 = new io.github.onograph.cluster.raft.akkamsg.serialization.ReadableChannelDataInputStreamImpl(
        inputStream0);
    try {
      long long2 = readableChannelDataInputStreamImpl1.getLong();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1555() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1555");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta.MarshalChannelImplCMS marshalChannelImplCMS0 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta.MarshalChannelImplCMS();
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta leasableMeta1 = marshalChannelImplCMS0.startState();
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager2 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    org.neo4j.io.fs.ReadableChannel readableChannel3 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl4 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel3);
    readablePositionAwareChecksumChannelManager2.deettoForRe(
        (org.neo4j.kernel.impl.transaction.log.ReadableClosablePositionAwareChecksumChannel) readableClosablePositionAwareChecksumChannelPassThruImpl4);
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition6 = readablePositionAwareChecksumChannelManager2.getCurrentPosition();
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition7 = readablePositionAwareChecksumChannelManager2.getCurrentPosition();
    try {
      io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta leasableMeta8 = marshalChannelImplCMS0.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(leasableMeta1);
    org.junit.Assert.assertNotNull(logPosition6);
    org.junit.Assert.assertNotNull(logPosition7);
  }

  @Test
  public void test1556() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1556");
    }
    io.github.onograph.cluster.raft.module.cuprot.ServerRef.CatchupManagerStatusType catchupManagerStatusType0 = io.github.onograph.cluster.raft.module.cuprot.ServerRef.CatchupManagerStatusType.REQ_GDB_UID;
    org.junit.Assert.assertTrue("'" + catchupManagerStatusType0 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.ServerRef.CatchupManagerStatusType.REQ_GDB_UID
        + "'", catchupManagerStatusType0.equals(
        io.github.onograph.cluster.raft.module.cuprot.ServerRef.CatchupManagerStatusType.REQ_GDB_UID));
  }

  @Test
  public void test1557() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1557");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId[] consensusNodeIdArray0 = new io.github.onograph.cluster.raft.id.ConsensusNodeId[]{};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet1 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId>();
    boolean boolean2 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet1,
        consensusNodeIdArray0);
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper consensusNodeServerMemberIdWrapper3 = new io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper(
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet1);
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper consensusNodeServerMemberIdWrapper4 = new io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper(
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet1);
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataProcessor syncableDataProcessor5 = null;
    try {
      consensusNodeServerMemberIdWrapper4.dipcForSy(syncableDataProcessor5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusNodeIdArray0);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
  }

  @Test
  public void test1558() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1558");
    }
    org.neo4j.scheduler.JobScheduler jobScheduler0 = null;
    org.neo4j.logging.LogProvider logProvider1 = null;
    try {
      io.github.onograph.cluster.raft.readreplica.tx.ReadReplicaAsyncTransactionAdapter readReplicaAsyncTransactionAdapter2 = new io.github.onograph.cluster.raft.readreplica.tx.ReadReplicaAsyncTransactionAdapter(
          jobScheduler0, logProvider1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1559() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1559");
    }
    org.neo4j.kernel.impl.transaction.log.entry.LogEntryReader logEntryReader0 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.BaseSyncableDataMarshal baseSyncableDataMarshal1 = new io.github.onograph.cluster.raft.akkamsg.serialization.BaseSyncableDataMarshal(
        logEntryReader0);
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager2 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl3 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager2);
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager4 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    readablePositionAwareChecksumChannelManager4.beginChecksum();
    org.neo4j.io.fs.ReadableChannel readableChannel6 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl7 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel6);
    readableClosablePositionAwareChecksumChannelPassThruImpl7.beginChecksum();
    readablePositionAwareChecksumChannelManager4.deettoForRe(
        (org.neo4j.kernel.impl.transaction.log.ReadableClosablePositionAwareChecksumChannel) readableClosablePositionAwareChecksumChannelPassThruImpl7);
    readablePositionAwareChecksumChannelManager2.deettoForRe(
        (org.neo4j.kernel.impl.transaction.log.ReadableClosablePositionAwareChecksumChannel) readableClosablePositionAwareChecksumChannelPassThruImpl7);
    try {
      io.github.onograph.cluster.raft.akkamsg.serialization.DataManagerFactory<io.github.onograph.cluster.raft.share.sync.SyncableData> syncableDataDataManagerFactory12 = baseSyncableDataMarshal1.unahDataManagerFactory(
          (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl7,
          (byte) 100);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalStateException; message: *** Error: 1fc27463-a6b2-4806-a34a-44954f6d12e2");
    } catch (java.lang.IllegalStateException e) {
    }
  }

  @Test
  public void test1560() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1560");
    }
    io.github.onograph.cluster.raft.gateway.gwlb.mods.ClusteringBalancerServiceImpl clusteringBalancerServiceImpl0 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.ClusteringBalancerServiceImpl();
    io.github.onograph.cluster.raft.gateway.gwlb.mods.ServerPoliciesPlugin serverPoliciesPlugin1 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.ServerPoliciesPlugin(
        (io.github.onograph.cluster.raft.gateway.gwlb.BalancerService) clusteringBalancerServiceImpl0);
    io.github.onograph.cluster.raft.gateway.gwlb.mods.ServerPoliciesPlugin serverPoliciesPlugin2 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.ServerPoliciesPlugin(
        (io.github.onograph.cluster.raft.gateway.gwlb.BalancerService) clusteringBalancerServiceImpl0);
    java.lang.String str3 = clusteringBalancerServiceImpl0.plgneString();
    boolean boolean4 = clusteringBalancerServiceImpl0.isSfgpi();
    org.neo4j.graphdb.config.Configuration configuration5 = null;
    org.neo4j.logging.Log log6 = null;
    clusteringBalancerServiceImpl0.vaitForCoLo(configuration5, log6);
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService8 = null;
    io.github.onograph.cluster.raft.gateway.gwlb.ClusterLeader clusterLeader9 = null;
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.configuration.Config config11 = null;
    try {
      clusteringBalancerServiceImpl0.iniForClClLoCo(clusterStructureService8, clusterLeader9,
          logProvider10, config11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "server_policies" + "'", str3,
        "server_policies");
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
  }

  @Test
  public void test1561() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1561");
    }
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl2 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel0, safeStateMarshalImpl1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk3 = null;
    java.lang.Void void4 = processorImpl2.process(bulkAsk3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage5 = null;
    java.lang.Void void6 = processorImpl2.process(logClipRequestMessage5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage7 = null;
    java.lang.Void void8 = processorImpl2.process(aliveReplyMessage7);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId9 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout consensusElectionTimeout10 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout(
        consensusNodeId9);
    java.lang.Void void11 = processorImpl2.process(consensusElectionTimeout10);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId12 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg13 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg(
        consensusNodeId12);
    java.lang.Void void14 = processorImpl2.process(aliveMsg13);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId15 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress18 = null;
    org.neo4j.dbms.identity.ServerId serverId19 = null;
    java.lang.String[] strArray26 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet27 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray26);
    io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta loadBalanceServerMeta28 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta(
        socketAddress18, serverId19, nodeGroupIdentifierSet27);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.AskToChange askToChange29 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.AskToChange(
        consensusNodeId15, (long) 1536, (long) (byte) 0, nodeGroupIdentifierSet27);
    long long30 = askToChange29.getLgT();
    try {
      java.lang.Void void31 = processorImpl2.process(askToChange29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(void4);
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(void8);
    org.junit.Assert.assertNull(void11);
    org.junit.Assert.assertNull(void14);
    org.junit.Assert.assertNotNull(strArray26);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet27);
    org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
  }

  @Test
  public void test1562() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1562");
    }
    java.lang.String str0 = org.neo4j.dbms.database.SystemGraphDbmsModel.UPDATED_AT_PROPERTY;
    org.junit.Assert.assertEquals("'" + str0 + "' != '" + "updated_at" + "'", str0, "updated_at");
  }

  @Test
  public void test1563() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1563");
    }
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl2 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel0, safeStateMarshalImpl1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk3 = null;
    java.lang.Void void4 = processorImpl2.process(bulkAsk3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk5 = null;
    java.lang.Void void6 = processorImpl2.process(bulkAsk5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage7 = null;
    java.lang.Void void8 = processorImpl2.process(logClipRequestMessage7);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId9 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId10 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.CandidateVoteMessage.Ask ask14 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.CandidateVoteMessage.Ask(
        consensusNodeId9, consensusNodeId10, (long) '4', (long) (short) -1, 1L);
    boolean boolean15 = ask14.getIsOr();
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId16 = ask14.getFroConsensusNodeId();
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId17 = ask14.getFroConsensusNodeId();
    try {
      java.lang.Void void18 = processorImpl2.process(ask14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(void4);
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(void8);
    //org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNull(consensusNodeId16);
    org.junit.Assert.assertNull(consensusNodeId17);
  }

  @Test
  public void test1564() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1564");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.DepartingMessageManagerMessageToByteEncoder departingMessageManagerMessageToByteEncoder0 = new io.github.onograph.cluster.raft.akkamsg.serialization.DepartingMessageManagerMessageToByteEncoder();
    io.netty.channel.ChannelHandlerContext channelHandlerContext1 = null;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS2 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta3 = marshalChannelImplCMS2.startState();
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS4 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta5 = marshalChannelImplCMS4.startState();
    boolean boolean7 = nodeServerMemberTransactionLogDataMeta5.isTrnt((long) '#');
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta8 = nodeServerMemberTransactionLogDataMeta5.neitcNodeServerMemberTransactionLogDataMeta();
    long long9 = marshalChannelImplCMS2.ordinal(nodeServerMemberTransactionLogDataMeta5);
    io.netty.channel.ChannelPromise channelPromise10 = null;
    try {
      departingMessageManagerMessageToByteEncoder0.write(channelHandlerContext1,
          (java.lang.Object) nodeServerMemberTransactionLogDataMeta5, channelPromise10);
      org.junit.Assert.fail(
          "Expected exception of type io.netty.handler.codec.EncoderException; message: java.lang.NullPointerException");
    } catch (io.netty.handler.codec.EncoderException e) {
    }
    org.junit.Assert.assertNotNull(marshalChannelImplCMS2);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta3);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS4);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta5);
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta8);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
  }

  @Test
  public void test1565() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1565");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerManager<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedCatchupAnswerManager0 = new io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerManager<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted>();
    java.util.concurrent.CompletableFuture<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedCompletableFuture1 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreDatabaseId storeDatabaseId2 = null;
    try {
      storeSyncCompletedCatchupAnswerManager0.ongsirpForCoSt(storeSyncCompletedCompletableFuture1,
          storeDatabaseId2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1566() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1566");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.DefaultSDEmptyReq.DefaultSDEmptyReqSafeChannelMarshal defaultSDEmptyReqSafeChannelMarshal0 = new io.github.onograph.cluster.raft.share.meta.fsm.DefaultSDEmptyReq.DefaultSDEmptyReqSafeChannelMarshal();
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager1 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl2 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager1);
    try {
      io.github.onograph.cluster.raft.share.meta.fsm.DefaultSDEmptyReq defaultSDEmptyReq3 = defaultSDEmptyReqSafeChannelMarshal0.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error:  337d71e4-16ab-4986-b3d7-7e231af9f8ee");
    } catch (java.lang.IllegalArgumentException e) {
    }
  }

  @Test
  public void test1567() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1567");
    }
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl2 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel0, safeStateMarshalImpl1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk3 = null;
    java.lang.Void void4 = processorImpl2.process(bulkAsk3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage5 = null;
    java.lang.Void void6 = processorImpl2.process(logClipRequestMessage5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage7 = null;
    java.lang.Void void8 = processorImpl2.process(aliveReplyMessage7);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId9 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId10 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier11 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray12 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier11};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet13 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean14 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet13,
        nodeGroupIdentifierArray12);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec15 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId9, consensusNodeId10,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet13);
    java.lang.Void void16 = processorImpl2.process(leaderRec15);
    io.github.onograph.cluster.raft.logservice.ConsensusMessageLogServiceNOOPImpl<java.lang.String> strConsensusMessageLogServiceNOOPImpl17 = new io.github.onograph.cluster.raft.logservice.ConsensusMessageLogServiceNOOPImpl<java.lang.String>();
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId18 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveNoReplyMessage aliveNoReplyMessage22 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveNoReplyMessage(
        consensusNodeId18, (long) 10, (long) 'a', (long) (byte) 10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    strConsensusMessageLogServiceNOOPImpl17.loobnForNaMECo(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AbstractConsensusMessage) aliveNoReplyMessage22,
        "causal_clustering.leadership_priority_group", namedDatabaseId24);
    io.github.onograph.cluster.raft.share.calg.LeaderNodeDataSDWrapper leaderNodeDataSDWrapper26 = new io.github.onograph.cluster.raft.share.calg.LeaderNodeDataSDWrapper();
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier28 = new io.github.onograph.config.NodeGroupIdentifier(
        "hi!");
    char char30 = nodeGroupIdentifier28.charAt(0);
    akka.cluster.Cluster cluster31 = null;
    akka.event.EventStream eventStream32 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.StartScheduler startScheduler33 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartRules1 restartRules1_34 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartRules1();
    akka.actor.Props props35 = io.github.onograph.cluster.raft.module.dprot.impl.structure.RestartMonitoringActor.prpProps(
        cluster31, eventStream32, startScheduler33,
        (io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach) restartRules1_34);
    boolean boolean36 = nodeGroupIdentifier28.equals((java.lang.Object) restartRules1_34);
    boolean boolean37 = leaderNodeDataSDWrapper26.equals((java.lang.Object) nodeGroupIdentifier28);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId38 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.Ask ask39 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.Ask(
        (io.github.onograph.cluster.raft.share.sync.SyncableData) leaderNodeDataSDWrapper26,
        consensusNodeId38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = null;
    strConsensusMessageLogServiceNOOPImpl17.loobnForNaMECo(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AbstractConsensusMessage) ask39,
        "", namedDatabaseId41);
    java.lang.Void void43 = processorImpl2.process(ask39);
    org.junit.Assert.assertNull(void4);
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(void8);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier11);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray12);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertNull(void16);
    org.junit.Assert.assertTrue("'" + char30 + "' != '" + 'h' + "'", char30 == 'h');
    org.junit.Assert.assertNotNull(props35);
    //org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    //org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNull(void43);
  }

  @Test
  public void test1568() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1568");
    }
    byte[] byteArray1 = new byte[]{(byte) 9};
    org.neo4j.kernel.database.DatabaseId databaseId2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType4 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData5 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray1, databaseId2, "name", replicaTokenType4);
    org.neo4j.kernel.database.DatabaseId databaseId6 = requestData5.daasidDatabaseId();
    io.github.onograph.cluster.raft.share.sync.SessionSeqActionId sessionSeqActionId7 = null;
    java.util.UUID uUID8 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy9 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean10 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID8, consensusNodeIdLazy9);
    io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl syncStatusMetaServiceImpl11 = new io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl(
        clusterSessionBean10);
    java.util.UUID uUID12 = clusterSessionBean10.getIsUUID();
    io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction dataSyncClusterAction13 = new io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction(
        (io.github.onograph.cluster.raft.share.sync.SyncableData) requestData5, sessionSeqActionId7,
        clusterSessionBean10);
    io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.EmptyReq> emptyReqFSMEmptyReq14 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService15 = null;
    java.lang.Runnable runnable16 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage17 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl18 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable16, leasableMetaStateStorage17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator20 = null;
    java.util.function.Supplier<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSupplier21 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl leaseServiceEnterpriseImpl22 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl(
        consensusLeaderNodeService15, syncableLeasableCoreNodeDataFSMImpl18, namedDatabaseId19,
        syncerator20, consensusNodeIdSupplier21);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl23 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl24 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.ReplicatedTransactionFSM replicatedTransactionFSM25 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl26 = null;
    org.neo4j.logging.LogProvider logProvider27 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier28 = null;
    java.util.function.Supplier<org.neo4j.kernel.impl.transaction.log.LogicalTransactionStore> logicalTransactionStoreSupplier29 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair transactionLogIndexRepair30 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair(
        logProvider27, transactionIdStoreSupplier28, logicalTransactionStoreSupplier29);
    io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService coreGdbFSMService31 = new io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService(
        emptyReqFSMEmptyReq14, syncableLeasableCoreNodeDataFSMImpl18, fSMTokenImpl23,
        fSMTokenImpl24, replicatedTransactionFSM25, fSMTokenImpl26, transactionLogIndexRepair30);
    io.github.onograph.cluster.raft.share.meta.AutoCloseableActionProcessor autoCloseableActionProcessor32 = coreGdbFSMService31.getDsaceAutoCloseableActionProcessor();
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.FSMData> fSMDataConsumer33 = null;
    try {
      requestData5.dipcForSy(autoCloseableActionProcessor32, fSMDataConsumer33, 0L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[9]");
    org.junit.Assert.assertNull(databaseId6);
    org.junit.Assert.assertNull(uUID12);
    org.junit.Assert.assertNotNull(autoCloseableActionProcessor32);
  }

  @Test
  public void test1569() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1569");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout consensusElectionTimeout1 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout(
        consensusNodeId0);
    boolean boolean2 = consensusElectionTimeout1.getIsOr();
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel3 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl4 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl5 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel3, safeStateMarshalImpl4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk6 = null;
    java.lang.Void void7 = processorImpl5.process(bulkAsk6);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage8 = null;
    java.lang.Void void9 = processorImpl5.process(logClipRequestMessage8);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage10 = null;
    java.lang.Void void11 = processorImpl5.process(aliveReplyMessage10);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId12 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId13 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier14 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray15 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier14};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet16 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean17 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet16,
        nodeGroupIdentifierArray15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec18 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId12, consensusNodeId13,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet16);
    java.lang.Void void19 = processorImpl5.process(leaderRec18);
    java.lang.Void void20 = consensusElectionTimeout1.dipc(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception>) processorImpl5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage21 = null;
    java.lang.Void void22 = processorImpl5.process(aliveReplyMessage21);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNull(void7);
    org.junit.Assert.assertNull(void9);
    org.junit.Assert.assertNull(void11);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier14);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray15);
    //org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNull(void19);
    org.junit.Assert.assertNull(void20);
    org.junit.Assert.assertNull(void22);
  }

  @Test
  public void test1570() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1570");
    }
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta> databaseIdMap0 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.id.ConsensusNodeId> databaseIdMap1 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, org.neo4j.dbms.DatabaseState> databaseIdMap2 = null;
    io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl gdbServerPointInTimeImpl3 = new io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl(
        databaseIdMap0, databaseIdMap1, databaseIdMap2);
    io.github.onograph.cluster.raft.module.cuprot.current.info.MetaByteToMessageDecoder metaByteToMessageDecoder4 = new io.github.onograph.cluster.raft.module.cuprot.current.info.MetaByteToMessageDecoder();
    io.netty.handler.codec.ByteToMessageDecoder.Cumulator cumulator5 = io.netty.handler.codec.ByteToMessageDecoder.COMPOSITE_CUMULATOR;
    metaByteToMessageDecoder4.setCumulator(cumulator5);
    boolean boolean7 = gdbServerPointInTimeImpl3.equals(
        (java.lang.Object) metaByteToMessageDecoder4);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.id.ConsensusNodeId> databaseIdMap8 = gdbServerPointInTimeImpl3.daammhMap();
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.id.ConsensusNodeId> databaseIdMap9 = gdbServerPointInTimeImpl3.daammhMap();
    org.junit.Assert.assertNotNull(cumulator5);
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNull(databaseIdMap8);
    org.junit.Assert.assertNull(databaseIdMap9);
  }

  @Test
  public void test1571() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1571");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl messageProcessorImpl0 = io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl.SUPTL_MESSAGE_PROCESSOR_IMPL;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg1 = null;
    java.lang.Boolean boolean2 = messageProcessorImpl0.process(aliveMsg1);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId3 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId4 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.CandidateVoteMessage.Ask ask8 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.CandidateVoteMessage.Ask(
        consensusNodeId3, consensusNodeId4, (long) '4', (long) (short) -1, 1L);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId9 = ask8.getCniaeConsensusNodeId();
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId10 = ask8.getFroConsensusNodeId();
    java.lang.Boolean boolean11 = messageProcessorImpl0.process(ask8);
    org.junit.Assert.assertNotNull(messageProcessorImpl0);
    org.junit.Assert.assertEquals("'" + boolean2 + "' != '" + true + "'", boolean2, true);
    org.junit.Assert.assertNull(consensusNodeId9);
    org.junit.Assert.assertNull(consensusNodeId10);
    org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
  }

  @Test
  public void test1572() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1572");
    }
    io.github.onograph.cluster.raft.share.calg.LeaderNodeDataSDWrapper leaderNodeDataSDWrapper0 = new io.github.onograph.cluster.raft.share.calg.LeaderNodeDataSDWrapper();
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier2 = new io.github.onograph.config.NodeGroupIdentifier(
        "hi!");
    char char4 = nodeGroupIdentifier2.charAt(0);
    akka.cluster.Cluster cluster5 = null;
    akka.event.EventStream eventStream6 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.StartScheduler startScheduler7 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartRules1 restartRules1_8 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartRules1();
    akka.actor.Props props9 = io.github.onograph.cluster.raft.module.dprot.impl.structure.RestartMonitoringActor.prpProps(
        cluster5, eventStream6, startScheduler7,
        (io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach) restartRules1_8);
    boolean boolean10 = nodeGroupIdentifier2.equals((java.lang.Object) restartRules1_8);
    boolean boolean11 = leaderNodeDataSDWrapper0.equals((java.lang.Object) nodeGroupIdentifier2);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId12 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.Ask ask13 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.Ask(
        (io.github.onograph.cluster.raft.share.sync.SyncableData) leaderNodeDataSDWrapper0,
        consensusNodeId12);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel14 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl15 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl16 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel14, safeStateMarshalImpl15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk17 = null;
    java.lang.Void void18 = processorImpl16.process(bulkAsk17);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage19 = null;
    java.lang.Void void20 = processorImpl16.process(logClipRequestMessage19);
    java.lang.Void void21 = ask13.dipc(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception>) processorImpl16);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId22 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress25 = null;
    org.neo4j.dbms.identity.ServerId serverId26 = null;
    java.lang.String[] strArray33 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet34 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray33);
    io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta loadBalanceServerMeta35 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta(
        socketAddress25, serverId26, nodeGroupIdentifierSet34);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.AskToChange askToChange36 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.AskToChange(
        consensusNodeId22, (long) 1536, (long) (byte) 0, nodeGroupIdentifierSet34);
    long long37 = askToChange36.getLgT();
    try {
      java.lang.Object obj38 = processorImpl16.process(askToChange36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + char4 + "' != '" + 'h' + "'", char4 == 'h');
    org.junit.Assert.assertNotNull(props9);
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    //org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(void18);
    org.junit.Assert.assertNull(void20);
    org.junit.Assert.assertNull(void21);
    org.junit.Assert.assertNotNull(strArray33);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet34);
    org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
  }

  @Test
  public void test1573() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1573");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector connector0 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector();
    connector0.strvstfi();
    connector0.strvstfiForSt("policy");
    connector0.str();
    connector0.fihrih(1536L);
    connector0.strvinsno((long) 0);
    connector0.fihrfForSt("cc-database-status-actor");
  }

  @Test
  public void test1574() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1574");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl0 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    consensusLogCacheServiceNoopImpl0.trnt(0L);
    consensusLogCacheServiceNoopImpl0.enb();
  }

  @Test
  public void test1575() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1575");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler0 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl1 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.rtx.CatchupIncomingTransactionReplySimpleChannelInboundHandler catchupIncomingTransactionReplySimpleChannelInboundHandler2 = new io.github.onograph.cluster.raft.module.cuprot.current.rtx.CatchupIncomingTransactionReplySimpleChannelInboundHandler(
        catchupAnswerLimitHandler0, refCatchupManagerImpl1);
    io.netty.channel.ChannelHandlerContext channelHandlerContext3 = null;
    io.github.onograph.cluster.raft.share.sync.InfoReplyMessageConsumer infoReplyMessageConsumer4 = new io.github.onograph.cluster.raft.share.sync.InfoReplyMessageConsumer();
    try {
      catchupIncomingTransactionReplySimpleChannelInboundHandler2.userEventTriggered(
          channelHandlerContext3, (java.lang.Object) infoReplyMessageConsumer4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1576() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1576");
    }
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols0 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4;
    org.junit.Assert.assertTrue("'" + mutableProtocols0 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4 + "'",
        mutableProtocols0.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4));
  }

  @Test
  public void test1577() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1577");
    }
    java.util.UUID uUID0 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy1 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean2 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID0, consensusNodeIdLazy1);
    io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl syncStatusMetaServiceImpl3 = new io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl(
        clusterSessionBean2);
    byte[] byteArray5 = new byte[]{(byte) 9};
    org.neo4j.kernel.database.DatabaseId databaseId6 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType8 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData9 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray5, databaseId6, "name", replicaTokenType8);
    org.neo4j.kernel.database.DatabaseId databaseId10 = requestData9.daasidDatabaseId();
    io.github.onograph.cluster.raft.share.sync.SessionSeqActionId sessionSeqActionId11 = null;
    java.util.UUID uUID12 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy13 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean14 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID12, consensusNodeIdLazy13);
    io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl syncStatusMetaServiceImpl15 = new io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl(
        clusterSessionBean14);
    java.util.UUID uUID16 = clusterSessionBean14.getIsUUID();
    io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction dataSyncClusterAction17 = new io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction(
        (io.github.onograph.cluster.raft.share.sync.SyncableData) requestData9,
        sessionSeqActionId11, clusterSessionBean14);
    try {
      io.github.onograph.cluster.raft.share.sync.SyncStatus syncStatus18 = syncStatusMetaServiceImpl3.strSyncStatus(
          dataSyncClusterAction17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[9]");
    org.junit.Assert.assertNull(databaseId10);
    org.junit.Assert.assertNull(uUID16);
  }

  @Test
  public void test1578() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1578");
    }
    io.github.onograph.cluster.raft.palapp.strategies.LeaderNodeNamedServiceClusterApproach leaderNodeNamedServiceClusterApproach0 = new io.github.onograph.cluster.raft.palapp.strategies.LeaderNodeNamedServiceClusterApproach();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    try {
      java.util.Optional<org.neo4j.dbms.identity.ServerId> serverIdOptional2 = leaderNodeNamedServiceClusterApproach0.upesrfodaOptional(
          namedDatabaseId1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1579() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1579");
    }
    io.github.onograph.cluster.raft.module.cuprot.current.info.RequestMetaMessageToByteEncoder requestMetaMessageToByteEncoder0 = new io.github.onograph.cluster.raft.module.cuprot.current.info.RequestMetaMessageToByteEncoder();
    io.github.onograph.dbms.ClusterDatabaseManagementException clusterDatabaseManagementException2 = new io.github.onograph.dbms.ClusterDatabaseManagementException(
        "store_version");
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException gdbStoreSyncCrlException3 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException(
        (java.lang.Throwable) clusterDatabaseManagementException2);
    boolean boolean4 = requestMetaMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) clusterDatabaseManagementException2);
    io.netty.channel.ChannelHandlerContext channelHandlerContext5 = null;
    java.net.SocketAddress socketAddress6 = null;
    java.net.SocketAddress socketAddress7 = null;
    io.netty.channel.ChannelPromise channelPromise8 = null;
    try {
      requestMetaMessageToByteEncoder0.connect(channelHandlerContext5, socketAddress6,
          socketAddress7, channelPromise8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1580() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1580");
    }
    io.github.onograph.cluster.raft.share.bulk.MessageStack.MessageStackSettings messageStackSettings2 = new io.github.onograph.cluster.raft.share.bulk.MessageStack.MessageStackSettings(
        128, (long) 9);
  }

  @Test
  public void test1581() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1581");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    org.neo4j.token.TokenRegistry tokenRegistry1 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator2 = null;
    org.neo4j.internal.id.IdGeneratorFactory idGeneratorFactory3 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.StorageEngine> storageEngineSupplier4 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer5 = null;
    org.neo4j.configuration.helpers.DatabaseReadOnlyChecker databaseReadOnlyChecker6 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.LabelTokenHolder labelTokenHolder7 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.LabelTokenHolder(
        namedDatabaseId0, tokenRegistry1, syncerator2, idGeneratorFactory3, storageEngineSupplier4,
        pageCacheTracer5, databaseReadOnlyChecker6);
    java.lang.String[] strArray14 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet15 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray14);
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet16 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray14);
    java.util.List<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierList17 = io.github.onograph.config.NodeGroupIdentifier.litoList(
        strArray14);
    int[] intArray18 = null;
    try {
      labelTokenHolder7.getOrCreateInternalIds(strArray14, intArray18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(strArray14);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet15);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet16);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierList17);
  }

  @Test
  public void test1582() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1582");
    }
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier1 = new io.github.onograph.config.NodeGroupIdentifier(
        "catchup_protocol");
  }

  @Test
  public void test1583() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1583");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl0 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry1 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry1, (long) '#');
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry4, 52L);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry8 = consensusLogCacheServiceNoopImpl0.getConsensusLogEntry(
        (long) 'a');
    consensusLogCacheServiceNoopImpl0.enb();
    consensusLogCacheServiceNoopImpl0.enb();
    org.junit.Assert.assertNull(consensusLogEntry8);
  }

  @Test
  public void test1584() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1584");
    }
    java.util.function.Supplier<java.util.stream.Stream<org.neo4j.internal.helpers.collection.Pair<org.neo4j.configuration.helpers.SocketAddress, io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper>>> socketAddressPairStreamSupplier0 = null;
    java.util.function.Supplier<java.util.stream.Stream<org.neo4j.internal.helpers.collection.Pair<org.neo4j.configuration.helpers.SocketAddress, io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper>>> socketAddressPairStreamSupplier1 = null;
    io.github.onograph.cluster.raft.module.dprot.dprocs.ShowAvailableProComFamBasicProcedure showAvailableProComFamBasicProcedure2 = new io.github.onograph.cluster.raft.module.dprot.dprocs.ShowAvailableProComFamBasicProcedure(
        socketAddressPairStreamSupplier0, socketAddressPairStreamSupplier1);
    org.neo4j.kernel.api.procedure.Context context3 = null;
    org.neo4j.values.AnyValue[] anyValueArray4 = null;
    org.neo4j.kernel.api.ResourceTracker resourceTracker5 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator6 = showAvailableProComFamBasicProcedure2.apply(
          context3, anyValueArray4, resourceTracker5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1585() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1585");
    }
    io.github.onograph.cluster.raft.logservice.ConsensusMessageLogServiceNOOPImpl<io.netty.channel.pool.AbstractChannelPoolMap<io.github.onograph.cluster.raft.netty.LBNettyChannelPoolMapImpl.ConsensusSocketAddressDTO, io.netty.channel.pool.ChannelPool>> consensusSocketAddressDTOAbstractChannelPoolMapConsensusMessageLogServiceNOOPImpl0 = new io.github.onograph.cluster.raft.logservice.ConsensusMessageLogServiceNOOPImpl<io.netty.channel.pool.AbstractChannelPoolMap<io.github.onograph.cluster.raft.netty.LBNettyChannelPoolMapImpl.ConsensusSocketAddressDTO, io.netty.channel.pool.ChannelPool>>();
  }

  @Test
  public void test1586() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1586");
    }
    io.github.onograph.cluster.raft.share.meta.cm.ClusterMetaSyncManager.RequiresComponents requiresComponents0 = io.github.onograph.cluster.raft.share.meta.cm.ClusterMetaSyncManager.bulClusterMetaSyncManagerRequiresComponents();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    org.neo4j.logging.LogProvider logProvider3 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction4 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade5 = null;
    org.neo4j.logging.Log log6 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade7 = null;
    java.util.function.Function<org.neo4j.kernel.database.NamedDatabaseId, io.github.onograph.cluster.raft.share.calg.LeaderNodeEventHandlers> namedDatabaseIdFunction8 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule9 = null;
    org.neo4j.memory.MemoryTracker memoryTracker10 = null;
    java.nio.file.Path path11 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo12 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path11);
    io.github.onograph.config.NodeGroupIdentifierSetSupplier nodeGroupIdentifierSetSupplier13 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.LeaderGatekeeper leaderGatekeeper14 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder consensusNodeGroupWrapperBuilder15 = new io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder(
        clusterSimpleStorageFacade7, namedDatabaseIdFunction8, globalModule9, memoryTracker10,
        clusterMetaTopologyInfo12, nodeGroupIdentifierSetSupplier13, leaderGatekeeper14);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat16 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction4, clusterSimpleStorageFacade5, log6, clusterMetaTopologyInfo12,
        clusterMetaFormat16);
    org.neo4j.memory.MemoryTracker memoryTracker18 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade19 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config1, fileSystemAbstraction2, logProvider3, clusterMetaTopologyInfo12, memoryTracker18);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.configuration.Config config21 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction22 = null;
    org.neo4j.logging.LogProvider logProvider23 = null;
    java.nio.file.Path path24 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo25 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path24);
    java.nio.file.Path path26 = clusterMetaTopologyInfo25.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker27 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo25);
    org.neo4j.memory.MemoryTracker memoryTracker28 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade29 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config21, fileSystemAbstraction22, logProvider23, clusterMetaTopologyInfo25,
        memoryTracker28);
    org.neo4j.logging.Log log30 = null;
    java.nio.file.Path path31 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo32 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path31);
    java.nio.file.Path path33 = clusterMetaTopologyInfo32.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker34 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo32);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat35 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction20, clusterSimpleStorageFacade29, log30, clusterMetaTopologyInfo32,
        clusterMetaFormat35);
    java.util.function.Function<org.neo4j.kernel.database.NamedDatabaseId, io.github.onograph.cluster.raft.share.calg.LeaderNodeEventHandlers> namedDatabaseIdFunction37 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule38 = null;
    org.neo4j.memory.MemoryTracker memoryTracker39 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction40 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade41 = null;
    org.neo4j.logging.Log log42 = null;
    java.nio.file.Path path43 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo44 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path43);
    java.nio.file.Path path45 = clusterMetaTopologyInfo44.getPscPath();
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat46 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv47 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction40, clusterSimpleStorageFacade41, log42, clusterMetaTopologyInfo44,
        clusterMetaFormat46);
    org.neo4j.logging.Log log48 = upgradeMetaEnv47.getLog();
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo49 = upgradeMetaEnv47.getLscClusterMetaTopologyInfo();
    io.github.onograph.config.NodeGroupIdentifierSetSupplier nodeGroupIdentifierSetSupplier50 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.LeaderGatekeeper leaderGatekeeper51 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder consensusNodeGroupWrapperBuilder52 = new io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder(
        clusterSimpleStorageFacade29, namedDatabaseIdFunction37, globalModule38, memoryTracker39,
        clusterMetaTopologyInfo49, nodeGroupIdentifierSetSupplier50, leaderGatekeeper51);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction53 = null;
    org.neo4j.logging.LogProvider logProvider54 = null;
    io.github.onograph.cluster.raft.share.meta.cm.ClusterMetaSyncManager.Versioning versioning55 = requiresComponents0.asComponents(
        clusterMetaTopologyInfo12, clusterSimpleStorageFacade29, fileSystemAbstraction53,
        logProvider54);
    try {
      org.neo4j.io.state.SimpleStorage<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSimpleStorage56 = clusterSimpleStorageFacade29.creomerSimpleStorage();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(requiresComponents0);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo12);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo25);
    org.junit.Assert.assertNull(path26);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo32);
    org.junit.Assert.assertNull(path33);
    org.junit.Assert.assertNotNull(clusterMetaFormat35);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo44);
    org.junit.Assert.assertNull(path45);
    org.junit.Assert.assertNull(log48);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo49);
    org.junit.Assert.assertNotNull(versioning55);
  }

  @Test
  public void test1587() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1587");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.AskState> askStateFSMEmptyReq0 = new io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.AskState>();
    org.neo4j.kernel.database.DatabaseId databaseId1 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId2 = null;
    java.util.UUID uUID3 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.AskState askState4 = new io.github.onograph.cluster.raft.share.meta.fsm.AskState(
        databaseId1, consensusNodeId2, uUID3);
    org.neo4j.kernel.database.DatabaseId databaseId5 = askState4.daasidDatabaseId();
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.ComProFamilyBuilder comProFamilyBuilder7 = io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.bulrComProFamilyWrapperComProFamilyBuilder();
    io.github.onograph.cluster.raft.control.connect.ServerException serverException8 = new io.github.onograph.cluster.raft.control.connect.ServerException(
        "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartRules1. Running every PT10S",
        comProFamilyBuilder7);
    boolean boolean9 = askState4.equals((java.lang.Object) comProFamilyBuilder7);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId10 = askState4.getImConsensusNodeId();
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.FSMData> fSMDataConsumer12 = null;
    try {
      askStateFSMEmptyReq0.aplcoaForCoCo(askState4, 1016L, fSMDataConsumer12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseId5);
    org.junit.Assert.assertNotNull(comProFamilyBuilder7);
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNull(consensusNodeId10);
  }

  @Test
  public void test1588() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1588");
    }
    io.github.onograph.cluster.raft.share.meta.DefaultMarshalChannelCMS defaultMarshalChannelCMS0 = new io.github.onograph.cluster.raft.share.meta.DefaultMarshalChannelCMS();
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager1 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    org.neo4j.io.fs.ReadableChannel readableChannel2 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl3 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel2);
    readablePositionAwareChecksumChannelManager1.deettoForRe(
        (org.neo4j.kernel.impl.transaction.log.ReadableClosablePositionAwareChecksumChannel) readableClosablePositionAwareChecksumChannelPassThruImpl3);
    readablePositionAwareChecksumChannelManager1.beginChecksum();
    try {
      java.lang.Long long6 = defaultMarshalChannelCMS0.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1589() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1589");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataTypeMessageToByteEncoder messageDataTypeMessageToByteEncoder0 = new io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataTypeMessageToByteEncoder();
    io.github.onograph.cluster.raft.share.sync.SyncStatus syncStatus1 = new io.github.onograph.cluster.raft.share.sync.SyncStatus();
    boolean boolean2 = messageDataTypeMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) syncStatus1);
    syncStatus1.awrcn((long) (byte) 1);
    boolean boolean5 = syncStatus1.getIsRi();
    syncStatus1.trerliee();
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1590() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1590");
    }
    byte[] byteArray1 = new byte[]{(byte) 1};
    io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService chunkedInputEncodingService3 = new io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService(
        byteArray1, true);
    org.neo4j.kernel.database.DatabaseId databaseId4 = null;
    io.github.onograph.cluster.raft.id.ConsensusMemberGroupId consensusMemberGroupId6 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId7 = null;
    java.time.Duration duration8 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.SetupConsensusDatabaseId setupConsensusDatabaseId9 = new io.github.onograph.cluster.raft.module.dprot.impl.structure.SetupConsensusDatabaseId(
        consensusMemberGroupId6, consensusNodeId7, duration8);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType10 = io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType.RTT_PROP;
    boolean boolean11 = setupConsensusDatabaseId9.equals((java.lang.Object) replicaTokenType10);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData12 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray1, databaseId4, "", replicaTokenType10);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType13 = requestData12.getTNme();
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[1]");
    org.junit.Assert.assertTrue("'" + replicaTokenType10 + "' != '"
            + io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType.RTT_PROP + "'",
        replicaTokenType10.equals(
            io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType.RTT_PROP));
    //org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + replicaTokenType13 + "' != '"
            + io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType.RTT_PROP + "'",
        replicaTokenType13.equals(
            io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType.RTT_PROP));
  }

  @Test
  public void test1591() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1591");
    }
    io.github.onograph.cluster.raft.utils.queuesrv.ElementQueueRunnerImpl<io.github.onograph.cluster.raft.module.cuprot.AskMessageType> askMessageTypeElementQueueRunnerImpl0 = new io.github.onograph.cluster.raft.utils.queuesrv.ElementQueueRunnerImpl<io.github.onograph.cluster.raft.module.cuprot.AskMessageType>();
    io.github.onograph.cluster.raft.module.cuprot.AskMessageType askMessageType1 = io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_TRX_IN_ASK;
    askMessageTypeElementQueueRunnerImpl0.recForTry(askMessageType1);
    io.github.onograph.cluster.raft.module.cuprot.AskMessageType askMessageType3 = askMessageTypeElementQueueRunnerImpl0.poll();
    org.junit.Assert.assertTrue("'" + askMessageType1 + "' != '"
            + io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_TRX_IN_ASK + "'",
        askMessageType1.equals(
            io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_TRX_IN_ASK));
    org.junit.Assert.assertTrue("'" + askMessageType3 + "' != '"
            + io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_TRX_IN_ASK + "'",
        askMessageType3.equals(
            io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_TRX_IN_ASK));
  }

  @Test
  public void test1592() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1592");
    }
    io.github.onograph.cluster.raft.module.cuprot.AskMessageTypeMessageToByteEncoder askMessageTypeMessageToByteEncoder0 = new io.github.onograph.cluster.raft.module.cuprot.AskMessageTypeMessageToByteEncoder();
    java.lang.String[] strArray7 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet8 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray7);
    java.util.List<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierList9 = io.github.onograph.config.NodeGroupIdentifier.litoList(
        strArray7);
    boolean boolean10 = askMessageTypeMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) strArray7);
    boolean boolean11 = askMessageTypeMessageToByteEncoder0.isSharable();
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses12 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress13 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = null;
    org.neo4j.dbms.identity.ServerId serverId15 = null;
    java.lang.String[] strArray22 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet23 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray22);
    io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta loadBalanceServerMeta24 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta(
        socketAddress14, serverId15, nodeGroupIdentifierSet23);
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses25 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress26 = null;
    java.lang.String[] strArray33 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet34 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray33);
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet35 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray33);
    org.neo4j.kernel.database.DatabaseId[] databaseIdArray36 = new org.neo4j.kernel.database.DatabaseId[]{};
    java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId> databaseIdSet37 = new java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId>();
    boolean boolean38 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.DatabaseId>) databaseIdSet37,
        databaseIdArray36);
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl39 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl(
        discoverySocketAddresses25, socketAddress26, nodeGroupIdentifierSet35,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet37);
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl40 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl(
        discoverySocketAddresses12, socketAddress13, nodeGroupIdentifierSet23,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet37);
    boolean boolean41 = askMessageTypeMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) discoverySocketAddresses12);
    org.junit.Assert.assertNotNull(strArray7);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet8);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierList9);
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    //org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(strArray22);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet23);
    org.junit.Assert.assertNotNull(strArray33);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet34);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet35);
    org.junit.Assert.assertNotNull(databaseIdArray36);
    //org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    //org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
  }

  @Test
  public void test1593() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1593");
    }
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl2 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel0, safeStateMarshalImpl1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk3 = null;
    java.lang.Void void4 = processorImpl2.process(bulkAsk3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk5 = null;
    java.lang.Void void6 = processorImpl2.process(bulkAsk5);
    org.junit.Assert.assertNull(void4);
    org.junit.Assert.assertNull(void6);
  }

  @Test
  public void test1594() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1594");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataMessageToMessageDecoderController syncableDataMessageToMessageDecoderController1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataByteToMessageDecoder syncableDataByteToMessageDecoder2 = new io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataByteToMessageDecoder(
        true, syncableDataMessageToMessageDecoderController1);
    java.lang.Object obj3 = null;
    boolean boolean4 = syncableDataByteToMessageDecoder2.acceptInboundMessage(obj3);
    java.lang.Runnable runnable5 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage6 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl7 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable5, leasableMetaStateStorage6);
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta leasableMeta8 = io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta.INTL_LES_STAX;
    syncableLeasableCoreNodeDataFSMImpl7.inlspForLe(leasableMeta8);
    boolean boolean10 = syncableDataByteToMessageDecoder2.acceptInboundMessage(
        (java.lang.Object) leasableMeta8);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(leasableMeta8);
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1595() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1595");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap1 = null;
    io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta readReplicateGdbMeta2 = io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta.ofcosReadReplicateGdbMeta(
        databaseId0, serverIdMap1);
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap3 = readReplicateGdbMeta2.getMapMssd();
    try {
      boolean boolean4 = readReplicateGdbMeta2.isEmy();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(readReplicateGdbMeta2);
    org.junit.Assert.assertNull(serverIdMap3);
  }

  @Test
  public void test1596() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1596");
    }
    io.netty.channel.Channel channel0 = null;
    org.neo4j.logging.Log log1 = null;
    io.github.onograph.cluster.raft.akkamsg.NettyChannelImpl nettyChannelImpl2 = new io.github.onograph.cluster.raft.akkamsg.NettyChannelImpl(
        channel0, log1);
    boolean boolean3 = nettyChannelImpl2.isChannelDis();
    boolean boolean4 = nettyChannelImpl2.isChannelDis();
    try {
      boolean boolean5 = nettyChannelImpl2.isChannelOpen();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1597() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1597");
    }
    org.neo4j.io.fs.WritableChannel writableChannel0 = null;
    io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl writableChecksumChannelImpl1 = new io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl(
        writableChannel0);
    writableChecksumChannelImpl1.beginChecksum();
    try {
      org.neo4j.io.fs.WritableChecksumChannel writableChecksumChannel4 = writableChecksumChannelImpl1.putLong(
          (long) 2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1598() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1598");
    }
    org.neo4j.kernel.database.Database database0 = null;
    io.github.onograph.cluster.raft.module.cuprot.ServerRef serverRef1 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreDatabaseIdInboundHandler requestStoreDatabaseIdInboundHandler2 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreDatabaseIdInboundHandler(
        database0, serverRef1);
    io.github.onograph.cluster.raft.utils.ExceptionManager exceptionManager4 = new io.github.onograph.cluster.raft.utils.ExceptionManager(
        "cc-core-restart-needed-listener-timer");
    io.github.onograph.cluster.raft.utils.ExceptionManager.RunnableWithException runnableWithException5 = null;
    exceptionManager4.exceForEx(runnableWithException5);
    boolean boolean7 = requestStoreDatabaseIdInboundHandler2.acceptInboundMessage(
        (java.lang.Object) runnableWithException5);
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1599() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1599");
    }
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService0 = null;
    java.lang.Runnable runnable1 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl3 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable1, leasableMetaStateStorage2);
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta leasableMeta4 = io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta.INTL_LES_STAX;
    syncableLeasableCoreNodeDataFSMImpl3.inlspForLe(leasableMeta4);
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta leasableMeta6 = syncableLeasableCoreNodeDataFSMImpl3.snpoLeasableMeta();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator8 = null;
    java.util.function.Supplier<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSupplier9 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl leaseServiceEnterpriseImpl10 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl(
        consensusLeaderNodeService0, syncableLeasableCoreNodeDataFSMImpl3, namedDatabaseId7,
        syncerator8, consensusNodeIdSupplier9);
    org.junit.Assert.assertNotNull(leasableMeta4);
    org.junit.Assert.assertNotNull(leasableMeta6);
  }

  @Test
  public void test1600() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1600");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormatSafeChannelMarshaler clusterMetaFormatSafeChannelMarshaler0 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormatSafeChannelMarshaler.IT;
    org.neo4j.io.fs.ReadableChannel readableChannel1 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl2 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel1);
    readableClosablePositionAwareChecksumChannelPassThruImpl2.beginChecksum();
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition4 = readableClosablePositionAwareChecksumChannelPassThruImpl2.getCurrentPosition();
    int int5 = readableClosablePositionAwareChecksumChannelPassThruImpl2.endChecksumAndValidate();
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl6 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl2);
    try {
      io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat7 = clusterMetaFormatSafeChannelMarshaler0.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaFormatSafeChannelMarshaler0);
    org.junit.Assert.assertNotNull(logPosition4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
  }

  @Test
  public void test1601() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1601");
    }
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupOutgoingTransactionPullReply catchupOutgoingTransactionPullReply0 = io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupOutgoingTransactionPullReply.EMT_CATCHUP_OUTGOING_TRANSACTION_PULL_REPLY;
    org.junit.Assert.assertNotNull(catchupOutgoingTransactionPullReply0);
  }

  @Test
  public void test1602() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1602");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId[] consensusNodeIdArray0 = new io.github.onograph.cluster.raft.id.ConsensusNodeId[]{};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet1 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId>();
    boolean boolean2 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet1,
        consensusNodeIdArray0);
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper consensusNodeServerMemberIdWrapper3 = new io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper(
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet1);
    java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet4 = consensusNodeServerMemberIdWrapper3.gembsSet();
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper consensusNodeServerMemberIdWrapper5 = new io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper(
        consensusNodeIdSet4);
    org.junit.Assert.assertNotNull(consensusNodeIdArray0);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(consensusNodeIdSet4);
  }

  @Test
  public void test1603() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1603");
    }
    org.neo4j.kernel.impl.transaction.log.entry.LogEntryReader logEntryReader0 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.DefaultSyncableDataMarshal defaultSyncableDataMarshal1 = new io.github.onograph.cluster.raft.akkamsg.serialization.DefaultSyncableDataMarshal(
        logEntryReader0);
    org.neo4j.io.fs.ReadableChannel readableChannel2 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl3 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel2);
    readableClosablePositionAwareChecksumChannelPassThruImpl3.beginChecksum();
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition5 = readableClosablePositionAwareChecksumChannelPassThruImpl3.getCurrentPosition();
    int int6 = readableClosablePositionAwareChecksumChannelPassThruImpl3.endChecksumAndValidate();
    try {
      io.github.onograph.cluster.raft.share.sync.SyncableData syncableData7 = defaultSyncableDataMarshal1.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(logPosition5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
  }

  @Test
  public void test1604() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1604");
    }
    io.netty.buffer.ByteBuf byteBuf1 = null;
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel2 = new io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel(
        byteBuf1);
    try {
      io.github.onograph.cluster.raft.akkamsg.serialization.BasicStringSerializationHandler.maslForBySt(
          "cluster-state", (org.neo4j.io.fs.WritableChannel) defaultWritableChecksumChannel2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1605() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1605");
    }
    io.github.onograph.dbms.DatabaseStartupControllerAbortableImpl databaseStartupControllerAbortableImpl0 = null;
    io.github.onograph.cluster.raft.share.meta.pit.StoreSyncEnvironment storeSyncEnvironment1 = null;
    io.github.onograph.dbms.crash.CrashSignaler crashSignaler2 = null;
    io.github.onograph.cluster.raft.share.meta.pit.CoreGdbSyncManager coreGdbSyncManager3 = null;
    io.github.onograph.cluster.raft.share.meta.pit.StoreSyncService storeSyncService4 = null;
    io.github.onograph.cluster.raft.share.meta.pit.DataSyncManager dataSyncManager5 = new io.github.onograph.cluster.raft.share.meta.pit.DataSyncManager(
        coreGdbSyncManager3, storeSyncService4);
    org.neo4j.scheduler.JobScheduler jobScheduler6 = null;
    org.neo4j.logging.LogProvider logProvider7 = null;
    org.neo4j.monitoring.Monitors monitors8 = null;
    io.github.onograph.cluster.raft.share.meta.ActionProcessManager actionProcessManager9 = null;
    io.github.onograph.dbms.GdbReplicator gdbReplicator10 = null;
    io.github.onograph.cluster.raft.share.meta.SnapshotDataManager snapshotDataManager11 = null;
    org.neo4j.internal.helpers.TimeoutStrategy timeoutStrategy12 = null;
    try {
      io.github.onograph.cluster.raft.share.meta.pit.SyncServiceLifecycleAdapter syncServiceLifecycleAdapter13 = new io.github.onograph.cluster.raft.share.meta.pit.SyncServiceLifecycleAdapter(
          databaseStartupControllerAbortableImpl0, storeSyncEnvironment1, crashSignaler2,
          dataSyncManager5, jobScheduler6, logProvider7, monitors8, actionProcessManager9,
          gdbReplicator10, snapshotDataManager11, timeoutStrategy12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1606() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1606");
    }
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS0 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta1 = marshalChannelImplCMS0.startState();
    org.neo4j.kernel.database.DatabaseId databaseId2 = null;
    io.github.onograph.cluster.raft.share.meta.cm.ClusterSyncerException clusterSyncerException3 = new io.github.onograph.cluster.raft.share.meta.cm.ClusterSyncerException();
    io.github.onograph.cluster.raft.share.sync.SyncMeta syncMeta4 = io.github.onograph.cluster.raft.share.sync.SyncMeta.norladSyncMeta(
        (java.lang.Throwable) clusterSyncerException3);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException gdbStoreSyncCrlException6 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException(
        (java.lang.Exception) clusterSyncerException3, "restarting-cluster-client");
    org.neo4j.dbms.OperatorState operatorState7 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper discoveryGdbOperatorMetaWrapper8 = new io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper(
        databaseId2, (java.lang.Throwable) gdbStoreSyncCrlException6, operatorState7);
    java.util.Optional<java.lang.Throwable> throwableOptional9 = discoveryGdbOperatorMetaWrapper8.faleOptional();
    boolean boolean10 = nodeServerMemberTransactionLogDataMeta1.equals(
        (java.lang.Object) throwableOptional9);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS0);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta1);
    org.junit.Assert.assertNotNull(syncMeta4);
    org.junit.Assert.assertNotNull(throwableOptional9);
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1607() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1607");
    }
    io.github.onograph.cluster.raft.control.AppComProFamilyGroupType appComProFamilyGroupType0 = io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo1 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType2 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer3 = applicationComProFamilyType2.getImpl();
    boolean boolean4 = viewClusterInfo1.equals((java.lang.Object) entProVer3);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType5 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer6 = applicationComProFamilyType5.getImpl();
    int int7 = entProVer3.compareTo(entProVer6);
    java.util.Optional<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyOptional8 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.finOptional(
        appComProFamilyGroupType0, entProVer6);
    java.util.List<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyList9 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.ctgrAppComProFamilyGroupType(
        appComProFamilyGroupType0);
    io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper applicationCurrentActiveComProFamilyWrapper10 = io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper.alkopolApplicationCurrentActiveComProFamilyWrapper(
        (io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.ApplicationComProFamily>) appComProFamilyGroupType0);
    io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyComProFamilyGroup11 = applicationCurrentActiveComProFamilyWrapper10.getComProFamilyGroupCtgrT();
    org.junit.Assert.assertTrue("'" + appComProFamilyGroupType0 + "' != '"
            + io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL + "'",
        appComProFamilyGroupType0.equals(
            io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL));
    org.junit.Assert.assertNotNull(viewClusterInfo1);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType2 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType2.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer3);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType5 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType5.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertNotNull(applicationComProFamilyOptional8);
    org.junit.Assert.assertNotNull(applicationComProFamilyList9);
    org.junit.Assert.assertNotNull(applicationCurrentActiveComProFamilyWrapper10);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyComProFamilyGroup11 + "' != '"
            + io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL + "'",
        applicationComProFamilyComProFamilyGroup11.equals(
            io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL));
  }

  @Test
  public void test1608() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1608");
    }
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowersMeta<io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder> transactionLogSyncManagerBuilderConsensusNodeFollowersMeta0 = new io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowersMeta<io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder>();
    java.lang.String str1 = transactionLogSyncManagerBuilderConsensusNodeFollowersMeta0.toString();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    org.neo4j.logging.LogProvider logProvider3 = null;
    org.neo4j.memory.MemoryTracker memoryTracker4 = null;
    org.neo4j.io.pagecache.PageCache pageCache5 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer6 = null;
    io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder transactionLogSyncManagerBuilder7 = new io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder(
        fileSystemAbstraction2, logProvider3, memoryTracker4, pageCache5, pageCacheTracer6);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowerMeta consensusNodeFollowerMeta8 = transactionLogSyncManagerBuilderConsensusNodeFollowersMeta0.getConsensusNodeFollowerMeta(
        transactionLogSyncManagerBuilder7);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowerMeta consensusNodeFollowerMeta10 = consensusNodeFollowerMeta8.onscresConsensusNodeFollowerMeta(
        (long) (short) 100);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowerMeta consensusNodeFollowerMeta12 = consensusNodeFollowerMeta10.onscresConsensusNodeFollowerMeta(
        (long) 2);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowerMeta consensusNodeFollowerMeta14 = consensusNodeFollowerMeta12.onscresConsensusNodeFollowerMeta(
        (long) 1);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "FollowerStates{}" + "'", str1,
        "FollowerStates{}");
    org.junit.Assert.assertNotNull(consensusNodeFollowerMeta8);
    org.junit.Assert.assertNotNull(consensusNodeFollowerMeta10);
    org.junit.Assert.assertNotNull(consensusNodeFollowerMeta12);
    org.junit.Assert.assertNotNull(consensusNodeFollowerMeta14);
  }

  @Test
  public void test1609() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1609");
    }
    org.neo4j.graphdb.config.Setting<java.time.Duration> durationSetting1 = io.github.onograph.config.SettingsDeclarationClusterSystemImpl.settingCletqmutDuration;
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.NoComAction noComAction2 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.NoComAction(
        0L, (java.lang.Object) durationSetting1);
    io.github.onograph.cluster.raft.module.cuprot.current.rtx.TransactionSyncReplyByteToMessageDecoder transactionSyncReplyByteToMessageDecoder3 = new io.github.onograph.cluster.raft.module.cuprot.current.rtx.TransactionSyncReplyByteToMessageDecoder();
    boolean boolean4 = noComAction2.equals(
        (java.lang.Object) transactionSyncReplyByteToMessageDecoder3);
    io.github.onograph.cluster.raft.share.calg.ConsensusTransactionLogProcessor consensusTransactionLogProcessor5 = null;
    io.github.onograph.cluster.raft.share.calg.LeaderNodeElectionEnv leaderNodeElectionEnv8 = new io.github.onograph.cluster.raft.share.calg.LeaderNodeElectionEnv(
        (long) '4', (-1L));
    try {
      noComAction2.apltoForCoLe(consensusTransactionLogProcessor5, leaderNodeElectionEnv8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(durationSetting1);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1610() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1610");
    }
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedMessageToByteEncoder transactionChunkingCompletedMessageToByteEncoder0 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedMessageToByteEncoder();
    boolean boolean2 = transactionChunkingCompletedMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) '#');
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler3 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl4 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler5 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler3, refCatchupManagerImpl4);
    boolean boolean6 = transactionChunkingCompletedMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) catchupProblemInboundHandler5);
    io.netty.channel.ChannelHandlerContext channelHandlerContext7 = null;
    try {
      catchupProblemInboundHandler5.channelWritabilityChanged(channelHandlerContext7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1611() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1611");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupStatusType catchupStatusType0 = io.github.onograph.cluster.raft.module.cuprot.CatchupStatusType.CST_OK_STREAM_COMPLETE;
    org.junit.Assert.assertTrue("'" + catchupStatusType0 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.CatchupStatusType.CST_OK_STREAM_COMPLETE
        + "'", catchupStatusType0.equals(
        io.github.onograph.cluster.raft.module.cuprot.CatchupStatusType.CST_OK_STREAM_COMPLETE));
  }

  @Test
  public void test1612() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1612");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry6 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray7 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry6};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction8 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray7);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction9 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 100, 1536L, consensusLogEntryArray7);
    io.github.onograph.cluster.raft.share.calg.action.BulkAddAction bulkAddAction12 = new io.github.onograph.cluster.raft.share.calg.action.BulkAddAction(
        consensusLogEntryArray7, (long) (byte) 0, (int) (short) 1);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId13 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Ask ask16 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Ask(
        (long) (byte) 0, (long) 3, consensusLogEntryArray7, consensusNodeId13, 1L, (long) 128);
    io.github.onograph.cluster.raft.share.calg.LeaderNodeDataSDWrapper leaderNodeDataSDWrapper17 = new io.github.onograph.cluster.raft.share.calg.LeaderNodeDataSDWrapper();
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier19 = new io.github.onograph.config.NodeGroupIdentifier(
        "hi!");
    char char21 = nodeGroupIdentifier19.charAt(0);
    akka.cluster.Cluster cluster22 = null;
    akka.event.EventStream eventStream23 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.StartScheduler startScheduler24 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartRules1 restartRules1_25 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartRules1();
    akka.actor.Props props26 = io.github.onograph.cluster.raft.module.dprot.impl.structure.RestartMonitoringActor.prpProps(
        cluster22, eventStream23, startScheduler24,
        (io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach) restartRules1_25);
    boolean boolean27 = nodeGroupIdentifier19.equals((java.lang.Object) restartRules1_25);
    boolean boolean28 = leaderNodeDataSDWrapper17.equals((java.lang.Object) nodeGroupIdentifier19);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId29 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.Ask ask30 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.Ask(
        (io.github.onograph.cluster.raft.share.sync.SyncableData) leaderNodeDataSDWrapper17,
        consensusNodeId29);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel31 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl32 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl33 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel31, safeStateMarshalImpl32);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk34 = null;
    java.lang.Void void35 = processorImpl33.process(bulkAsk34);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage36 = null;
    java.lang.Void void37 = processorImpl33.process(logClipRequestMessage36);
    java.lang.Void void38 = ask30.dipc(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception>) processorImpl33);
    try {
      java.lang.Void void39 = ask16.dipc(
          (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception>) processorImpl33);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusLogEntryArray7);
    org.junit.Assert.assertTrue("'" + char21 + "' != '" + 'h' + "'", char21 == 'h');
    org.junit.Assert.assertNotNull(props26);
    //org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    //org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNull(void35);
    org.junit.Assert.assertNull(void37);
    org.junit.Assert.assertNull(void38);
  }

  @Test
  public void test1613() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1613");
    }
    java.util.function.Predicate<java.lang.Object> objPredicate0 = null;
    io.github.onograph.cluster.raft.akkamsg.MessageChannelDuplexHandler messageChannelDuplexHandler1 = new io.github.onograph.cluster.raft.akkamsg.MessageChannelDuplexHandler(
        objPredicate0);
    io.netty.channel.ChannelHandlerContext channelHandlerContext2 = null;
    java.net.SocketAddress socketAddress3 = null;
    io.netty.channel.ChannelPromise channelPromise4 = null;
    try {
      messageChannelDuplexHandler1.bind(channelHandlerContext2, socketAddress3, channelPromise4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1614() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1614");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.ConsensusDatabaseIdWrapperJSerializer consensusDatabaseIdWrapperJSerializer0 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.ConsensusDatabaseIdWrapperJSerializer();
    boolean boolean1 = consensusDatabaseIdWrapperJSerializer0.includeManifest();
    boolean boolean2 = consensusDatabaseIdWrapperJSerializer0.includeManifest();
    //org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
  }

  @Test
  public void test1615() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1615");
    }
    io.github.onograph.cluster.raft.share.calg.SyncableDataChannelMarshal syncableDataChannelMarshal0 = new io.github.onograph.cluster.raft.share.calg.SyncableDataChannelMarshal();
    org.neo4j.storageengine.api.StorageEngineFactory storageEngineFactory1 = null;
    try {
      syncableDataChannelMarshal0.inttForSt(storageEngineFactory1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1616() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1616");
    }
    akka.actor.ExtendedActorSystem extendedActorSystem0 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.stack.JoinClusterRemoteInstrument joinClusterRemoteInstrument1 = new io.github.onograph.cluster.raft.module.dprot.impl.stack.JoinClusterRemoteInstrument(
        extendedActorSystem0);
    byte byte2 = joinClusterRemoteInstrument1.identifier();
    akka.actor.ActorRef actorRef3 = null;
    org.neo4j.graphdb.config.Setting<java.util.List<io.github.onograph.config.NodeGroupIdentifier>> nodeGroupIdentifierListSetting4 = io.github.onograph.config.SettingsDeclarationClusterImpl.settingCocdtvoryList;
    akka.actor.ActorRef actorRef5 = null;
    java.nio.ByteBuffer byteBuffer6 = null;
    joinClusterRemoteInstrument1.remoteWriteMetadata(actorRef3,
        (java.lang.Object) nodeGroupIdentifierListSetting4, actorRef5, byteBuffer6);
    akka.actor.ActorRef actorRef8 = null;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType9 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    akka.actor.ActorRef actorRef10 = null;
    java.nio.ByteBuffer byteBuffer11 = null;
    joinClusterRemoteInstrument1.remoteReadMetadata(actorRef8,
        (java.lang.Object) applicationComProFamilyType9, actorRef10, byteBuffer11);
    java.lang.String str13 = applicationComProFamilyType9.caerString();
    org.junit.Assert.assertTrue("'" + byte2 + "' != '" + (byte) 8 + "'", byte2 != (byte) 8);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierListSetting4);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType9 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType9.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "catchup_protocol" + "'", str13,
        "catchup_protocol");
  }

  @Test
  public void test1617() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1617");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler0 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler1 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler2 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler3 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl4 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler5 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler3, refCatchupManagerImpl4);
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedInboundHandler transactionChunkingCompletedInboundHandler6 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedInboundHandler(
        catchupAnswerLimitHandler2, refCatchupManagerImpl4);
    io.github.onograph.cluster.raft.module.cuprot.current.ident.GdbIdInboundHandler gdbIdInboundHandler7 = new io.github.onograph.cluster.raft.module.cuprot.current.ident.GdbIdInboundHandler(
        catchupAnswerLimitHandler1, refCatchupManagerImpl4);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler8 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler0, refCatchupManagerImpl4);
  }

  @Test
  public void test1618() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1618");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler0 = null;
    org.neo4j.logging.Log log1 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl2 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler sliceMetaSimpleChannelInboundHandler3 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler(
        catchupAnswerLimitHandler0, log1, refCatchupManagerImpl2);
    java.nio.file.Path path4 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo5 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path4);
    java.nio.file.Path path6 = clusterMetaTopologyInfo5.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker7 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo5);
    boolean boolean8 = sliceMetaSimpleChannelInboundHandler3.acceptInboundMessage(
        (java.lang.Object) clusterMetaTopologyInfo5);
    try {
      java.nio.file.Path path10 = clusterMetaTopologyInfo5.rametfePath("");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo5);
    org.junit.Assert.assertNull(path6);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1619() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1619");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    io.github.onograph.cluster.raft.palapp.NamedServiceApproachManager namedServiceApproachManager1 = null;
    io.github.onograph.cluster.raft.module.cuprot.SocketAddressService.SocketAddressServiceLocatorImpl socketAddressServiceLocatorImpl2 = new io.github.onograph.cluster.raft.module.cuprot.SocketAddressService.SocketAddressServiceLocatorImpl(
        clusterStructureService0, namedServiceApproachManager1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    try {
      org.neo4j.configuration.helpers.SocketAddress socketAddress4 = socketAddressServiceLocatorImpl2.seoaSocketAddress(
          namedDatabaseId3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1620() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1620");
    }
    io.github.onograph.cluster.raft.utils.ExceptionManager exceptionManager1 = new io.github.onograph.cluster.raft.utils.ExceptionManager(
        "LZ4_high_compression");
    io.github.onograph.cluster.raft.utils.ExceptionManager.RunnableWithException runnableWithException2 = null;
    exceptionManager1.exceForEx(runnableWithException2);
    io.github.onograph.cluster.raft.utils.ExceptionManager.RunnableWithException runnableWithException4 = null;
    exceptionManager1.exceForEx(runnableWithException4);
  }

  @Test
  public void test1621() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1621");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry6 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray7 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry6};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction8 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray7);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction9 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 100, 1536L, consensusLogEntryArray7);
    io.github.onograph.cluster.raft.share.calg.action.BulkAddAction bulkAddAction12 = new io.github.onograph.cluster.raft.share.calg.action.BulkAddAction(
        consensusLogEntryArray7, (long) (byte) 0, (int) (short) 1);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId13 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Ask ask16 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Ask(
        (long) (byte) 0, (long) 3, consensusLogEntryArray7, consensusNodeId13, 1L, (long) 128);
    long long17 = ask16.getLdrComLng();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray18 = ask16.getEtisConsensusLogEntryArray();
    org.junit.Assert.assertNotNull(consensusLogEntryArray7);
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
    org.junit.Assert.assertNotNull(consensusLogEntryArray18);
  }

  @Test
  public void test1622() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1622");
    }
    org.neo4j.kernel.KernelVersion kernelVersion0 = null;
    org.neo4j.storageengine.api.StoreId storeId1 = null;
    org.neo4j.kernel.impl.transaction.CommittedTransactionRepresentation committedTransactionRepresentation2 = null;
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupOutgoingTransactionPullReply catchupOutgoingTransactionPullReply3 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupOutgoingTransactionPullReply(
        kernelVersion0, storeId1, committedTransactionRepresentation2);
    io.github.onograph.cluster.raft.share.calg.scholder.ScHolderBuilder scHolderBuilder4 = new io.github.onograph.cluster.raft.share.calg.scholder.ScHolderBuilder();
    boolean boolean5 = catchupOutgoingTransactionPullReply3.equals(
        (java.lang.Object) scHolderBuilder4);
    org.neo4j.kernel.impl.transaction.CommittedTransactionRepresentation committedTransactionRepresentation6 = catchupOutgoingTransactionPullReply3.getTCommittedTransactionRepresentation();
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNull(committedTransactionRepresentation6);
  }

  @Test
  public void test1623() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1623");
    }
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS0 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta1 = marshalChannelImplCMS0.startState();
    boolean boolean3 = nodeServerMemberTransactionLogDataMeta1.isTrnt((long) (short) -1);
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta4 = nodeServerMemberTransactionLogDataMeta1.neitcNodeServerMemberTransactionLogDataMeta();
    org.junit.Assert.assertNotNull(marshalChannelImplCMS0);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta1);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta4);
  }

  @Test
  public void test1624() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1624");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ClusterInitMeta clusterInitMeta0 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ClusterInitMeta.EMT_CLUSTER_INIT_META;
    io.github.onograph.cluster.raft.module.cuprot.current.info.MetaByteToMessageDecoder metaByteToMessageDecoder1 = new io.github.onograph.cluster.raft.module.cuprot.current.info.MetaByteToMessageDecoder();
    io.netty.handler.codec.ByteToMessageDecoder.Cumulator cumulator2 = io.netty.handler.codec.ByteToMessageDecoder.COMPOSITE_CUMULATOR;
    metaByteToMessageDecoder1.setCumulator(cumulator2);
    boolean boolean4 = clusterInitMeta0.equals((java.lang.Object) cumulator2);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId5 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    try {
      boolean boolean7 = clusterInitMeta0.isMerbsprfForNaCo(consensusNodeId5, namedDatabaseId6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterInitMeta0);
    org.junit.Assert.assertNotNull(cumulator2);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1625() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1625");
    }
    io.github.onograph.dbms.crash.CrashSignaler crashSignaler0 = null;
    org.neo4j.dbms.DatabaseStateService databaseStateService1 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryManagerAkkaImpl clusterDiscoveryManagerAkkaImpl2 = new io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryManagerAkkaImpl();
    org.neo4j.graphdb.factory.module.GlobalModule globalModule3 = null;
    org.neo4j.ssl.config.SslPolicyLoader sslPolicyLoader4 = null;
    try {
      io.github.onograph.cluster.raft.share.meta.ClusterDiscoveryService clusterDiscoveryService5 = new io.github.onograph.cluster.raft.share.meta.ClusterDiscoveryService(
          crashSignaler0, databaseStateService1,
          (io.github.onograph.cluster.raft.module.dprot.ClusterDiscoveryManager) clusterDiscoveryManagerAkkaImpl2,
          globalModule3, sslPolicyLoader4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1626() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1626");
    }
    byte[] byteArray1 = new byte[]{(byte) 9};
    org.neo4j.kernel.database.DatabaseId databaseId2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType4 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData5 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray1, databaseId2, "name", replicaTokenType4);
    org.neo4j.kernel.database.DatabaseId databaseId6 = requestData5.daasidDatabaseId();
    io.github.onograph.cluster.raft.share.sync.SessionSeqActionId sessionSeqActionId7 = null;
    java.util.UUID uUID8 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy9 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean10 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID8, consensusNodeIdLazy9);
    io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl syncStatusMetaServiceImpl11 = new io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl(
        clusterSessionBean10);
    java.util.UUID uUID12 = clusterSessionBean10.getIsUUID();
    io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction dataSyncClusterAction13 = new io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction(
        (io.github.onograph.cluster.raft.share.sync.SyncableData) requestData5, sessionSeqActionId7,
        clusterSessionBean10);
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataProcessor syncableDataProcessor14 = null;
    try {
      dataSyncClusterAction13.dipcForSy(syncableDataProcessor14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[9]");
    org.junit.Assert.assertNull(databaseId6);
    org.junit.Assert.assertNull(uUID12);
  }

  @Test
  public void test1627() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1627");
    }
    io.github.onograph.cluster.raft.share.bulk.MessageStack.MessageStackSettings messageStackSettings2 = new io.github.onograph.cluster.raft.share.bulk.MessageStack.MessageStackSettings(
        32, 100L);
  }

  @Test
  public void test1628() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1628");
    }
    org.neo4j.kernel.KernelVersion kernelVersion0 = null;
    org.neo4j.storageengine.api.StoreId storeId1 = null;
    org.neo4j.kernel.impl.transaction.CommittedTransactionRepresentation committedTransactionRepresentation2 = null;
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupOutgoingTransactionPullReply catchupOutgoingTransactionPullReply3 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupOutgoingTransactionPullReply(
        kernelVersion0, storeId1, committedTransactionRepresentation2);
    org.neo4j.kernel.impl.transaction.CommittedTransactionRepresentation committedTransactionRepresentation4 = catchupOutgoingTransactionPullReply3.getTCommittedTransactionRepresentation();
    org.neo4j.kernel.KernelVersion kernelVersion5 = catchupOutgoingTransactionPullReply3.getKernelVersion();
    io.github.onograph.cluster.raft.share.ClusterLoadBalancingServerPoliciesGroupSetting clusterLoadBalancingServerPoliciesGroupSetting7 = io.github.onograph.cluster.raft.share.ClusterLoadBalancingServerPoliciesGroupSetting.gruClusterLoadBalancingServerPoliciesGroupSetting(
        "catchup_protocol");
    org.neo4j.graphdb.config.Setting<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessor<io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta>> loadBalanceServerMetaRuleProcessorSetting8 = clusterLoadBalancingServerPoliciesGroupSetting7.val;
    boolean boolean9 = catchupOutgoingTransactionPullReply3.equals(
        (java.lang.Object) loadBalanceServerMetaRuleProcessorSetting8);
    org.neo4j.kernel.impl.transaction.CommittedTransactionRepresentation committedTransactionRepresentation10 = catchupOutgoingTransactionPullReply3.getTCommittedTransactionRepresentation();
    io.github.onograph.cluster.raft.id.ConsensusMemberGroupId.SafeStateMarshalImpl safeStateMarshalImpl11 = io.github.onograph.cluster.raft.id.ConsensusMemberGroupId.SafeStateMarshalImpl.IT;
    io.github.onograph.cluster.raft.share.meta.MetaWrapper<io.github.onograph.cluster.raft.id.ConsensusMemberGroupId> consensusMemberGroupIdMetaWrapper12 = io.github.onograph.cluster.raft.share.meta.MetaWrapper.dumMetaWrapper(
        (org.neo4j.io.marshal.SafeStateMarshal<io.github.onograph.cluster.raft.id.ConsensusMemberGroupId>) safeStateMarshalImpl11);
    io.github.onograph.cluster.raft.id.ConsensusMemberGroupId consensusMemberGroupId13 = safeStateMarshalImpl11.startState();
    boolean boolean14 = catchupOutgoingTransactionPullReply3.equals(
        (java.lang.Object) safeStateMarshalImpl11);
    org.neo4j.kernel.impl.transaction.CommittedTransactionRepresentation committedTransactionRepresentation15 = catchupOutgoingTransactionPullReply3.getTCommittedTransactionRepresentation();
    org.junit.Assert.assertNull(committedTransactionRepresentation4);
    org.junit.Assert.assertNull(kernelVersion5);
    org.junit.Assert.assertNotNull(clusterLoadBalancingServerPoliciesGroupSetting7);
    org.junit.Assert.assertNotNull(loadBalanceServerMetaRuleProcessorSetting8);
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNull(committedTransactionRepresentation10);
    org.junit.Assert.assertNotNull(safeStateMarshalImpl11);
    org.junit.Assert.assertNotNull(consensusMemberGroupIdMetaWrapper12);
    org.junit.Assert.assertNull(consensusMemberGroupId13);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertNull(committedTransactionRepresentation15);
  }

  @Test
  public void test1629() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1629");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.SocketAddressSafeChannelMarshal socketAddressSafeChannelMarshal0 = io.github.onograph.cluster.raft.module.dprot.impl.serialize.SocketAddressSafeChannelMarshal.IT;
    org.neo4j.configuration.helpers.SocketAddress socketAddress1 = null;
    io.netty.buffer.ByteBuf byteBuf2 = null;
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel3 = new io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel(
        byteBuf2);
    defaultWritableChecksumChannel3.beginChecksum();
    io.netty.buffer.ByteBuf byteBuf5 = defaultWritableChecksumChannel3.byebfByteBuf();
    try {
      socketAddressSafeChannelMarshal0.marshal(socketAddress1,
          (org.neo4j.io.fs.WritableChannel) defaultWritableChecksumChannel3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(socketAddressSafeChannelMarshal0);
    org.junit.Assert.assertNull(byteBuf5);
  }

  @Test
  public void test1630() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1630");
    }
    java.lang.Runnable runnable0 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage1 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl2 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable0, leasableMetaStateStorage1);
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta leasableMeta3 = io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta.INTL_LES_STAX;
    syncableLeasableCoreNodeDataFSMImpl2.inlspForLe(leasableMeta3);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId5 = leasableMeta3.getOnrConsensusNodeId();
    org.junit.Assert.assertNotNull(leasableMeta3);
    org.junit.Assert.assertNull(consensusNodeId5);
  }

  @Test
  public void test1631() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1631");
    }
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.ComProFamilyBuilder comProFamilyBuilder1 = io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.bulrComProFamilyWrapperComProFamilyBuilder();
    io.github.onograph.cluster.raft.control.connect.ServerException serverException2 = new io.github.onograph.cluster.raft.control.connect.ServerException(
        "store_random_id", comProFamilyBuilder1);
    io.github.onograph.cluster.raft.share.sync.SyncMeta syncMeta3 = io.github.onograph.cluster.raft.share.sync.SyncMeta.marcSyncMeta(
        (java.lang.Throwable) serverException2);
    org.junit.Assert.assertNotNull(comProFamilyBuilder1);
    org.junit.Assert.assertNotNull(syncMeta3);
  }

  @Test
  public void test1632() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1632");
    }
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager0 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    try {
      io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper consensusNodeServerMemberIdWrapper1 = io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapperMarshaller.unahConsensusNodeServerMemberIdWrapper(
          (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error:  337d71e4-16ab-4986-b3d7-7e231af9f8ee");
    } catch (java.lang.IllegalArgumentException e) {
    }
  }

  @Test
  public void test1633() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1633");
    }
    akka.actor.ActorRef actorRef0 = null;
    java.time.Clock clock1 = null;
    org.neo4j.configuration.Config config2 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta> databaseIdMap3 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.id.ConsensusNodeId> databaseIdMap4 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, org.neo4j.dbms.DatabaseState> databaseIdMap5 = null;
    io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl gdbServerPointInTimeImpl6 = new io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl(
        databaseIdMap3, databaseIdMap4, databaseIdMap5);
    org.neo4j.logging.LogProvider logProvider7 = null;
    org.neo4j.dbms.identity.ServerId serverId8 = null;
    akka.stream.javadsl.SourceQueueWithComplete<java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta>> databaseIdMapSourceQueueWithComplete9 = null;
    akka.stream.javadsl.SourceQueueWithComplete<io.github.onograph.cluster.raft.module.dprot.ConsensusGdbServerCoordinator> consensusGdbServerCoordinatorSourceQueueWithComplete10 = null;
    akka.stream.javadsl.SourceQueueWithComplete<io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta> readReplicateGdbMetaSourceQueueWithComplete11 = null;
    akka.stream.javadsl.SourceQueueWithComplete<io.github.onograph.cluster.raft.module.dprot.DatabaseCoreClusterStructure> databaseCoreClusterStructureSourceQueueWithComplete12 = null;
    akka.stream.javadsl.SourceQueueWithComplete<io.github.onograph.cluster.raft.module.dprot.DatabaseReadReplicaClusterStructure> databaseReadReplicaClusterStructureSourceQueueWithComplete13 = null;
    akka.actor.Props props14 = io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ReadReplicaClientStructureActor.prpProps(
        actorRef0, clock1, config2,
        (io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTime) gdbServerPointInTimeImpl6,
        logProvider7, serverId8, databaseIdMapSourceQueueWithComplete9,
        consensusGdbServerCoordinatorSourceQueueWithComplete10,
        readReplicateGdbMetaSourceQueueWithComplete11,
        databaseCoreClusterStructureSourceQueueWithComplete12,
        databaseReadReplicaClusterStructureSourceQueueWithComplete13);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, org.neo4j.dbms.DatabaseState> databaseIdMap15 = gdbServerPointInTimeImpl6.daassteMap();
    org.junit.Assert.assertNotNull(props14);
    org.junit.Assert.assertNull(databaseIdMap15);
  }

  @Test
  public void test1634() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1634");
    }
    io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog inMemoryConsensusTransactionLog0 = new io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog();
    long long2 = inMemoryConsensusTransactionLog0.prn((long) 1536);
    long long4 = inMemoryConsensusTransactionLog0.redettm(0L);
    io.github.onograph.cluster.raft.share.calg.cle.DelegatingConsensusTransactionLog delegatingConsensusTransactionLog5 = new io.github.onograph.cluster.raft.share.calg.cle.DelegatingConsensusTransactionLog(
        (io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLog) inMemoryConsensusTransactionLog0);
    long long6 = delegatingConsensusTransactionLog5.prvid();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1536L + "'", long2 == 1536L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1536L + "'", long6 == 1536L);
  }

  @Test
  public void test1635() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1635");
    }
    org.neo4j.configuration.Config config0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.logging.LogProvider logProvider2 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction3 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade4 = null;
    org.neo4j.logging.Log log5 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade6 = null;
    java.util.function.Function<org.neo4j.kernel.database.NamedDatabaseId, io.github.onograph.cluster.raft.share.calg.LeaderNodeEventHandlers> namedDatabaseIdFunction7 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule8 = null;
    org.neo4j.memory.MemoryTracker memoryTracker9 = null;
    java.nio.file.Path path10 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo11 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path10);
    io.github.onograph.config.NodeGroupIdentifierSetSupplier nodeGroupIdentifierSetSupplier12 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.LeaderGatekeeper leaderGatekeeper13 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder consensusNodeGroupWrapperBuilder14 = new io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder(
        clusterSimpleStorageFacade6, namedDatabaseIdFunction7, globalModule8, memoryTracker9,
        clusterMetaTopologyInfo11, nodeGroupIdentifierSetSupplier12, leaderGatekeeper13);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat15 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv16 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction3, clusterSimpleStorageFacade4, log5, clusterMetaTopologyInfo11,
        clusterMetaFormat15);
    org.neo4j.memory.MemoryTracker memoryTracker17 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade18 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config0, fileSystemAbstraction1, logProvider2, clusterMetaTopologyInfo11, memoryTracker17);
    try {
      java.util.List<java.lang.String> strList19 = clusterMetaTopologyInfo11.alrtgosList();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo11);
  }

  @Test
  public void test1636() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1636");
    }
    byte[] byteArray1 = new byte[]{(byte) 1};
    io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService chunkedInputEncodingService3 = new io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService(
        byteArray1, true);
    long long4 = chunkedInputEncodingService3.length();
    long long5 = chunkedInputEncodingService3.progress();
    boolean boolean6 = chunkedInputEncodingService3.isEndOfInput();
    chunkedInputEncodingService3.close();
    chunkedInputEncodingService3.close();
    chunkedInputEncodingService3.close();
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[1]");
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1637() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1637");
    }
    org.neo4j.io.layout.DatabaseLayout databaseLayout0 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResources storeResources1 = null;
    org.neo4j.kernel.impl.transaction.log.files.LogFiles logFiles2 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    io.github.onograph.cluster.raft.share.meta.StoreGdbEnvironmentWrapper storeGdbEnvironmentWrapper4 = new io.github.onograph.cluster.raft.share.meta.StoreGdbEnvironmentWrapper(
        databaseLayout0, storeResources1, logFiles2, namedDatabaseId3);
    org.neo4j.configuration.Config config5 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction6 = null;
    io.github.onograph.cluster.raft.utils.GdbUtilWrapperService gdbUtilWrapperService7 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.memory.MemoryTracker memoryTracker9 = null;
    org.neo4j.io.pagecache.PageCache pageCache10 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer11 = null;
    io.github.onograph.cluster.raft.share.meta.SetupManager setupManager12 = null;
    org.neo4j.storageengine.api.StorageEngineFactory storageEngineFactory13 = null;
    try {
      io.github.onograph.cluster.raft.share.meta.ConsensusConfiguratorForRaft consensusConfiguratorForRaft14 = new io.github.onograph.cluster.raft.share.meta.ConsensusConfiguratorForRaft(
          Clock.systemUTC(), storeGdbEnvironmentWrapper4, config5, fileSystemAbstraction6,
          gdbUtilWrapperService7, logProvider8, memoryTracker9, pageCache10, pageCacheTracer11,
          setupManager12, storageEngineFactory13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1638() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1638");
    }
    org.neo4j.logging.LogProvider logProvider0 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler1 = null;
    org.neo4j.logging.Log log2 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler3 = null;
    org.neo4j.logging.Log log4 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler5 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler6 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl7 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler8 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler6, refCatchupManagerImpl7);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler9 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler5, refCatchupManagerImpl7);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler sliceMetaSimpleChannelInboundHandler10 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler(
        catchupAnswerLimitHandler3, log4, refCatchupManagerImpl7);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler sliceMetaSimpleChannelInboundHandler11 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler(
        catchupAnswerLimitHandler1, log2, refCatchupManagerImpl7);
    try {
      io.github.onograph.cluster.raft.module.cuprot.ClientMessageChannelInboundHandlerAdapter clientMessageChannelInboundHandlerAdapter12 = new io.github.onograph.cluster.raft.module.cuprot.ClientMessageChannelInboundHandlerAdapter(
          logProvider0, refCatchupManagerImpl7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1639() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1639");
    }
    io.github.onograph.cluster.raft.module.cuprot.NewChannelEventHandler newChannelEventHandler0 = io.github.onograph.cluster.raft.module.cuprot.NewChannelEventHandler.DEFAULT;
    io.netty.channel.Channel channel1 = null;
    newChannelEventHandler0.handleNewChannel(channel1);
    io.netty.channel.Channel channel3 = null;
    newChannelEventHandler0.handleNewChannel(channel3);
    org.junit.Assert.assertNotNull(newChannelEventHandler0);
  }

  @Test
  public void test1640() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1640");
    }
    byte[] byteArray1 = new byte[]{(byte) 9};
    org.neo4j.kernel.database.DatabaseId databaseId2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType4 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData5 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray1, databaseId2, "name", replicaTokenType4);
    org.neo4j.kernel.database.DatabaseId databaseId6 = requestData5.daasidDatabaseId();
    io.github.onograph.cluster.raft.share.sync.SessionSeqActionId sessionSeqActionId7 = null;
    java.util.UUID uUID8 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy9 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean10 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID8, consensusNodeIdLazy9);
    io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl syncStatusMetaServiceImpl11 = new io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl(
        clusterSessionBean10);
    java.util.UUID uUID12 = clusterSessionBean10.getIsUUID();
    io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction dataSyncClusterAction13 = new io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction(
        (io.github.onograph.cluster.raft.share.sync.SyncableData) requestData5, sessionSeqActionId7,
        clusterSessionBean10);
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataProcessor syncableDataProcessor14 = null;
    try {
      requestData5.dipcForSy(syncableDataProcessor14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[9]");
    org.junit.Assert.assertNull(databaseId6);
    org.junit.Assert.assertNull(uUID12);
  }

  @Test
  public void test1641() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1641");
    }
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta> databaseIdMap0 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.id.ConsensusNodeId> databaseIdMap1 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, org.neo4j.dbms.DatabaseState> databaseIdMap2 = null;
    io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl gdbServerPointInTimeImpl3 = new io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl(
        databaseIdMap0, databaseIdMap1, databaseIdMap2);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.id.ConsensusNodeId> databaseIdMap4 = gdbServerPointInTimeImpl3.daammhMap();
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta> databaseIdMap5 = gdbServerPointInTimeImpl3.daalahMap();
    java.util.Map<org.neo4j.kernel.database.DatabaseId, org.neo4j.dbms.DatabaseState> databaseIdMap6 = gdbServerPointInTimeImpl3.daassteMap();
    org.junit.Assert.assertNull(databaseIdMap4);
    org.junit.Assert.assertNull(databaseIdMap5);
    org.junit.Assert.assertNull(databaseIdMap6);
  }

  @Test
  public void test1642() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1642");
    }
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta> databaseIdMap0 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.id.ConsensusNodeId> databaseIdMap1 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, org.neo4j.dbms.DatabaseState> databaseIdMap2 = null;
    io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl gdbServerPointInTimeImpl3 = new io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl(
        databaseIdMap0, databaseIdMap1, databaseIdMap2);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.id.ConsensusNodeId> databaseIdMap4 = gdbServerPointInTimeImpl3.daammhMap();
    io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryInitiator clusterDiscoveryInitiator5 = new io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryInitiator(
        (io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTime) gdbServerPointInTimeImpl3);
    org.neo4j.kernel.database.DatabaseId databaseId6 = null;
    org.neo4j.storageengine.api.StoreId storeId7 = null;
    java.nio.file.Path path9 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreResource requestStoreResource10 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreResource(
        databaseId6, storeId7, (long) (byte) 10, path9);
    org.neo4j.kernel.database.DatabaseId databaseId11 = requestStoreResource10.getDatabaseId();
    org.neo4j.storageengine.api.StoreId storeId12 = requestStoreResource10.getEpceStoreId();
    java.nio.file.Path path13 = requestStoreResource10.getPath();
    boolean boolean14 = gdbServerPointInTimeImpl3.equals((java.lang.Object) requestStoreResource10);
    org.junit.Assert.assertNull(databaseIdMap4);
    org.junit.Assert.assertNull(databaseId11);
    org.junit.Assert.assertNull(storeId12);
    org.junit.Assert.assertNull(path13);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1643() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1643");
    }
    io.github.onograph.cluster.raft.module.cuprot.current.info.MetaByteToMessageDecoder metaByteToMessageDecoder0 = new io.github.onograph.cluster.raft.module.cuprot.current.info.MetaByteToMessageDecoder();
    io.netty.channel.ChannelHandlerContext channelHandlerContext1 = null;
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddressManagerDefaultImpl discoverySocketAddressManagerDefaultImpl2 = new io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddressManagerDefaultImpl();
    org.neo4j.configuration.helpers.SocketAddress socketAddress3 = null;
    java.util.Collection<org.neo4j.configuration.helpers.SocketAddress> socketAddressCollection4 = discoverySocketAddressManagerDefaultImpl2.reoeCollection(
        socketAddress3);
    try {
      metaByteToMessageDecoder0.channelRead(channelHandlerContext1,
          (java.lang.Object) discoverySocketAddressManagerDefaultImpl2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(socketAddressCollection4);
  }

  @Test
  public void test1644() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1644");
    }
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaCoreImpl gdbDiscoveryMetaCoreImpl0 = null;
    org.neo4j.dbms.identity.ServerId serverId1 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.GdbDiscoveryMetaCoreWrapper gdbDiscoveryMetaCoreWrapper2 = new io.github.onograph.cluster.raft.module.dprot.impl.structure.GdbDiscoveryMetaCoreWrapper(
        gdbDiscoveryMetaCoreImpl0, serverId1);
    org.neo4j.dbms.identity.ServerId serverId3 = gdbDiscoveryMetaCoreWrapper2.getServerId();
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler4 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler5 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl6 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler7 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler5, refCatchupManagerImpl6);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler8 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler4, refCatchupManagerImpl6);
    boolean boolean9 = gdbDiscoveryMetaCoreWrapper2.equals(
        (java.lang.Object) refCatchupManagerImpl6);
    org.junit.Assert.assertNull(serverId3);
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1645() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1645");
    }
    io.github.onograph.cluster.raft.palapp.NamedServiceApproachException namedServiceApproachException1 = new io.github.onograph.cluster.raft.palapp.NamedServiceApproachException(
        "user-defined");
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException gdbStoreSyncCrlException2 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException(
        (java.lang.Throwable) namedServiceApproachException1);
  }

  @Test
  public void test1646() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1646");
    }
    io.github.onograph.dbms.ClusterDatabaseManagementException clusterDatabaseManagementException1 = new io.github.onograph.dbms.ClusterDatabaseManagementException(
        "store_version");
    org.neo4j.dbms.api.DatabaseManagementException databaseManagementException2 = org.neo4j.dbms.api.DatabaseManagementException.wrap(
        (java.lang.Throwable) clusterDatabaseManagementException1);
    io.github.onograph.cluster.raft.share.meta.cm.ClusterSyncerException clusterSyncerException3 = new io.github.onograph.cluster.raft.share.meta.cm.ClusterSyncerException(
        (java.lang.Throwable) databaseManagementException2);
    io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure startFailure4 = new io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure(
        (java.lang.Throwable) databaseManagementException2);
    io.github.onograph.cluster.raft.share.meta.FSMData fSMData5 = io.github.onograph.cluster.raft.share.meta.FSMData.ofFSMData(
        (java.lang.Exception) startFailure4);
    try {
      io.github.onograph.cluster.raft.share.sync.SubClusterSessionBean subClusterSessionBean6 = fSMData5.cose();
      org.junit.Assert.fail(
          "Expected exception of type io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure; message: io.github.onograph.dbms.ClusterDatabaseManagementException: store_version");
    } catch (io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure e) {
    }
    org.junit.Assert.assertNotNull(databaseManagementException2);
    org.junit.Assert.assertNotNull(fSMData5);
  }

  @Test
  public void test1647() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1647");
    }
    io.github.onograph.cluster.raft.share.meta.cm.ClearStaleClusterMeta clearStaleClusterMeta0 = new io.github.onograph.cluster.raft.share.meta.cm.ClearStaleClusterMeta();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config2 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    java.nio.file.Path path5 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo6 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path5);
    java.nio.file.Path path7 = clusterMetaTopologyInfo6.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker8 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo6);
    org.neo4j.memory.MemoryTracker memoryTracker9 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade10 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config2, fileSystemAbstraction3, logProvider4, clusterMetaTopologyInfo6, memoryTracker9);
    org.neo4j.logging.Log log11 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction12 = null;
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction14 = null;
    org.neo4j.logging.LogProvider logProvider15 = null;
    java.nio.file.Path path16 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo17 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path16);
    java.nio.file.Path path18 = clusterMetaTopologyInfo17.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker19 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo17);
    org.neo4j.memory.MemoryTracker memoryTracker20 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade21 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config13, fileSystemAbstraction14, logProvider15, clusterMetaTopologyInfo17,
        memoryTracker20);
    org.neo4j.logging.Log log22 = null;
    java.nio.file.Path path23 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo24 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path23);
    java.nio.file.Path path25 = clusterMetaTopologyInfo24.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker26 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo24);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat27 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction12, clusterSimpleStorageFacade21, log22, clusterMetaTopologyInfo24,
        clusterMetaFormat27);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat29 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction1, clusterSimpleStorageFacade10, log11, clusterMetaTopologyInfo24,
        clusterMetaFormat29);
    try {
      clearStaleClusterMeta0.pefmseForUp(upgradeMetaEnv30);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo6);
    org.junit.Assert.assertNull(path7);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo17);
    org.junit.Assert.assertNull(path18);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo24);
    org.junit.Assert.assertNull(path25);
    org.junit.Assert.assertNotNull(clusterMetaFormat27);
  }

  @Test
  public void test1648() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1648");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray5 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry4};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction6 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray5);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction7 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 100, 1536L, consensusLogEntryArray5);
    io.github.onograph.cluster.raft.share.calg.action.BulkAddAction bulkAddAction10 = new io.github.onograph.cluster.raft.share.calg.action.BulkAddAction(
        consensusLogEntryArray5, (long) (byte) 0, (int) (short) 1);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl11 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry12 = null;
    consensusLogCacheServiceNoopImpl11.putForCo(consensusLogEntry12, (long) '#');
    long long15 = consensusLogCacheServiceNoopImpl11.toabys();
    org.neo4j.logging.Log log16 = null;
    bulkAddAction10.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceNoopImpl11,
        log16);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.LivingCacheObserver livingCacheObserver21 = io.github.onograph.cluster.raft.share.calg.cle.cservice.LivingCacheObserver.VOI_LIVING_CACHE_OBSERVER;
    livingCacheObserver21.sememt((int) 'a');
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceLiveImpl consensusLogCacheServiceLiveImpl24 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceLiveImpl(
        32, false, (long) 13, livingCacheObserver21);
    long long25 = consensusLogCacheServiceLiveImpl24.toabys();
    consensusLogCacheServiceLiveImpl24.retspccac();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry28 = consensusLogCacheServiceLiveImpl24.getConsensusLogEntry(
        1L);
    org.neo4j.logging.Log log29 = null;
    bulkAddAction10.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceLiveImpl24,
        log29);
    io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog inMemoryConsensusTransactionLog31 = new io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog();
    long long34 = inMemoryConsensusTransactionLog31.pass((long) 0, (long) (short) -1);
    boolean boolean36 = inMemoryConsensusTransactionLog31.equals((java.lang.Object) "protocols");
    io.github.onograph.cluster.raft.share.calg.cle.DelegatingConsensusTransactionLog delegatingConsensusTransactionLog37 = new io.github.onograph.cluster.raft.share.calg.cle.DelegatingConsensusTransactionLog(
        (io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLog) inMemoryConsensusTransactionLog31);
    org.neo4j.logging.Log log38 = null;
    bulkAddAction10.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLog) inMemoryConsensusTransactionLog31,
        log38);
    org.junit.Assert.assertNotNull(consensusLogEntryArray5);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    org.junit.Assert.assertNotNull(livingCacheObserver21);
    org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    org.junit.Assert.assertNull(consensusLogEntry28);
    org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
    //org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
  }

  @Test
  public void test1649() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1649");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.CandidateVoteMessage.Reply reply3 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.CandidateVoteMessage.Reply(
        consensusNodeId0, true, (long) 1015);
    boolean boolean4 = reply3.getIsOr();
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1650() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1650");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler0 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl1 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaInboundHandler authMetaInboundHandler2 = new io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaInboundHandler(
        catchupAnswerLimitHandler0, refCatchupManagerImpl1);
    io.netty.channel.ChannelHandlerContext channelHandlerContext3 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler4 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler5 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler6 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler7 = null;
    org.neo4j.logging.Log log8 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler9 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler10 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl11 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler12 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler10, refCatchupManagerImpl11);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler13 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler9, refCatchupManagerImpl11);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler sliceMetaSimpleChannelInboundHandler14 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler(
        catchupAnswerLimitHandler7, log8, refCatchupManagerImpl11);
    io.github.onograph.cluster.raft.module.cuprot.current.rtx.CatchupIncomingTransactionReplySimpleChannelInboundHandler catchupIncomingTransactionReplySimpleChannelInboundHandler15 = new io.github.onograph.cluster.raft.module.cuprot.current.rtx.CatchupIncomingTransactionReplySimpleChannelInboundHandler(
        catchupAnswerLimitHandler6, refCatchupManagerImpl11);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler16 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler5, refCatchupManagerImpl11);
    io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler allGdbIdsInboundHandler17 = new io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler(
        catchupAnswerLimitHandler4, refCatchupManagerImpl11);
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType catchupManagerStatusType18 = io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.REQ_GDB_UIDS;
    refCatchupManagerImpl11.exeForE(catchupManagerStatusType18);
    try {
      authMetaInboundHandler2.channelRead(channelHandlerContext3,
          (java.lang.Object) refCatchupManagerImpl11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + catchupManagerStatusType18 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.REQ_GDB_UIDS
        + "'", catchupManagerStatusType18.equals(
        io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.REQ_GDB_UIDS));
  }

  @Test
  public void test1651() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1651");
    }
    io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType mutatingComProFamilyGroupType0 = io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.DAT_OBFUS;
    java.lang.String[] strArray26 = new java.lang.String[]{
        "causal_clustering.leadership_priority_group", "default", "user-defined",
        "cc-discovery-actor-system", "overview", "default", "RequestGdbId for ", "temp-copy",
        "name", "leader-only", "cc-database-status-actor", "storage_engine", "designated_seeder",
        "temp-copy", "server_policies", "joiner", "server_policies", "cc-directory-actor", "Snappy",
        "Label", "temp-save", "cc-core-restart-needed-listener-timer", "restarting-cluster-client",
        "store_version", "type_comp"};
    java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
    boolean boolean28 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList27, strArray26);
    java.lang.String[] strArray57 = new java.lang.String[]{
        "causal_clustering.load_balancing.config.server_policies", "type_comp",
        "causal_clustering.load_balancing.config.server_policies",
        "causal_clustering.load_balancing.config.server_policies", "store_version",
        "causal_clustering.leadership_priority_group",
        "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartRules1. Running every PT10S",
        "initial_members", "status", "storage_engine", "user-defined", "RequestGdbId for ",
        "type_comp", "leader-only", "user-defined",
        "io.github.onograph.dbms.ClusterDatabaseManagementException: store_version",
        "catchup_protocol", "designated_seeder", "cc-core-restart-needed-listener-timer",
        "cc-discovery-actor-system", "user-defined", "restarting-cluster-client",
        "cc-database-status-actor",
        "io.github.onograph.dbms.ClusterDatabaseManagementException: store_version", "uuid", "uuid",
        "leader-only", "type_comp"};
    java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
    boolean boolean59 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList58, strArray57);
    io.github.onograph.cluster.raft.module.cuprot.current.core.GdbAuthActions gdbAuthActions60 = new io.github.onograph.cluster.raft.module.cuprot.current.core.GdbAuthActions(
        (java.util.List<java.lang.String>) strList27, (java.util.List<java.lang.String>) strList58);
    io.github.onograph.cluster.raft.control.connect.MutatingCurrentActiveComProFamilyWrapper mutatingCurrentActiveComProFamilyWrapper61 = new io.github.onograph.cluster.raft.control.connect.MutatingCurrentActiveComProFamilyWrapper(
        (io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutatingComProFamilyGroupType0,
        (java.util.List<java.lang.String>) strList27);
    io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.MutableComProFamily> mutableComProFamilyComProFamilyGroup62 = mutatingCurrentActiveComProFamilyWrapper61.getComProFamilyGroupCtgrT();
    io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.MutableComProFamily> mutableComProFamilyComProFamilyGroup63 = mutatingCurrentActiveComProFamilyWrapper61.getComProFamilyGroupCtgrT();
    org.junit.Assert.assertTrue("'" + mutatingComProFamilyGroupType0 + "' != '"
            + io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.DAT_OBFUS + "'",
        mutatingComProFamilyGroupType0.equals(
            io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.DAT_OBFUS));
    org.junit.Assert.assertNotNull(strArray26);
    //org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    org.junit.Assert.assertNotNull(strArray57);
    //org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertTrue("'" + mutableComProFamilyComProFamilyGroup62 + "' != '"
            + io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.DAT_OBFUS + "'",
        mutableComProFamilyComProFamilyGroup62.equals(
            io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.DAT_OBFUS));
    org.junit.Assert.assertTrue("'" + mutableComProFamilyComProFamilyGroup63 + "' != '"
            + io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.DAT_OBFUS + "'",
        mutableComProFamilyComProFamilyGroup63.equals(
            io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.DAT_OBFUS));
  }

  @Test
  public void test1652() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1652");
    }
    org.neo4j.configuration.helpers.DatabaseReadOnlyChecker databaseReadOnlyChecker0 = null;
    org.neo4j.internal.id.IdGeneratorFactory idGeneratorFactory1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer3 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator4 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.StorageEngine> storageEngineSupplier5 = null;
    org.neo4j.token.TokenRegistry tokenRegistry6 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RelationshipTypeTokenHolder relationshipTypeTokenHolder7 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RelationshipTypeTokenHolder(
        databaseReadOnlyChecker0, idGeneratorFactory1, namedDatabaseId2, pageCacheTracer3,
        syncerator4, storageEngineSupplier5, tokenRegistry6);
    try {
      java.lang.Iterable<org.neo4j.token.api.NamedToken> namedTokenIterable8 = relationshipTypeTokenHolder7.getAllTokens();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1653() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1653");
    }
    io.github.onograph.cluster.raft.share.calg.action.TransactionLogActionClipImpl transactionLogActionClipImpl1 = new io.github.onograph.cluster.raft.share.calg.action.TransactionLogActionClipImpl(
        0L);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl consensusLogCacheServiceNLImpl2 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = consensusLogCacheServiceNLImpl2.getConsensusLogEntry(
        (long) 1);
    int int5 = consensusLogCacheServiceNLImpl2.elmtcu();
    consensusLogCacheServiceNLImpl2.enb();
    org.neo4j.logging.Log log7 = null;
    transactionLogActionClipImpl1.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceNLImpl2,
        log7);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService consensusLogCacheService9 = null;
    org.neo4j.logging.Log log10 = null;
    transactionLogActionClipImpl1.apltoForCoLo(consensusLogCacheService9, log10);
    io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog inMemoryConsensusTransactionLog12 = new io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog();
    long long14 = inMemoryConsensusTransactionLog12.prn((long) 1536);
    long long15 = inMemoryConsensusTransactionLog12.prvid();
    org.neo4j.logging.Log log16 = null;
    transactionLogActionClipImpl1.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLog) inMemoryConsensusTransactionLog12,
        log16);
    long long18 = inMemoryConsensusTransactionLog12.prvid();
    org.junit.Assert.assertNull(consensusLogEntry4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1536L + "'", long14 == 1536L);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1536L + "'", long15 == 1536L);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1536L + "'", long18 == 1536L);
  }

  @Test
  public void test1654() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1654");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.ContentTypeRef contentTypeRef0 = new io.github.onograph.cluster.raft.akkamsg.serialization.ContentTypeRef();
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType messageDataType1 = io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType.DUPD_MD;
    contentTypeRef0.exeForE(messageDataType1);
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataDataManagerFactoryDecodingService syncableDataDataManagerFactoryDecodingService3 = new io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataDataManagerFactoryDecodingService(
        (io.github.onograph.cluster.raft.module.cuprot.Ref<io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType>) contentTypeRef0);
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataDataManagerFactoryDecodingService syncableDataDataManagerFactoryDecodingService4 = new io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataDataManagerFactoryDecodingService(
        (io.github.onograph.cluster.raft.module.cuprot.Ref<io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType>) contentTypeRef0);
    io.netty.channel.ChannelHandlerContext channelHandlerContext5 = null;
    try {
      syncableDataDataManagerFactoryDecodingService4.channelWritabilityChanged(
          channelHandlerContext5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + messageDataType1 + "' != '"
            + io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType.DUPD_MD + "'",
        messageDataType1.equals(
            io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType.DUPD_MD));
  }

  @Test
  public void test1655() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1655");
    }
    io.github.onograph.cluster.raft.module.cuprot.current.info.MetaMessageToByteEncoder metaMessageToByteEncoder0 = new io.github.onograph.cluster.raft.module.cuprot.current.info.MetaMessageToByteEncoder();
    io.netty.channel.ChannelHandlerContext channelHandlerContext1 = null;
    org.neo4j.kernel.KernelVersion kernelVersion2 = null;
    org.neo4j.storageengine.api.StoreId storeId3 = null;
    org.neo4j.kernel.impl.transaction.CommittedTransactionRepresentation committedTransactionRepresentation4 = null;
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupOutgoingTransactionPullReply catchupOutgoingTransactionPullReply5 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupOutgoingTransactionPullReply(
        kernelVersion2, storeId3, committedTransactionRepresentation4);
    io.github.onograph.cluster.raft.share.calg.scholder.ScHolderBuilder scHolderBuilder6 = new io.github.onograph.cluster.raft.share.calg.scholder.ScHolderBuilder();
    boolean boolean7 = catchupOutgoingTransactionPullReply5.equals(
        (java.lang.Object) scHolderBuilder6);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta exitMeta8 = io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta.CONDI_EXIT_META;
    boolean boolean9 = catchupOutgoingTransactionPullReply5.equals((java.lang.Object) exitMeta8);
    org.neo4j.configuration.helpers.SocketAddress socketAddress10 = null;
    org.neo4j.dbms.identity.ServerId serverId11 = null;
    java.lang.String[] strArray18 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet19 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray18);
    io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta loadBalanceServerMeta20 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta(
        socketAddress10, serverId11, nodeGroupIdentifierSet19);
    boolean boolean21 = catchupOutgoingTransactionPullReply5.equals(
        (java.lang.Object) nodeGroupIdentifierSet19);
    io.netty.channel.ChannelPromise channelPromise22 = null;
    try {
      metaMessageToByteEncoder0.write(channelHandlerContext1,
          (java.lang.Object) nodeGroupIdentifierSet19, channelPromise22);
      org.junit.Assert.fail(
          "Expected exception of type io.netty.handler.codec.EncoderException; message: java.lang.NullPointerException");
    } catch (io.netty.handler.codec.EncoderException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(exitMeta8);
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(strArray18);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet19);
    //org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
  }

  @Test
  public void test1656() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1656");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.ConsensusGdbServerCoordinatorSerializer consensusGdbServerCoordinatorSerializer0 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.ConsensusGdbServerCoordinatorSerializer();
    int int1 = consensusGdbServerCoordinatorSerializer0.identifier();
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply.SetupGdbStoreSyncReplyByteToMessageDecoder setupGdbStoreSyncReplyByteToMessageDecoder2 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply.SetupGdbStoreSyncReplyByteToMessageDecoder();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestSnapshotByteToMessageDecoder requestSnapshotByteToMessageDecoder3 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestSnapshotByteToMessageDecoder();
    io.netty.handler.codec.ByteToMessageDecoder.Cumulator cumulator4 = io.netty.handler.codec.ByteToMessageDecoder.MERGE_CUMULATOR;
    requestSnapshotByteToMessageDecoder3.setCumulator(cumulator4);
    setupGdbStoreSyncReplyByteToMessageDecoder2.setCumulator(cumulator4);
    boolean boolean7 = setupGdbStoreSyncReplyByteToMessageDecoder2.isSingleDecode();
    try {
      byte[] byteArray8 = consensusGdbServerCoordinatorSerializer0.toBinary(
          (java.lang.Object) boolean7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.ClassCastException; message: class java.lang.Boolean cannot be cast to class io.github.onograph.cluster.raft.module.dprot.ConsensusGdbServerCoordinator (java.lang.Boolean is in module java.base of loader 'bootstrap'; io.github.onograph.cluster.raft.module.dprot.ConsensusGdbServerCoordinator is in unnamed module of loader 'app')");
    } catch (java.lang.ClassCastException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1016 + "'", int1 == 1016);
    org.junit.Assert.assertNotNull(cumulator4);
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1657() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1657");
    }
    org.neo4j.graphdb.config.Setting<java.time.Duration> durationSetting0 = io.github.onograph.config.SettingsDeclarationClusterSystemImpl.settingAkotitDuration;
    org.junit.Assert.assertNotNull(durationSetting0);
  }

  @Test
  public void test1658() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1658");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    org.neo4j.logging.LogProvider logProvider3 = null;
    java.nio.file.Path path4 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo5 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path4);
    java.nio.file.Path path6 = clusterMetaTopologyInfo5.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker7 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo5);
    org.neo4j.memory.MemoryTracker memoryTracker8 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade9 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config1, fileSystemAbstraction2, logProvider3, clusterMetaTopologyInfo5, memoryTracker8);
    org.neo4j.logging.Log log10 = null;
    java.nio.file.Path path11 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo12 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path11);
    java.nio.file.Path path13 = clusterMetaTopologyInfo12.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker14 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo12);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat15 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv16 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction0, clusterSimpleStorageFacade9, log10, clusterMetaTopologyInfo12,
        clusterMetaFormat15);
    java.util.function.Function<org.neo4j.kernel.database.NamedDatabaseId, io.github.onograph.cluster.raft.share.calg.LeaderNodeEventHandlers> namedDatabaseIdFunction17 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule18 = null;
    org.neo4j.memory.MemoryTracker memoryTracker19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade21 = null;
    org.neo4j.logging.Log log22 = null;
    java.nio.file.Path path23 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo24 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path23);
    java.nio.file.Path path25 = clusterMetaTopologyInfo24.getPscPath();
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat26 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction20, clusterSimpleStorageFacade21, log22, clusterMetaTopologyInfo24,
        clusterMetaFormat26);
    org.neo4j.logging.Log log28 = upgradeMetaEnv27.getLog();
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo29 = upgradeMetaEnv27.getLscClusterMetaTopologyInfo();
    io.github.onograph.config.NodeGroupIdentifierSetSupplier nodeGroupIdentifierSetSupplier30 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.LeaderGatekeeper leaderGatekeeper31 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder consensusNodeGroupWrapperBuilder32 = new io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder(
        clusterSimpleStorageFacade9, namedDatabaseIdFunction17, globalModule18, memoryTracker19,
        clusterMetaTopologyInfo29, nodeGroupIdentifierSetSupplier30, leaderGatekeeper31);
    org.neo4j.logging.internal.DatabaseLogProvider databaseLogProvider33 = null;
    org.neo4j.kernel.lifecycle.LifeSupport lifeSupport35 = null;
    try {
      org.neo4j.io.state.StateStorage<java.lang.Long> longStateStorage36 = clusterSimpleStorageFacade9.crelfesrStateStorage(
          databaseLogProvider33, "PropertyKey", lifeSupport35);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo5);
    org.junit.Assert.assertNull(path6);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo12);
    org.junit.Assert.assertNull(path13);
    org.junit.Assert.assertNotNull(clusterMetaFormat15);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo24);
    org.junit.Assert.assertNull(path25);
    org.junit.Assert.assertNull(log28);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo29);
  }

  @Test
  public void test1659() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1659");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.DiscoveryGdbOperatorMetaWrapperSafeChannelMarshal discoveryGdbOperatorMetaWrapperSafeChannelMarshal0 = io.github.onograph.cluster.raft.module.dprot.impl.serialize.DiscoveryGdbOperatorMetaWrapperSafeChannelMarshal.IT;
    org.neo4j.io.fs.ReadableChannel readableChannel1 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl2 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel1);
    try {
      io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper discoveryGdbOperatorMetaWrapper3 = discoveryGdbOperatorMetaWrapperSafeChannelMarshal0.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(discoveryGdbOperatorMetaWrapperSafeChannelMarshal0);
  }

  @Test
  public void test1660() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1660");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.io.pagecache.PageCache pageCache1 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResources storeResources2 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResources(
        fileSystemAbstraction0, pageCache1);
    org.neo4j.io.layout.DatabaseLayout databaseLayout3 = null;
    org.neo4j.kernel.impl.transaction.log.files.LogFiles logFiles4 = null;
    try {
      storeResources2.deeForLo(databaseLayout3, logFiles4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1661() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1661");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry akkaActorSystemRetry1 = io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.fottAkkaActorSystemRetry(
        128);
    boolean boolean2 = akkaActorSystemRetry1.getIsHaty();
    org.junit.Assert.assertNotNull(akkaActorSystemRetry1);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
  }

  @Test
  public void test1662() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1662");
    }
    org.neo4j.kernel.database.Database database0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    io.github.onograph.cluster.raft.module.cuprot.ServerRef serverRef2 = new io.github.onograph.cluster.raft.module.cuprot.ServerRef();
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResourceSyncProcessor storeResourceSyncProcessor4 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResourceSyncProcessor(
        3);
    try {
      io.github.onograph.cluster.raft.module.cuprot.scmeta.RequestStoreResourceInboundHandler requestStoreResourceInboundHandler5 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.RequestStoreResourceInboundHandler(
          database0, fileSystemAbstraction1, serverRef2, storeResourceSyncProcessor4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1663() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1663");
    }
    akka.actor.ActorRef actorRef0 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.RemoveReadReplicaNode removeReadReplicaNode1 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.RemoveReadReplicaNode(
        actorRef0);
    akka.actor.ActorRef actorRef2 = removeReadReplicaNode1.getMccActorRef();
    io.github.onograph.cluster.raft.module.cuprot.AskMessageType askMessageType3 = io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_ALL_GDB_GUID_ASK;
    boolean boolean4 = removeReadReplicaNode1.equals((java.lang.Object) askMessageType3);
    org.junit.Assert.assertNull(actorRef2);
    org.junit.Assert.assertTrue("'" + askMessageType3 + "' != '"
            + io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_ALL_GDB_GUID_ASK + "'",
        askMessageType3.equals(
            io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_ALL_GDB_GUID_ASK));
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1664() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1664");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo0 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType1 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer2 = applicationComProFamilyType1.getImpl();
    boolean boolean3 = viewClusterInfo0.equals((java.lang.Object) entProVer2);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType4 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer5 = applicationComProFamilyType4.getImpl();
    int int6 = entProVer2.compareTo(entProVer5);
    io.github.onograph.cluster.raft.share.sync.SyncStatus syncStatus7 = new io.github.onograph.cluster.raft.share.sync.SyncStatus();
    boolean boolean8 = entProVer2.equals((java.lang.Object) syncStatus7);
    io.github.onograph.cluster.raft.control.AppComProFamilyGroupType appComProFamilyGroupType9 = io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo10 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType11 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer12 = applicationComProFamilyType11.getImpl();
    boolean boolean13 = viewClusterInfo10.equals((java.lang.Object) entProVer12);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType14 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer15 = applicationComProFamilyType14.getImpl();
    int int16 = entProVer12.compareTo(entProVer15);
    java.util.Optional<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyOptional17 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.finOptional(
        appComProFamilyGroupType9, entProVer15);
    int int18 = entProVer2.compareTo(entProVer15);
    org.junit.Assert.assertNotNull(viewClusterInfo0);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType1 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType1.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer2);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType4 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType4.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + appComProFamilyGroupType9 + "' != '"
            + io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL + "'",
        appComProFamilyGroupType9.equals(
            io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL));
    org.junit.Assert.assertNotNull(viewClusterInfo10);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType11 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType11.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer12);
    //org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType14 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType14.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer15);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    org.junit.Assert.assertNotNull(applicationComProFamilyOptional17);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
  }

  @Test
  public void test1665() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1665");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap1 = null;
    io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta readReplicateGdbMeta2 = io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta.ofcosReadReplicateGdbMeta(
        databaseId0, serverIdMap1);
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap3 = readReplicateGdbMeta2.getMapMssd();
    org.neo4j.kernel.database.DatabaseId databaseId4 = readReplicateGdbMeta2.getDatabaseId();
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap5 = readReplicateGdbMeta2.getMapMssd();
    org.junit.Assert.assertNotNull(readReplicateGdbMeta2);
    org.junit.Assert.assertNull(serverIdMap3);
    org.junit.Assert.assertNull(databaseId4);
    org.junit.Assert.assertNull(serverIdMap5);
  }

  @Test
  public void test1666() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1666");
    }
    io.github.onograph.cluster.raft.netty.NettyKQueueSettings<io.netty.channel.kqueue.KQueueServerSocketChannel> kQueueServerSocketChannelNettyKQueueSettings0 = io.github.onograph.cluster.raft.netty.NettyKQueueSettings.kqesecfNettyKQueueSettings();
    java.util.concurrent.Executor executor1 = null;
    io.netty.channel.EventLoopGroup eventLoopGroup2 = kQueueServerSocketChannelNettyKQueueSettings0.evnloguEventLoopGroup(
        executor1);
    io.github.onograph.cluster.raft.netty.NettyKQueueSettings<io.netty.channel.kqueue.KQueueServerSocketChannel> kQueueServerSocketChannelNettyKQueueSettings3 = io.github.onograph.cluster.raft.netty.NettyKQueueSettings.kqesecfNettyKQueueSettings();
    java.util.concurrent.Executor executor4 = null;
    io.netty.channel.EventLoopGroup eventLoopGroup5 = kQueueServerSocketChannelNettyKQueueSettings3.evnloguEventLoopGroup(
        executor4);
    io.netty.channel.EventLoopGroup eventLoopGroup6 = kQueueServerSocketChannelNettyKQueueSettings0.evnloguEventLoopGroup(
        (java.util.concurrent.Executor) eventLoopGroup5);
    org.junit.Assert.assertNotNull(kQueueServerSocketChannelNettyKQueueSettings0);
    org.junit.Assert.assertNotNull(eventLoopGroup2);
    org.junit.Assert.assertNotNull(kQueueServerSocketChannelNettyKQueueSettings3);
    org.junit.Assert.assertNotNull(eventLoopGroup5);
    org.junit.Assert.assertNotNull(eventLoopGroup6);
  }

  @Test
  public void test1667() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1667");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap1 = null;
    io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta readReplicateGdbMeta2 = io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta.ofcosReadReplicateGdbMeta(
        databaseId0, serverIdMap1);
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap3 = readReplicateGdbMeta2.getMapMssd();
    org.neo4j.kernel.database.DatabaseId databaseId4 = readReplicateGdbMeta2.getDatabaseId();
    org.neo4j.dbms.identity.ServerId serverId5 = null;
    try {
      java.util.Optional<io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> discoveryGdbOperatorMetaWrapperOptional6 = readReplicateGdbMeta2.sttfoOptional(
          serverId5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(readReplicateGdbMeta2);
    org.junit.Assert.assertNull(serverIdMap3);
    org.junit.Assert.assertNull(databaseId4);
  }

  @Test
  public void test1668() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1668");
    }
    java.lang.Runnable runnable0 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage1 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl2 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable0, leasableMetaStateStorage1);
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta leasableMeta3 = io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta.INTL_LES_STAX;
    syncableLeasableCoreNodeDataFSMImpl2.inlspForLe(leasableMeta3);
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta leasableMeta5 = syncableLeasableCoreNodeDataFSMImpl2.snpoLeasableMeta();
    long long6 = syncableLeasableCoreNodeDataFSMImpl2.laapdix();
    org.junit.Assert.assertNotNull(leasableMeta3);
    org.junit.Assert.assertNotNull(leasableMeta5);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
  }

  @Test
  public void test1669() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1669");
    }
    org.neo4j.io.fs.WritableChannel writableChannel0 = null;
    io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl writableChecksumChannelImpl1 = new io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl(
        writableChannel0);
    int int2 = writableChecksumChannelImpl1.putChecksum();
    try {
      org.neo4j.io.fs.WritableChecksumChannel writableChecksumChannel4 = writableChecksumChannelImpl1.put(
          (byte) 100);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
  }

  @Test
  public void test1670() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1670");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.ConsensusGdbServerCoordinatorSafeChannelMarshal consensusGdbServerCoordinatorSafeChannelMarshal0 = io.github.onograph.cluster.raft.module.dprot.impl.serialize.ConsensusGdbServerCoordinatorSafeChannelMarshal.IT;
    org.junit.Assert.assertNotNull(consensusGdbServerCoordinatorSafeChannelMarshal0);
  }

  @Test
  public void test1671() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1671");
    }
    byte[] byteArray1 = new byte[]{(byte) 9};
    org.neo4j.kernel.database.DatabaseId databaseId2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType4 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData5 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray1, databaseId2, "name", replicaTokenType4);
    org.neo4j.kernel.database.DatabaseId databaseId6 = requestData5.daasidDatabaseId();
    org.neo4j.kernel.database.DatabaseId databaseId7 = requestData5.daasidDatabaseId();
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[9]");
    org.junit.Assert.assertNull(databaseId6);
    org.junit.Assert.assertNull(databaseId7);
  }

  @Test
  public void test1672() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1672");
    }
    java.time.Duration duration0 = null;
    org.neo4j.dbms.database.DatabaseManager<io.github.onograph.dbms.gdb.EnterpriseClusterDbContext> enterpriseClusterDbContextDatabaseManager1 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy2 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService4 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.cluster.raft.akkamsg.OutDirection<io.github.onograph.cluster.raft.id.ConsensusNodeId, io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AbstractConsensusMessage> consensusNodeIdOutDirection8 = null;
    org.neo4j.internal.helpers.TimeoutStrategy timeoutStrategy9 = null;
    io.github.onograph.cluster.raft.share.sync.SubCSManager subCSManager10 = null;
    java.util.UUID uUID11 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy12 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean13 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID11, consensusNodeIdLazy12);
    io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl syncStatusMetaServiceImpl14 = new io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl(
        clusterSessionBean13);
    try {
      io.github.onograph.cluster.raft.share.sync.ConsensusSynceratorImpl consensusSynceratorImpl15 = new io.github.onograph.cluster.raft.share.sync.ConsensusSynceratorImpl(
          duration0, enterpriseClusterDbContextDatabaseManager1, consensusNodeIdLazy2, (long) 2,
          consensusLeaderNodeService4, logProvider5, monitors6, namedDatabaseId7,
          consensusNodeIdOutDirection8, timeoutStrategy9, subCSManager10,
          (io.github.onograph.cluster.raft.share.sync.SyncStatusMetaService) syncStatusMetaServiceImpl14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1673() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1673");
    }
    io.github.onograph.cluster.raft.share.sync.ReplicationSessionManagerMeta.MarshalChannelImplCMS marshalChannelImplCMS0 = io.github.onograph.cluster.raft.share.sync.ReplicationSessionManagerMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.sync.ReplicationSessionManagerMeta replicationSessionManagerMeta1 = new io.github.onograph.cluster.raft.share.sync.ReplicationSessionManagerMeta();
    io.github.onograph.cluster.raft.share.sync.ReplicationSessionManagerMeta replicationSessionManagerMeta2 = replicationSessionManagerMeta1.neitcReplicationSessionManagerMeta();
    org.neo4j.io.fs.WritableChannel writableChannel3 = null;
    io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl writableChecksumChannelImpl4 = new io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl(
        writableChannel3);
    writableChecksumChannelImpl4.beginChecksum();
    try {
      marshalChannelImplCMS0.marshal(replicationSessionManagerMeta1,
          (org.neo4j.io.fs.WritableChannel) writableChecksumChannelImpl4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(marshalChannelImplCMS0);
    org.junit.Assert.assertNotNull(replicationSessionManagerMeta2);
  }

  @Test
  public void test1674() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1674");
    }
    akka.cluster.Cluster cluster0 = null;
    akka.event.EventStream eventStream1 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.StartScheduler startScheduler2 = null;
    akka.cluster.Cluster cluster3 = null;
    akka.event.EventStream eventStream4 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.StartScheduler startScheduler5 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartAllConds restartAllConds6 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartAllConds();
    akka.actor.Props props7 = io.github.onograph.cluster.raft.module.dprot.impl.structure.RestartMonitoringActor.prpProps(
        cluster3, eventStream4, startScheduler5,
        (io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach) restartAllConds6);
    akka.actor.Props props8 = io.github.onograph.cluster.raft.module.dprot.impl.structure.RestartMonitoringActor.prpProps(
        cluster0, eventStream1, startScheduler2,
        (io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach) restartAllConds6);
    org.junit.Assert.assertNotNull(props7);
    org.junit.Assert.assertNotNull(props8);
  }

  @Test
  public void test1675() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1675");
    }
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl2 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel0, safeStateMarshalImpl1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk3 = null;
    java.lang.Void void4 = processorImpl2.process(bulkAsk3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk5 = null;
    java.lang.Void void6 = processorImpl2.process(bulkAsk5);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId7 = null;
    java.util.UUID uUID8 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.State state9 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.InfoReplyMessage infoReplyMessage10 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.InfoReplyMessage(
        consensusNodeId7, uUID8, state9);
    io.github.onograph.cluster.raft.share.meta.fsm.State state11 = infoReplyMessage10.getStat();
    io.netty.buffer.ByteBuf byteBuf12 = null;
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel13 = new io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel(
        byteBuf12);
    boolean boolean14 = infoReplyMessage10.equals((java.lang.Object) byteBuf12);
    try {
      java.lang.Void void15 = processorImpl2.process(infoReplyMessage10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(void4);
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(state11);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1676() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1676");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryManagerAkkaImpl clusterDiscoveryManagerAkkaImpl0 = new io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryManagerAkkaImpl();
    java.time.Clock clock1 = null;
    org.neo4j.configuration.Config config2 = null;
    org.neo4j.dbms.DatabaseStateService databaseStateService3 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler4 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    org.neo4j.configuration.helpers.SocketAddress[] socketAddressArray6 = new org.neo4j.configuration.helpers.SocketAddress[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress> socketAddressList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList7,
        socketAddressArray6);
    io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService9 = io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddressManagerDefaultImpl.reoeMemberNodeService(
        (java.util.List<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList7);
    boolean boolean10 = memberNodeService9.isRevoevjoat();
    boolean boolean11 = memberNodeService9.isUsord();
    io.github.onograph.cluster.raft.module.dprot.impl.stack.ClusterJoinOrganizer clusterJoinOrganizer12 = new io.github.onograph.cluster.raft.module.dprot.impl.stack.ClusterJoinOrganizer(
        memberNodeService9);
    io.github.onograph.cluster.raft.module.dprot.pit.PointInTimeBackupService pointInTimeBackupService13 = null;
    org.neo4j.dbms.identity.ServerIdentity serverIdentity14 = null;
    org.neo4j.ssl.config.SslPolicyLoader sslPolicyLoader15 = null;
    try {
      io.github.onograph.cluster.raft.module.dprot.impl.AkkaClusterStructureClient akkaClusterStructureClient16 = clusterDiscoveryManagerAkkaImpl0.rereatlseeClusterStructureService(
          clock1, config2, databaseStateService3, jobScheduler4, logProvider5, memberNodeService9,
          pointInTimeBackupService13, serverIdentity14, sslPolicyLoader15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(socketAddressArray6);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(memberNodeService9);
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    //org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
  }

  @Test
  public void test1677() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1677");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    org.neo4j.token.TokenRegistry tokenRegistry1 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator2 = null;
    org.neo4j.internal.id.IdGeneratorFactory idGeneratorFactory3 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.StorageEngine> storageEngineSupplier4 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer5 = null;
    org.neo4j.configuration.helpers.DatabaseReadOnlyChecker databaseReadOnlyChecker6 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.LabelTokenHolder labelTokenHolder7 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.LabelTokenHolder(
        namedDatabaseId0, tokenRegistry1, syncerator2, idGeneratorFactory3, storageEngineSupplier4,
        pageCacheTracer5, databaseReadOnlyChecker6);
    try {
      java.lang.String str8 = labelTokenHolder7.getTokenType();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1678() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1678");
    }
    org.neo4j.io.fs.WritableChannel writableChannel0 = null;
    io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl writableChecksumChannelImpl1 = new io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl(
        writableChannel0);
    writableChecksumChannelImpl1.beginChecksum();
    try {
      org.neo4j.io.fs.WritableChecksumChannel writableChecksumChannel4 = writableChecksumChannelImpl1.put(
          (byte) 6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1679() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1679");
    }
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier1 = new io.github.onograph.config.NodeGroupIdentifier(
        "hi!");
    java.util.stream.IntStream intStream2 = nodeGroupIdentifier1.chars();
    java.util.stream.IntStream intStream3 = nodeGroupIdentifier1.codePoints();
    org.junit.Assert.assertNotNull(intStream2);
    org.junit.Assert.assertNotNull(intStream3);
  }

  @Test
  public void test1680() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1680");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.NoRestartFailure noRestartFailure0 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.NoRestartFailure();
    akka.cluster.Cluster cluster1 = null;
    boolean boolean2 = noRestartFailure0.isRerruForCl(cluster1);
    akka.cluster.Cluster cluster3 = null;
    boolean boolean4 = noRestartFailure0.isRerruForCl(cluster3);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1681() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1681");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl0 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry1 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry1, (long) '#');
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry4, 52L);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry8 = consensusLogCacheServiceNoopImpl0.getConsensusLogEntry(
        (long) 'a');
    int int9 = consensusLogCacheServiceNoopImpl0.elmtcu();
    consensusLogCacheServiceNoopImpl0.trnt((long) (byte) 10);
    org.junit.Assert.assertNull(consensusLogEntry8);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
  }

  @Test
  public void test1682() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1682");
    }
    io.github.onograph.cluster.raft.palapp.strategies.DefaultNamedServiceClusterApproach defaultNamedServiceClusterApproach0 = new io.github.onograph.cluster.raft.palapp.strategies.DefaultNamedServiceClusterApproach();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    try {
      java.util.Optional<org.neo4j.dbms.identity.ServerId> serverIdOptional2 = defaultNamedServiceClusterApproach0.upesrfodaOptional(
          namedDatabaseId1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1683() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1683");
    }
    org.neo4j.logging.LogProvider logProvider0 = null;
    io.github.onograph.cluster.raft.share.calg.cle.parts.PartClipperServiceFactory partClipperServiceFactory2 = new io.github.onograph.cluster.raft.share.calg.cle.parts.PartClipperServiceFactory(
        logProvider0, "store_version");
  }

  @Test
  public void test1684() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1684");
    }
    try {
      io.github.onograph.config.EntProVer entProVer1 = io.github.onograph.config.EntProVer.pasEntProVer(
          "RequestGdbId for ");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error: 9007ff7a-ea55-4f7d-a51e-b1aa0249e2fd");
    } catch (java.lang.IllegalArgumentException e) {
    }
  }

  @Test
  public void test1685() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1685");
    }
    java.util.ArrayList<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>> strPairList0 = new java.util.ArrayList<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>();
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo2 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType3 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer4 = applicationComProFamilyType3.getImpl();
    boolean boolean5 = viewClusterInfo2.equals((java.lang.Object) entProVer4);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType6 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer7 = applicationComProFamilyType6.getImpl();
    int int8 = entProVer4.compareTo(entProVer7);
    io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl changeComProRequestImpl9 = new io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl(
        (java.util.List<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>) strPairList0,
        "", entProVer7);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType11 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer12 = applicationComProFamilyType11.getImpl();
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType13 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer14 = applicationComProFamilyType13.getImpl();
    int int15 = entProVer12.compareTo(entProVer14);
    io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl changeComProRequestImpl16 = new io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl(
        (java.util.List<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>) strPairList0,
        "Snappy", entProVer14);
    io.github.onograph.config.EntProVer entProVer17 = changeComProRequestImpl16.getVrinEntProVer();
    org.junit.Assert.assertNotNull(viewClusterInfo2);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType3 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType3.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer4);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType6 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType6.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer7);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType11 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType11.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer12);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType13 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType13.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer14);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    org.junit.Assert.assertNotNull(entProVer17);
  }

  @Test
  public void test1686() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1686");
    }
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS0 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta1 = marshalChannelImplCMS0.startState();
    org.neo4j.configuration.helpers.SocketAddress socketAddress2 = null;
    org.neo4j.dbms.identity.ServerId serverId3 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId4 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId5 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier6 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray7 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier6};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet8 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet8,
        nodeGroupIdentifierArray7);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec10 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId4, consensusNodeId5,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet8);
    io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta loadBalanceServerMeta11 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta(
        socketAddress2, serverId3,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet8);
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager12 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    readablePositionAwareChecksumChannelManager12.beginChecksum();
    boolean boolean14 = loadBalanceServerMeta11.equals(
        (java.lang.Object) readablePositionAwareChecksumChannelManager12);
    try {
      io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta15 = marshalChannelImplCMS0.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error:  337d71e4-16ab-4986-b3d7-7e231af9f8ee");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(marshalChannelImplCMS0);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta1);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier6);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray7);
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1687() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1687");
    }
    java.lang.String[] strArray25 = new java.lang.String[]{
        "causal_clustering.leadership_priority_group", "default", "user-defined",
        "cc-discovery-actor-system", "overview", "default", "RequestGdbId for ", "temp-copy",
        "name", "leader-only", "cc-database-status-actor", "storage_engine", "designated_seeder",
        "temp-copy", "server_policies", "joiner", "server_policies", "cc-directory-actor", "Snappy",
        "Label", "temp-save", "cc-core-restart-needed-listener-timer", "restarting-cluster-client",
        "store_version", "type_comp"};
    java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
    boolean boolean27 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList26, strArray25);
    java.lang.String[] strArray56 = new java.lang.String[]{
        "causal_clustering.load_balancing.config.server_policies", "type_comp",
        "causal_clustering.load_balancing.config.server_policies",
        "causal_clustering.load_balancing.config.server_policies", "store_version",
        "causal_clustering.leadership_priority_group",
        "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartRules1. Running every PT10S",
        "initial_members", "status", "storage_engine", "user-defined", "RequestGdbId for ",
        "type_comp", "leader-only", "user-defined",
        "io.github.onograph.dbms.ClusterDatabaseManagementException: store_version",
        "catchup_protocol", "designated_seeder", "cc-core-restart-needed-listener-timer",
        "cc-discovery-actor-system", "user-defined", "restarting-cluster-client",
        "cc-database-status-actor",
        "io.github.onograph.dbms.ClusterDatabaseManagementException: store_version", "uuid", "uuid",
        "leader-only", "type_comp"};
    java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
    boolean boolean58 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList57, strArray56);
    io.github.onograph.cluster.raft.module.cuprot.current.core.GdbAuthActions gdbAuthActions59 = new io.github.onograph.cluster.raft.module.cuprot.current.core.GdbAuthActions(
        (java.util.List<java.lang.String>) strList26, (java.util.List<java.lang.String>) strList57);
    java.util.List<java.lang.String> strList60 = gdbAuthActions59.listUsrstString;
    java.util.List<java.lang.String> strList61 = gdbAuthActions59.listUsrstString;
    java.util.List<java.lang.String> strList62 = gdbAuthActions59.gecmdList();
    org.junit.Assert.assertNotNull(strArray25);
    //org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(strArray56);
    //org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    org.junit.Assert.assertNotNull(strList60);
    org.junit.Assert.assertNotNull(strList61);
    org.junit.Assert.assertNotNull(strList62);
  }

  @Test
  public void test1688() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1688");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler0 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler1 = null;
    org.neo4j.logging.Log log2 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler3 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler4 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl5 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler6 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler4, refCatchupManagerImpl5);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler7 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler3, refCatchupManagerImpl5);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler sliceMetaSimpleChannelInboundHandler8 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler(
        catchupAnswerLimitHandler1, log2, refCatchupManagerImpl5);
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler9 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler10 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl11 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler12 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler10, refCatchupManagerImpl11);
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedInboundHandler transactionChunkingCompletedInboundHandler13 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedInboundHandler(
        catchupAnswerLimitHandler9, refCatchupManagerImpl11);
    boolean boolean14 = sliceMetaSimpleChannelInboundHandler8.acceptInboundMessage(
        (java.lang.Object) refCatchupManagerImpl11);
    io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler allGdbIdsInboundHandler15 = new io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler(
        catchupAnswerLimitHandler0, refCatchupManagerImpl11);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1689() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1689");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler0 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler1 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler2 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl3 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler4 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler2, refCatchupManagerImpl3);
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedInboundHandler transactionChunkingCompletedInboundHandler5 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedInboundHandler(
        catchupAnswerLimitHandler1, refCatchupManagerImpl3);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreDatabaseIdInboundHandler storeDatabaseIdInboundHandler6 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreDatabaseIdInboundHandler(
        catchupAnswerLimitHandler0, refCatchupManagerImpl3);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId7 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg8 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg(
        consensusNodeId7);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel9 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl10 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl11 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel9, safeStateMarshalImpl10);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk12 = null;
    java.lang.Void void13 = processorImpl11.process(bulkAsk12);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage14 = null;
    java.lang.Void void15 = processorImpl11.process(logClipRequestMessage14);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage16 = null;
    java.lang.Void void17 = processorImpl11.process(aliveReplyMessage16);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId18 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId19 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier20 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray21 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier20};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet22 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean23 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet22,
        nodeGroupIdentifierArray21);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec24 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId18, consensusNodeId19,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet22);
    java.lang.Void void25 = processorImpl11.process(leaderRec24);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage26 = null;
    java.lang.Void void27 = processorImpl11.process(aliveReplyMessage26);
    java.lang.Void void28 = aliveMsg8.dipc(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception>) processorImpl11);
    boolean boolean29 = storeDatabaseIdInboundHandler6.acceptInboundMessage(
        (java.lang.Object) processorImpl11);
    io.github.onograph.cluster.raft.share.meta.cm.ClusterSyncerException clusterSyncerException30 = new io.github.onograph.cluster.raft.share.meta.cm.ClusterSyncerException();
    io.github.onograph.cluster.raft.share.sync.SyncMeta syncMeta31 = io.github.onograph.cluster.raft.share.sync.SyncMeta.norladSyncMeta(
        (java.lang.Throwable) clusterSyncerException30);
    io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure startFailure32 = new io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure(
        (java.lang.Throwable) clusterSyncerException30);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry36 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray37 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry36};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction38 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray37);
    io.github.onograph.cluster.raft.share.calg.cle.parts.TransactionLogKernelException transactionLogKernelException39 = new io.github.onograph.cluster.raft.share.calg.cle.parts.TransactionLogKernelException(
        (java.lang.Throwable) startFailure32, "typically-connect-to-random-read-replica",
        (java.lang.Object[]) consensusLogEntryArray37);
    boolean boolean40 = storeDatabaseIdInboundHandler6.acceptInboundMessage(
        (java.lang.Object) startFailure32);
    org.junit.Assert.assertNull(void13);
    org.junit.Assert.assertNull(void15);
    org.junit.Assert.assertNull(void17);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier20);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray21);
    //org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNull(void25);
    org.junit.Assert.assertNull(void27);
    org.junit.Assert.assertNull(void28);
    //org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertNotNull(syncMeta31);
    org.junit.Assert.assertNotNull(consensusLogEntryArray37);
    //org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
  }

  @Test
  public void test1690() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1690");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.ConsensusMessageToMessageDecoder consensusMessageToMessageDecoder1 = new io.github.onograph.cluster.raft.akkamsg.serialization.ConsensusMessageToMessageDecoder(
        clock0);
    akka.actor.ActorRef[] actorRefArray2 = new akka.actor.ActorRef[]{};
    java.util.LinkedHashSet<akka.actor.ActorRef> actorRefSet3 = new java.util.LinkedHashSet<akka.actor.ActorRef>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<akka.actor.ActorRef>) actorRefSet3, actorRefArray2);
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ShowClusterActorStructureMeta showClusterActorStructureMeta5 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ShowClusterActorStructureMeta(
        (java.util.Set<akka.actor.ActorRef>) actorRefSet3);
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ShowClusterActorStructureMeta showClusterActorStructureMeta6 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ShowClusterActorStructureMeta(
        (java.util.Set<akka.actor.ActorRef>) actorRefSet3);
    boolean boolean7 = consensusMessageToMessageDecoder1.acceptInboundMessage(
        (java.lang.Object) actorRefSet3);
    io.netty.channel.ChannelHandlerContext channelHandlerContext8 = null;
    akka.actor.ExtendedActorSystem extendedActorSystem9 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.stack.JoinClusterRemoteInstrument joinClusterRemoteInstrument10 = new io.github.onograph.cluster.raft.module.dprot.impl.stack.JoinClusterRemoteInstrument(
        extendedActorSystem9);
    byte byte11 = joinClusterRemoteInstrument10.identifier();
    akka.actor.ActorRef actorRef12 = null;
    org.neo4j.graphdb.config.Setting<java.util.List<io.github.onograph.config.NodeGroupIdentifier>> nodeGroupIdentifierListSetting13 = io.github.onograph.config.SettingsDeclarationClusterImpl.settingCocdtvoryList;
    akka.actor.ActorRef actorRef14 = null;
    java.nio.ByteBuffer byteBuffer15 = null;
    joinClusterRemoteInstrument10.remoteWriteMetadata(actorRef12,
        (java.lang.Object) nodeGroupIdentifierListSetting13, actorRef14, byteBuffer15);
    akka.actor.ActorRef actorRef17 = null;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType18 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    akka.actor.ActorRef actorRef19 = null;
    java.nio.ByteBuffer byteBuffer20 = null;
    joinClusterRemoteInstrument10.remoteReadMetadata(actorRef17,
        (java.lang.Object) applicationComProFamilyType18, actorRef19, byteBuffer20);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType22 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    java.lang.String str23 = applicationComProFamilyType22.caerString();
    boolean boolean24 = applicationComProFamilyType18.isEq(
        (io.github.onograph.cluster.raft.control.ApplicationComProFamily) applicationComProFamilyType22);
    try {
      consensusMessageToMessageDecoder1.channelRead(channelHandlerContext8,
          (java.lang.Object) boolean24);
      org.junit.Assert.fail(
          "Expected exception of type io.netty.handler.codec.DecoderException; message: java.lang.IllegalStateException: *** Error: d94cbbc4-dc95-456a-ad9a-d59fdcdd9e2b");
    } catch (io.netty.handler.codec.DecoderException e) {
    }
    org.junit.Assert.assertNotNull(actorRefArray2);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 8 + "'", byte11 != (byte) 8);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierListSetting13);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType18 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType18.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType22 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType22.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "catchup_protocol" + "'", str23,
        "catchup_protocol");
    //org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
  }

  @Test
  public void test1691() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1691");
    }
    org.neo4j.logging.LogProvider logProvider0 = null;
    io.github.onograph.cluster.raft.module.cuprot.Ref<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType> setupGdbSyncReplyStateTypeRef1 = null;
    try {
      io.github.onograph.cluster.raft.module.cuprot.MessageRequestChannelInboundHandlerAdapter<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType> setupGdbSyncReplyStateTypeMessageRequestChannelInboundHandlerAdapter2 = new io.github.onograph.cluster.raft.module.cuprot.MessageRequestChannelInboundHandlerAdapter<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType>(
          logProvider0, setupGdbSyncReplyStateTypeRef1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1692() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1692");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartRules1 restartRules1_0 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartRules1();
    akka.cluster.Cluster cluster1 = null;
    boolean boolean2 = restartRules1_0.isRerruForCl(cluster1);
    akka.cluster.Cluster cluster3 = null;
    boolean boolean4 = restartRules1_0.isRerruForCl(cluster3);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 != false);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 != false);
  }

  @Test
  public void test1693() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1693");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormatSafeChannelMarshaler clusterMetaFormatSafeChannelMarshaler0 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormatSafeChannelMarshaler.IT;
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager1 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    readablePositionAwareChecksumChannelManager1.beginChecksum();
    org.neo4j.io.fs.ReadableChannel readableChannel3 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl4 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel3);
    readableClosablePositionAwareChecksumChannelPassThruImpl4.beginChecksum();
    readablePositionAwareChecksumChannelManager1.deettoForRe(
        (org.neo4j.kernel.impl.transaction.log.ReadableClosablePositionAwareChecksumChannel) readableClosablePositionAwareChecksumChannelPassThruImpl4);
    try {
      io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat7 = clusterMetaFormatSafeChannelMarshaler0.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaFormatSafeChannelMarshaler0);
  }

  @Test
  public void test1694() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1694");
    }
    io.github.onograph.cluster.raft.gateway.gwlb.mods.ClusteringBalancerServiceImpl clusteringBalancerServiceImpl0 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.ClusteringBalancerServiceImpl();
    io.github.onograph.cluster.raft.gateway.gwlb.mods.ServerPoliciesPlugin serverPoliciesPlugin1 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.ServerPoliciesPlugin(
        (io.github.onograph.cluster.raft.gateway.gwlb.BalancerService) clusteringBalancerServiceImpl0);
    java.lang.String str2 = clusteringBalancerServiceImpl0.plgneString();
    org.neo4j.graphdb.config.Configuration configuration3 = null;
    org.neo4j.logging.Log log4 = null;
    clusteringBalancerServiceImpl0.vaitForCoLo(configuration3, log4);
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService6 = null;
    io.github.onograph.cluster.raft.gateway.gwlb.ClusterLeader clusterLeader7 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.configuration.Config config9 = null;
    try {
      clusteringBalancerServiceImpl0.iniForClClLoCo(clusterStructureService6, clusterLeader7,
          logProvider8, config9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "server_policies" + "'", str2,
        "server_policies");
  }

  @Test
  public void test1695() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1695");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector connector0 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector();
    connector0.fihrih((long) (byte) 10);
    connector0.fihrih();
    connector0.fihrih((long) 'h');
    connector0.fihrih();
    connector0.fihrfForSt("uuid");
    connector0.strvinsno();
    connector0.fihritan((long) 1536);
  }

  @Test
  public void test1696() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1696");
    }
    io.github.onograph.cluster.raft.control.connect.ClientException clientException1 = new io.github.onograph.cluster.raft.control.connect.ClientException(
        "FollowerStates{}");
    io.github.onograph.cluster.raft.share.sync.SyncMeta syncMeta2 = io.github.onograph.cluster.raft.share.sync.SyncMeta.marcSyncMeta(
        (java.lang.Throwable) clientException1);
    org.junit.Assert.assertNotNull(syncMeta2);
  }

  @Test
  public void test1697() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1697");
    }
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService0 = null;
    io.github.onograph.cluster.raft.watch.DiagnosticsProviderClusterStructureImpl diagnosticsProviderClusterStructureImpl1 = new io.github.onograph.cluster.raft.watch.DiagnosticsProviderClusterStructureImpl(
        clusterStructureService0);
  }

  @Test
  public void test1698() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1698");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap1 = null;
    io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta readReplicateGdbMeta2 = io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta.ofcosReadReplicateGdbMeta(
        databaseId0, serverIdMap1);
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap3 = readReplicateGdbMeta2.getMapMssd();
    boolean boolean4 = readReplicateGdbMeta2.getIsSc();
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap5 = readReplicateGdbMeta2.getMapMssd();
    org.junit.Assert.assertNotNull(readReplicateGdbMeta2);
    org.junit.Assert.assertNull(serverIdMap3);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    org.junit.Assert.assertNull(serverIdMap5);
  }

  @Test
  public void test1699() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1699");
    }
    java.util.UUID uUID0 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy1 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean2 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID0, consensusNodeIdLazy1);
    io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl syncStatusMetaServiceImpl3 = new io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl(
        clusterSessionBean2);
    org.neo4j.kernel.impl.transaction.log.PhysicalTransactionRepresentation physicalTransactionRepresentation4 = null;
    org.neo4j.kernel.database.DatabaseId databaseId5 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.AbstractTransactionSync abstractTransactionSync7 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.AbstractTransactionSync(
        physicalTransactionRepresentation4, databaseId5, (long) (short) 0);
    org.neo4j.kernel.database.DatabaseId databaseId8 = abstractTransactionSync7.daasidDatabaseId();
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl messageProcessorImpl9 = io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl.SUPTL_MESSAGE_PROCESSOR_IMPL;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg10 = null;
    java.lang.Boolean boolean11 = messageProcessorImpl9.process(aliveMsg10);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.VotePreparationMessage.Ask ask12 = null;
    java.lang.Boolean boolean13 = messageProcessorImpl9.process(ask12);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RequestTransactionLogCZMetaMessage requestTransactionLogCZMetaMessage14 = null;
    java.lang.Boolean boolean15 = messageProcessorImpl9.process(
        requestTransactionLogCZMetaMessage14);
    boolean boolean16 = abstractTransactionSync7.equals((java.lang.Object) boolean15);
    io.github.onograph.cluster.raft.share.sync.SessionSeqActionId sessionSeqActionId17 = null;
    java.util.UUID uUID18 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy19 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean20 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID18, consensusNodeIdLazy19);
    io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction dataSyncClusterAction21 = new io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction(
        (io.github.onograph.cluster.raft.share.sync.SyncableData) abstractTransactionSync7,
        sessionSeqActionId17, clusterSessionBean20);
    try {
      io.github.onograph.cluster.raft.share.sync.SyncStatus syncStatus22 = syncStatusMetaServiceImpl3.strSyncStatus(
          dataSyncClusterAction21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseId8);
    org.junit.Assert.assertNotNull(messageProcessorImpl9);
    org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
    org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + true + "'", boolean13, true);
    org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + true + "'", boolean15, true);
    //org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1700() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1700");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseCoreClusterStructureSafeChannelMarshal databaseCoreClusterStructureSafeChannelMarshal0 = io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseCoreClusterStructureSafeChannelMarshal.IT;
    org.neo4j.configuration.helpers.SocketAddress socketAddress1 = null;
    org.neo4j.dbms.identity.ServerId serverId2 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId3 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId4 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier5 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray6 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier5};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet7 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet7,
        nodeGroupIdentifierArray6);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec9 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId3, consensusNodeId4,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet7);
    io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta loadBalanceServerMeta10 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta(
        socketAddress1, serverId2,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet7);
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager11 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    readablePositionAwareChecksumChannelManager11.beginChecksum();
    boolean boolean13 = loadBalanceServerMeta10.equals(
        (java.lang.Object) readablePositionAwareChecksumChannelManager11);
    try {
      io.github.onograph.cluster.raft.module.dprot.DatabaseCoreClusterStructure databaseCoreClusterStructure14 = databaseCoreClusterStructureSafeChannelMarshal0.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error:  337d71e4-16ab-4986-b3d7-7e231af9f8ee");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(databaseCoreClusterStructureSafeChannelMarshal0);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier5);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray6);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    //org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1701() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1701");
    }
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl2 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel0, safeStateMarshalImpl1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk3 = null;
    java.lang.Void void4 = processorImpl2.process(bulkAsk3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage5 = null;
    java.lang.Void void6 = processorImpl2.process(logClipRequestMessage5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage7 = null;
    java.lang.Void void8 = processorImpl2.process(aliveReplyMessage7);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk9 = null;
    java.lang.Void void10 = processorImpl2.process(bulkAsk9);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage11 = null;
    java.lang.Void void12 = processorImpl2.process(logClipRequestMessage11);
    org.junit.Assert.assertNull(void4);
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(void8);
    org.junit.Assert.assertNull(void10);
    org.junit.Assert.assertNull(void12);
  }

  @Test
  public void test1702() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1702");
    }
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedMessageToByteEncoder transactionChunkingCompletedMessageToByteEncoder0 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedMessageToByteEncoder();
    boolean boolean2 = transactionChunkingCompletedMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) '#');
    io.github.onograph.cluster.raft.gateway.gwlb.mods.ClusteringBalancerServiceImpl clusteringBalancerServiceImpl3 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.ClusteringBalancerServiceImpl();
    boolean boolean4 = transactionChunkingCompletedMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) clusteringBalancerServiceImpl3);
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService5 = null;
    io.github.onograph.cluster.raft.gateway.gwlb.ClusterLeader clusterLeader6 = null;
    org.neo4j.logging.LogProvider logProvider7 = null;
    org.neo4j.configuration.Config config8 = null;
    try {
      clusteringBalancerServiceImpl3.iniForClClLoCo(clusterStructureService5, clusterLeader6,
          logProvider7, config8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1703() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1703");
    }
    io.github.onograph.cluster.raft.palapp.strategies.ReadReplicaNodeNamedServiceClusterApproach readReplicaNodeNamedServiceClusterApproach1 = new io.github.onograph.cluster.raft.palapp.strategies.ReadReplicaNodeNamedServiceClusterApproach(
        (int) '4');
  }

  @Test
  public void test1704() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1704");
    }
    org.neo4j.logging.LogProvider logProvider0 = null;
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionSyncRequestWatcher transactionSyncRequestWatcher1 = null;
    io.github.onograph.cluster.raft.module.cuprot.ServerRef serverRef2 = new io.github.onograph.cluster.raft.module.cuprot.ServerRef();
    io.github.onograph.cluster.raft.module.cuprot.ServerRef.CatchupManagerStatusType catchupManagerStatusType3 = io.github.onograph.cluster.raft.module.cuprot.ServerRef.CatchupManagerStatusType.REQ_META;
    serverRef2.exeForE(catchupManagerStatusType3);
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionBlockGenerator transactionBlockGenerator5 = null;
    try {
      io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionSyncSimpleChannelInboundHandler transactionSyncSimpleChannelInboundHandler6 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionSyncSimpleChannelInboundHandler(
          logProvider0, transactionSyncRequestWatcher1, serverRef2, transactionBlockGenerator5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + catchupManagerStatusType3 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.ServerRef.CatchupManagerStatusType.REQ_META
        + "'", catchupManagerStatusType3.equals(
        io.github.onograph.cluster.raft.module.cuprot.ServerRef.CatchupManagerStatusType.REQ_META));
  }

  @Test
  public void test1705() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1705");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler0 = null;
    org.neo4j.logging.Log log1 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl2 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler sliceMetaSimpleChannelInboundHandler3 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler(
        catchupAnswerLimitHandler0, log1, refCatchupManagerImpl2);
    java.nio.file.Path path4 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo5 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path4);
    java.nio.file.Path path6 = clusterMetaTopologyInfo5.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker7 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo5);
    boolean boolean8 = sliceMetaSimpleChannelInboundHandler3.acceptInboundMessage(
        (java.lang.Object) clusterMetaTopologyInfo5);
    io.github.onograph.cluster.raft.module.cuprot.Ref<io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType> messageDataTypeRef9 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataDataManagerFactoryDecodingService syncableDataDataManagerFactoryDecodingService10 = new io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataDataManagerFactoryDecodingService(
        messageDataTypeRef9);
    boolean boolean11 = sliceMetaSimpleChannelInboundHandler3.acceptInboundMessage(
        (java.lang.Object) syncableDataDataManagerFactoryDecodingService10);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo5);
    org.junit.Assert.assertNull(path6);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    //org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1706() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1706");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config2 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    java.nio.file.Path path5 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo6 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path5);
    java.nio.file.Path path7 = clusterMetaTopologyInfo6.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker8 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo6);
    org.neo4j.memory.MemoryTracker memoryTracker9 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade10 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config2, fileSystemAbstraction3, logProvider4, clusterMetaTopologyInfo6, memoryTracker9);
    org.neo4j.logging.Log log11 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction12 = null;
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction14 = null;
    org.neo4j.logging.LogProvider logProvider15 = null;
    java.nio.file.Path path16 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo17 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path16);
    java.nio.file.Path path18 = clusterMetaTopologyInfo17.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker19 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo17);
    org.neo4j.memory.MemoryTracker memoryTracker20 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade21 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config13, fileSystemAbstraction14, logProvider15, clusterMetaTopologyInfo17,
        memoryTracker20);
    org.neo4j.logging.Log log22 = null;
    java.nio.file.Path path23 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo24 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path23);
    java.nio.file.Path path25 = clusterMetaTopologyInfo24.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker26 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo24);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat27 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction12, clusterSimpleStorageFacade21, log22, clusterMetaTopologyInfo24,
        clusterMetaFormat27);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat29 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv30 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction1, clusterSimpleStorageFacade10, log11, clusterMetaTopologyInfo24,
        clusterMetaFormat29);
    org.neo4j.logging.LogProvider logProvider31 = null;
    org.neo4j.memory.MemoryTracker memoryTracker32 = null;
    org.neo4j.io.layout.Neo4jLayout neo4jLayout33 = null;
    try {
      io.github.onograph.cluster.raft.id.CoreNodeClusterIdentModImpl coreNodeClusterIdentModImpl34 = new io.github.onograph.cluster.raft.id.CoreNodeClusterIdentModImpl(
          fileSystemAbstraction0, clusterSimpleStorageFacade10, logProvider31, memoryTracker32,
          neo4jLayout33);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo6);
    org.junit.Assert.assertNull(path7);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo17);
    org.junit.Assert.assertNull(path18);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo24);
    org.junit.Assert.assertNull(path25);
    org.junit.Assert.assertNotNull(clusterMetaFormat27);
  }

  @Test
  public void test1707() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1707");
    }
    io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog inMemoryConsensusTransactionLog0 = new io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog();
    long long3 = inMemoryConsensusTransactionLog0.pass(52L, (long) 1536);
    org.neo4j.monitoring.Monitors monitors4 = null;
    try {
      io.github.onograph.cluster.raft.share.calg.cle.MonitoredConsensusTransactionLog monitoredConsensusTransactionLog5 = new io.github.onograph.cluster.raft.share.calg.cle.MonitoredConsensusTransactionLog(
          (io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLog) inMemoryConsensusTransactionLog0,
          monitors4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1536L + "'", long3 == 1536L);
  }

  @Test
  public void test1708() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1708");
    }
    io.github.onograph.commandline.dbms.ClusterLoadCommandCommandProvider clusterLoadCommandCommandProvider0 = new io.github.onograph.commandline.dbms.ClusterLoadCommandCommandProvider();
    org.neo4j.cli.ExecutionContext executionContext1 = null;
    try {
      io.github.onograph.commandline.dbms.ClusterLoadCommand clusterLoadCommand2 = clusterLoadCommandCommandProvider0.createCommand(
          executionContext1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1709() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1709");
    }
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType catchupManagerStatusType0 = io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.GDB_UUID;
    org.junit.Assert.assertTrue("'" + catchupManagerStatusType0 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.GDB_UUID
        + "'", catchupManagerStatusType0.equals(
        io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.GDB_UUID));
  }

  @Test
  public void test1710() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1710");
    }
    akka.actor.ActorRef actorRef0 = null;
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses1 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress2 = null;
    java.lang.String[] strArray9 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet10 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray9);
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet11 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray9);
    org.neo4j.kernel.database.DatabaseId[] databaseIdArray12 = new org.neo4j.kernel.database.DatabaseId[]{};
    java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId> databaseIdSet13 = new java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId>();
    boolean boolean14 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.DatabaseId>) databaseIdSet13,
        databaseIdArray12);
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl15 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl(
        discoverySocketAddresses1, socketAddress2, nodeGroupIdentifierSet11,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet13);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> databaseIdMap16 = null;
    akka.actor.ActorRef actorRef17 = null;
    org.neo4j.dbms.identity.ServerId serverId18 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo updateReadReplicaInfo19 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo(
        actorRef0, gdbDiscoveryMetaReadReplicaImpl15, databaseIdMap16, actorRef17, serverId18);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> databaseIdMap20 = updateReadReplicaInfo19.getMapDsdd();
    akka.actor.ActorRef actorRef21 = updateReadReplicaInfo19.getMccActorRef();
    org.junit.Assert.assertNotNull(strArray9);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet10);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet11);
    org.junit.Assert.assertNotNull(databaseIdArray12);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertNull(databaseIdMap20);
    org.junit.Assert.assertNull(actorRef21);
  }

  @Test
  public void test1711() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1711");
    }
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionBlockLimiters.Configured configured1 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionBlockLimiters.Configured(
        (long) 1);
    boolean boolean3 = configured1.isCole(1536L);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
  }

  @Test
  public void test1712() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1712");
    }
    io.github.onograph.cluster.raft.control.connect.HandshakeStateType handshakeStateType0 = io.github.onograph.cluster.raft.control.connect.HandshakeStateType.ERROR;
    int int1 = handshakeStateType0.getHsCodeVal();
    org.junit.Assert.assertTrue("'" + handshakeStateType0 + "' != '"
            + io.github.onograph.cluster.raft.control.connect.HandshakeStateType.ERROR + "'",
        handshakeStateType0.equals(
            io.github.onograph.cluster.raft.control.connect.HandshakeStateType.ERROR));
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-1) + "'", int1 == (-1));
  }

  @Test
  public void test1713() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1713");
    }
    java.io.OutputStream outputStream0 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.WritableChecksumChannelDataOutputStreamImpl writableChecksumChannelDataOutputStreamImpl1 = new io.github.onograph.cluster.raft.akkamsg.serialization.WritableChecksumChannelDataOutputStreamImpl(
        outputStream0);
    try {
      writableChecksumChannelDataOutputStreamImpl1.beginChecksum();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.UnsupportedOperationException; message: *** Error:  4f6083ee-035c-4c7a-ada1-48e19a68db2a");
    } catch (java.lang.UnsupportedOperationException e) {
    }
  }

  @Test
  public void test1714() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1714");
    }
    io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorDefinedLengthImpl<io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal> databaseIdOnlySafeChannelMarshalRuleProcessorDefinedLengthImpl1 = new io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorDefinedLengthImpl<io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal>(
        0);
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal databaseIdOnlySafeChannelMarshal2 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal();
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal[] databaseIdOnlySafeChannelMarshalArray3 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal[]{
        databaseIdOnlySafeChannelMarshal2};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal> databaseIdOnlySafeChannelMarshalSet4 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal>();
    boolean boolean5 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal>) databaseIdOnlySafeChannelMarshalSet4,
        databaseIdOnlySafeChannelMarshalArray3);
    java.util.Set<io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal> databaseIdOnlySafeChannelMarshalSet6 = databaseIdOnlySafeChannelMarshalRuleProcessorDefinedLengthImpl1.aplSet(
        (java.util.Set<io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal>) databaseIdOnlySafeChannelMarshalSet4);
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal databaseIdOnlySafeChannelMarshal7 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal();
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal[] databaseIdOnlySafeChannelMarshalArray8 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal[]{
        databaseIdOnlySafeChannelMarshal7};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal> databaseIdOnlySafeChannelMarshalSet9 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal>) databaseIdOnlySafeChannelMarshalSet9,
        databaseIdOnlySafeChannelMarshalArray8);
    java.util.Set<io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal> databaseIdOnlySafeChannelMarshalSet11 = databaseIdOnlySafeChannelMarshalRuleProcessorDefinedLengthImpl1.aplSet(
        (java.util.Set<io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal>) databaseIdOnlySafeChannelMarshalSet9);
    org.junit.Assert.assertNotNull(databaseIdOnlySafeChannelMarshalArray3);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertNotNull(databaseIdOnlySafeChannelMarshalSet6);
    org.junit.Assert.assertNotNull(databaseIdOnlySafeChannelMarshalArray8);
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertNotNull(databaseIdOnlySafeChannelMarshalSet11);
  }

  @Test
  public void test1715() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1715");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.ActionIdxMonitor actionIdxMonitor0 = new io.github.onograph.cluster.raft.share.meta.fsm.ActionIdxMonitor();
    actionIdxMonitor0.seapcnie((long) (byte) 9);
    long long3 = actionIdxMonitor0.getLgAci();
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 9L + "'", long3 == 9L);
  }

  @Test
  public void test1716() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1716");
    }
    java.util.ArrayList<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>> strPairList0 = new java.util.ArrayList<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>();
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo2 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType3 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer4 = applicationComProFamilyType3.getImpl();
    boolean boolean5 = viewClusterInfo2.equals((java.lang.Object) entProVer4);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType6 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer7 = applicationComProFamilyType6.getImpl();
    int int8 = entProVer4.compareTo(entProVer7);
    io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl changeComProRequestImpl9 = new io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl(
        (java.util.List<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>) strPairList0,
        "", entProVer7);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType11 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer12 = applicationComProFamilyType11.getImpl();
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType13 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer14 = applicationComProFamilyType13.getImpl();
    int int15 = entProVer12.compareTo(entProVer14);
    io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl changeComProRequestImpl16 = new io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl(
        (java.util.List<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>) strPairList0,
        "Snappy", entProVer14);
    io.github.onograph.config.EntProVer entProVer18 = null;
    io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl changeComProRequestImpl19 = new io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl(
        (java.util.List<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>) strPairList0,
        "", entProVer18);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat20 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.configuration.Config config22 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction23 = null;
    org.neo4j.logging.LogProvider logProvider24 = null;
    java.nio.file.Path path25 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo26 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path25);
    java.nio.file.Path path27 = clusterMetaTopologyInfo26.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker28 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo26);
    org.neo4j.memory.MemoryTracker memoryTracker29 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade30 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config22, fileSystemAbstraction23, logProvider24, clusterMetaTopologyInfo26,
        memoryTracker29);
    org.neo4j.logging.Log log31 = null;
    java.nio.file.Path path32 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo33 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path32);
    java.nio.file.Path path34 = clusterMetaTopologyInfo33.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker35 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo33);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat36 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv37 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction21, clusterSimpleStorageFacade30, log31, clusterMetaTopologyInfo33,
        clusterMetaFormat36);
    boolean boolean38 = clusterMetaFormat20.isLortaForCl(clusterMetaFormat36);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat39 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction40 = null;
    org.neo4j.configuration.Config config41 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction42 = null;
    org.neo4j.logging.LogProvider logProvider43 = null;
    java.nio.file.Path path44 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo45 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path44);
    java.nio.file.Path path46 = clusterMetaTopologyInfo45.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker47 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo45);
    org.neo4j.memory.MemoryTracker memoryTracker48 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade49 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config41, fileSystemAbstraction42, logProvider43, clusterMetaTopologyInfo45,
        memoryTracker48);
    org.neo4j.logging.Log log50 = null;
    java.nio.file.Path path51 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo52 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path51);
    java.nio.file.Path path53 = clusterMetaTopologyInfo52.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker54 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo52);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat55 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv56 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction40, clusterSimpleStorageFacade49, log50, clusterMetaTopologyInfo52,
        clusterMetaFormat55);
    boolean boolean57 = clusterMetaFormat39.isLortaForCl(clusterMetaFormat55);
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler58 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl59 = null;
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedInboundHandler transactionChunkingCompletedInboundHandler60 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedInboundHandler(
        catchupAnswerLimitHandler58, refCatchupManagerImpl59);
    org.neo4j.graphdb.config.Setting<java.time.Duration> durationSetting61 = io.github.onograph.config.SettingsDeclarationClusterImpl.settingJoapoDuration;
    boolean boolean62 = transactionChunkingCompletedInboundHandler60.acceptInboundMessage(
        (java.lang.Object) durationSetting61);
    boolean boolean63 = clusterMetaFormat39.equals(
        (java.lang.Object) transactionChunkingCompletedInboundHandler60);
    boolean boolean64 = clusterMetaFormat20.isMabmttForCl(clusterMetaFormat39);
    int int65 = clusterMetaFormat39.getIMjr();
    int int66 = clusterMetaFormat39.getIMnr();
    boolean boolean67 = changeComProRequestImpl19.equals((java.lang.Object) clusterMetaFormat39);
    org.junit.Assert.assertNotNull(viewClusterInfo2);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType3 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType3.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer4);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType6 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType6.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer7);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType11 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType11.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer12);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType13 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType13.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer14);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    org.junit.Assert.assertNotNull(clusterMetaFormat20);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo26);
    org.junit.Assert.assertNull(path27);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo33);
    org.junit.Assert.assertNull(path34);
    org.junit.Assert.assertNotNull(clusterMetaFormat36);
    //org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertNotNull(clusterMetaFormat39);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo45);
    org.junit.Assert.assertNull(path46);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo52);
    org.junit.Assert.assertNull(path53);
    org.junit.Assert.assertNotNull(clusterMetaFormat55);
    //org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertNotNull(durationSetting61);
    //org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    //org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    //org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
    org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    //org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
  }

  @Test
  public void test1717() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1717");
    }
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses0 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress1 = null;
    java.lang.String[] strArray8 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet9 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray8);
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet10 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray8);
    org.neo4j.kernel.database.DatabaseId[] databaseIdArray11 = new org.neo4j.kernel.database.DatabaseId[]{};
    java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId> databaseIdSet12 = new java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.DatabaseId>) databaseIdSet12,
        databaseIdArray11);
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl14 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl(
        discoverySocketAddresses0, socketAddress1, nodeGroupIdentifierSet10,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet12);
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses15 = gdbDiscoveryMetaReadReplicaImpl14.contsDiscoverySocketAddresses();
    org.junit.Assert.assertNotNull(strArray8);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet9);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet10);
    org.junit.Assert.assertNotNull(databaseIdArray11);
    //org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNull(discoverySocketAddresses15);
  }

  @Test
  public void test1718() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1718");
    }
    io.netty.channel.Channel channel0 = null;
    org.neo4j.logging.Log log1 = null;
    io.github.onograph.cluster.raft.akkamsg.NettyChannelImpl nettyChannelImpl2 = new io.github.onograph.cluster.raft.akkamsg.NettyChannelImpl(
        channel0, log1);
    boolean boolean3 = nettyChannelImpl2.isChannelDis();
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier5 = new io.github.onograph.config.NodeGroupIdentifier(
        "hi!");
    java.util.stream.IntStream intStream6 = nodeGroupIdentifier5.chars();
    try {
      java.util.concurrent.Future<java.lang.Void> voidFuture7 = nettyChannelImpl2.wrtanflhFuture(
          (java.lang.Object) nodeGroupIdentifier5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(intStream6);
  }

  @Test
  public void test1719() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1719");
    }
    io.github.onograph.cluster.raft.share.calg.ConsensusOperationsManager consensusOperationsManager0 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureService coreClusterStructureService2 = null;
    io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureServiceLifecycleAdapter coreClusterStructureServiceLifecycleAdapter3 = new io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureServiceLifecycleAdapter(
        consensusOperationsManager0, namedDatabaseId1, coreClusterStructureService2);
    coreClusterStructureServiceLifecycleAdapter3.onungt();
    coreClusterStructureServiceLifecycleAdapter3.shutdown();
    coreClusterStructureServiceLifecycleAdapter3.onungt();
    io.github.onograph.cluster.raft.id.ConsensusNodeId[] consensusNodeIdArray7 = new io.github.onograph.cluster.raft.id.ConsensusNodeId[]{};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet8 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId>();
    boolean boolean9 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet8,
        consensusNodeIdArray7);
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper consensusNodeServerMemberIdWrapper10 = new io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper(
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet8);
    try {
      coreClusterStructureServiceLifecycleAdapter3.oncetlchForSe(
          (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusNodeIdArray7);
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1720() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1720");
    }
    java.util.UUID uUID0 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy1 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean2 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID0, consensusNodeIdLazy1);
    io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl syncStatusMetaServiceImpl3 = new io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl(
        clusterSessionBean2);
    java.util.UUID uUID4 = clusterSessionBean2.getIsUUID();
    java.util.UUID uUID5 = clusterSessionBean2.getIsUUID();
    org.junit.Assert.assertNull(uUID4);
    org.junit.Assert.assertNull(uUID5);
  }

  @Test
  public void test1721() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1721");
    }
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS0 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta1 = marshalChannelImplCMS0.startState();
    boolean boolean3 = nodeServerMemberTransactionLogDataMeta1.isTrnt((long) '#');
    boolean boolean5 = nodeServerMemberTransactionLogDataMeta1.isCom((long) (-1));
    nodeServerMemberTransactionLogDataMeta1.stop();
    org.junit.Assert.assertNotNull(marshalChannelImplCMS0);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta1);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1722() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1722");
    }
    io.netty.buffer.ByteBuf byteBuf0 = null;
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel1 = new io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel(
        byteBuf0);
    defaultWritableChecksumChannel1.beginChecksum();
    io.netty.buffer.ByteBuf byteBuf3 = defaultWritableChecksumChannel1.byebfByteBuf();
    io.netty.buffer.ByteBuf byteBuf4 = defaultWritableChecksumChannel1.byebfByteBuf();
    try {
      org.neo4j.io.fs.WritableChecksumChannel writableChecksumChannel6 = defaultWritableChecksumChannel1.putInt(
          1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(byteBuf3);
    org.junit.Assert.assertNull(byteBuf4);
  }

  @Test
  public void test1723() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1723");
    }
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses0 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress1 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress2 = null;
    org.neo4j.dbms.identity.ServerId serverId3 = null;
    java.lang.String[] strArray10 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet11 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray10);
    io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta loadBalanceServerMeta12 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta(
        socketAddress2, serverId3, nodeGroupIdentifierSet11);
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses13 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = null;
    java.lang.String[] strArray21 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet22 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray21);
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet23 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray21);
    org.neo4j.kernel.database.DatabaseId[] databaseIdArray24 = new org.neo4j.kernel.database.DatabaseId[]{};
    java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId> databaseIdSet25 = new java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId>();
    boolean boolean26 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.DatabaseId>) databaseIdSet25,
        databaseIdArray24);
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl27 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl(
        discoverySocketAddresses13, socketAddress14, nodeGroupIdentifierSet23,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet25);
    org.neo4j.configuration.helpers.SocketAddress socketAddress28 = null;
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaCoreImpl gdbDiscoveryMetaCoreImpl29 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaCoreImpl(
        discoverySocketAddresses0, socketAddress1, nodeGroupIdentifierSet11,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet25, socketAddress28);
    java.util.Set<org.neo4j.kernel.database.DatabaseId> databaseIdSet30 = gdbDiscoveryMetaCoreImpl29.stedaiSet();
    org.neo4j.configuration.helpers.SocketAddress socketAddress31 = gdbDiscoveryMetaCoreImpl29.cacpsrrSocketAddress();
    org.junit.Assert.assertNotNull(strArray10);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet11);
    org.junit.Assert.assertNotNull(strArray21);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet22);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet23);
    org.junit.Assert.assertNotNull(databaseIdArray24);
    //org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(databaseIdSet30);
    org.junit.Assert.assertNull(socketAddress31);
  }

  @Test
  public void test1724() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1724");
    }
    io.netty.buffer.ByteBuf byteBuf1 = null;
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel2 = new io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel(
        byteBuf1);
    defaultWritableChecksumChannel2.beginChecksum();
    io.netty.buffer.ByteBuf byteBuf4 = defaultWritableChecksumChannel2.byebfByteBuf();
    io.netty.buffer.ByteBuf byteBuf5 = defaultWritableChecksumChannel2.byebfByteBuf();
    io.netty.buffer.ByteBuf byteBuf6 = defaultWritableChecksumChannel2.byebfByteBuf();
    try {
      io.github.onograph.cluster.raft.akkamsg.serialization.BasicStringSerializationHandler.maslForBySt(
          "protocols", (org.neo4j.io.fs.WritableChannel) defaultWritableChecksumChannel2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(byteBuf4);
    org.junit.Assert.assertNull(byteBuf5);
    org.junit.Assert.assertNull(byteBuf6);
  }

  @Test
  public void test1725() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1725");
    }
    io.github.onograph.cluster.raft.module.cuprot.current.info.RequestMetaMessageToByteEncoder requestMetaMessageToByteEncoder0 = new io.github.onograph.cluster.raft.module.cuprot.current.info.RequestMetaMessageToByteEncoder();
    io.github.onograph.dbms.ClusterDatabaseManagementException clusterDatabaseManagementException2 = new io.github.onograph.dbms.ClusterDatabaseManagementException(
        "store_version");
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException gdbStoreSyncCrlException3 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException(
        (java.lang.Throwable) clusterDatabaseManagementException2);
    boolean boolean4 = requestMetaMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) clusterDatabaseManagementException2);
    io.github.onograph.cluster.raft.share.sync.ReplicationSessionManagerMeta replicationSessionManagerMeta5 = new io.github.onograph.cluster.raft.share.sync.ReplicationSessionManagerMeta();
    boolean boolean6 = requestMetaMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) replicationSessionManagerMeta5);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1726() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1726");
    }
    java.util.function.Supplier<java.util.stream.Stream<org.neo4j.internal.helpers.collection.Pair<org.neo4j.configuration.helpers.SocketAddress, io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper>>> socketAddressPairStreamSupplier0 = null;
    java.util.function.Supplier<java.util.stream.Stream<org.neo4j.internal.helpers.collection.Pair<org.neo4j.configuration.helpers.SocketAddress, io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper>>> socketAddressPairStreamSupplier1 = null;
    io.github.onograph.cluster.raft.module.dprot.dprocs.ShowAvailableProComFamBasicProcedure showAvailableProComFamBasicProcedure2 = new io.github.onograph.cluster.raft.module.dprot.dprocs.ShowAvailableProComFamBasicProcedure(
        socketAddressPairStreamSupplier0, socketAddressPairStreamSupplier1);
    org.neo4j.kernel.api.procedure.Context context3 = null;
    org.neo4j.values.AnyValue[] anyValueArray4 = new org.neo4j.values.AnyValue[]{};
    org.neo4j.kernel.api.ResourceTracker resourceTracker5 = null;
    try {
      org.neo4j.collection.RawIterator<org.neo4j.values.AnyValue[], org.neo4j.internal.kernel.api.exceptions.ProcedureException> anyValueArrayRawIterator6 = showAvailableProComFamBasicProcedure2.apply(
          context3, anyValueArray4, resourceTracker5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(anyValueArray4);
  }

  @Test
  public void test1727() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1727");
    }
    java.util.List<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.util.Optional<io.github.onograph.cluster.raft.control.MutableComProFamily>>> strPairList0 = null;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType2 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer3 = applicationComProFamilyType2.getImpl();
    io.github.onograph.cluster.raft.control.connect.ClientException clientException4 = new io.github.onograph.cluster.raft.control.connect.ClientException(
        strPairList0, "default",
        (io.github.onograph.cluster.raft.control.ApplicationComProFamily) applicationComProFamilyType2);
    io.github.onograph.config.EntProVer entProVer5 = applicationComProFamilyType2.getImpl();
    io.github.onograph.config.EntProVer entProVer6 = applicationComProFamilyType2.getImpl();
    java.lang.String str7 = applicationComProFamilyType2.caerString();
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType2 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType2.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer3);
    org.junit.Assert.assertNotNull(entProVer5);
    org.junit.Assert.assertNotNull(entProVer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "catchup_protocol" + "'", str7,
        "catchup_protocol");
  }

  @Test
  public void test1728() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1728");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryManagerAkkaImpl clusterDiscoveryManagerAkkaImpl0 = new io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryManagerAkkaImpl();
    java.time.Clock clock1 = null;
    org.neo4j.configuration.Config config2 = null;
    io.github.onograph.cluster.raft.id.CoreNodeServerIdentity coreNodeServerIdentity3 = null;
    io.github.onograph.dbms.crash.CrashSignaler crashSignaler4 = null;
    org.neo4j.dbms.DatabaseStateService databaseStateService5 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.DiscoveryInitialProcCheckerReadReplicaImpl discoveryInitialProcCheckerReadReplicaImpl6 = new io.github.onograph.cluster.raft.module.dprot.impl.DiscoveryInitialProcCheckerReadReplicaImpl();
    io.github.onograph.cluster.raft.module.dprot.DiscoveryRetryManager discoveryRetryManager9 = new io.github.onograph.cluster.raft.module.dprot.DiscoveryRetryManager(
        (long) (byte) 9, (long) (short) 100);
    org.neo4j.scheduler.JobScheduler jobScheduler10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.logging.LogProvider logProvider12 = null;
    org.neo4j.configuration.helpers.SocketAddress[] socketAddressArray13 = new org.neo4j.configuration.helpers.SocketAddress[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress> socketAddressList14 = new java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress>();
    boolean boolean15 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList14,
        socketAddressArray13);
    io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService16 = io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddressManagerDefaultImpl.reoeMemberNodeService(
        (java.util.List<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList14);
    boolean boolean17 = memberNodeService16.isRevoevjoat();
    boolean boolean18 = memberNodeService16.isUsord();
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.ActorLifecycleApproachDefaultImpl actorLifecycleApproachDefaultImpl19 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.ActorLifecycleApproachDefaultImpl(
        memberNodeService16);
    org.neo4j.monitoring.Monitors monitors20 = null;
    io.github.onograph.cluster.raft.id.CoreNodeServerIdentity coreNodeServerIdentity21 = null;
    io.github.onograph.cluster.raft.module.dprot.pit.PointInTimeBackupService pointInTimeBackupService22 = io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl.cosnoftPointInTimeBackupService(
        coreNodeServerIdentity21);
    org.neo4j.ssl.config.SslPolicyLoader sslPolicyLoader23 = null;
    try {
      io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureService coreClusterStructureService24 = clusterDiscoveryManagerAkkaImpl0.cotogsvCoreClusterStructureService(
          clock1, config2, coreNodeServerIdentity3, crashSignaler4, databaseStateService5,
          (io.github.onograph.cluster.raft.module.dprot.DiscoveryInitialProcChecker) discoveryInitialProcCheckerReadReplicaImpl6,
          discoveryRetryManager9, jobScheduler10, logProvider11, logProvider12, memberNodeService16,
          monitors20, pointInTimeBackupService22, sslPolicyLoader23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(socketAddressArray13);
    //org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(memberNodeService16);
    //org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    //org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertNotNull(pointInTimeBackupService22);
  }

  @Test
  public void test1729() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1729");
    }
    io.github.onograph.cluster.raft.control.connect.ClientException clientException1 = new io.github.onograph.cluster.raft.control.connect.ClientException(
        "FollowerStates{}");
    java.lang.String str2 = clientException1.toString();
    org.junit.Assert.assertEquals("'" + str2 + "' != '"
            + "io.github.onograph.cluster.raft.control.connect.ClientException: FollowerStates{}" + "'",
        str2, "io.github.onograph.cluster.raft.control.connect.ClientException: FollowerStates{}");
  }

  @Test
  public void test1730() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1730");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerManager<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedCatchupAnswerManager0 = new io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerManager<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted>();
    java.util.concurrent.CompletableFuture<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedCompletableFuture1 = null;
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompleted transactionChunkingCompleted2 = null;
    try {
      storeSyncCompletedCatchupAnswerManager0.ontstfhrseForCoTr(
          storeSyncCompletedCompletableFuture1, transactionChunkingCompleted2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1731() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1731");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerManager<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedCatchupAnswerManager0 = new io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerManager<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted>();
    java.util.concurrent.CompletableFuture<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedCompletableFuture1 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.info.Meta meta4 = io.github.onograph.cluster.raft.module.cuprot.current.info.Meta.craMeta(
        (long) (byte) 1, "designated_seeder");
    try {
      storeSyncCompletedCatchupAnswerManager0.oninForCoMe(storeSyncCompletedCompletableFuture1,
          meta4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(meta4);
  }

  @Test
  public void test1732() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1732");
    }
    io.github.onograph.cluster.raft.module.cuprot.Ref<io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType> messageDataTypeRef0 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataDataManagerFactoryDecodingService syncableDataDataManagerFactoryDecodingService1 = new io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataDataManagerFactoryDecodingService(
        messageDataTypeRef0);
    io.github.onograph.cluster.raft.share.meta.MetaWrapper<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdMetaWrapper2 = io.github.onograph.cluster.raft.share.meta.MetaWrapper.CONS_MB_UID;
    boolean boolean3 = syncableDataDataManagerFactoryDecodingService1.acceptInboundMessage(
        (java.lang.Object) consensusNodeIdMetaWrapper2);
    org.junit.Assert.assertNotNull(consensusNodeIdMetaWrapper2);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1733() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1733");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    org.neo4j.logging.LogProvider logProvider3 = null;
    java.nio.file.Path path4 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo5 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path4);
    java.nio.file.Path path6 = clusterMetaTopologyInfo5.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker7 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo5);
    org.neo4j.memory.MemoryTracker memoryTracker8 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade9 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config1, fileSystemAbstraction2, logProvider3, clusterMetaTopologyInfo5, memoryTracker8);
    org.neo4j.logging.Log log10 = null;
    java.nio.file.Path path11 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo12 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path11);
    java.nio.file.Path path13 = clusterMetaTopologyInfo12.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker14 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo12);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat15 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv16 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction0, clusterSimpleStorageFacade9, log10, clusterMetaTopologyInfo12,
        clusterMetaFormat15);
    try {
      java.nio.file.Path path18 = clusterMetaTopologyInfo12.ralodeyPath("designated_seeder");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo5);
    org.junit.Assert.assertNull(path6);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo12);
    org.junit.Assert.assertNull(path13);
    org.junit.Assert.assertNotNull(clusterMetaFormat15);
  }

  @Test
  public void test1734() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1734");
    }
    byte[] byteArray1 = new byte[]{(byte) 1};
    io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService chunkedInputEncodingService3 = new io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService(
        byteArray1, true);
    long long4 = chunkedInputEncodingService3.length();
    long long5 = chunkedInputEncodingService3.progress();
    boolean boolean6 = chunkedInputEncodingService3.isEndOfInput();
    long long7 = chunkedInputEncodingService3.length();
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[1]");
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
  }

  @Test
  public void test1735() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1735");
    }
    org.neo4j.io.fs.ReadableChannel readableChannel0 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl1 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel0);
    readableClosablePositionAwareChecksumChannelPassThruImpl1.beginChecksum();
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition3 = readableClosablePositionAwareChecksumChannelPassThruImpl1.getCurrentPosition();
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl4 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl1);
    try {
      int int5 = readableClosablePositionAwareChecksumChannelPassThruImpl4.getInt();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(logPosition3);
  }

  @Test
  public void test1736() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1736");
    }
    io.github.onograph.dbms.ClusterDatabaseManagementException clusterDatabaseManagementException1 = new io.github.onograph.dbms.ClusterDatabaseManagementException(
        "store_version");
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException gdbStoreSyncCrlException2 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException(
        (java.lang.Throwable) clusterDatabaseManagementException1);
    io.github.onograph.cluster.raft.share.sync.SyncMeta syncMeta3 = io.github.onograph.cluster.raft.share.sync.SyncMeta.norladSyncMeta(
        (java.lang.Throwable) gdbStoreSyncCrlException2);
    io.github.onograph.cluster.raft.share.sync.SyncMeta.SyncMetaType syncMetaType4 = syncMeta3.getReslt();
    org.junit.Assert.assertNotNull(syncMeta3);
    org.junit.Assert.assertTrue("'" + syncMetaType4 + "' != '"
            + io.github.onograph.cluster.raft.share.sync.SyncMeta.SyncMetaType.SMT_NO_REP + "'",
        syncMetaType4.equals(
            io.github.onograph.cluster.raft.share.sync.SyncMeta.SyncMetaType.SMT_NO_REP));
  }

  @Test
  public void test1737() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1737");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId[] consensusNodeIdArray1 = new io.github.onograph.cluster.raft.id.ConsensusNodeId[]{};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet2 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet2,
        consensusNodeIdArray1);
    io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper memberIndexWrapper4 = new io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper(
        (long) (byte) 8,
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet2);
    io.github.onograph.cluster.raft.share.meta.pit.ConsensusMembershipState consensusMembershipState5 = new io.github.onograph.cluster.raft.share.meta.pit.ConsensusMembershipState(
        memberIndexWrapper4);
    org.neo4j.kernel.impl.transaction.log.PhysicalTransactionRepresentation physicalTransactionRepresentation6 = null;
    org.neo4j.kernel.database.DatabaseId databaseId7 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.AbstractTransactionSync abstractTransactionSync9 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.AbstractTransactionSync(
        physicalTransactionRepresentation6, databaseId7, 10L);
    boolean boolean10 = consensusMembershipState5.equals(
        (java.lang.Object) abstractTransactionSync9);
    org.junit.Assert.assertNotNull(consensusNodeIdArray1);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1738() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1738");
    }
    io.github.onograph.cluster.raft.utils.queuesrv.ElementQueueRunnerImpl<io.github.onograph.cluster.raft.module.cuprot.AskMessageType> askMessageTypeElementQueueRunnerImpl0 = new io.github.onograph.cluster.raft.utils.queuesrv.ElementQueueRunnerImpl<io.github.onograph.cluster.raft.module.cuprot.AskMessageType>();
    io.github.onograph.cluster.raft.module.cuprot.AskMessageType askMessageType1 = io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_SET_SC;
    io.github.onograph.cluster.raft.module.cuprot.AskMessageType[] askMessageTypeArray2 = new io.github.onograph.cluster.raft.module.cuprot.AskMessageType[]{
        askMessageType1};
    java.util.ArrayList<io.github.onograph.cluster.raft.module.cuprot.AskMessageType> askMessageTypeList3 = new java.util.ArrayList<io.github.onograph.cluster.raft.module.cuprot.AskMessageType>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.module.cuprot.AskMessageType>) askMessageTypeList3,
        askMessageTypeArray2);
    askMessageTypeElementQueueRunnerImpl0.removeSome(
        (java.util.List<io.github.onograph.cluster.raft.module.cuprot.AskMessageType>) askMessageTypeList3);
    io.github.onograph.cluster.raft.module.cuprot.AskMessageType askMessageType6 = io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_STORE_ASK;
    askMessageTypeElementQueueRunnerImpl0.recForTry(askMessageType6);
    askMessageTypeElementQueueRunnerImpl0.removeAll();
    org.junit.Assert.assertTrue("'" + askMessageType1 + "' != '"
            + io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_SET_SC + "'",
        askMessageType1.equals(
            io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_SET_SC));
    org.junit.Assert.assertNotNull(askMessageTypeArray2);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    org.junit.Assert.assertTrue("'" + askMessageType6 + "' != '"
            + io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_STORE_ASK + "'",
        askMessageType6.equals(
            io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_STORE_ASK));
  }

  @Test
  public void test1739() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1739");
    }
    io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType mutatingComProFamilyGroupType0 = io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.TYPE_COMP;
    java.lang.String str1 = mutatingComProFamilyGroupType0.lowerName();
    java.util.Optional<io.github.onograph.cluster.raft.control.MutableComProFamily> mutableComProFamilyOptional3 = io.github.onograph.cluster.raft.control.MutableProtocols.finOptional(
        mutatingComProFamilyGroupType0, "policy");
    java.lang.String str4 = mutatingComProFamilyGroupType0.lowerName();
    org.junit.Assert.assertTrue("'" + mutatingComProFamilyGroupType0 + "' != '"
            + io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.TYPE_COMP + "'",
        mutatingComProFamilyGroupType0.equals(
            io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.TYPE_COMP));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "type_comp" + "'", str1, "type_comp");
    org.junit.Assert.assertNotNull(mutableComProFamilyOptional3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "type_comp" + "'", str4, "type_comp");
  }

  @Test
  public void test1740() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1740");
    }
    org.neo4j.configuration.helpers.DatabaseReadOnlyChecker databaseReadOnlyChecker0 = null;
    org.neo4j.internal.id.IdGeneratorFactory idGeneratorFactory1 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer3 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator4 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.StorageEngine> storageEngineSupplier5 = null;
    org.neo4j.token.TokenRegistry tokenRegistry6 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RelationshipTypeTokenHolder relationshipTypeTokenHolder7 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RelationshipTypeTokenHolder(
        databaseReadOnlyChecker0, idGeneratorFactory1, namedDatabaseId2, pageCacheTracer3,
        syncerator4, storageEngineSupplier5, tokenRegistry6);
    try {
      boolean boolean9 = relationshipTypeTokenHolder7.hasToken((int) ' ');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1741() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1741");
    }
    io.github.onograph.cluster.raft.share.calg.action.TransactionLogActionClipImpl transactionLogActionClipImpl1 = new io.github.onograph.cluster.raft.share.calg.action.TransactionLogActionClipImpl(
        (long) '4');
  }

  @Test
  public void test1742() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1742");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector connector0 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector();
    connector0.fihrih((long) (byte) 10);
    connector0.fihrih();
    connector0.fihrih((long) 'h');
    connector0.fihrih();
    connector0.strvinsno();
    connector0.fihrih();
  }

  @Test
  public void test1743() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1743");
    }
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols0 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC;
    java.lang.String str1 = mutableProtocols0.getImpl();
    java.lang.String str2 = mutableProtocols0.caerString();
    org.junit.Assert.assertTrue("'" + mutableProtocols0 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC + "'",
        mutableProtocols0.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LZ4_high_compression" + "'", str1,
        "LZ4_high_compression");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "type_comp" + "'", str2, "type_comp");
  }

  @Test
  public void test1744() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1744");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    org.neo4j.storageengine.api.StoreId storeId1 = null;
    java.nio.file.Path path3 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreResource requestStoreResource4 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreResource(
        databaseId0, storeId1, (long) (byte) 10, path3);
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService5 = null;
    io.github.onograph.cluster.raft.share.LeaderOperations leaderOperations6 = null;
    io.github.onograph.cluster.raft.palapp.NamedServiceApproachManager namedServiceApproachManager7 = null;
    io.github.onograph.cluster.raft.module.cuprot.SocketAddressService.SocketAddressServiceLeaderImpl socketAddressServiceLeaderImpl8 = new io.github.onograph.cluster.raft.module.cuprot.SocketAddressService.SocketAddressServiceLeaderImpl(
        clusterStructureService5, leaderOperations6, namedServiceApproachManager7);
    boolean boolean9 = requestStoreResource4.equals(
        (java.lang.Object) socketAddressServiceLeaderImpl8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    try {
      java.util.Collection<org.neo4j.configuration.helpers.SocketAddress> socketAddressCollection11 = socketAddressServiceLeaderImpl8.alsoaeCollection(
          namedDatabaseId10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1745() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1745");
    }
    io.netty.buffer.ByteBuf byteBuf0 = null;
    try {
      io.github.onograph.cluster.raft.akkamsg.serialization.BasicStringSerializationHandler.maslForBySt(
          byteBuf0,
          "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$StartOverIfSingleNotResponding. Unreachable node detected.");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1746() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1746");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    org.neo4j.logging.LogProvider logProvider3 = null;
    java.nio.file.Path path4 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo5 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path4);
    java.nio.file.Path path6 = clusterMetaTopologyInfo5.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker7 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo5);
    org.neo4j.memory.MemoryTracker memoryTracker8 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade9 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config1, fileSystemAbstraction2, logProvider3, clusterMetaTopologyInfo5, memoryTracker8);
    org.neo4j.logging.Log log10 = null;
    java.nio.file.Path path11 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo12 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path11);
    java.nio.file.Path path13 = clusterMetaTopologyInfo12.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker14 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo12);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat15 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv16 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction0, clusterSimpleStorageFacade9, log10, clusterMetaTopologyInfo12,
        clusterMetaFormat15);
    try {
      java.nio.file.Path path18 = clusterMetaTopologyInfo12.ragridfPath("backup-server");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo5);
    org.junit.Assert.assertNull(path6);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo12);
    org.junit.Assert.assertNull(path13);
    org.junit.Assert.assertNotNull(clusterMetaFormat15);
  }

  @Test
  public void test1747() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1747");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Reply reply5 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Reply(
        consensusNodeId0, false, (long) (-1), (long) '#', (long) 0);
    long long6 = reply5.getLgT();
    boolean boolean7 = reply5.getIsSces();
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS marshalChannelImplCMS8 = io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta candidateTermMeta9 = marshalChannelImplCMS8.startState();
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS marshalChannelImplCMS10 = io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta candidateTermMeta11 = marshalChannelImplCMS10.startState();
    long long12 = marshalChannelImplCMS8.ordinal(candidateTermMeta11);
    boolean boolean13 = reply5.equals((java.lang.Object) candidateTermMeta11);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS8);
    org.junit.Assert.assertNotNull(candidateTermMeta9);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS10);
    org.junit.Assert.assertNotNull(candidateTermMeta11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    //org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
  }

  @Test
  public void test1748() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1748");
    }
    org.neo4j.configuration.helpers.SocketAddress[] socketAddressArray0 = new org.neo4j.configuration.helpers.SocketAddress[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress> socketAddressList1 = new java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress>();
    boolean boolean2 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList1,
        socketAddressArray0);
    io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService3 = io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddressManagerDefaultImpl.reoeMemberNodeService(
        (java.util.List<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList1);
    io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService4 = io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddressManagerDefaultImpl.reoeMemberNodeService(
        (java.util.List<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList1);
    io.github.onograph.cluster.raft.module.dprot.impl.stack.ClusterJoinOrganizer clusterJoinOrganizer5 = new io.github.onograph.cluster.raft.module.dprot.impl.stack.ClusterJoinOrganizer(
        memberNodeService4);
    org.junit.Assert.assertNotNull(socketAddressArray0);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(memberNodeService3);
    org.junit.Assert.assertNotNull(memberNodeService4);
  }

  @Test
  public void test1749() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1749");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta exitMeta0 = io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta.CONDI_EXIT_META;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta exitMeta1 = io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta.CONDI_EXIT_META;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta exitMeta2 = exitMeta0.andExitMeta(
        exitMeta1);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta exitMeta3 = io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta.CONDI_EXIT_META;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta exitMeta4 = io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta.CONDI_EXIT_META;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta exitMeta5 = io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta.CONDI_EXIT_META;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta exitMeta6 = exitMeta4.andExitMeta(
        exitMeta5);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta exitMeta7 = exitMeta3.andExitMeta(
        exitMeta6);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.ExitMeta exitMeta8 = exitMeta2.andExitMeta(
        exitMeta6);
    org.junit.Assert.assertNotNull(exitMeta0);
    org.junit.Assert.assertNotNull(exitMeta1);
    org.junit.Assert.assertNotNull(exitMeta2);
    org.junit.Assert.assertNotNull(exitMeta3);
    org.junit.Assert.assertNotNull(exitMeta4);
    org.junit.Assert.assertNotNull(exitMeta5);
    org.junit.Assert.assertNotNull(exitMeta6);
    org.junit.Assert.assertNotNull(exitMeta7);
    org.junit.Assert.assertNotNull(exitMeta8);
  }

  @Test
  public void test1750() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1750");
    }
    java.time.Clock clock0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    java.nio.file.Path path2 = null;
    io.github.onograph.cluster.raft.logservice.ConsensusMessageLogServiceDefaultImpl<org.neo4j.token.AbstractTokenHolderBase> abstractTokenHolderBaseConsensusMessageLogServiceDefaultImpl3 = new io.github.onograph.cluster.raft.logservice.ConsensusMessageLogServiceDefaultImpl<org.neo4j.token.AbstractTokenHolderBase>(
        clock0, fileSystemAbstraction1, path2);
    abstractTokenHolderBaseConsensusMessageLogServiceDefaultImpl3.stop();
  }

  @Test
  public void test1751() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1751");
    }
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionBlockLimiters.Configured configured1 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionBlockLimiters.Configured(
        (long) 1);
    boolean boolean3 = configured1.isCole(0L);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1752() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1752");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    java.lang.String[] strArray9 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet10 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray9);
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet11 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray9);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.AskToChange askToChange12 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.AskToChange(
        consensusNodeId0, (long) 9, (long) (short) -1, nodeGroupIdentifierSet11);
    org.junit.Assert.assertNotNull(strArray9);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet10);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet11);
  }

  @Test
  public void test1753() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1753");
    }
    io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta.MarshalChannelImplCMS marshalChannelImplCMS0 = io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta candidateTallyMeta1 = new io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta();
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId2 = null;
    boolean boolean4 = candidateTallyMeta1.isUpaForCo(consensusNodeId2, (long) 2);
    long long5 = marshalChannelImplCMS0.ordinal(candidateTallyMeta1);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS0);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 2L + "'", long5 == 2L);
  }

  @Test
  public void test1754() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1754");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    io.github.onograph.dbms.ClusterDatabaseManagementException clusterDatabaseManagementException2 = new io.github.onograph.dbms.ClusterDatabaseManagementException(
        "store_version");
    io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure startFailure3 = new io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure(
        (java.lang.Throwable) clusterDatabaseManagementException2);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException gdbStoreSyncCrlException5 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException(
        (java.lang.Exception) startFailure3, "user-defined");
    org.neo4j.dbms.OperatorState operatorState6 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper discoveryGdbOperatorMetaWrapper7 = new io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper(
        databaseId0, (java.lang.Throwable) startFailure3, operatorState6);
    io.github.onograph.cluster.raft.share.sync.SyncMeta syncMeta8 = io.github.onograph.cluster.raft.share.sync.SyncMeta.marcSyncMeta(
        (java.lang.Throwable) startFailure3);
    org.junit.Assert.assertNotNull(syncMeta8);
  }

  @Test
  public void test1755() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1755");
    }
    org.neo4j.graphdb.config.Setting<io.github.onograph.config.SettingsDeclarationClusterImpl.LeadershipBalancingApproachType> leadershipBalancingApproachTypeSetting0 = io.github.onograph.config.SettingsDeclarationClusterImpl.settingLernLeadershipBalancingApproachType;
    org.junit.Assert.assertNotNull(leadershipBalancingApproachTypeSetting0);
  }

  @Test
  public void test1756() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1756");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType messageDataType0 = io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType.CON_ENT_TMS;
    org.junit.Assert.assertTrue("'" + messageDataType0 + "' != '"
            + io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType.CON_ENT_TMS + "'",
        messageDataType0.equals(
            io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType.CON_ENT_TMS));
  }

  @Test
  public void test1757() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1757");
    }
    org.neo4j.kernel.database.DatabaseTracers databaseTracers0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.memory.MemoryTracker memoryTracker2 = null;
    org.neo4j.io.pagecache.PageCache pageCache3 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SyncRecoveryLifecycleAdapter syncRecoveryLifecycleAdapter4 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SyncRecoveryLifecycleAdapter(
        databaseTracers0, fileSystemAbstraction1, memoryTracker2, pageCache3);
    syncRecoveryLifecycleAdapter4.start();
    syncRecoveryLifecycleAdapter4.init();
    org.neo4j.configuration.Config config7 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout8 = null;
    org.neo4j.storageengine.api.StorageEngineFactory storageEngineFactory10 = null;
    try {
      boolean boolean11 = syncRecoveryLifecycleAdapter4.isCarcreseForCoDaSt(config7,
          databaseLayout8, (long) (short) -1, storageEngineFactory10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1758() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1758");
    }
    org.neo4j.kernel.database.DatabaseTracers databaseTracers0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.memory.MemoryTracker memoryTracker2 = null;
    org.neo4j.io.pagecache.PageCache pageCache3 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SyncRecoveryLifecycleAdapter syncRecoveryLifecycleAdapter4 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SyncRecoveryLifecycleAdapter(
        databaseTracers0, fileSystemAbstraction1, memoryTracker2, pageCache3);
    syncRecoveryLifecycleAdapter4.start();
    syncRecoveryLifecycleAdapter4.start();
    org.neo4j.configuration.Config config7 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout8 = null;
    org.neo4j.storageengine.api.StorageEngineFactory storageEngineFactory9 = null;
    try {
      syncRecoveryLifecycleAdapter4.reecoForCoDaSt(config7, databaseLayout8, storageEngineFactory9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1759() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1759");
    }
    org.neo4j.configuration.Config config0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.logging.LogProvider logProvider2 = null;
    java.nio.file.Path path3 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo4 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path3);
    java.nio.file.Path path5 = clusterMetaTopologyInfo4.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker6 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo4);
    org.neo4j.memory.MemoryTracker memoryTracker7 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade8 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config0, fileSystemAbstraction1, logProvider2, clusterMetaTopologyInfo4, memoryTracker7);
    try {
      java.nio.file.Path path10 = clusterMetaTopologyInfo4.ragridfPath(
          "cc-core-restart-needed-listener-timer");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo4);
    org.junit.Assert.assertNull(path5);
  }

  @Test
  public void test1760() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1760");
    }
    io.github.onograph.cluster.raft.module.cuprot.current.rtx.RequestTransactionSyncMessageToByteEncoder requestTransactionSyncMessageToByteEncoder0 = new io.github.onograph.cluster.raft.module.cuprot.current.rtx.RequestTransactionSyncMessageToByteEncoder();
    io.netty.channel.ChannelHandlerContext channelHandlerContext1 = null;
    io.netty.channel.ChannelPromise channelPromise2 = null;
    try {
      requestTransactionSyncMessageToByteEncoder0.close(channelHandlerContext1, channelPromise2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1761() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1761");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogMetaLRUCacheManager consensusTransactionLogMetaLRUCacheManager1 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogMetaLRUCacheManager(
        (int) (short) 1);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogMetaLRUCacheManager.ConsensusTransactionLogInfo consensusTransactionLogInfo3 = consensusTransactionLogMetaLRUCacheManager1.gematConsensusTransactionLogMetaLRUCacheManagerConsensusTransactionLogInfo(
        100L);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogMetaLRUCacheManager consensusTransactionLogMetaLRUCacheManager7 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogMetaLRUCacheManager(
        (int) (byte) 1);
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager10 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    org.neo4j.io.fs.ReadableChannel readableChannel11 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl12 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel11);
    readablePositionAwareChecksumChannelManager10.deettoForRe(
        (org.neo4j.kernel.impl.transaction.log.ReadableClosablePositionAwareChecksumChannel) readableClosablePositionAwareChecksumChannelPassThruImpl12);
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition14 = readablePositionAwareChecksumChannelManager10.getCurrentPosition();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogMetaLRUCacheManager.ConsensusTransactionLogInfo consensusTransactionLogInfo15 = consensusTransactionLogMetaLRUCacheManager7.cahmedaConsensusTransactionLogMetaLRUCacheManagerConsensusTransactionLogInfo(
        (long) (byte) 9, 1L, logPosition14);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogMetaLRUCacheManager.ConsensusTransactionLogInfo consensusTransactionLogInfo16 = consensusTransactionLogMetaLRUCacheManager1.cahmedaConsensusTransactionLogMetaLRUCacheManagerConsensusTransactionLogInfo(
        (long) 10, (long) (byte) 3, logPosition14);
    org.junit.Assert.assertNull(consensusTransactionLogInfo3);
    org.junit.Assert.assertNotNull(logPosition14);
    org.junit.Assert.assertNotNull(consensusTransactionLogInfo15);
    org.junit.Assert.assertNotNull(consensusTransactionLogInfo16);
  }

  @Test
  public void test1762() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1762");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    io.github.onograph.dbms.ClusterDatabaseManagementException clusterDatabaseManagementException2 = new io.github.onograph.dbms.ClusterDatabaseManagementException(
        "store_version");
    org.neo4j.dbms.api.DatabaseManagementException databaseManagementException3 = org.neo4j.dbms.api.DatabaseManagementException.wrap(
        (java.lang.Throwable) clusterDatabaseManagementException2);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException gdbStoreSyncCrlException5 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException(
        (java.lang.Exception) clusterDatabaseManagementException2, "protocols");
    org.neo4j.dbms.OperatorState operatorState6 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper discoveryGdbOperatorMetaWrapper7 = new io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper(
        databaseId0, (java.lang.Throwable) gdbStoreSyncCrlException5, operatorState6);
    io.github.onograph.cluster.raft.share.meta.cm.ClusterSyncerException clusterSyncerException9 = new io.github.onograph.cluster.raft.share.meta.cm.ClusterSyncerException(
        (java.lang.Throwable) gdbStoreSyncCrlException5, "status");
    org.junit.Assert.assertNotNull(databaseManagementException3);
  }

  @Test
  public void test1763() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1763");
    }
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS0 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta1 = marshalChannelImplCMS0.startState();
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS2 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta3 = marshalChannelImplCMS2.startState();
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta4 = nodeServerMemberTransactionLogDataMeta3.neitcNodeServerMemberTransactionLogDataMeta();
    nodeServerMemberTransactionLogDataMeta4.init();
    io.netty.buffer.ByteBuf byteBuf6 = null;
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel7 = new io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel(
        byteBuf6);
    defaultWritableChecksumChannel7.beginChecksum();
    try {
      marshalChannelImplCMS0.marshal(nodeServerMemberTransactionLogDataMeta4,
          (org.neo4j.io.fs.WritableChannel) defaultWritableChecksumChannel7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(marshalChannelImplCMS0);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta1);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS2);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta3);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta4);
  }

  @Test
  public void test1764() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1764");
    }
    org.neo4j.graphdb.config.Setting<java.lang.Integer> intSetting0 = io.github.onograph.config.SettingsDeclarationClusterSystemImpl.settingRaneaInteger;
    org.junit.Assert.assertNotNull(intSetting0);
  }

  @Test
  public void test1765() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1765");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray5 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry4};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction6 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray5);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction7 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 100, 1536L, consensusLogEntryArray5);
    io.github.onograph.cluster.raft.share.calg.action.BulkAddAction bulkAddAction10 = new io.github.onograph.cluster.raft.share.calg.action.BulkAddAction(
        consensusLogEntryArray5, (long) (byte) 0, (int) (short) 1);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl11 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry12 = null;
    consensusLogCacheServiceNoopImpl11.putForCo(consensusLogEntry12, (long) '#');
    long long15 = consensusLogCacheServiceNoopImpl11.toabys();
    org.neo4j.logging.Log log16 = null;
    bulkAddAction10.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceNoopImpl11,
        log16);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray18 = bulkAddAction10.enrsConsensusLogEntryArray;
    io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog inMemoryConsensusTransactionLog19 = new io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog();
    long long21 = inMemoryConsensusTransactionLog19.prn((long) 1536);
    long long23 = inMemoryConsensusTransactionLog19.redettm(0L);
    io.github.onograph.cluster.raft.share.calg.cle.DelegatingConsensusTransactionLog delegatingConsensusTransactionLog24 = new io.github.onograph.cluster.raft.share.calg.cle.DelegatingConsensusTransactionLog(
        (io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLog) inMemoryConsensusTransactionLog19);
    org.neo4j.logging.Log log25 = null;
    bulkAddAction10.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLog) delegatingConsensusTransactionLog24,
        log25);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntryRawCursor consensusLogEntryRawCursor28 = delegatingConsensusTransactionLog24.geercuoConsensusLogEntryRawCursor(
        (long) (byte) 8);
    org.junit.Assert.assertNotNull(consensusLogEntryArray5);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    org.junit.Assert.assertNotNull(consensusLogEntryArray18);
    org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1536L + "'", long21 == 1536L);
    org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
    org.junit.Assert.assertNotNull(consensusLogEntryRawCursor28);
  }

  @Test
  public void test1766() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1766");
    }
    io.github.onograph.cluster.raft.share.meta.MetaType metaType0 = io.github.onograph.cluster.raft.share.meta.MetaType.MT_CONS_MNODE_DIR;
    org.junit.Assert.assertTrue("'" + metaType0 + "' != '"
            + io.github.onograph.cluster.raft.share.meta.MetaType.MT_CONS_MNODE_DIR + "'",
        metaType0.equals(io.github.onograph.cluster.raft.share.meta.MetaType.MT_CONS_MNODE_DIR));
  }

  @Test
  public void test1767() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1767");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.GdbDiscoveryMetaReadReplicaMarshal gdbDiscoveryMetaReadReplicaMarshal0 = io.github.onograph.cluster.raft.module.dprot.impl.serialize.GdbDiscoveryMetaReadReplicaMarshal.IT;
    org.neo4j.io.fs.ReadableChannel readableChannel1 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl2 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel1);
    readableClosablePositionAwareChecksumChannelPassThruImpl2.beginChecksum();
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition4 = readableClosablePositionAwareChecksumChannelPassThruImpl2.getCurrentPosition();
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl5 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl2);
    try {
      io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl6 = gdbDiscoveryMetaReadReplicaMarshal0.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(gdbDiscoveryMetaReadReplicaMarshal0);
    org.junit.Assert.assertNotNull(logPosition4);
  }

  @Test
  public void test1768() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1768");
    }
    io.github.onograph.cluster.raft.share.calg.ConsensusOperationsManager consensusOperationsManager0 = null;
    io.github.onograph.cluster.raft.share.AccessCapabilityMutatingLeader accessCapabilityMutatingLeader1 = new io.github.onograph.cluster.raft.share.AccessCapabilityMutatingLeader(
        consensusOperationsManager0);
    try {
      accessCapabilityMutatingLeader1.assertCanWrite();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1769() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1769");
    }
    java.util.ArrayList<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessor<io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS>> marshalChannelImplCMSRuleProcessorList0 = new java.util.ArrayList<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessor<io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS>>();
    io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS> marshalChannelImplCMSRuleProcessorJoiningImpl1 = new io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS>(
        (java.util.List<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessor<io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS>>) marshalChannelImplCMSRuleProcessorList0);
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS2 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS3 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS[] marshalChannelImplCMSArray4 = new io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS[]{
        marshalChannelImplCMS2, marshalChannelImplCMS3};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS> marshalChannelImplCMSSet5 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS>) marshalChannelImplCMSSet5,
        marshalChannelImplCMSArray4);
    java.util.Set<io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS> marshalChannelImplCMSSet7 = marshalChannelImplCMSRuleProcessorJoiningImpl1.aplSet(
        (java.util.Set<io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS>) marshalChannelImplCMSSet5);
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler8 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl9 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.rtx.CatchupIncomingTransactionReplySimpleChannelInboundHandler catchupIncomingTransactionReplySimpleChannelInboundHandler10 = new io.github.onograph.cluster.raft.module.cuprot.current.rtx.CatchupIncomingTransactionReplySimpleChannelInboundHandler(
        catchupAnswerLimitHandler8, refCatchupManagerImpl9);
    boolean boolean11 = marshalChannelImplCMSRuleProcessorJoiningImpl1.equals(
        (java.lang.Object) refCatchupManagerImpl9);
    org.neo4j.configuration.helpers.SocketAddress[] socketAddressArray12 = new org.neo4j.configuration.helpers.SocketAddress[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress> socketAddressList13 = new java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress>();
    boolean boolean14 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList13,
        socketAddressArray12);
    io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService15 = io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddressManagerDefaultImpl.reoeMemberNodeService(
        (java.util.List<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList13);
    boolean boolean16 = memberNodeService15.isRevoevjoat();
    boolean boolean17 = marshalChannelImplCMSRuleProcessorJoiningImpl1.equals(
        (java.lang.Object) memberNodeService15);
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal databaseIdOnlySafeChannelMarshal18 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.DatabaseIdOnlySafeChannelMarshal();
    boolean boolean19 = marshalChannelImplCMSRuleProcessorJoiningImpl1.equals(
        (java.lang.Object) databaseIdOnlySafeChannelMarshal18);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS2);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS3);
    org.junit.Assert.assertNotNull(marshalChannelImplCMSArray4);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    org.junit.Assert.assertNotNull(marshalChannelImplCMSSet7);
    //org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(socketAddressArray12);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertNotNull(memberNodeService15);
    //org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    //org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    //org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test1770() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1770");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogMetaLRUCacheManager consensusTransactionLogMetaLRUCacheManager1 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogMetaLRUCacheManager(
        (int) (byte) 1);
    consensusTransactionLogMetaLRUCacheManager1.cla();
    consensusTransactionLogMetaLRUCacheManager1.cla();
    consensusTransactionLogMetaLRUCacheManager1.cla();
  }

  @Test
  public void test1771() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1771");
    }
    io.github.onograph.cluster.raft.netty.CurrentProtocolStackManager currentProtocolStackManager0 = new io.github.onograph.cluster.raft.netty.CurrentProtocolStackManager();
    io.netty.channel.ChannelHandlerContext channelHandlerContext1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.StoreIdSafeChannelMarshal storeIdSafeChannelMarshal2 = io.github.onograph.cluster.raft.akkamsg.serialization.StoreIdSafeChannelMarshal.IT;
    try {
      currentProtocolStackManager0.userEventTriggered(channelHandlerContext1,
          (java.lang.Object) storeIdSafeChannelMarshal2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(storeIdSafeChannelMarshal2);
  }

  @Test
  public void test1772() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1772");
    }
    io.github.onograph.cluster.raft.share.calg.ConsensusOperationsManager consensusOperationsManager0 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureService coreClusterStructureService2 = null;
    io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureServiceLifecycleAdapter coreClusterStructureServiceLifecycleAdapter3 = new io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureServiceLifecycleAdapter(
        consensusOperationsManager0, namedDatabaseId1, coreClusterStructureService2);
    coreClusterStructureServiceLifecycleAdapter3.onungt();
    try {
      coreClusterStructureServiceLifecycleAdapter3.onldsedn((long) 1000);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1773() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1773");
    }
    byte[] byteArray1 = new byte[]{(byte) 1};
    io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService chunkedInputEncodingService3 = new io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService(
        byteArray1, true);
    long long4 = chunkedInputEncodingService3.progress();
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[1]");
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
  }

  @Test
  public void test1774() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1774");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl messageProcessorImpl0 = io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl.SUPTL_MESSAGE_PROCESSOR_IMPL;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg1 = null;
    java.lang.Boolean boolean2 = messageProcessorImpl0.process(aliveMsg1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.VotePreparationMessage.Ask ask3 = null;
    java.lang.Boolean boolean4 = messageProcessorImpl0.process(ask3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RequestTransactionLogCZMetaMessage requestTransactionLogCZMetaMessage5 = null;
    java.lang.Boolean boolean6 = messageProcessorImpl0.process(requestTransactionLogCZMetaMessage5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderNotAccepted leaderNotAccepted7 = null;
    java.lang.Boolean boolean8 = messageProcessorImpl0.process(leaderNotAccepted7);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk9 = null;
    java.lang.Boolean boolean10 = messageProcessorImpl0.process(bulkAsk9);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage11 = null;
    java.lang.Boolean boolean12 = messageProcessorImpl0.process(logClipRequestMessage11);
    org.junit.Assert.assertNotNull(messageProcessorImpl0);
    org.junit.Assert.assertEquals("'" + boolean2 + "' != '" + true + "'", boolean2, true);
    org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
    org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
    org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + true + "'", boolean8, true);
    org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + true + "'", boolean10, true);
    org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
  }

  @Test
  public void test1775() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1775");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout consensusElectionTimeout1 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout(
        consensusNodeId0);
    boolean boolean2 = consensusElectionTimeout1.getIsOr();
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel3 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl4 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl5 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel3, safeStateMarshalImpl4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk6 = null;
    java.lang.Void void7 = processorImpl5.process(bulkAsk6);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage8 = null;
    java.lang.Void void9 = processorImpl5.process(logClipRequestMessage8);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage10 = null;
    java.lang.Void void11 = processorImpl5.process(aliveReplyMessage10);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId12 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId13 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier14 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray15 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier14};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet16 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean17 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet16,
        nodeGroupIdentifierArray15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec18 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId12, consensusNodeId13,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet16);
    java.lang.Void void19 = processorImpl5.process(leaderRec18);
    java.lang.Void void20 = consensusElectionTimeout1.dipc(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception>) processorImpl5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderNotAccepted leaderNotAccepted21 = null;
    try {
      java.lang.Object obj22 = processorImpl5.process(leaderNotAccepted21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNull(void7);
    org.junit.Assert.assertNull(void9);
    org.junit.Assert.assertNull(void11);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier14);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray15);
    //org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNull(void19);
    org.junit.Assert.assertNull(void20);
  }

  @Test
  public void test1776() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1776");
    }
    org.neo4j.graphdb.config.Setting<java.lang.Integer> intSetting0 = io.github.onograph.config.SettingsDeclarationClusterSystemImpl.settingMieaetlseInteger;
    org.junit.Assert.assertNotNull(intSetting0);
  }

  @Test
  public void test1777() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1777");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.ReadReplicateGdbMetaSafeChannelMarshal readReplicateGdbMetaSafeChannelMarshal0 = io.github.onograph.cluster.raft.module.dprot.impl.serialize.ReadReplicateGdbMetaSafeChannelMarshal.IT;
    org.neo4j.kernel.database.DatabaseId databaseId1 = null;
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap2 = null;
    io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta readReplicateGdbMeta3 = io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta.ofcosReadReplicateGdbMeta(
        databaseId1, serverIdMap2);
    java.util.Map<org.neo4j.dbms.identity.ServerId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> serverIdMap4 = readReplicateGdbMeta3.getMapMssd();
    boolean boolean5 = readReplicateGdbMeta3.getIsSc();
    org.neo4j.io.fs.WritableChannel writableChannel6 = null;
    io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl writableChecksumChannelImpl7 = new io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl(
        writableChannel6);
    int int8 = writableChecksumChannelImpl7.putChecksum();
    try {
      readReplicateGdbMetaSafeChannelMarshal0.marshal(readReplicateGdbMeta3,
          (org.neo4j.io.fs.WritableChannel) writableChecksumChannelImpl7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(readReplicateGdbMetaSafeChannelMarshal0);
    org.junit.Assert.assertNotNull(readReplicateGdbMeta3);
    org.junit.Assert.assertNull(serverIdMap4);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test1778() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1778");
    }
    byte[] byteArray1 = new byte[]{(byte) 9};
    org.neo4j.kernel.database.DatabaseId databaseId2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType4 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData5 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray1, databaseId2, "name", replicaTokenType4);
    org.neo4j.kernel.database.DatabaseId databaseId6 = requestData5.daasidDatabaseId();
    io.github.onograph.cluster.raft.share.sync.SessionSeqActionId sessionSeqActionId7 = null;
    java.util.UUID uUID8 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy9 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean10 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID8, consensusNodeIdLazy9);
    io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl syncStatusMetaServiceImpl11 = new io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl(
        clusterSessionBean10);
    java.util.UUID uUID12 = clusterSessionBean10.getIsUUID();
    io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction dataSyncClusterAction13 = new io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction(
        (io.github.onograph.cluster.raft.share.sync.SyncableData) requestData5, sessionSeqActionId7,
        clusterSessionBean10);
    io.netty.buffer.ByteBuf byteBuf14 = null;
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel15 = new io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel(
        byteBuf14);
    defaultWritableChecksumChannel15.beginChecksum();
    io.netty.buffer.ByteBuf byteBuf17 = defaultWritableChecksumChannel15.byebfByteBuf();
    try {
      dataSyncClusterAction13.maamadForWr(
          (org.neo4j.io.fs.WritableChannel) defaultWritableChecksumChannel15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[9]");
    org.junit.Assert.assertNull(databaseId6);
    org.junit.Assert.assertNull(uUID12);
    org.junit.Assert.assertNull(byteBuf17);
  }

  @Test
  public void test1779() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1779");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResourceSyncProcessor storeResourceSyncProcessor1 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResourceSyncProcessor(
        2);
    io.netty.channel.ChannelHandlerContext channelHandlerContext2 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType setupGdbSyncReplyStateType4 = io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType.SYNC_GENERAL_ERR;
    try {
      io.netty.util.concurrent.Future<java.lang.Void> voidFuture5 = storeResourceSyncProcessor1.endFuture(
          channelHandlerContext2, (long) (byte) 3, setupGdbSyncReplyStateType4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + setupGdbSyncReplyStateType4 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType.SYNC_GENERAL_ERR
        + "'", setupGdbSyncReplyStateType4.equals(
        io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType.SYNC_GENERAL_ERR));
  }

  @Test
  public void test1780() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1780");
    }
    java.security.SecureRandom secureRandom1 = null;
    try {
      io.github.onograph.cluster.raft.module.dprot.KeyStorePassword keyStorePassword2 = new io.github.onograph.cluster.raft.module.dprot.KeyStorePassword(
          1002, secureRandom1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1781() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1781");
    }
    io.github.onograph.dbms.ClusterDatabaseManagementException clusterDatabaseManagementException1 = new io.github.onograph.dbms.ClusterDatabaseManagementException(
        "store_version");
    io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure startFailure2 = new io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure(
        (java.lang.Throwable) clusterDatabaseManagementException1);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException gdbStoreSyncCrlException4 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException(
        (java.lang.Exception) startFailure2, "user-defined");
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreException gdbStoreException6 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreException(
        (java.lang.Throwable) startFailure2, "initial_members");
  }

  @Test
  public void test1782() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1782");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.info.RequestMeta requestMeta1 = new io.github.onograph.cluster.raft.module.cuprot.current.info.RequestMeta(
        namedDatabaseId0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = requestMeta1.getNamedDatabaseId();
    java.lang.String str3 = requestMeta1.decbString();
    org.junit.Assert.assertNull(namedDatabaseId2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RequestMeta" + "'", str3, "RequestMeta");
  }

  @Test
  public void test1783() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1783");
    }
    java.time.Clock clock0 = null;
    java.time.Duration duration1 = null;
    try {
      io.github.onograph.cluster.raft.share.calg.nltof.TransferCollection<io.github.onograph.cluster.raft.share.calg.ResettableMessageTimerMessageSpacingImpl> resettableMessageTimerMessageSpacingImplTransferCollection2 = new io.github.onograph.cluster.raft.share.calg.nltof.TransferCollection<io.github.onograph.cluster.raft.share.calg.ResettableMessageTimerMessageSpacingImpl>(
          clock0, duration1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1784() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1784");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.EmptyReq> emptyReqFSMEmptyReq0 = null;
    java.lang.Runnable runnable1 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl3 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable1, leasableMetaStateStorage2);
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta leasableMeta4 = io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta.INTL_LES_STAX;
    syncableLeasableCoreNodeDataFSMImpl3.inlspForLe(leasableMeta4);
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta leasableMeta6 = syncableLeasableCoreNodeDataFSMImpl3.snpoLeasableMeta();
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl7 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl8 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.ReplicatedTransactionFSM replicatedTransactionFSM9 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier12 = null;
    java.util.function.Supplier<org.neo4j.kernel.impl.transaction.log.LogicalTransactionStore> logicalTransactionStoreSupplier13 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair transactionLogIndexRepair14 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair(
        logProvider11, transactionIdStoreSupplier12, logicalTransactionStoreSupplier13);
    io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService coreGdbFSMService15 = new io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService(
        emptyReqFSMEmptyReq0, syncableLeasableCoreNodeDataFSMImpl3, fSMTokenImpl7, fSMTokenImpl8,
        replicatedTransactionFSM9, fSMTokenImpl10, transactionLogIndexRepair14);
    io.github.onograph.cluster.raft.share.meta.pit.SnapshotData snapshotData18 = new io.github.onograph.cluster.raft.share.meta.pit.SnapshotData(
        100L, (long) 1016);
    coreGdbFSMService15.inlspForSn(snapshotData18);
    org.junit.Assert.assertNotNull(leasableMeta4);
    org.junit.Assert.assertNotNull(leasableMeta6);
  }

  @Test
  public void test1785() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1785");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogMetaLRUCacheManager consensusTransactionLogMetaLRUCacheManager1 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogMetaLRUCacheManager(
        (int) (short) 1);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogMetaLRUCacheManager.ConsensusTransactionLogInfo consensusTransactionLogInfo3 = consensusTransactionLogMetaLRUCacheManager1.gematConsensusTransactionLogMetaLRUCacheManagerConsensusTransactionLogInfo(
        100L);
    consensusTransactionLogMetaLRUCacheManager1.reouto(1000L);
    org.junit.Assert.assertNull(consensusTransactionLogInfo3);
  }

  @Test
  public void test1786() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1786");
    }
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray0 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.LinkedHashSet<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdSet1 = new java.util.LinkedHashSet<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean2 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdSet1,
        namedDatabaseIdArray0);
    io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIds allGdbIds3 = new io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIds(
        (java.util.Set<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdSet1);
    org.neo4j.kernel.impl.transaction.log.PhysicalTransactionRepresentation physicalTransactionRepresentation4 = null;
    org.neo4j.kernel.database.DatabaseId databaseId5 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.AbstractTransactionSync abstractTransactionSync7 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.AbstractTransactionSync(
        physicalTransactionRepresentation4, databaseId5, (long) (short) 0);
    org.neo4j.kernel.database.DatabaseId databaseId8 = abstractTransactionSync7.daasidDatabaseId();
    boolean boolean9 = allGdbIds3.equals((java.lang.Object) databaseId8);
    java.util.Set<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdSet10 = allGdbIds3.getSetDiNamedDatabaseId();
    org.junit.Assert.assertNotNull(namedDatabaseIdArray0);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNull(databaseId8);
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(namedDatabaseIdSet10);
  }

  @Test
  public void test1787() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1787");
    }
    org.neo4j.kernel.impl.transaction.log.entry.LogEntryReader logEntryReader0 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.SyncableDataMessageToMessageDecoderImpl syncableDataMessageToMessageDecoderImpl1 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.SyncableDataMessageToMessageDecoderImpl(
        logEntryReader0);
    try {
      io.github.onograph.cluster.raft.akkamsg.serialization.DataManagerFactory<io.github.onograph.cluster.raft.share.sync.SyncableData> syncableDataDataManagerFactory2 = syncableDataMessageToMessageDecoderImpl1.cracttDataManagerFactory();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalStateException; message: *** Error:  13bbb721-a664-43f3-b39f-8fe832364154");
    } catch (java.lang.IllegalStateException e) {
    }
  }

  @Test
  public void test1788() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1788");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray5 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry4};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction6 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray5);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction7 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 100, 1536L, consensusLogEntryArray5);
    io.github.onograph.cluster.raft.share.calg.action.BulkAddAction bulkAddAction10 = new io.github.onograph.cluster.raft.share.calg.action.BulkAddAction(
        consensusLogEntryArray5, (long) (byte) 0, (int) (short) 1);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl11 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry12 = null;
    consensusLogCacheServiceNoopImpl11.putForCo(consensusLogEntry12, (long) '#');
    long long15 = consensusLogCacheServiceNoopImpl11.toabys();
    org.neo4j.logging.Log log16 = null;
    bulkAddAction10.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceNoopImpl11,
        log16);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray18 = bulkAddAction10.enrsConsensusLogEntryArray;
    io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog inMemoryConsensusTransactionLog19 = new io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog();
    long long21 = inMemoryConsensusTransactionLog19.prn((long) 1536);
    long long23 = inMemoryConsensusTransactionLog19.redettm(0L);
    io.github.onograph.cluster.raft.share.calg.cle.DelegatingConsensusTransactionLog delegatingConsensusTransactionLog24 = new io.github.onograph.cluster.raft.share.calg.cle.DelegatingConsensusTransactionLog(
        (io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLog) inMemoryConsensusTransactionLog19);
    org.neo4j.logging.Log log25 = null;
    bulkAddAction10.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLog) delegatingConsensusTransactionLog24,
        log25);
    long long27 = delegatingConsensusTransactionLog24.apeie();
    long long28 = delegatingConsensusTransactionLog24.apeie();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntryRawCursor consensusLogEntryRawCursor30 = delegatingConsensusTransactionLog24.geercuoConsensusLogEntryRawCursor(
        (long) 2);
    org.junit.Assert.assertNotNull(consensusLogEntryArray5);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    org.junit.Assert.assertNotNull(consensusLogEntryArray18);
    org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1536L + "'", long21 == 1536L);
    org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
    org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
    org.junit.Assert.assertNotNull(consensusLogEntryRawCursor30);
  }

  @Test
  public void test1789() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1789");
    }
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreDatabaseIdMessageToByteEncoder requestStoreDatabaseIdMessageToByteEncoder0 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreDatabaseIdMessageToByteEncoder();
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS marshalChannelImplCMS1 = io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta candidateTermMeta2 = marshalChannelImplCMS1.startState();
    boolean boolean3 = requestStoreDatabaseIdMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) marshalChannelImplCMS1);
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta candidateTermMeta4 = new io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta();
    long long5 = marshalChannelImplCMS1.ordinal(candidateTermMeta4);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS1);
    org.junit.Assert.assertNotNull(candidateTermMeta2);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
  }

  @Test
  public void test1790() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1790");
    }
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl2 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel0, safeStateMarshalImpl1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk3 = null;
    java.lang.Void void4 = processorImpl2.process(bulkAsk3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage5 = null;
    java.lang.Void void6 = processorImpl2.process(logClipRequestMessage5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage7 = null;
    java.lang.Void void8 = processorImpl2.process(aliveReplyMessage7);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId9 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId10 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.CandidateVoteMessage.Ask ask14 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.CandidateVoteMessage.Ask(
        consensusNodeId9, consensusNodeId10, (long) '4', (long) (short) -1, 1L);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId15 = ask14.getCniaeConsensusNodeId();
    long long16 = ask14.getLgIll();
    try {
      java.lang.Void void17 = processorImpl2.process(ask14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(void4);
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(void8);
    org.junit.Assert.assertNull(consensusNodeId15);
    org.junit.Assert.assertTrue("'" + long16 + "' != '" + 52L + "'", long16 == 52L);
  }

  @Test
  public void test1791() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1791");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Reply reply5 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Reply(
        consensusNodeId0, false, (long) (short) -1, (long) 4, (long) (short) 100);
  }

  @Test
  public void test1792() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1792");
    }
    org.neo4j.logging.internal.LogService logService0 = null;
    io.github.onograph.cluster.raft.share.NodeServerInfoLogService nodeServerInfoLogService2 = new io.github.onograph.cluster.raft.share.NodeServerInfoLogService(
        logService0, "hi!");
    java.lang.String str3 = nodeServerInfoLogService2.getStrNs();
    org.neo4j.configuration.Config config4 = null;
    try {
      io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService5 = io.github.onograph.cluster.raft.module.dprot.MemberNodeServiceK8Impl.reoeMemberNodeService(
          (org.neo4j.logging.internal.LogService) nodeServerInfoLogService2, config4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
  }

  @Test
  public void test1793() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1793");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.LivingCacheObserver livingCacheObserver0 = io.github.onograph.cluster.raft.share.calg.cle.cservice.LivingCacheObserver.VOI_LIVING_CACHE_OBSERVER;
    livingCacheObserver0.sememt((int) 'a');
    livingCacheObserver0.cacheMiss();
    org.junit.Assert.assertNotNull(livingCacheObserver0);
  }

  @Test
  public void test1794() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1794");
    }
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta> databaseIdMap0 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.id.ConsensusNodeId> databaseIdMap1 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, org.neo4j.dbms.DatabaseState> databaseIdMap2 = null;
    io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl gdbServerPointInTimeImpl3 = new io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl(
        databaseIdMap0, databaseIdMap1, databaseIdMap2);
    io.github.onograph.cluster.raft.module.cuprot.current.info.MetaByteToMessageDecoder metaByteToMessageDecoder4 = new io.github.onograph.cluster.raft.module.cuprot.current.info.MetaByteToMessageDecoder();
    io.netty.handler.codec.ByteToMessageDecoder.Cumulator cumulator5 = io.netty.handler.codec.ByteToMessageDecoder.COMPOSITE_CUMULATOR;
    metaByteToMessageDecoder4.setCumulator(cumulator5);
    boolean boolean7 = gdbServerPointInTimeImpl3.equals(
        (java.lang.Object) metaByteToMessageDecoder4);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.id.ConsensusNodeId> databaseIdMap8 = gdbServerPointInTimeImpl3.daammhMap();
    io.github.onograph.config.ConsensusLogCacheStrategyType consensusLogCacheStrategyType9 = io.github.onograph.config.ConsensusLogCacheStrategyType.ST_FOLLOWING_CT;
    boolean boolean10 = gdbServerPointInTimeImpl3.equals(
        (java.lang.Object) consensusLogCacheStrategyType9);
    org.junit.Assert.assertNotNull(cumulator5);
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNull(databaseIdMap8);
    org.junit.Assert.assertNotNull(consensusLogCacheStrategyType9);
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
  }

  @Test
  public void test1795() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1795");
    }
    io.github.onograph.cluster.raft.share.calg.action.TransactionLogActionMitImpl transactionLogActionMitImpl1 = new io.github.onograph.cluster.raft.share.calg.action.TransactionLogActionMitImpl(
        (long) ' ');
    long long2 = transactionLogActionMitImpl1.sourceIdx;
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 32L + "'", long2 == 32L);
  }

  @Test
  public void test1796() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1796");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl messageProcessorImpl0 = io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl.SUPTL_MESSAGE_PROCESSOR_IMPL;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg1 = null;
    java.lang.Boolean boolean2 = messageProcessorImpl0.process(aliveMsg1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RequestTransactionLogCZMetaMessage requestTransactionLogCZMetaMessage3 = null;
    java.lang.Boolean boolean4 = messageProcessorImpl0.process(requestTransactionLogCZMetaMessage3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.VotePreparationMessage.Ask ask5 = null;
    java.lang.Boolean boolean6 = messageProcessorImpl0.process(ask5);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel7 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl8 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl9 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel7, safeStateMarshalImpl8);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk10 = null;
    java.lang.Void void11 = processorImpl9.process(bulkAsk10);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage12 = null;
    java.lang.Void void13 = processorImpl9.process(logClipRequestMessage12);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage14 = null;
    java.lang.Void void15 = processorImpl9.process(aliveReplyMessage14);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId16 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId17 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier18 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray19 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier18};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet20 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean21 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet20,
        nodeGroupIdentifierArray19);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec22 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId16, consensusNodeId17,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet20);
    java.lang.Void void23 = processorImpl9.process(leaderRec22);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel24 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl25 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl26 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel24, safeStateMarshalImpl25);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk27 = null;
    java.lang.Void void28 = processorImpl26.process(bulkAsk27);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage29 = null;
    java.lang.Void void30 = processorImpl26.process(logClipRequestMessage29);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage31 = null;
    java.lang.Void void32 = processorImpl26.process(aliveReplyMessage31);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId33 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId34 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier35 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray36 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier35};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet37 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean38 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet37,
        nodeGroupIdentifierArray36);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec39 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId33, consensusNodeId34,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet37);
    java.lang.Void void40 = processorImpl26.process(leaderRec39);
    boolean boolean41 = leaderRec22.equals((java.lang.Object) leaderRec39);
    java.lang.Boolean boolean42 = messageProcessorImpl0.process(leaderRec39);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId43 = null;
    java.util.UUID uUID44 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.State state45 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.InfoReplyMessage infoReplyMessage46 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.InfoReplyMessage(
        consensusNodeId43, uUID44, state45);
    io.github.onograph.cluster.raft.share.meta.fsm.State state47 = infoReplyMessage46.getStat();
    io.netty.buffer.ByteBuf byteBuf48 = null;
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel49 = new io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel(
        byteBuf48);
    boolean boolean50 = infoReplyMessage46.equals((java.lang.Object) byteBuf48);
    java.lang.Boolean boolean51 = messageProcessorImpl0.process(infoReplyMessage46);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk52 = null;
    java.lang.Boolean boolean53 = messageProcessorImpl0.process(bulkAsk52);
    org.junit.Assert.assertNotNull(messageProcessorImpl0);
    org.junit.Assert.assertEquals("'" + boolean2 + "' != '" + true + "'", boolean2, true);
    org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
    org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
    org.junit.Assert.assertNull(void11);
    org.junit.Assert.assertNull(void13);
    org.junit.Assert.assertNull(void15);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier18);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray19);
    //org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNull(void23);
    org.junit.Assert.assertNull(void28);
    org.junit.Assert.assertNull(void30);
    org.junit.Assert.assertNull(void32);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier35);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray36);
    //org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertNull(void40);
    //org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
    org.junit.Assert.assertNull(state47);
    //org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + true + "'", boolean51, true);
    org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + true + "'", boolean53, true);
  }

  @Test
  public void test1797() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1797");
    }
    org.neo4j.graphdb.config.Setting<java.time.Duration> durationSetting1 = io.github.onograph.config.SettingsDeclarationClusterSystemImpl.settingCletqmutDuration;
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.NoComAction noComAction2 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.NoComAction(
        0L, (java.lang.Object) durationSetting1);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaByteToMessageDecoder sliceMetaByteToMessageDecoder3 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaByteToMessageDecoder();
    io.netty.channel.ChannelHandlerContext channelHandlerContext4 = null;
    sliceMetaByteToMessageDecoder3.handlerRemoved(channelHandlerContext4);
    boolean boolean6 = noComAction2.equals((java.lang.Object) sliceMetaByteToMessageDecoder3);
    io.netty.channel.ChannelHandlerContext channelHandlerContext7 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMeta sliceMeta10 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMeta(
        128, "");
    try {
      sliceMetaByteToMessageDecoder3.userEventTriggered(channelHandlerContext7,
          (java.lang.Object) sliceMeta10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(durationSetting1);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1798() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1798");
    }
    io.github.onograph.cluster.raft.share.meta.cm.ClusterMetaSyncManager.RequiresComponents requiresComponents0 = io.github.onograph.cluster.raft.share.meta.cm.ClusterMetaSyncManager.bulClusterMetaSyncManagerRequiresComponents();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade2 = null;
    org.neo4j.logging.Log log3 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade4 = null;
    java.util.function.Function<org.neo4j.kernel.database.NamedDatabaseId, io.github.onograph.cluster.raft.share.calg.LeaderNodeEventHandlers> namedDatabaseIdFunction5 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule6 = null;
    org.neo4j.memory.MemoryTracker memoryTracker7 = null;
    java.nio.file.Path path8 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo9 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path8);
    io.github.onograph.config.NodeGroupIdentifierSetSupplier nodeGroupIdentifierSetSupplier10 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.LeaderGatekeeper leaderGatekeeper11 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder consensusNodeGroupWrapperBuilder12 = new io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder(
        clusterSimpleStorageFacade4, namedDatabaseIdFunction5, globalModule6, memoryTracker7,
        clusterMetaTopologyInfo9, nodeGroupIdentifierSetSupplier10, leaderGatekeeper11);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat13 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv14 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction1, clusterSimpleStorageFacade2, log3, clusterMetaTopologyInfo9,
        clusterMetaFormat13);
    java.nio.file.Path path15 = clusterMetaTopologyInfo9.getPscPath();
    io.github.onograph.cluster.raft.share.meta.cm.ClusterMetaSyncManager.RequiresComponents requiresComponents16 = io.github.onograph.cluster.raft.share.meta.cm.ClusterMetaSyncManager.bulClusterMetaSyncManagerRequiresComponents();
    org.neo4j.configuration.Config config17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.logging.LogProvider logProvider19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade21 = null;
    org.neo4j.logging.Log log22 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade23 = null;
    java.util.function.Function<org.neo4j.kernel.database.NamedDatabaseId, io.github.onograph.cluster.raft.share.calg.LeaderNodeEventHandlers> namedDatabaseIdFunction24 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule25 = null;
    org.neo4j.memory.MemoryTracker memoryTracker26 = null;
    java.nio.file.Path path27 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo28 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path27);
    io.github.onograph.config.NodeGroupIdentifierSetSupplier nodeGroupIdentifierSetSupplier29 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.LeaderGatekeeper leaderGatekeeper30 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder consensusNodeGroupWrapperBuilder31 = new io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder(
        clusterSimpleStorageFacade23, namedDatabaseIdFunction24, globalModule25, memoryTracker26,
        clusterMetaTopologyInfo28, nodeGroupIdentifierSetSupplier29, leaderGatekeeper30);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat32 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv33 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction20, clusterSimpleStorageFacade21, log22, clusterMetaTopologyInfo28,
        clusterMetaFormat32);
    org.neo4j.memory.MemoryTracker memoryTracker34 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade35 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config17, fileSystemAbstraction18, logProvider19, clusterMetaTopologyInfo28,
        memoryTracker34);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction36 = null;
    org.neo4j.configuration.Config config37 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction38 = null;
    org.neo4j.logging.LogProvider logProvider39 = null;
    java.nio.file.Path path40 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo41 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path40);
    java.nio.file.Path path42 = clusterMetaTopologyInfo41.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker43 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo41);
    org.neo4j.memory.MemoryTracker memoryTracker44 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade45 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config37, fileSystemAbstraction38, logProvider39, clusterMetaTopologyInfo41,
        memoryTracker44);
    org.neo4j.logging.Log log46 = null;
    java.nio.file.Path path47 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo48 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path47);
    java.nio.file.Path path49 = clusterMetaTopologyInfo48.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker50 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo48);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat51 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv52 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction36, clusterSimpleStorageFacade45, log46, clusterMetaTopologyInfo48,
        clusterMetaFormat51);
    java.util.function.Function<org.neo4j.kernel.database.NamedDatabaseId, io.github.onograph.cluster.raft.share.calg.LeaderNodeEventHandlers> namedDatabaseIdFunction53 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule54 = null;
    org.neo4j.memory.MemoryTracker memoryTracker55 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction56 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade57 = null;
    org.neo4j.logging.Log log58 = null;
    java.nio.file.Path path59 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo60 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path59);
    java.nio.file.Path path61 = clusterMetaTopologyInfo60.getPscPath();
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat62 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv63 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction56, clusterSimpleStorageFacade57, log58, clusterMetaTopologyInfo60,
        clusterMetaFormat62);
    org.neo4j.logging.Log log64 = upgradeMetaEnv63.getLog();
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo65 = upgradeMetaEnv63.getLscClusterMetaTopologyInfo();
    io.github.onograph.config.NodeGroupIdentifierSetSupplier nodeGroupIdentifierSetSupplier66 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.LeaderGatekeeper leaderGatekeeper67 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder consensusNodeGroupWrapperBuilder68 = new io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder(
        clusterSimpleStorageFacade45, namedDatabaseIdFunction53, globalModule54, memoryTracker55,
        clusterMetaTopologyInfo65, nodeGroupIdentifierSetSupplier66, leaderGatekeeper67);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction69 = null;
    org.neo4j.logging.LogProvider logProvider70 = null;
    io.github.onograph.cluster.raft.share.meta.cm.ClusterMetaSyncManager.Versioning versioning71 = requiresComponents16.asComponents(
        clusterMetaTopologyInfo28, clusterSimpleStorageFacade45, fileSystemAbstraction69,
        logProvider70);
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction72 = null;
    org.neo4j.logging.LogProvider logProvider73 = null;
    io.github.onograph.cluster.raft.share.meta.cm.ClusterMetaSyncManager.Versioning versioning74 = requiresComponents0.asComponents(
        clusterMetaTopologyInfo9, clusterSimpleStorageFacade45, fileSystemAbstraction72,
        logProvider73);
    org.junit.Assert.assertNotNull(requiresComponents0);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo9);
    org.junit.Assert.assertNull(path15);
    org.junit.Assert.assertNotNull(requiresComponents16);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo28);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo41);
    org.junit.Assert.assertNull(path42);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo48);
    org.junit.Assert.assertNull(path49);
    org.junit.Assert.assertNotNull(clusterMetaFormat51);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo60);
    org.junit.Assert.assertNull(path61);
    org.junit.Assert.assertNull(log64);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo65);
    org.junit.Assert.assertNotNull(versioning71);
    org.junit.Assert.assertNotNull(versioning74);
  }

  @Test
  public void test1799() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1799");
    }
    io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta candidateTallyMeta0 = new io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta();
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId1 = null;
    boolean boolean3 = candidateTallyMeta0.isUpaForCo(consensusNodeId1, (long) 2);
    io.github.onograph.cluster.raft.share.meta.MetaWrapper<io.github.onograph.cluster.raft.share.meta.pit.ConsensusMembershipState> consensusMembershipStateMetaWrapper4 = io.github.onograph.cluster.raft.share.meta.MetaWrapper.CONS_CND_STAX;
    boolean boolean5 = candidateTallyMeta0.equals(
        (java.lang.Object) consensusMembershipStateMetaWrapper4);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    org.junit.Assert.assertNotNull(consensusMembershipStateMetaWrapper4);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1800() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1800");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId[] consensusNodeIdArray1 = new io.github.onograph.cluster.raft.id.ConsensusNodeId[]{};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet2 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet2,
        consensusNodeIdArray1);
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper consensusNodeServerMemberIdWrapper4 = new io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper(
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet2);
    io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper memberIndexWrapper5 = new io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper(
        52L,
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet2);
    org.junit.Assert.assertNotNull(consensusNodeIdArray1);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1801() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1801");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.ident.GdbId gdbId1 = new io.github.onograph.cluster.raft.module.cuprot.current.ident.GdbId(
        databaseId0);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel2 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl3 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl4 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel2, safeStateMarshalImpl3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk5 = null;
    java.lang.Void void6 = processorImpl4.process(bulkAsk5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk7 = null;
    java.lang.Void void8 = processorImpl4.process(bulkAsk7);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId9 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout consensusElectionTimeout10 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout(
        consensusNodeId9);
    boolean boolean11 = consensusElectionTimeout10.getIsOr();
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel12 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl13 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl14 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel12, safeStateMarshalImpl13);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk15 = null;
    java.lang.Void void16 = processorImpl14.process(bulkAsk15);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage17 = null;
    java.lang.Void void18 = processorImpl14.process(logClipRequestMessage17);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage19 = null;
    java.lang.Void void20 = processorImpl14.process(aliveReplyMessage19);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId21 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId22 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier23 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray24 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier23};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet25 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean26 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet25,
        nodeGroupIdentifierArray24);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec27 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId21, consensusNodeId22,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet25);
    java.lang.Void void28 = processorImpl14.process(leaderRec27);
    java.lang.Void void29 = consensusElectionTimeout10.dipc(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception>) processorImpl14);
    java.lang.Void void30 = processorImpl4.process(consensusElectionTimeout10);
    boolean boolean31 = gdbId1.equals((java.lang.Object) consensusElectionTimeout10);
    boolean boolean33 = gdbId1.equals((java.lang.Object) "FollowerStates{}");
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(void8);
    //org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(void16);
    org.junit.Assert.assertNull(void18);
    org.junit.Assert.assertNull(void20);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier23);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray24);
    //org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertNull(void28);
    org.junit.Assert.assertNull(void29);
    org.junit.Assert.assertNull(void30);
    //org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    //org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
  }

  @Test
  public void test1802() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1802");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.nio.file.DirectoryStream.Filter<java.nio.file.Path> pathFilter1 = null;
    org.neo4j.io.pagecache.PageCache pageCache2 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResources storeResources3 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResources(
        fileSystemAbstraction0, pathFilter1, pageCache2);
    org.neo4j.kernel.impl.transaction.log.files.LogFiles logFiles4 = null;
    java.nio.file.Path path5 = null;
    org.neo4j.io.layout.DatabaseLayout databaseLayout6 = null;
    try {
      storeResources3.moetForPaDaLo(logFiles4, path5, databaseLayout6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1803() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1803");
    }
    akka.actor.ActorRef actorRef0 = null;
    akka.actor.ActorRef actorRef1 = null;
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses2 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress3 = null;
    java.lang.String[] strArray10 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet11 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray10);
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet12 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray10);
    org.neo4j.kernel.database.DatabaseId[] databaseIdArray13 = new org.neo4j.kernel.database.DatabaseId[]{};
    java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId> databaseIdSet14 = new java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId>();
    boolean boolean15 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.DatabaseId>) databaseIdSet14,
        databaseIdArray13);
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl16 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl(
        discoverySocketAddresses2, socketAddress3, nodeGroupIdentifierSet12,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet14);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> databaseIdMap17 = null;
    akka.actor.ActorRef actorRef18 = null;
    org.neo4j.dbms.identity.ServerId serverId19 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo updateReadReplicaInfo20 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo(
        actorRef1, gdbDiscoveryMetaReadReplicaImpl16, databaseIdMap17, actorRef18, serverId19);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> databaseIdMap21 = null;
    akka.actor.ActorRef actorRef22 = null;
    org.neo4j.dbms.identity.ServerId serverId23 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo updateReadReplicaInfo24 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo(
        actorRef0, gdbDiscoveryMetaReadReplicaImpl16, databaseIdMap21, actorRef22, serverId23);
    org.neo4j.dbms.identity.ServerId serverId25 = updateReadReplicaInfo24.getServerId();
    org.junit.Assert.assertNotNull(strArray10);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet11);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet12);
    org.junit.Assert.assertNotNull(databaseIdArray13);
    //org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNull(serverId25);
  }

  @Test
  public void test1804() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1804");
    }
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS0 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta1 = marshalChannelImplCMS0.startState();
    boolean boolean3 = nodeServerMemberTransactionLogDataMeta1.isTrnt((long) '#');
    io.github.onograph.cluster.raft.id.ConsensusNodeId[] consensusNodeIdArray6 = new io.github.onograph.cluster.raft.id.ConsensusNodeId[]{};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet7 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet7,
        consensusNodeIdArray6);
    io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper memberIndexWrapper9 = new io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper(
        (long) (byte) 8,
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet7);
    boolean boolean10 = nodeServerMemberTransactionLogDataMeta1.isApeForSe((long) 4,
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet7);
    io.github.onograph.cluster.raft.id.ConsensusNodeId[] consensusNodeIdArray12 = new io.github.onograph.cluster.raft.id.ConsensusNodeId[]{};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet13 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId>();
    boolean boolean14 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet13,
        consensusNodeIdArray12);
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper consensusNodeServerMemberIdWrapper15 = new io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper(
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet13);
    java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet16 = consensusNodeServerMemberIdWrapper15.gembsSet();
    boolean boolean17 = nodeServerMemberTransactionLogDataMeta1.isApeForSe((long) (byte) 6,
        consensusNodeIdSet16);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS0);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta1);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(consensusNodeIdArray6);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertNotNull(consensusNodeIdArray12);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertNotNull(consensusNodeIdSet16);
    //org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
  }

  @Test
  public void test1805() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1805");
    }
    io.netty.buffer.ByteBuf byteBuf0 = null;
    try {
      io.github.onograph.cluster.raft.akkamsg.serialization.BasicStringSerializationHandler.maslForBySt(
          byteBuf0, "backup-server");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1806() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1806");
    }
    io.netty.bootstrap.Bootstrap bootstrap0 = null;
    io.netty.channel.pool.ChannelPoolHandler channelPoolHandler1 = null;
    io.github.onograph.cluster.raft.netty.NettyChannelPoolBuilder nettyChannelPoolBuilder2 = null;
    io.github.onograph.cluster.raft.netty.LBNettyChannelPoolMapImpl lBNettyChannelPoolMapImpl4 = new io.github.onograph.cluster.raft.netty.LBNettyChannelPoolMapImpl(
        bootstrap0, channelPoolHandler1, nettyChannelPoolBuilder2, (int) (byte) 9);
    boolean boolean5 = lBNettyChannelPoolMapImpl4.isEmpty();
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
  }

  @Test
  public void test1807() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1807");
    }
    io.netty.buffer.ByteBuf byteBuf0 = null;
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel1 = new io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel(
        byteBuf0);
    defaultWritableChecksumChannel1.beginChecksum();
    try {
      org.neo4j.io.fs.WritableChecksumChannel writableChecksumChannel4 = defaultWritableChecksumChannel1.putShort(
          (short) (byte) 8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1808() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1808");
    }
    io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType mutatingComProFamilyGroupType0 = io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.TYPE_COMP;
    java.lang.String str1 = mutatingComProFamilyGroupType0.lowerName();
    java.lang.String[] strArray27 = new java.lang.String[]{
        "causal_clustering.leadership_priority_group", "default", "user-defined",
        "cc-discovery-actor-system", "overview", "default", "RequestGdbId for ", "temp-copy",
        "name", "leader-only", "cc-database-status-actor", "storage_engine", "designated_seeder",
        "temp-copy", "server_policies", "joiner", "server_policies", "cc-directory-actor", "Snappy",
        "Label", "temp-save", "cc-core-restart-needed-listener-timer", "restarting-cluster-client",
        "store_version", "type_comp"};
    java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
    boolean boolean29 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList28, strArray27);
    java.lang.String[] strArray58 = new java.lang.String[]{
        "causal_clustering.load_balancing.config.server_policies", "type_comp",
        "causal_clustering.load_balancing.config.server_policies",
        "causal_clustering.load_balancing.config.server_policies", "store_version",
        "causal_clustering.leadership_priority_group",
        "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartRules1. Running every PT10S",
        "initial_members", "status", "storage_engine", "user-defined", "RequestGdbId for ",
        "type_comp", "leader-only", "user-defined",
        "io.github.onograph.dbms.ClusterDatabaseManagementException: store_version",
        "catchup_protocol", "designated_seeder", "cc-core-restart-needed-listener-timer",
        "cc-discovery-actor-system", "user-defined", "restarting-cluster-client",
        "cc-database-status-actor",
        "io.github.onograph.dbms.ClusterDatabaseManagementException: store_version", "uuid", "uuid",
        "leader-only", "type_comp"};
    java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
    boolean boolean60 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strList59, strArray58);
    io.github.onograph.cluster.raft.module.cuprot.current.core.GdbAuthActions gdbAuthActions61 = new io.github.onograph.cluster.raft.module.cuprot.current.core.GdbAuthActions(
        (java.util.List<java.lang.String>) strList28, (java.util.List<java.lang.String>) strList59);
    java.util.List<java.lang.String> strList62 = gdbAuthActions61.listUsrstString;
    java.util.List<java.lang.String> strList63 = gdbAuthActions61.gecmdList();
    io.github.onograph.cluster.raft.control.connect.MutatingCurrentActiveComProFamilyWrapper mutatingCurrentActiveComProFamilyWrapper64 = new io.github.onograph.cluster.raft.control.connect.MutatingCurrentActiveComProFamilyWrapper(
        (io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutatingComProFamilyGroupType0,
        strList63);
    org.junit.Assert.assertTrue("'" + mutatingComProFamilyGroupType0 + "' != '"
            + io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.TYPE_COMP + "'",
        mutatingComProFamilyGroupType0.equals(
            io.github.onograph.cluster.raft.control.MutatingComProFamilyGroupType.TYPE_COMP));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "type_comp" + "'", str1, "type_comp");
    org.junit.Assert.assertNotNull(strArray27);
    //org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertNotNull(strArray58);
    //org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    org.junit.Assert.assertNotNull(strList62);
    org.junit.Assert.assertNotNull(strList63);
  }

  @Test
  public void test1809() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1809");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryManagerAkkaImpl clusterDiscoveryManagerAkkaImpl0 = new io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryManagerAkkaImpl();
    java.time.Clock clock1 = null;
    org.neo4j.configuration.Config config2 = null;
    org.neo4j.dbms.DatabaseStateService databaseStateService3 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler4 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    org.neo4j.configuration.helpers.SocketAddress[] socketAddressArray6 = new org.neo4j.configuration.helpers.SocketAddress[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress> socketAddressList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList7,
        socketAddressArray6);
    io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService9 = io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddressManagerDefaultImpl.reoeMemberNodeService(
        (java.util.List<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList7);
    io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService10 = io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddressManagerDefaultImpl.reoeMemberNodeService(
        (java.util.List<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList7);
    boolean boolean11 = memberNodeService10.isUsord();
    io.github.onograph.cluster.raft.id.CoreNodeServerIdentity coreNodeServerIdentity12 = null;
    io.github.onograph.cluster.raft.module.dprot.pit.PointInTimeBackupService pointInTimeBackupService13 = io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl.cosnoftPointInTimeBackupService(
        coreNodeServerIdentity12);
    org.neo4j.dbms.identity.ServerIdentity serverIdentity14 = null;
    org.neo4j.ssl.config.SslPolicyLoader sslPolicyLoader15 = null;
    try {
      io.github.onograph.cluster.raft.module.dprot.impl.AkkaClusterStructureClient akkaClusterStructureClient16 = clusterDiscoveryManagerAkkaImpl0.rereatlseeClusterStructureService(
          clock1, config2, databaseStateService3, jobScheduler4, logProvider5, memberNodeService10,
          pointInTimeBackupService13, serverIdentity14, sslPolicyLoader15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(socketAddressArray6);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(memberNodeService9);
    org.junit.Assert.assertNotNull(memberNodeService10);
    //org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(pointInTimeBackupService13);
  }

  @Test
  public void test1810() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1810");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.ConsensusMessageToMessageDecoder consensusMessageToMessageDecoder1 = new io.github.onograph.cluster.raft.akkamsg.serialization.ConsensusMessageToMessageDecoder(
        clock0);
    akka.actor.ActorRef[] actorRefArray2 = new akka.actor.ActorRef[]{};
    java.util.LinkedHashSet<akka.actor.ActorRef> actorRefSet3 = new java.util.LinkedHashSet<akka.actor.ActorRef>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<akka.actor.ActorRef>) actorRefSet3, actorRefArray2);
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ShowClusterActorStructureMeta showClusterActorStructureMeta5 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ShowClusterActorStructureMeta(
        (java.util.Set<akka.actor.ActorRef>) actorRefSet3);
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ShowClusterActorStructureMeta showClusterActorStructureMeta6 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ShowClusterActorStructureMeta(
        (java.util.Set<akka.actor.ActorRef>) actorRefSet3);
    boolean boolean7 = consensusMessageToMessageDecoder1.acceptInboundMessage(
        (java.lang.Object) actorRefSet3);
    io.netty.channel.ChannelHandlerContext channelHandlerContext8 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.RestartMonitoringActor.PropMagicElmFound propMagicElmFound9 = new io.github.onograph.cluster.raft.module.dprot.impl.structure.RestartMonitoringActor.PropMagicElmFound();
    try {
      consensusMessageToMessageDecoder1.channelRead(channelHandlerContext8,
          (java.lang.Object) propMagicElmFound9);
      org.junit.Assert.fail(
          "Expected exception of type io.netty.handler.codec.DecoderException; message: java.lang.IllegalStateException: *** Error: d94cbbc4-dc95-456a-ad9a-d59fdcdd9e2b");
    } catch (io.netty.handler.codec.DecoderException e) {
    }
    org.junit.Assert.assertNotNull(actorRefArray2);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
  }

  @Test
  public void test1811() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1811");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataTypeMessageToByteEncoder messageDataTypeMessageToByteEncoder0 = new io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataTypeMessageToByteEncoder();
    io.github.onograph.cluster.raft.module.dprot.ConsensusIdStatusType consensusIdStatusType1 = io.github.onograph.cluster.raft.module.dprot.ConsensusIdStatusType.OK_PUB_CALLER;
    boolean boolean2 = messageDataTypeMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) consensusIdStatusType1);
    java.util.List<java.lang.String> strList3 = org.neo4j.procedure.builtin.routing.AbstractRoutingProcedureInstaller.DEFAULT_NAMESPACE;
    boolean boolean4 = messageDataTypeMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) strList3);
    org.junit.Assert.assertTrue("'" + consensusIdStatusType1 + "' != '"
            + io.github.onograph.cluster.raft.module.dprot.ConsensusIdStatusType.OK_PUB_CALLER + "'",
        consensusIdStatusType1.equals(
            io.github.onograph.cluster.raft.module.dprot.ConsensusIdStatusType.OK_PUB_CALLER));
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(strList3);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1812() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1812");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl0 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry1 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry1, (long) '#');
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry4, 52L);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry8 = consensusLogCacheServiceNoopImpl0.getConsensusLogEntry(
        (long) 'a');
    int int9 = consensusLogCacheServiceNoopImpl0.elmtcu();
    long long10 = consensusLogCacheServiceNoopImpl0.toabys();
    consensusLogCacheServiceNoopImpl0.enb();
    consensusLogCacheServiceNoopImpl0.enb();
    org.junit.Assert.assertNull(consensusLogEntry8);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
  }

  @Test
  public void test1813() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1813");
    }
    io.github.onograph.config.ClusterMemberLimitAtCreationDTO clusterMemberLimitAtCreationDTO1 = new io.github.onograph.config.ClusterMemberLimitAtCreationDTO(
        4);
    int int2 = clusterMemberLimitAtCreationDTO1.getVal();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
  }

  @Test
  public void test1814() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1814");
    }
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses0 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress1 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress2 = null;
    org.neo4j.dbms.identity.ServerId serverId3 = null;
    java.lang.String[] strArray10 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet11 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray10);
    io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta loadBalanceServerMeta12 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta(
        socketAddress2, serverId3, nodeGroupIdentifierSet11);
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses13 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress14 = null;
    java.lang.String[] strArray21 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet22 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray21);
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet23 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray21);
    org.neo4j.kernel.database.DatabaseId[] databaseIdArray24 = new org.neo4j.kernel.database.DatabaseId[]{};
    java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId> databaseIdSet25 = new java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId>();
    boolean boolean26 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.DatabaseId>) databaseIdSet25,
        databaseIdArray24);
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl27 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl(
        discoverySocketAddresses13, socketAddress14, nodeGroupIdentifierSet23,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet25);
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl28 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl(
        discoverySocketAddresses0, socketAddress1, nodeGroupIdentifierSet11,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet25);
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses29 = gdbDiscoveryMetaReadReplicaImpl28.contsDiscoverySocketAddresses();
    org.junit.Assert.assertNotNull(strArray10);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet11);
    org.junit.Assert.assertNotNull(strArray21);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet22);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet23);
    org.junit.Assert.assertNotNull(databaseIdArray24);
    //org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNull(discoverySocketAddresses29);
  }

  @Test
  public void test1815() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1815");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResourceWriterService storeResourceWriterService1 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.AbstractCatchupAnswerManager<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedAbstractCatchupAnswerManager2 = io.github.onograph.cluster.raft.module.cuprot.scmeta.AbstractCatchupAnswerManager.ficadrAbstractCatchupAnswerManager(
        log0, storeResourceWriterService1);
    java.util.concurrent.CompletableFuture<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedCompletableFuture3 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.info.Meta meta6 = io.github.onograph.cluster.raft.module.cuprot.current.info.Meta.craMeta(
        (long) 1536, "cc-core-restart-needed-listener-timer");
    long long7 = meta6.getLgIr();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType8 = io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType.MTYPE_CONS_VOTE_ANS;
    boolean boolean9 = meta6.equals((java.lang.Object) raftConsensusMessageType8);
    try {
      storeSyncCompletedAbstractCatchupAnswerManager2.oninForCoMe(
          storeSyncCompletedCompletableFuture3, meta6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(storeSyncCompletedAbstractCatchupAnswerManager2);
    org.junit.Assert.assertNotNull(meta6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1536L + "'", long7 == 1536L);
    org.junit.Assert.assertTrue("'" + raftConsensusMessageType8 + "' != '"
        + io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType.MTYPE_CONS_VOTE_ANS
        + "'", raftConsensusMessageType8.equals(
        io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType.MTYPE_CONS_VOTE_ANS));
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1816() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1816");
    }
    akka.actor.ExtendedActorSystem extendedActorSystem0 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.stack.JoinClusterRemoteInstrument joinClusterRemoteInstrument1 = new io.github.onograph.cluster.raft.module.dprot.impl.stack.JoinClusterRemoteInstrument(
        extendedActorSystem0);
    akka.actor.ActorRef actorRef2 = null;
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl consensusLogCacheServiceNLImpl3 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl();
    consensusLogCacheServiceNLImpl3.retspccac();
    consensusLogCacheServiceNLImpl3.prn(1L);
    akka.actor.ActorRef actorRef7 = null;
    java.nio.ByteBuffer byteBuffer8 = null;
    joinClusterRemoteInstrument1.remoteReadMetadata(actorRef2, (java.lang.Object) 1L, actorRef7,
        byteBuffer8);
  }

  @Test
  public void test1817() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1817");
    }
    io.github.onograph.cluster.raft.utils.queuesrv.ElementQueueRunnerImpl<io.github.onograph.cluster.raft.module.cuprot.AskMessageType> askMessageTypeElementQueueRunnerImpl0 = new io.github.onograph.cluster.raft.utils.queuesrv.ElementQueueRunnerImpl<io.github.onograph.cluster.raft.module.cuprot.AskMessageType>();
    io.github.onograph.cluster.raft.module.cuprot.current.ident.RequestGdbId requestGdbId2 = new io.github.onograph.cluster.raft.module.cuprot.current.ident.RequestGdbId(
        "cluster-state");
    io.github.onograph.cluster.raft.module.cuprot.AskMessageType askMessageType3 = requestGdbId2.getTNme();
    askMessageTypeElementQueueRunnerImpl0.recForTry(askMessageType3);
    org.junit.Assert.assertTrue("'" + askMessageType3 + "' != '"
            + io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_GDB_GUID + "'",
        askMessageType3.equals(
            io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_GDB_GUID));
  }

  @Test
  public void test1818() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1818");
    }
    io.github.onograph.cluster.raft.share.calg.ConsensusOperationsManager consensusOperationsManager0 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureService coreClusterStructureService2 = null;
    io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureServiceLifecycleAdapter coreClusterStructureServiceLifecycleAdapter3 = new io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureServiceLifecycleAdapter(
        consensusOperationsManager0, namedDatabaseId1, coreClusterStructureService2);
    coreClusterStructureServiceLifecycleAdapter3.onungt();
    coreClusterStructureServiceLifecycleAdapter3.shutdown();
    coreClusterStructureServiceLifecycleAdapter3.onungt();
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta7 = io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta.INTL_NODE_SERVER_MEMBER_LEADER_META;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId8 = nodeServerMemberLeaderMeta7.getImConsensusNodeId();
    try {
      coreClusterStructureServiceLifecycleAdapter3.onleeswcForNo(nodeServerMemberLeaderMeta7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(nodeServerMemberLeaderMeta7);
    org.junit.Assert.assertNull(consensusNodeId8);
  }

  @Test
  public void test1819() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1819");
    }
    org.neo4j.configuration.helpers.SocketAddress socketAddress0 = null;
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses.SocketAddressSchemeType socketAddressSchemeType1 = io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses.SocketAddressSchemeType.http;
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses.SocketAddressWrapper socketAddressWrapper2 = new io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses.SocketAddressWrapper(
        socketAddress0, socketAddressSchemeType1);
    org.junit.Assert.assertTrue("'" + socketAddressSchemeType1 + "' != '"
        + io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses.SocketAddressSchemeType.http
        + "'", socketAddressSchemeType1.equals(
        io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses.SocketAddressSchemeType.http));
  }

  @Test
  public void test1820() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1820");
    }
    java.nio.file.Path path2 = null;
    java.nio.file.Path[] pathArray3 = new java.nio.file.Path[]{path2};
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply setupGdbStoreSyncReply4 = io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply.sucsSetupGdbStoreSyncReply(
        (long) '4', pathArray3);
    io.github.onograph.cluster.raft.share.calg.cle.parts.TransactionLogKernelException transactionLogKernelException5 = new io.github.onograph.cluster.raft.share.calg.cle.parts.TransactionLogKernelException(
        "", (java.lang.Object[]) pathArray3);
    org.junit.Assert.assertNotNull(pathArray3);
    org.junit.Assert.assertNotNull(setupGdbStoreSyncReply4);
  }

  @Test
  public void test1821() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1821");
    }
    java.nio.file.Path path0 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo1 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path0);
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker2 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo1);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo1);
  }

  @Test
  public void test1822() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1822");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout consensusElectionTimeout1 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout(
        consensusNodeId0);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId2 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Messager messager3 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Messager(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AbstractConsensusMessage) consensusElectionTimeout1,
        consensusNodeId2);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId4 = messager3.getToConsensusNodeId();
    org.junit.Assert.assertNull(consensusNodeId4);
  }

  @Test
  public void test1823() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1823");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreException gdbStoreException1 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreException(
        "RelationshipType");
  }

  @Test
  public void test1824() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1824");
    }
    io.github.onograph.config.ClusterMemberLimitAtCreationDTO clusterMemberLimitAtCreationDTO1 = new io.github.onograph.config.ClusterMemberLimitAtCreationDTO(
        1536);
    org.neo4j.configuration.Config config2 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.stack.ClusterJoinOrganizer clusterJoinOrganizer3 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.stack.ActorStackBuilder actorStackBuilder4 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    org.neo4j.configuration.helpers.SocketAddress[] socketAddressArray6 = new org.neo4j.configuration.helpers.SocketAddress[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress> socketAddressList7 = new java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList7,
        socketAddressArray6);
    io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService9 = io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddressManagerDefaultImpl.reoeMemberNodeService(
        (java.util.List<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList7);
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.ActorLifecycleApproachDefaultImpl actorLifecycleApproachDefaultImpl10 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.ActorLifecycleApproachDefaultImpl(
        memberNodeService9);
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartRules1 restartRules1_11 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartRules1();
    akka.cluster.Cluster cluster12 = null;
    boolean boolean13 = restartRules1_11.isRerruForCl(cluster12);
    java.lang.String str14 = restartRules1_11.gersString();
    try {
      io.github.onograph.cluster.raft.module.dprot.impl.stack.ActorStackManager actorStackManager15 = new io.github.onograph.cluster.raft.module.dprot.impl.stack.ActorStackManager(
          clusterMemberLimitAtCreationDTO1, config2, clusterJoinOrganizer3, actorStackBuilder4,
          logProvider5, memberNodeService9,
          (io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach) restartRules1_11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(socketAddressArray6);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(memberNodeService9);
    //org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 != false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '"
            + "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartRules1. Running every PT10S"
            + "'", str14,
        "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartRules1. Running every PT10S");
  }

  @Test
  public void test1825() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1825");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId1 = null;
    java.util.UUID uUID2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.AskState askState3 = new io.github.onograph.cluster.raft.share.meta.fsm.AskState(
        databaseId0, consensusNodeId1, uUID2);
    org.neo4j.kernel.database.DatabaseId databaseId4 = askState3.daasidDatabaseId();
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.ComProFamilyBuilder comProFamilyBuilder6 = io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.bulrComProFamilyWrapperComProFamilyBuilder();
    io.github.onograph.cluster.raft.control.connect.ServerException serverException7 = new io.github.onograph.cluster.raft.control.connect.ServerException(
        "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartRules1. Running every PT10S",
        comProFamilyBuilder6);
    boolean boolean8 = askState3.equals((java.lang.Object) comProFamilyBuilder6);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId9 = askState3.getImConsensusNodeId();
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataProcessor syncableDataProcessor10 = null;
    try {
      askState3.dipcForSy(syncableDataProcessor10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseId4);
    org.junit.Assert.assertNotNull(comProFamilyBuilder6);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNull(consensusNodeId9);
  }

  @Test
  public void test1826() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1826");
    }
    io.github.onograph.cluster.raft.module.cuprot.LifecycleCatchupManagerImpl lifecycleCatchupManagerImpl0 = null;
    org.neo4j.logging.LogProvider logProvider1 = null;
    try {
      io.github.onograph.cluster.raft.share.meta.pit.CoreGdbSyncManager coreGdbSyncManager2 = new io.github.onograph.cluster.raft.share.meta.pit.CoreGdbSyncManager(
          lifecycleCatchupManagerImpl0, logProvider1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1827() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1827");
    }
    byte[] byteArray1 = new byte[]{(byte) 9};
    org.neo4j.kernel.database.DatabaseId databaseId2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType4 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData5 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray1, databaseId2, "name", replicaTokenType4);
    org.neo4j.kernel.database.DatabaseId databaseId6 = requestData5.daasidDatabaseId();
    io.github.onograph.cluster.raft.share.sync.SessionSeqActionId sessionSeqActionId7 = null;
    java.util.UUID uUID8 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy9 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean10 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID8, consensusNodeIdLazy9);
    io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl syncStatusMetaServiceImpl11 = new io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl(
        clusterSessionBean10);
    java.util.UUID uUID12 = clusterSessionBean10.getIsUUID();
    io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction dataSyncClusterAction13 = new io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction(
        (io.github.onograph.cluster.raft.share.sync.SyncableData) requestData5, sessionSeqActionId7,
        clusterSessionBean10);
    io.netty.buffer.ByteBuf byteBuf14 = null;
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel15 = new io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel(
        byteBuf14);
    defaultWritableChecksumChannel15.beginChecksum();
    int int17 = defaultWritableChecksumChannel15.putChecksum();
    try {
      dataSyncClusterAction13.maamadForWr(
          (org.neo4j.io.fs.WritableChannel) defaultWritableChecksumChannel15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[9]");
    org.junit.Assert.assertNull(databaseId6);
    org.junit.Assert.assertNull(uUID12);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
  }

  @Test
  public void test1828() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1828");
    }
    org.neo4j.graphdb.config.Setting<java.time.Duration> durationSetting0 = io.github.onograph.config.SettingsDeclarationClusterImpl.settingUnwrogtDuration;
    io.github.onograph.config.SettingsDeclarationClusterSystemImpl.settingAkcyrrnlyDuration = durationSetting0;
    org.junit.Assert.assertNotNull(durationSetting0);
  }

  @Test
  public void test1829() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1829");
    }
    io.github.onograph.cluster.raft.module.cuprot.IncomingEventService incomingEventService0 = io.github.onograph.cluster.raft.module.cuprot.IncomingEventService.NOO_INCOMING_EVENT_SERVICE;
    java.net.SocketAddress socketAddress1 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.rtx.RequestTransactionSync requestTransactionSync2 = null;
    incomingEventService0.ontpurqForSoRe(socketAddress1, requestTransactionSync2);
    org.junit.Assert.assertNotNull(incomingEventService0);
  }

  @Test
  public void test1830() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1830");
    }
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeType consensusNodeType0 = io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeType.CNT_NODE_POT;
    org.junit.Assert.assertTrue("'" + consensusNodeType0 + "' != '"
            + io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeType.CNT_NODE_POT + "'",
        consensusNodeType0.equals(
            io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeType.CNT_NODE_POT));
  }

  @Test
  public void test1831() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1831");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.directory.LeaderMeta leaderMeta0 = io.github.onograph.cluster.raft.module.dprot.impl.directory.LeaderMeta.EMT_LEADER_META;
    org.neo4j.configuration.helpers.SocketAddress[] socketAddressArray1 = new org.neo4j.configuration.helpers.SocketAddress[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress> socketAddressList2 = new java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList2,
        socketAddressArray1);
    io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService4 = io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddressManagerDefaultImpl.reoeMemberNodeService(
        (java.util.List<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList2);
    boolean boolean5 = leaderMeta0.equals((java.lang.Object) memberNodeService4);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta> databaseIdMap6 = leaderMeta0.getMapLaesdn();
    org.junit.Assert.assertNotNull(leaderMeta0);
    org.junit.Assert.assertNotNull(socketAddressArray1);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(memberNodeService4);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(databaseIdMap6);
  }

  @Test
  public void test1832() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1832");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryManagerAkkaImpl clusterDiscoveryManagerAkkaImpl0 = new io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryManagerAkkaImpl();
    java.time.Clock clock1 = null;
    org.neo4j.configuration.Config config2 = null;
    io.github.onograph.cluster.raft.id.CoreNodeServerIdentity coreNodeServerIdentity3 = null;
    io.github.onograph.dbms.crash.CrashSignaler crashSignaler4 = null;
    org.neo4j.dbms.DatabaseStateService databaseStateService5 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.DiscoveryInitialProcCheckerReadReplicaImpl discoveryInitialProcCheckerReadReplicaImpl6 = new io.github.onograph.cluster.raft.module.dprot.impl.DiscoveryInitialProcCheckerReadReplicaImpl();
    java.lang.Boolean boolean7 = discoveryInitialProcCheckerReadReplicaImpl6.isFitsauBoolean();
    io.github.onograph.cluster.raft.module.dprot.DiscoveryRetryManager discoveryRetryManager10 = new io.github.onograph.cluster.raft.module.dprot.DiscoveryRetryManager(
        1L, (long) (byte) 100);
    org.neo4j.scheduler.JobScheduler jobScheduler11 = null;
    org.neo4j.logging.LogProvider logProvider12 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService14 = null;
    org.neo4j.monitoring.Monitors monitors15 = null;
    io.github.onograph.cluster.raft.id.CoreNodeServerIdentity coreNodeServerIdentity16 = null;
    io.github.onograph.cluster.raft.module.dprot.pit.PointInTimeBackupService pointInTimeBackupService17 = io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl.cosnoftPointInTimeBackupService(
        coreNodeServerIdentity16);
    org.neo4j.ssl.config.SslPolicyLoader sslPolicyLoader18 = null;
    try {
      io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureService coreClusterStructureService19 = clusterDiscoveryManagerAkkaImpl0.cotogsvCoreClusterStructureService(
          clock1, config2, coreNodeServerIdentity3, crashSignaler4, databaseStateService5,
          (io.github.onograph.cluster.raft.module.dprot.DiscoveryInitialProcChecker) discoveryInitialProcCheckerReadReplicaImpl6,
          discoveryRetryManager10, jobScheduler11, logProvider12, logProvider13,
          memberNodeService14, monitors15, pointInTimeBackupService17, sslPolicyLoader18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
    org.junit.Assert.assertNotNull(pointInTimeBackupService17);
  }

  @Test
  public void test1833() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1833");
    }
    io.github.onograph.cluster.raft.module.dprot.k8.K8ServicesKind.K8Service k8Service0 = new io.github.onograph.cluster.raft.module.dprot.k8.K8ServicesKind.K8Service();
    io.github.onograph.cluster.raft.module.dprot.k8.K8ServicesKind.K8Service.Spec spec1 = k8Service0.getSpec();
    io.github.onograph.cluster.raft.module.dprot.k8.K8ServicesKind.K8Service k8Service2 = new io.github.onograph.cluster.raft.module.dprot.k8.K8ServicesKind.K8Service();
    io.github.onograph.cluster.raft.module.dprot.k8.K8ServicesKind.K8Service.Spec spec3 = k8Service2.getSpec();
    io.github.onograph.cluster.raft.module.dprot.k8.K8NameRemTimestampWrapper k8NameRemTimestampWrapper4 = new io.github.onograph.cluster.raft.module.dprot.k8.K8NameRemTimestampWrapper();
    java.lang.String str5 = k8NameRemTimestampWrapper4.name();
    k8Service2.sematForK8(k8NameRemTimestampWrapper4);
    k8Service0.sematForK8(k8NameRemTimestampWrapper4);
    org.junit.Assert.assertNull(spec1);
    org.junit.Assert.assertNull(spec3);
    org.junit.Assert.assertNull(str5);
  }

  @Test
  public void test1834() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1834");
    }
    akka.actor.ExtendedActorSystem extendedActorSystem0 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.RemoveReadReplicaNodeSafeChannelMarshal removeReadReplicaNodeSafeChannelMarshal1 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.RemoveReadReplicaNodeSafeChannelMarshal(
        extendedActorSystem0);
  }

  @Test
  public void test1835() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1835");
    }
    io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper memberIndexWrapper0 = null;
    io.github.onograph.cluster.raft.share.meta.pit.ConsensusMembershipState consensusMembershipState1 = new io.github.onograph.cluster.raft.share.meta.pit.ConsensusMembershipState(
        memberIndexWrapper0);
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS marshalChannelImplCMS2 = io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta candidateTermMeta3 = marshalChannelImplCMS2.startState();
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS marshalChannelImplCMS4 = io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta candidateTermMeta5 = marshalChannelImplCMS4.startState();
    long long6 = marshalChannelImplCMS2.ordinal(candidateTermMeta5);
    boolean boolean7 = consensusMembershipState1.equals((java.lang.Object) candidateTermMeta5);
    io.github.onograph.cluster.raft.share.ClusterLoadBalancingServerPoliciesGroupSetting clusterLoadBalancingServerPoliciesGroupSetting9 = io.github.onograph.cluster.raft.share.ClusterLoadBalancingServerPoliciesGroupSetting.gruClusterLoadBalancingServerPoliciesGroupSetting(
        "store_version");
    boolean boolean10 = consensusMembershipState1.equals(
        (java.lang.Object) clusterLoadBalancingServerPoliciesGroupSetting9);
    org.neo4j.graphdb.config.Setting<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessor<io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta>> loadBalanceServerMetaRuleProcessorSetting11 = clusterLoadBalancingServerPoliciesGroupSetting9.val;
    org.junit.Assert.assertNotNull(marshalChannelImplCMS2);
    org.junit.Assert.assertNotNull(candidateTermMeta3);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS4);
    org.junit.Assert.assertNotNull(candidateTermMeta5);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(clusterLoadBalancingServerPoliciesGroupSetting9);
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(loadBalanceServerMetaRuleProcessorSetting11);
  }

  @Test
  public void test1836() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1836");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    java.nio.file.DirectoryStream.Filter<java.nio.file.Path> pathFilter1 = io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResources.FILTER_EXDPY_PATH;
    org.neo4j.io.pagecache.PageCache pageCache2 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResources storeResources3 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResources(
        fileSystemAbstraction0, pathFilter1, pageCache2);
    org.junit.Assert.assertNotNull(pathFilter1);
  }

  @Test
  public void test1837() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1837");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId[] consensusNodeIdArray0 = new io.github.onograph.cluster.raft.id.ConsensusNodeId[]{};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet1 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId>();
    boolean boolean2 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet1,
        consensusNodeIdArray0);
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper consensusNodeServerMemberIdWrapper3 = new io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper(
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet1);
    java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet4 = consensusNodeServerMemberIdWrapper3.gembsSet();
    io.netty.buffer.ByteBuf byteBuf5 = null;
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel6 = new io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel(
        byteBuf5);
    defaultWritableChecksumChannel6.beginChecksum();
    io.netty.buffer.ByteBuf byteBuf8 = defaultWritableChecksumChannel6.byebfByteBuf();
    io.netty.buffer.ByteBuf byteBuf9 = defaultWritableChecksumChannel6.byebfByteBuf();
    try {
      io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapperMarshaller.maslForCoWr(
          consensusNodeServerMemberIdWrapper3,
          (org.neo4j.io.fs.WritableChannel) defaultWritableChecksumChannel6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusNodeIdArray0);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(consensusNodeIdSet4);
    org.junit.Assert.assertNull(byteBuf8);
    org.junit.Assert.assertNull(byteBuf9);
  }

  @Test
  public void test1838() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1838");
    }
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl2 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel0, safeStateMarshalImpl1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk3 = null;
    java.lang.Void void4 = processorImpl2.process(bulkAsk3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk5 = null;
    java.lang.Void void6 = processorImpl2.process(bulkAsk5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage7 = null;
    java.lang.Void void8 = processorImpl2.process(logClipRequestMessage7);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage9 = null;
    java.lang.Void void10 = processorImpl2.process(logClipRequestMessage9);
    org.junit.Assert.assertNull(void4);
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(void8);
    org.junit.Assert.assertNull(void10);
  }

  @Test
  public void test1839() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1839");
    }
    java.lang.String[] strArray6 = new java.lang.String[]{"designated_seeder", "leader-only",
        "store_version", "store_version"};
    java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet7, strArray6);
    io.github.onograph.cluster.raft.control.connect.MutatingComProFamilyWrapper mutatingComProFamilyWrapper9 = new io.github.onograph.cluster.raft.control.connect.MutatingComProFamilyWrapper(
        "", (java.util.Set<java.lang.String>) strSet7);
    java.util.Set<java.lang.String> strSet10 = mutatingComProFamilyWrapper9.getSetVrinU();
    io.github.onograph.cluster.raft.control.connect.MutatingComProFamilyWrapper mutatingComProFamilyWrapper11 = new io.github.onograph.cluster.raft.control.connect.MutatingComProFamilyWrapper(
        "Snappy", strSet10);
    java.util.Set<java.lang.String> strSet12 = mutatingComProFamilyWrapper11.getSetVrinU();
    java.util.Set<java.lang.String> strSet13 = mutatingComProFamilyWrapper11.getSetVrinU();
    java.lang.String str14 = mutatingComProFamilyWrapper11.getStrIetfe();
    org.junit.Assert.assertNotNull(strArray6);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    org.junit.Assert.assertNotNull(strSet10);
    org.junit.Assert.assertNotNull(strSet12);
    org.junit.Assert.assertNotNull(strSet13);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Snappy" + "'", str14, "Snappy");
  }

  @Test
  public void test1840() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1840");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.VotePreparationMessage.Reply reply3 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.VotePreparationMessage.Reply(
        consensusNodeId0, false, 100L);
    boolean boolean4 = reply3.getIsGv();
    boolean boolean5 = reply3.getIsGv();
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1841() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1841");
    }
    org.neo4j.graphdb.config.Setting<java.time.Duration> durationSetting0 = io.github.onograph.config.SettingsDeclarationClusterSystemImpl.settingAkaeceetlDuration;
    org.junit.Assert.assertNotNull(durationSetting0);
  }

  @Test
  public void test1842() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1842");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Reply reply5 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Reply(
        consensusNodeId0, false, (long) (-1), (long) '#', (long) 0);
    long long6 = reply5.getLgT();
    boolean boolean7 = reply5.getIsSces();
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel8 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl9 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl10 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel8, safeStateMarshalImpl9);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk11 = null;
    java.lang.Void void12 = processorImpl10.process(bulkAsk11);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage13 = null;
    java.lang.Void void14 = processorImpl10.process(logClipRequestMessage13);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage15 = null;
    java.lang.Void void16 = processorImpl10.process(aliveReplyMessage15);
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl messageProcessorImpl17 = io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl.SUPTL_MESSAGE_PROCESSOR_IMPL;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.CandidateVoteMessage.Reply reply18 = null;
    java.lang.Boolean boolean19 = messageProcessorImpl17.process(reply18);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel20 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl21 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl22 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel20, safeStateMarshalImpl21);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk23 = null;
    java.lang.Void void24 = processorImpl22.process(bulkAsk23);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage25 = null;
    java.lang.Void void26 = processorImpl22.process(logClipRequestMessage25);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage27 = null;
    java.lang.Void void28 = processorImpl22.process(aliveReplyMessage27);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId29 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout consensusElectionTimeout30 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout(
        consensusNodeId29);
    java.lang.Void void31 = processorImpl22.process(consensusElectionTimeout30);
    java.lang.Boolean boolean32 = messageProcessorImpl17.process(consensusElectionTimeout30);
    java.lang.Void void33 = processorImpl10.process(consensusElectionTimeout30);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk34 = null;
    java.lang.Void void35 = processorImpl10.process(bulkAsk34);
    try {
      java.lang.Void void36 = reply5.dipc(
          (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception>) processorImpl10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNull(void12);
    org.junit.Assert.assertNull(void14);
    org.junit.Assert.assertNull(void16);
    org.junit.Assert.assertNotNull(messageProcessorImpl17);
    org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + true + "'", boolean19, true);
    org.junit.Assert.assertNull(void24);
    org.junit.Assert.assertNull(void26);
    org.junit.Assert.assertNull(void28);
    org.junit.Assert.assertNull(void31);
    org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + true + "'", boolean32, true);
    org.junit.Assert.assertNull(void33);
    org.junit.Assert.assertNull(void35);
  }

  @Test
  public void test1843() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1843");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry0 = null;
    io.github.onograph.cluster.raft.share.calg.action.AddAction addAction2 = new io.github.onograph.cluster.raft.share.calg.action.AddAction(
        consensusLogEntry0, (long) 2);
    java.util.ArrayList<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>> answerMessageTypeMessageToByteEncoderRuleProcessorJoiningImplList3 = new java.util.ArrayList<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>>();
    io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorInitiatorImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder> answerMessageTypeMessageToByteEncoderRuleProcessorInitiatorImpl4 = new io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorInitiatorImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>(
        (java.util.List<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>>) answerMessageTypeMessageToByteEncoderRuleProcessorJoiningImplList3);
    boolean boolean5 = addAction2.equals(
        (java.lang.Object) answerMessageTypeMessageToByteEncoderRuleProcessorInitiatorImpl4);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry6 = addAction2.consensusLogEntry;
    long long7 = addAction2.idx;
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl8 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry9 = null;
    consensusLogCacheServiceNoopImpl8.putForCo(consensusLogEntry9, (long) '#');
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry12 = null;
    consensusLogCacheServiceNoopImpl8.putForCo(consensusLogEntry12, 52L);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry16 = consensusLogCacheServiceNoopImpl8.getConsensusLogEntry(
        (long) 'a');
    int int17 = consensusLogCacheServiceNoopImpl8.elmtcu();
    org.neo4j.logging.Log log18 = null;
    addAction2.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceNoopImpl8,
        log18);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNull(consensusLogEntry6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 2L + "'", long7 == 2L);
    org.junit.Assert.assertNull(consensusLogEntry16);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
  }

  @Test
  public void test1844() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1844");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntryRawCursor consensusLogEntryRawCursor0 = io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntryRawCursor.emtConsensusLogEntryRawCursor();
    consensusLogEntryRawCursor0.close();
    long long2 = consensusLogEntryRawCursor0.ine();
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry> consensusLogEntryConsumer3 = null;
    consensusLogEntryRawCursor0.forAll(consensusLogEntryConsumer3);
    consensusLogEntryRawCursor0.close();
    long long6 = consensusLogEntryRawCursor0.ine();
    org.junit.Assert.assertNotNull(consensusLogEntryRawCursor0);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
  }

  @Test
  public void test1845() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1845");
    }
    io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog inMemoryConsensusTransactionLog0 = new io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog();
    long long2 = inMemoryConsensusTransactionLog0.prn((long) 1536);
    long long4 = inMemoryConsensusTransactionLog0.redettm(0L);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntryRawCursor consensusLogEntryRawCursor6 = inMemoryConsensusTransactionLog0.geercuoConsensusLogEntryRawCursor(
        (long) (short) 1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1536L + "'", long2 == 1536L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    org.junit.Assert.assertNotNull(consensusLogEntryRawCursor6);
  }

  @Test
  public void test1846() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1846");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl0 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry1 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry1, (long) '#');
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry4, 52L);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry8 = consensusLogCacheServiceNoopImpl0.getConsensusLogEntry(
        (long) 'a');
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry9 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry9, (long) 100);
    long long12 = consensusLogCacheServiceNoopImpl0.toabys();
    org.junit.Assert.assertNull(consensusLogEntry8);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
  }

  @Test
  public void test1847() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1847");
    }
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.ComProFamilyBuilder comProFamilyBuilder1 = io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.bulrComProFamilyWrapperComProFamilyBuilder();
    io.github.onograph.cluster.raft.control.connect.ServerException serverException2 = new io.github.onograph.cluster.raft.control.connect.ServerException(
        "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartRules1. Running every PT10S",
        comProFamilyBuilder1);
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols3 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    java.lang.String str4 = mutableProtocols3.getImpl();
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.ComProFamilyBuilder comProFamilyBuilder5 = comProFamilyBuilder1.moieComProFamilyWrapperComProFamilyBuilder(
        (io.github.onograph.cluster.raft.control.MutableComProFamily) mutableProtocols3);
    java.lang.String str6 = mutableProtocols3.caerString();
    org.junit.Assert.assertNotNull(comProFamilyBuilder1);
    org.junit.Assert.assertTrue("'" + mutableProtocols3 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols3.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Snappy" + "'", str4, "Snappy");
    org.junit.Assert.assertNotNull(comProFamilyBuilder5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "type_comp" + "'", str6, "type_comp");
  }

  @Test
  public void test1848() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1848");
    }
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols0 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    java.lang.String str1 = mutableProtocols0.getImpl();
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols2 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols3 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC;
    io.github.onograph.cluster.raft.control.MutableComProFamily[] mutableComProFamilyArray4 = new io.github.onograph.cluster.raft.control.MutableComProFamily[]{
        mutableProtocols0, mutableProtocols2, mutableProtocols3};
    java.util.ArrayList<io.github.onograph.cluster.raft.control.MutableComProFamily> mutableComProFamilyList5 = new java.util.ArrayList<io.github.onograph.cluster.raft.control.MutableComProFamily>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutableComProFamilyList5,
        mutableComProFamilyArray4);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType7 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper comProFamilyWrapper8 = new io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper(
        (java.util.List<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutableComProFamilyList5,
        (io.github.onograph.cluster.raft.control.ApplicationComProFamily) applicationComProFamilyType7);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType9 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV;
    boolean boolean10 = applicationComProFamilyType7.isEq(
        (io.github.onograph.cluster.raft.control.ApplicationComProFamily) applicationComProFamilyType9);
    io.github.onograph.config.EntProVer entProVer11 = applicationComProFamilyType9.getImpl();
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols12 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    java.lang.String str13 = mutableProtocols12.getImpl();
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols14 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols15 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC;
    io.github.onograph.cluster.raft.control.MutableComProFamily[] mutableComProFamilyArray16 = new io.github.onograph.cluster.raft.control.MutableComProFamily[]{
        mutableProtocols12, mutableProtocols14, mutableProtocols15};
    java.util.ArrayList<io.github.onograph.cluster.raft.control.MutableComProFamily> mutableComProFamilyList17 = new java.util.ArrayList<io.github.onograph.cluster.raft.control.MutableComProFamily>();
    boolean boolean18 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutableComProFamilyList17,
        mutableComProFamilyArray16);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType19 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper comProFamilyWrapper20 = new io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper(
        (java.util.List<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutableComProFamilyList17,
        (io.github.onograph.cluster.raft.control.ApplicationComProFamily) applicationComProFamilyType19);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType21 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV;
    boolean boolean22 = applicationComProFamilyType19.isEq(
        (io.github.onograph.cluster.raft.control.ApplicationComProFamily) applicationComProFamilyType21);
    io.github.onograph.config.EntProVer entProVer23 = applicationComProFamilyType21.getImpl();
    java.lang.String str24 = applicationComProFamilyType21.caerString();
    boolean boolean25 = applicationComProFamilyType9.isSacerForAp(applicationComProFamilyType21);
    org.junit.Assert.assertTrue("'" + mutableProtocols0 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols0.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Snappy" + "'", str1, "Snappy");
    org.junit.Assert.assertTrue("'" + mutableProtocols2 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols2.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertTrue("'" + mutableProtocols3 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC + "'",
        mutableProtocols3.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC));
    org.junit.Assert.assertNotNull(mutableComProFamilyArray4);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType7 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType7.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType9 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType9.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertNotNull(entProVer11);
    org.junit.Assert.assertTrue("'" + mutableProtocols12 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols12.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Snappy" + "'", str13, "Snappy");
    org.junit.Assert.assertTrue("'" + mutableProtocols14 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols14.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertTrue("'" + mutableProtocols15 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC + "'",
        mutableProtocols15.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC));
    org.junit.Assert.assertNotNull(mutableComProFamilyArray16);
    //org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType19 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType19.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType21 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType21.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    //org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(entProVer23);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "catchup_protocol" + "'", str24,
        "catchup_protocol");
    //org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
  }

  @Test
  public void test1849() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1849");
    }
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodesFactoryDefaultImpl consensusNodesFactoryDefaultImpl0 = new io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodesFactoryDefaultImpl();
    io.github.onograph.cluster.raft.share.calg.mnode.MemberNodes memberNodes1 = io.github.onograph.cluster.raft.share.calg.mnode.MemberNodes.EMT_MEMBER_NODES;
    java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet2 = memberNodes1.voimbsSet();
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodes<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdConsensusNodes3 = consensusNodesFactoryDefaultImpl0.bulConsensusNodes(
        consensusNodeIdSet2);
    io.github.onograph.cluster.raft.id.ConsensusNodeId[] consensusNodeIdArray4 = new io.github.onograph.cluster.raft.id.ConsensusNodeId[]{};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet5 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet5,
        consensusNodeIdArray4);
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper consensusNodeServerMemberIdWrapper7 = new io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper(
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet5);
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodes<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdConsensusNodes8 = consensusNodesFactoryDefaultImpl0.bulConsensusNodes(
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet5);
    org.junit.Assert.assertNotNull(memberNodes1);
    org.junit.Assert.assertNotNull(consensusNodeIdSet2);
    org.junit.Assert.assertNotNull(consensusNodeIdConsensusNodes3);
    org.junit.Assert.assertNotNull(consensusNodeIdArray4);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(consensusNodeIdConsensusNodes8);
  }

  @Test
  public void test1850() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1850");
    }
    io.github.onograph.cluster.raft.palapp.strategies.ReadReplicaNodeNamedServiceClusterApproach readReplicaNodeNamedServiceClusterApproach1 = new io.github.onograph.cluster.raft.palapp.strategies.ReadReplicaNodeNamedServiceClusterApproach(
        1536);
    java.lang.String str2 = readReplicaNodeNamedServiceClusterApproach1.toString();
    readReplicaNodeNamedServiceClusterApproach1.setup();
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "typically-connect-to-random-read-replica" + "'", str2,
        "typically-connect-to-random-read-replica");
  }

  @Test
  public void test1851() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1851");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler0 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler1 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler2 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl3 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler4 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler2, refCatchupManagerImpl3);
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedInboundHandler transactionChunkingCompletedInboundHandler5 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedInboundHandler(
        catchupAnswerLimitHandler1, refCatchupManagerImpl3);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreDatabaseIdInboundHandler storeDatabaseIdInboundHandler6 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreDatabaseIdInboundHandler(
        catchupAnswerLimitHandler0, refCatchupManagerImpl3);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId7 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg8 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg(
        consensusNodeId7);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel9 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl10 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl11 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel9, safeStateMarshalImpl10);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk12 = null;
    java.lang.Void void13 = processorImpl11.process(bulkAsk12);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage14 = null;
    java.lang.Void void15 = processorImpl11.process(logClipRequestMessage14);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage16 = null;
    java.lang.Void void17 = processorImpl11.process(aliveReplyMessage16);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId18 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId19 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier20 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray21 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier20};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet22 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean23 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet22,
        nodeGroupIdentifierArray21);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec24 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId18, consensusNodeId19,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet22);
    java.lang.Void void25 = processorImpl11.process(leaderRec24);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage26 = null;
    java.lang.Void void27 = processorImpl11.process(aliveReplyMessage26);
    java.lang.Void void28 = aliveMsg8.dipc(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception>) processorImpl11);
    boolean boolean29 = storeDatabaseIdInboundHandler6.acceptInboundMessage(
        (java.lang.Object) processorImpl11);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage30 = null;
    java.lang.Void void31 = processorImpl11.process(logClipRequestMessage30);
    org.junit.Assert.assertNull(void13);
    org.junit.Assert.assertNull(void15);
    org.junit.Assert.assertNull(void17);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier20);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray21);
    //org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNull(void25);
    org.junit.Assert.assertNull(void27);
    org.junit.Assert.assertNull(void28);
    //org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertNull(void31);
  }

  @Test
  public void test1852() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1852");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.AskState> askStateFSMEmptyReq0 = new io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.AskState>();
    long long1 = askStateFSMEmptyReq0.laapdix();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
  }

  @Test
  public void test1853() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1853");
    }
    org.neo4j.configuration.Config config0 = null;
    org.neo4j.logging.internal.LogService logService1 = null;
    io.github.onograph.cluster.raft.share.NodeServerInfoLogService nodeServerInfoLogService3 = new io.github.onograph.cluster.raft.share.NodeServerInfoLogService(
        logService1, "hi!");
    java.lang.String str4 = nodeServerInfoLogService3.getStrNs();
    try {
      io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService5 = io.github.onograph.config.MemberNodeServiceFinder.choroeMemberNodeService(
          config0, (org.neo4j.logging.internal.LogService) nodeServerInfoLogService3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
  }

  @Test
  public void test1854() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1854");
    }
    akka.actor.ExtendedActorSystem extendedActorSystem0 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.ActorRefSafeChannelMarshal actorRefSafeChannelMarshal1 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.ActorRefSafeChannelMarshal(
        extendedActorSystem0);
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager2 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    try {
      akka.actor.ActorRef actorRef3 = actorRefSafeChannelMarshal1.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error:  337d71e4-16ab-4986-b3d7-7e231af9f8ee");
    } catch (java.lang.IllegalArgumentException e) {
    }
  }

  @Test
  public void test1855() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1855");
    }
    org.neo4j.io.fs.ReadableChannel readableChannel0 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl1 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel0);
    readableClosablePositionAwareChecksumChannelPassThruImpl1.beginChecksum();
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition3 = readableClosablePositionAwareChecksumChannelPassThruImpl1.getCurrentPosition();
    try {
      double double4 = readableClosablePositionAwareChecksumChannelPassThruImpl1.getDouble();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(logPosition3);
  }

  @Test
  public void test1856() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1856");
    }
    io.github.onograph.cluster.raft.share.meta.pit.SnapshotData snapshotData2 = new io.github.onograph.cluster.raft.share.meta.pit.SnapshotData(
        (long) 2, (long) (short) -1);
    io.github.onograph.cluster.raft.share.meta.MetaWrapper<io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat> clusterMetaFormatMetaWrapper3 = io.github.onograph.cluster.raft.share.meta.MetaWrapper.META_WRAPPER_VESN_CLUSTER_META_FORMAT;
    java.lang.String str4 = clusterMetaFormatMetaWrapper3.name();
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat5 = snapshotData2.getCsmoForMW(
        clusterMetaFormatMetaWrapper3);
    long long6 = snapshotData2.getBefTLng();
    org.junit.Assert.assertNotNull(clusterMetaFormatMetaWrapper3);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "version" + "'", str4, "version");
    org.junit.Assert.assertNull(clusterMetaFormat5);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
  }

  @Test
  public void test1857() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1857");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl consensusLogCacheServiceNLImpl0 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry2 = consensusLogCacheServiceNLImpl0.getConsensusLogEntry(
        (long) 1);
    long long3 = consensusLogCacheServiceNLImpl0.toabys();
    org.junit.Assert.assertNull(consensusLogEntry2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test1858() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1858");
    }
    org.neo4j.configuration.Config config0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.logging.LogProvider logProvider2 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction3 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade4 = null;
    org.neo4j.logging.Log log5 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade6 = null;
    java.util.function.Function<org.neo4j.kernel.database.NamedDatabaseId, io.github.onograph.cluster.raft.share.calg.LeaderNodeEventHandlers> namedDatabaseIdFunction7 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule8 = null;
    org.neo4j.memory.MemoryTracker memoryTracker9 = null;
    java.nio.file.Path path10 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo11 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path10);
    io.github.onograph.config.NodeGroupIdentifierSetSupplier nodeGroupIdentifierSetSupplier12 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.LeaderGatekeeper leaderGatekeeper13 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder consensusNodeGroupWrapperBuilder14 = new io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder(
        clusterSimpleStorageFacade6, namedDatabaseIdFunction7, globalModule8, memoryTracker9,
        clusterMetaTopologyInfo11, nodeGroupIdentifierSetSupplier12, leaderGatekeeper13);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat15 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv16 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction3, clusterSimpleStorageFacade4, log5, clusterMetaTopologyInfo11,
        clusterMetaFormat15);
    java.nio.file.Path path17 = clusterMetaTopologyInfo11.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker18 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo11);
    org.neo4j.memory.MemoryTracker memoryTracker19 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade20 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config0, fileSystemAbstraction1, logProvider2, clusterMetaTopologyInfo11, memoryTracker19);
    try {
      org.neo4j.io.state.SimpleStorage<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSimpleStorage22 = clusterSimpleStorageFacade20.crermroSimpleStorage(
          "store_random_id");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo11);
    org.junit.Assert.assertNull(path17);
  }

  @Test
  public void test1859() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1859");
    }
    io.github.onograph.cluster.raft.share.calg.action.TransactionLogActionClipImpl transactionLogActionClipImpl1 = new io.github.onograph.cluster.raft.share.calg.action.TransactionLogActionClipImpl(
        0L);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl consensusLogCacheServiceNLImpl2 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = consensusLogCacheServiceNLImpl2.getConsensusLogEntry(
        (long) 1);
    int int5 = consensusLogCacheServiceNLImpl2.elmtcu();
    consensusLogCacheServiceNLImpl2.enb();
    org.neo4j.logging.Log log7 = null;
    transactionLogActionClipImpl1.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceNLImpl2,
        log7);
    consensusLogCacheServiceNLImpl2.prn((long) (byte) 100);
    org.junit.Assert.assertNull(consensusLogEntry4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
  }

  @Test
  public void test1860() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1860");
    }
    io.github.onograph.cluster.raft.utils.queuesrv.ElementQueueRunnerImpl<io.github.onograph.cluster.raft.module.cuprot.AskMessageType> askMessageTypeElementQueueRunnerImpl0 = new io.github.onograph.cluster.raft.utils.queuesrv.ElementQueueRunnerImpl<io.github.onograph.cluster.raft.module.cuprot.AskMessageType>();
    io.github.onograph.cluster.raft.module.cuprot.AskMessageType askMessageType1 = io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_SET_SC;
    io.github.onograph.cluster.raft.module.cuprot.AskMessageType[] askMessageTypeArray2 = new io.github.onograph.cluster.raft.module.cuprot.AskMessageType[]{
        askMessageType1};
    java.util.ArrayList<io.github.onograph.cluster.raft.module.cuprot.AskMessageType> askMessageTypeList3 = new java.util.ArrayList<io.github.onograph.cluster.raft.module.cuprot.AskMessageType>();
    boolean boolean4 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.module.cuprot.AskMessageType>) askMessageTypeList3,
        askMessageTypeArray2);
    askMessageTypeElementQueueRunnerImpl0.removeSome(
        (java.util.List<io.github.onograph.cluster.raft.module.cuprot.AskMessageType>) askMessageTypeList3);
    io.github.onograph.cluster.raft.module.cuprot.AskMessageType askMessageType6 = io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_CS_ASK;
    askMessageTypeElementQueueRunnerImpl0.recForTry(askMessageType6);
    askMessageTypeElementQueueRunnerImpl0.removeAll();
    io.github.onograph.cluster.raft.module.cuprot.AskMessageType askMessageType9 = askMessageTypeElementQueueRunnerImpl0.poll();
    org.neo4j.kernel.database.DatabaseId databaseId10 = null;
    org.neo4j.storageengine.api.StoreId storeId11 = null;
    java.nio.file.Path path13 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreResource requestStoreResource14 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreResource(
        databaseId10, storeId11, (long) (byte) 10, path13);
    org.neo4j.kernel.database.DatabaseId databaseId15 = requestStoreResource14.getDatabaseId();
    org.neo4j.storageengine.api.StoreId storeId16 = requestStoreResource14.getEpceStoreId();
    io.github.onograph.cluster.raft.module.cuprot.AskMessageType askMessageType17 = requestStoreResource14.getTNme();
    org.junit.Assert.assertTrue("'" + askMessageType1 + "' != '"
            + io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_SET_SC + "'",
        askMessageType1.equals(
            io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_SET_SC));
    org.junit.Assert.assertNotNull(askMessageTypeArray2);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    org.junit.Assert.assertTrue("'" + askMessageType6 + "' != '"
            + io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_CS_ASK + "'",
        askMessageType6.equals(
            io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_CS_ASK));
    org.junit.Assert.assertNull(askMessageType9);
    org.junit.Assert.assertNull(databaseId15);
    org.junit.Assert.assertNull(storeId16);
    org.junit.Assert.assertTrue("'" + askMessageType17 + "' != '"
            + io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_SC_FP + "'",
        askMessageType17.equals(
            io.github.onograph.cluster.raft.module.cuprot.AskMessageType.AMT_SC_FP));
  }

  @Test
  public void test1861() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1861");
    }
    io.github.onograph.cluster.raft.share.meta.pit.SnapshotData snapshotData2 = new io.github.onograph.cluster.raft.share.meta.pit.SnapshotData(
        (long) 2, (long) (short) -1);
    int int3 = snapshotData2.getMapCsmoSize();
    io.github.onograph.cluster.raft.share.meta.MetaWrapper<io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat> clusterMetaFormatMetaWrapper4 = io.github.onograph.cluster.raft.share.meta.MetaWrapper.META_WRAPPER_VESN_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat5 = snapshotData2.getCsmoForMW(
        clusterMetaFormatMetaWrapper4);
    org.neo4j.io.marshal.SafeStateMarshal<io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat> clusterMetaFormatSafeStateMarshal6 = clusterMetaFormatMetaWrapper4.maslSafeStateMarshal();
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertNotNull(clusterMetaFormatMetaWrapper4);
    org.junit.Assert.assertNull(clusterMetaFormat5);
    org.junit.Assert.assertNotNull(clusterMetaFormatSafeStateMarshal6);
  }

  @Test
  public void test1862() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1862");
    }
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl2 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel0, safeStateMarshalImpl1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk3 = null;
    java.lang.Void void4 = processorImpl2.process(bulkAsk3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage5 = null;
    java.lang.Void void6 = processorImpl2.process(logClipRequestMessage5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage7 = null;
    java.lang.Void void8 = processorImpl2.process(aliveReplyMessage7);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage9 = null;
    java.lang.Void void10 = processorImpl2.process(logClipRequestMessage9);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId11 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveNoReplyMessage aliveNoReplyMessage15 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveNoReplyMessage(
        consensusNodeId11, (long) 10, (long) 'a', (long) (byte) 10);
    try {
      java.lang.Void void16 = processorImpl2.process(aliveNoReplyMessage15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(void4);
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(void8);
    org.junit.Assert.assertNull(void10);
  }

  @Test
  public void test1863() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1863");
    }
    java.io.OutputStream outputStream0 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.WritableChecksumChannelDataOutputStreamImpl writableChecksumChannelDataOutputStreamImpl1 = new io.github.onograph.cluster.raft.akkamsg.serialization.WritableChecksumChannelDataOutputStreamImpl(
        outputStream0);
    try {
      int int2 = writableChecksumChannelDataOutputStreamImpl1.putChecksum();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.UnsupportedOperationException; message: *** Error:  100ffcc2-582f-4a17-bd87-e43d6cb18cfa");
    } catch (java.lang.UnsupportedOperationException e) {
    }
  }

  @Test
  public void test1864() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1864");
    }
    org.neo4j.configuration.Config config0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.logging.LogProvider logProvider2 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade3 = null;
    java.util.function.Function<org.neo4j.kernel.database.NamedDatabaseId, io.github.onograph.cluster.raft.share.calg.LeaderNodeEventHandlers> namedDatabaseIdFunction4 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule5 = null;
    org.neo4j.memory.MemoryTracker memoryTracker6 = null;
    java.nio.file.Path path7 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo8 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path7);
    io.github.onograph.config.NodeGroupIdentifierSetSupplier nodeGroupIdentifierSetSupplier9 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.LeaderGatekeeper leaderGatekeeper10 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder consensusNodeGroupWrapperBuilder11 = new io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder(
        clusterSimpleStorageFacade3, namedDatabaseIdFunction4, globalModule5, memoryTracker6,
        clusterMetaTopologyInfo8, nodeGroupIdentifierSetSupplier9, leaderGatekeeper10);
    org.neo4j.memory.MemoryTracker memoryTracker12 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade13 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config0, fileSystemAbstraction1, logProvider2, clusterMetaTopologyInfo8, memoryTracker12);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo8);
  }

  @Test
  public void test1865() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1865");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResourceSyncProcessor storeResourceSyncProcessor1 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResourceSyncProcessor(
        2);
    io.netty.channel.ChannelHandlerContext channelHandlerContext2 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType setupGdbSyncReplyStateType5 = io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType.SYNC_GENERAL_ERR;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted storeSyncCompleted6 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted(
        (long) 10, setupGdbSyncReplyStateType5);
    try {
      io.netty.util.concurrent.Future<java.lang.Void> voidFuture7 = storeResourceSyncProcessor1.endFuture(
          channelHandlerContext2, (long) 13, setupGdbSyncReplyStateType5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + setupGdbSyncReplyStateType5 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType.SYNC_GENERAL_ERR
        + "'", setupGdbSyncReplyStateType5.equals(
        io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType.SYNC_GENERAL_ERR));
  }

  @Test
  public void test1866() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1866");
    }
    io.github.onograph.cluster.raft.module.dprot.k8.K8NameRemTimestampWrapper k8NameRemTimestampWrapper0 = new io.github.onograph.cluster.raft.module.dprot.k8.K8NameRemTimestampWrapper();
    k8NameRemTimestampWrapper0.sedlntsForSt("temp-copy");
  }

  @Test
  public void test1867() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1867");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryManagerAkkaImpl clusterDiscoveryManagerAkkaImpl0 = new io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryManagerAkkaImpl();
    java.time.Clock clock1 = null;
    org.neo4j.configuration.Config config2 = null;
    io.github.onograph.cluster.raft.id.CoreNodeServerIdentity coreNodeServerIdentity3 = null;
    io.github.onograph.dbms.crash.CrashSignaler crashSignaler4 = null;
    org.neo4j.dbms.DatabaseStateService databaseStateService5 = null;
    java.nio.file.Path path6 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo7 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path6);
    java.nio.file.Path path8 = clusterMetaTopologyInfo7.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker9 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo7);
    io.github.onograph.cluster.raft.module.dprot.DiscoveryRetryManager discoveryRetryManager12 = new io.github.onograph.cluster.raft.module.dprot.DiscoveryRetryManager(
        (long) (byte) 9, (long) (short) 100);
    org.neo4j.scheduler.JobScheduler jobScheduler13 = null;
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.logging.LogProvider logProvider15 = null;
    akka.actor.ActorRef actorRef16 = null;
    akka.cluster.Cluster cluster17 = null;
    io.github.onograph.config.ClusterMemberLimitAtCreationDTO clusterMemberLimitAtCreationDTO19 = new io.github.onograph.config.ClusterMemberLimitAtCreationDTO(
        3);
    int int20 = clusterMemberLimitAtCreationDTO19.getVal();
    org.neo4j.configuration.Config config21 = null;
    akka.actor.ActorRef actorRef22 = null;
    akka.cluster.Cluster cluster23 = null;
    io.github.onograph.config.ClusterMemberLimitAtCreationDTO clusterMemberLimitAtCreationDTO24 = null;
    org.neo4j.configuration.Config config25 = null;
    org.neo4j.configuration.helpers.SocketAddress[] socketAddressArray26 = new org.neo4j.configuration.helpers.SocketAddress[]{};
    java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress> socketAddressList27 = new java.util.ArrayList<org.neo4j.configuration.helpers.SocketAddress>();
    boolean boolean28 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList27,
        socketAddressArray26);
    io.github.onograph.cluster.raft.module.dprot.MemberNodeService memberNodeService29 = io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddressManagerDefaultImpl.reoeMemberNodeService(
        (java.util.List<org.neo4j.configuration.helpers.SocketAddress>) socketAddressList27);
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.ActorLifecycleApproachDefaultImpl actorLifecycleApproachDefaultImpl30 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.ActorLifecycleApproachDefaultImpl(
        memberNodeService29);
    akka.actor.Props props31 = io.github.onograph.cluster.raft.module.dprot.impl.stack.ClusterGatekeeperActor.prpProps(
        actorRef22, cluster23, clusterMemberLimitAtCreationDTO24, config25, memberNodeService29);
    akka.actor.Props props32 = io.github.onograph.cluster.raft.module.dprot.impl.stack.ClusterGatekeeperActor.prpProps(
        actorRef16, cluster17, clusterMemberLimitAtCreationDTO19, config21, memberNodeService29);
    org.neo4j.monitoring.Monitors monitors33 = null;
    io.github.onograph.cluster.raft.id.CoreNodeServerIdentity coreNodeServerIdentity34 = null;
    io.github.onograph.cluster.raft.module.dprot.pit.PointInTimeBackupService pointInTimeBackupService35 = io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl.cosnoftPointInTimeBackupService(
        coreNodeServerIdentity34);
    org.neo4j.ssl.config.SslPolicyLoader sslPolicyLoader36 = null;
    try {
      io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureService coreClusterStructureService37 = clusterDiscoveryManagerAkkaImpl0.cotogsvCoreClusterStructureService(
          clock1, config2, coreNodeServerIdentity3, crashSignaler4, databaseStateService5,
          (io.github.onograph.cluster.raft.module.dprot.DiscoveryInitialProcChecker) defaultDiscoveryInitialProcChecker9,
          discoveryRetryManager12, jobScheduler13, logProvider14, logProvider15,
          memberNodeService29, monitors33, pointInTimeBackupService35, sslPolicyLoader36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo7);
    org.junit.Assert.assertNull(path8);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
    org.junit.Assert.assertNotNull(socketAddressArray26);
    //org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNotNull(memberNodeService29);
    org.junit.Assert.assertNotNull(props31);
    org.junit.Assert.assertNotNull(props32);
    org.junit.Assert.assertNotNull(pointInTimeBackupService35);
  }

  @Test
  public void test1868() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1868");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId1 = null;
    java.util.UUID uUID2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.AskState askState3 = new io.github.onograph.cluster.raft.share.meta.fsm.AskState(
        databaseId0, consensusNodeId1, uUID2);
    org.neo4j.kernel.database.DatabaseId databaseId4 = askState3.daasidDatabaseId();
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.ComProFamilyBuilder comProFamilyBuilder6 = io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.bulrComProFamilyWrapperComProFamilyBuilder();
    io.github.onograph.cluster.raft.control.connect.ServerException serverException7 = new io.github.onograph.cluster.raft.control.connect.ServerException(
        "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartRules1. Running every PT10S",
        comProFamilyBuilder6);
    boolean boolean8 = askState3.equals((java.lang.Object) comProFamilyBuilder6);
    java.util.UUID uUID9 = askState3.getMiUUID();
    io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.EmptyReq> emptyReqFSMEmptyReq10 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService11 = null;
    java.lang.Runnable runnable12 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage13 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl14 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable12, leasableMetaStateStorage13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator16 = null;
    java.util.function.Supplier<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSupplier17 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl leaseServiceEnterpriseImpl18 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl(
        consensusLeaderNodeService11, syncableLeasableCoreNodeDataFSMImpl14, namedDatabaseId15,
        syncerator16, consensusNodeIdSupplier17);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl19 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl20 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.ReplicatedTransactionFSM replicatedTransactionFSM21 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl22 = null;
    org.neo4j.logging.LogProvider logProvider23 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier24 = null;
    java.util.function.Supplier<org.neo4j.kernel.impl.transaction.log.LogicalTransactionStore> logicalTransactionStoreSupplier25 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair transactionLogIndexRepair26 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair(
        logProvider23, transactionIdStoreSupplier24, logicalTransactionStoreSupplier25);
    io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService coreGdbFSMService27 = new io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService(
        emptyReqFSMEmptyReq10, syncableLeasableCoreNodeDataFSMImpl14, fSMTokenImpl19,
        fSMTokenImpl20, replicatedTransactionFSM21, fSMTokenImpl22, transactionLogIndexRepair26);
    io.github.onograph.cluster.raft.share.meta.AutoCloseableActionProcessor autoCloseableActionProcessor28 = coreGdbFSMService27.getDsaceAutoCloseableActionProcessor();
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.FSMData> fSMDataConsumer29 = null;
    try {
      askState3.dipcForSy(autoCloseableActionProcessor28, fSMDataConsumer29, (long) (byte) 6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseId4);
    org.junit.Assert.assertNotNull(comProFamilyBuilder6);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNull(uUID9);
    org.junit.Assert.assertNotNull(autoCloseableActionProcessor28);
  }

  @Test
  public void test1869() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1869");
    }
    boolean boolean2 = io.github.onograph.cluster.raft.share.calg.VotingMemberThreshold.isQuu(1015,
        1016);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
  }

  @Test
  public void test1870() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1870");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.LivingCacheObserver livingCacheObserver3 = io.github.onograph.cluster.raft.share.calg.cle.cservice.LivingCacheObserver.VOI_LIVING_CACHE_OBSERVER;
    livingCacheObserver3.sememt((int) 'a');
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceLiveImpl consensusLogCacheServiceLiveImpl6 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceLiveImpl(
        32, false, (long) 13, livingCacheObserver3);
    long long7 = consensusLogCacheServiceLiveImpl6.toabys();
    consensusLogCacheServiceLiveImpl6.retspccac();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry10 = consensusLogCacheServiceLiveImpl6.getConsensusLogEntry(
        1L);
    consensusLogCacheServiceLiveImpl6.prn((long) (byte) 9);
    consensusLogCacheServiceLiveImpl6.retspccac();
    org.junit.Assert.assertNotNull(livingCacheObserver3);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    org.junit.Assert.assertNull(consensusLogEntry10);
  }

  @Test
  public void test1871() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1871");
    }
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType0 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    java.lang.String str1 = applicationComProFamilyType0.caerString();
    io.github.onograph.cluster.raft.control.ApplicationComProFamily[] applicationComProFamilyArray2 = new io.github.onograph.cluster.raft.control.ApplicationComProFamily[]{
        applicationComProFamilyType0};
    io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyComProFamilyGroup3 = null;
    io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper applicationCurrentActiveComProFamilyWrapper4 = io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper.alkopolApplicationCurrentActiveComProFamilyWrapper(
        applicationComProFamilyComProFamilyGroup3);
    io.github.onograph.cluster.raft.control.connect.ComProFamilyManagerAppImpl comProFamilyManagerAppImpl5 = new io.github.onograph.cluster.raft.control.connect.ComProFamilyManagerAppImpl(
        applicationComProFamilyArray2, applicationCurrentActiveComProFamilyWrapper4);
    io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyComProFamilyGroup6 = null;
    io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper applicationCurrentActiveComProFamilyWrapper7 = io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper.alkopolApplicationCurrentActiveComProFamilyWrapper(
        applicationComProFamilyComProFamilyGroup6);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType8 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer9 = applicationComProFamilyType8.getImpl();
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType10 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer11 = applicationComProFamilyType10.getImpl();
    int int12 = entProVer9.compareTo(entProVer11);
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo13 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType14 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer15 = applicationComProFamilyType14.getImpl();
    boolean boolean16 = viewClusterInfo13.equals((java.lang.Object) entProVer15);
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo17 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType18 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer19 = applicationComProFamilyType18.getImpl();
    boolean boolean20 = viewClusterInfo17.equals((java.lang.Object) entProVer19);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType21 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer22 = applicationComProFamilyType21.getImpl();
    int int23 = entProVer19.compareTo(entProVer22);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType24 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer25 = applicationComProFamilyType24.getImpl();
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType26 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer27 = applicationComProFamilyType26.getImpl();
    int int28 = entProVer25.compareTo(entProVer27);
    io.github.onograph.config.EntProVer[] entProVerArray29 = new io.github.onograph.config.EntProVer[]{
        entProVer11, entProVer15, entProVer22, entProVer25};
    java.util.LinkedHashSet<io.github.onograph.config.EntProVer> entProVerSet30 = new java.util.LinkedHashSet<io.github.onograph.config.EntProVer>();
    boolean boolean31 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.EntProVer>) entProVerSet30,
        entProVerArray29);
    java.util.Set<io.github.onograph.config.EntProVer> entProVerSet32 = applicationCurrentActiveComProFamilyWrapper7.mulspevsfSet(
        (java.util.Set<io.github.onograph.config.EntProVer>) entProVerSet30);
    java.util.Set<io.github.onograph.config.EntProVer> entProVerSet33 = applicationCurrentActiveComProFamilyWrapper4.mulspevsfSet(
        (java.util.Set<io.github.onograph.config.EntProVer>) entProVerSet30);
    io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyComProFamilyGroup34 = applicationCurrentActiveComProFamilyWrapper4.getComProFamilyGroupCtgrT();
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType0 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType0.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "catchup_protocol" + "'", str1,
        "catchup_protocol");
    org.junit.Assert.assertNotNull(applicationComProFamilyArray2);
    org.junit.Assert.assertNotNull(applicationCurrentActiveComProFamilyWrapper4);
    org.junit.Assert.assertNotNull(applicationCurrentActiveComProFamilyWrapper7);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType8 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType8.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer9);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType10 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType10.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer11);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    org.junit.Assert.assertNotNull(viewClusterInfo13);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType14 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType14.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer15);
    //org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNotNull(viewClusterInfo17);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType18 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType18.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer19);
    //org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType21 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType21.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer22);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType24 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType24.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer25);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType26 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType26.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer27);
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    org.junit.Assert.assertNotNull(entProVerArray29);
    //org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertNotNull(entProVerSet32);
    org.junit.Assert.assertNotNull(entProVerSet33);
    org.junit.Assert.assertNull(applicationComProFamilyComProFamilyGroup34);
  }

  @Test
  public void test1872() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1872");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder currentDepartingMessageManagerMessageToByteEncoder0 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder();
    io.github.onograph.cluster.raft.share.ClusterLoadBalancingServerPoliciesGroupSetting clusterLoadBalancingServerPoliciesGroupSetting2 = io.github.onograph.cluster.raft.share.ClusterLoadBalancingServerPoliciesGroupSetting.gruClusterLoadBalancingServerPoliciesGroupSetting(
        "catchup_protocol");
    org.neo4j.graphdb.config.Setting<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessor<io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta>> loadBalanceServerMetaRuleProcessorSetting3 = clusterLoadBalancingServerPoliciesGroupSetting2.val;
    org.neo4j.graphdb.config.Setting<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessor<io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta>> loadBalanceServerMetaRuleProcessorSetting4 = clusterLoadBalancingServerPoliciesGroupSetting2.val;
    boolean boolean5 = currentDepartingMessageManagerMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) loadBalanceServerMetaRuleProcessorSetting4);
    org.junit.Assert.assertNotNull(clusterLoadBalancingServerPoliciesGroupSetting2);
    org.junit.Assert.assertNotNull(loadBalanceServerMetaRuleProcessorSetting3);
    org.junit.Assert.assertNotNull(loadBalanceServerMetaRuleProcessorSetting4);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test1873() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1873");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl0 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry1 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry1, (long) '#');
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry4, 52L);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry8 = consensusLogCacheServiceNoopImpl0.getConsensusLogEntry(
        (long) 'a');
    int int9 = consensusLogCacheServiceNoopImpl0.elmtcu();
    long long10 = consensusLogCacheServiceNoopImpl0.toabys();
    io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog inMemoryConsensusTransactionLog12 = new io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog();
    long long15 = inMemoryConsensusTransactionLog12.pass((long) 0, (long) (short) -1);
    boolean boolean17 = inMemoryConsensusTransactionLog12.equals((java.lang.Object) "protocols");
    long long18 = inMemoryConsensusTransactionLog12.apeie();
    io.github.onograph.cluster.raft.share.meta.ConsensusLogCursorAccessor consensusLogCursorAccessor19 = new io.github.onograph.cluster.raft.share.meta.ConsensusLogCursorAccessor(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceNoopImpl0,
        false,
        (io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogEntry) inMemoryConsensusTransactionLog12);
    long long22 = inMemoryConsensusTransactionLog12.pass((long) 'a', (long) '#');
    org.junit.Assert.assertNull(consensusLogEntry8);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
    //org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 35L + "'", long22 == 35L);
  }

  @Test
  public void test1874() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1874");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure startFailure1 = new io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure(
        "user-defined");
    io.github.onograph.cluster.raft.share.sync.SyncMeta syncMeta2 = io.github.onograph.cluster.raft.share.sync.SyncMeta.norladSyncMeta(
        (java.lang.Throwable) startFailure1);
    org.junit.Assert.assertNotNull(syncMeta2);
  }

  @Test
  public void test1875() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1875");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.DiscoveryGdbOperatorMetaWrapperJSerializer discoveryGdbOperatorMetaWrapperJSerializer0 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.DiscoveryGdbOperatorMetaWrapperJSerializer();
    boolean boolean1 = discoveryGdbOperatorMetaWrapperJSerializer0.includeManifest();
    boolean boolean2 = discoveryGdbOperatorMetaWrapperJSerializer0.includeManifest();
    java.util.ArrayList<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>> answerMessageTypeMessageToByteEncoderRuleProcessorJoiningImplList3 = new java.util.ArrayList<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>>();
    io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorInitiatorImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder> answerMessageTypeMessageToByteEncoderRuleProcessorInitiatorImpl4 = new io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorInitiatorImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>(
        (java.util.List<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>>) answerMessageTypeMessageToByteEncoderRuleProcessorJoiningImplList3);
    try {
      byte[] byteArray5 = discoveryGdbOperatorMetaWrapperJSerializer0.toBinary(
          (java.lang.Object) answerMessageTypeMessageToByteEncoderRuleProcessorInitiatorImpl4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.ClassCastException; message: class io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorInitiatorImpl cannot be cast to class io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper (io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorInitiatorImpl and io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper are in unnamed module of loader 'app')");
    } catch (java.lang.ClassCastException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
  }

  @Test
  public void test1876() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1876");
    }
    byte[] byteArray1 = new byte[]{(byte) 9};
    org.neo4j.kernel.database.DatabaseId databaseId2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType4 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData5 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray1, databaseId2, "name", replicaTokenType4);
    org.neo4j.kernel.database.DatabaseId databaseId6 = requestData5.daasidDatabaseId();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    org.neo4j.logging.LogProvider logProvider10 = null;
    java.nio.file.Path path11 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo12 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path11);
    java.nio.file.Path path13 = clusterMetaTopologyInfo12.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker14 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo12);
    org.neo4j.memory.MemoryTracker memoryTracker15 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade16 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config8, fileSystemAbstraction9, logProvider10, clusterMetaTopologyInfo12, memoryTracker15);
    org.neo4j.logging.Log log17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.configuration.Config config19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.logging.LogProvider logProvider21 = null;
    java.nio.file.Path path22 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo23 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path22);
    java.nio.file.Path path24 = clusterMetaTopologyInfo23.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker25 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo23);
    org.neo4j.memory.MemoryTracker memoryTracker26 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade27 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config19, fileSystemAbstraction20, logProvider21, clusterMetaTopologyInfo23,
        memoryTracker26);
    org.neo4j.logging.Log log28 = null;
    java.nio.file.Path path29 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo30 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path29);
    java.nio.file.Path path31 = clusterMetaTopologyInfo30.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker32 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo30);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat33 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv34 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction18, clusterSimpleStorageFacade27, log28, clusterMetaTopologyInfo30,
        clusterMetaFormat33);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat35 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction7, clusterSimpleStorageFacade16, log17, clusterMetaTopologyInfo30,
        clusterMetaFormat35);
    boolean boolean37 = requestData5.equals((java.lang.Object) upgradeMetaEnv36);
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[9]");
    org.junit.Assert.assertNull(databaseId6);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo12);
    org.junit.Assert.assertNull(path13);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo23);
    org.junit.Assert.assertNull(path24);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo30);
    org.junit.Assert.assertNull(path31);
    org.junit.Assert.assertNotNull(clusterMetaFormat33);
    //org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
  }

  @Test
  public void test1877() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1877");
    }
    io.github.onograph.cluster.raft.share.sync.DataSyncRunnerStatsManager dataSyncRunnerStatsManager0 = new io.github.onograph.cluster.raft.share.sync.DataSyncRunnerStatsManager();
    io.github.onograph.cluster.raft.akkamsg.serialization.DataManagerFactory<io.github.onograph.cluster.raft.share.sync.DataSyncRunnerStatsManager> dataSyncRunnerStatsManagerDataManagerFactory1 = io.github.onograph.cluster.raft.akkamsg.serialization.DataManagerFactory.fiieDataManagerFactory(
        dataSyncRunnerStatsManager0);
    io.github.onograph.cluster.raft.share.sync.DataSyncRunnerStatsManager dataSyncRunnerStatsManager2 = dataSyncRunnerStatsManagerDataManagerFactory1.bul();
    org.neo4j.logging.Log log3 = null;
    dataSyncRunnerStatsManager2.log = log3;
    org.junit.Assert.assertNotNull(dataSyncRunnerStatsManagerDataManagerFactory1);
    org.junit.Assert.assertNotNull(dataSyncRunnerStatsManager2);
  }

  @Test
  public void test1878() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1878");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.EmptyReq> emptyReqFSMEmptyReq0 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService1 = null;
    java.lang.Runnable runnable2 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage3 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl4 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable2, leasableMetaStateStorage3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator6 = null;
    java.util.function.Supplier<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSupplier7 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl leaseServiceEnterpriseImpl8 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl(
        consensusLeaderNodeService1, syncableLeasableCoreNodeDataFSMImpl4, namedDatabaseId5,
        syncerator6, consensusNodeIdSupplier7);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl9 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl10 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.ReplicatedTransactionFSM replicatedTransactionFSM11 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl12 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier14 = null;
    java.util.function.Supplier<org.neo4j.kernel.impl.transaction.log.LogicalTransactionStore> logicalTransactionStoreSupplier15 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair transactionLogIndexRepair16 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair(
        logProvider13, transactionIdStoreSupplier14, logicalTransactionStoreSupplier15);
    io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService coreGdbFSMService17 = new io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService(
        emptyReqFSMEmptyReq0, syncableLeasableCoreNodeDataFSMImpl4, fSMTokenImpl9, fSMTokenImpl10,
        replicatedTransactionFSM11, fSMTokenImpl12, transactionLogIndexRepair16);
    io.github.onograph.cluster.raft.share.meta.AutoCloseableActionProcessor autoCloseableActionProcessor18 = coreGdbFSMService17.getDsaceAutoCloseableActionProcessor();
    org.neo4j.kernel.impl.transaction.log.PhysicalTransactionRepresentation physicalTransactionRepresentation19 = null;
    org.neo4j.kernel.database.DatabaseId databaseId20 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.AbstractTransactionSync abstractTransactionSync22 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.AbstractTransactionSync(
        physicalTransactionRepresentation19, databaseId20, 10L);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry29 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray30 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry29};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction31 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray30);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction32 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 100, 1536L, consensusLogEntryArray30);
    io.github.onograph.cluster.raft.share.calg.action.BulkAddAction bulkAddAction35 = new io.github.onograph.cluster.raft.share.calg.action.BulkAddAction(
        consensusLogEntryArray30, (long) (byte) 0, (int) (short) 1);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId36 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Ask ask39 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Ask(
        (long) (byte) 0, (long) 3, consensusLogEntryArray30, consensusNodeId36, 1L, (long) 128);
    boolean boolean40 = abstractTransactionSync22.equals((java.lang.Object) (byte) 0);
    java.util.function.Consumer<io.github.onograph.cluster.raft.share.meta.FSMData> fSMDataConsumer41 = null;
    try {
      autoCloseableActionProcessor18.dipcForSyCo(abstractTransactionSync22, fSMDataConsumer41,
          (long) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(autoCloseableActionProcessor18);
    org.junit.Assert.assertNotNull(consensusLogEntryArray30);
    //org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
  }

  @Test
  public void test1879() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1879");
    }
    java.util.ArrayList<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>> strPairList0 = new java.util.ArrayList<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>();
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo2 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType3 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer4 = applicationComProFamilyType3.getImpl();
    boolean boolean5 = viewClusterInfo2.equals((java.lang.Object) entProVer4);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType6 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer7 = applicationComProFamilyType6.getImpl();
    int int8 = entProVer4.compareTo(entProVer7);
    io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl changeComProRequestImpl9 = new io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl(
        (java.util.List<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>) strPairList0,
        "", entProVer7);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType11 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer12 = applicationComProFamilyType11.getImpl();
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType13 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer14 = applicationComProFamilyType13.getImpl();
    int int15 = entProVer12.compareTo(entProVer14);
    io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl changeComProRequestImpl16 = new io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl(
        (java.util.List<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>) strPairList0,
        "Snappy", entProVer14);
    io.github.onograph.config.EntProVer entProVer18 = null;
    io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl changeComProRequestImpl19 = new io.github.onograph.cluster.raft.control.connect.ChangeComProRequestImpl(
        (java.util.List<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.lang.String>>) strPairList0,
        "member-db-state", entProVer18);
    org.junit.Assert.assertNotNull(viewClusterInfo2);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType3 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType3.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer4);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType6 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType6.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer7);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType11 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType11.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer12);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType13 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType13.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer14);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
  }

  @Test
  public void test1880() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1880");
    }
    io.github.onograph.cluster.raft.palapp.strategies.FollowerApproach followerApproach0 = new io.github.onograph.cluster.raft.palapp.strategies.FollowerApproach();
    followerApproach0.setup();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    try {
      java.util.Optional<org.neo4j.dbms.identity.ServerId> serverIdOptional3 = followerApproach0.fiuesrfodaOptional(
          namedDatabaseId2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1881() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1881");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler0 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler1 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler2 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler3 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler4 = null;
    org.neo4j.logging.Log log5 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler6 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler7 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl8 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler9 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler7, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler10 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler6, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler sliceMetaSimpleChannelInboundHandler11 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler(
        catchupAnswerLimitHandler4, log5, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.module.cuprot.current.rtx.CatchupIncomingTransactionReplySimpleChannelInboundHandler catchupIncomingTransactionReplySimpleChannelInboundHandler12 = new io.github.onograph.cluster.raft.module.cuprot.current.rtx.CatchupIncomingTransactionReplySimpleChannelInboundHandler(
        catchupAnswerLimitHandler3, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler13 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler2, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler allGdbIdsInboundHandler14 = new io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler(
        catchupAnswerLimitHandler1, refCatchupManagerImpl8);
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType catchupManagerStatusType15 = io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.SETUP_SC_ANSWER;
    refCatchupManagerImpl8.exeForE(catchupManagerStatusType15);
    io.github.onograph.cluster.raft.module.cuprot.GdbStoreInboundHandler gdbStoreInboundHandler17 = new io.github.onograph.cluster.raft.module.cuprot.GdbStoreInboundHandler(
        catchupAnswerLimitHandler0, refCatchupManagerImpl8);
    io.netty.channel.ChannelHandlerContext channelHandlerContext18 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier20 = new io.github.onograph.config.NodeGroupIdentifier(
        "hi!");
    char char22 = nodeGroupIdentifier20.charAt(0);
    akka.cluster.Cluster cluster23 = null;
    akka.event.EventStream eventStream24 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.StartScheduler startScheduler25 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartRules1 restartRules1_26 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartRules1();
    akka.actor.Props props27 = io.github.onograph.cluster.raft.module.dprot.impl.structure.RestartMonitoringActor.prpProps(
        cluster23, eventStream24, startScheduler25,
        (io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach) restartRules1_26);
    boolean boolean28 = nodeGroupIdentifier20.equals((java.lang.Object) restartRules1_26);
    int int29 = nodeGroupIdentifier20.length();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction30 = null;
    java.nio.file.Path path31 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreElementFacade storeElementFacade34 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreElementFacade(
        fileSystemAbstraction30, path31, 10, "Snappy");
    io.github.onograph.cluster.raft.id.ConsensusNodeId[] consensusNodeIdArray36 = new io.github.onograph.cluster.raft.id.ConsensusNodeId[]{};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSet37 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.id.ConsensusNodeId>();
    boolean boolean38 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet37,
        consensusNodeIdArray36);
    io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper consensusNodeServerMemberIdWrapper39 = new io.github.onograph.cluster.raft.share.calg.mnode.ConsensusNodeServerMemberIdWrapper(
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet37);
    io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper memberIndexWrapper40 = new io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper(
        (long) ' ',
        (java.util.Set<io.github.onograph.cluster.raft.id.ConsensusNodeId>) consensusNodeIdSet37);
    boolean boolean41 = storeElementFacade34.equals((java.lang.Object) ' ');
    java.lang.String str42 = storeElementFacade34.getStrPr();
    boolean boolean43 = nodeGroupIdentifier20.equals((java.lang.Object) storeElementFacade34);
    try {
      gdbStoreInboundHandler17.channelRead(channelHandlerContext18,
          (java.lang.Object) storeElementFacade34);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + catchupManagerStatusType15 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.SETUP_SC_ANSWER
        + "'", catchupManagerStatusType15.equals(
        io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.SETUP_SC_ANSWER));
    org.junit.Assert.assertTrue("'" + char22 + "' != '" + 'h' + "'", char22 == 'h');
    org.junit.Assert.assertNotNull(props27);
    //org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
    org.junit.Assert.assertNotNull(consensusNodeIdArray36);
    //org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    //org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Snappy" + "'", str42, "Snappy");
    //org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
  }

  @Test
  public void test1882() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1882");
    }
    io.github.onograph.cluster.raft.module.cuprot.current.info.Meta meta2 = io.github.onograph.cluster.raft.module.cuprot.current.info.Meta.craMeta(
        (long) 1536, "cc-core-restart-needed-listener-timer");
    long long3 = meta2.getLgIr();
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType4 = io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType.MTYPE_CONS_VOTE_ANS;
    boolean boolean5 = meta2.equals((java.lang.Object) raftConsensusMessageType4);
    long long6 = meta2.getLgIr();
    org.junit.Assert.assertNotNull(meta2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 1536L + "'", long3 == 1536L);
    org.junit.Assert.assertTrue("'" + raftConsensusMessageType4 + "' != '"
        + io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType.MTYPE_CONS_VOTE_ANS
        + "'", raftConsensusMessageType4.equals(
        io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType.MTYPE_CONS_VOTE_ANS));
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1536L + "'", long6 == 1536L);
  }

  @Test
  public void test1883() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1883");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl0 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry1 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry1, (long) '#');
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry4 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry4, 52L);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry8 = consensusLogCacheServiceNoopImpl0.getConsensusLogEntry(
        (long) 'a');
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry9 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry9, (long) 128);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry12 = null;
    consensusLogCacheServiceNoopImpl0.putForCo(consensusLogEntry12, 0L);
    org.junit.Assert.assertNull(consensusLogEntry8);
  }

  @Test
  public void test1884() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1884");
    }
    java.nio.file.Path[] pathArray1 = new java.nio.file.Path[]{};
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply setupGdbStoreSyncReply2 = io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply.sucsSetupGdbStoreSyncReply(
        (long) 'h', pathArray1);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply.SetupGdbSyncReplyStateType setupGdbSyncReplyStateType3 = setupGdbStoreSyncReply2.getStat();
    org.neo4j.kernel.database.NamedDatabaseId[] namedDatabaseIdArray4 = new org.neo4j.kernel.database.NamedDatabaseId[]{};
    java.util.LinkedHashSet<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdSet5 = new java.util.LinkedHashSet<org.neo4j.kernel.database.NamedDatabaseId>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdSet5,
        namedDatabaseIdArray4);
    io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIds allGdbIds7 = new io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIds(
        (java.util.Set<org.neo4j.kernel.database.NamedDatabaseId>) namedDatabaseIdSet5);
    java.util.Set<org.neo4j.kernel.database.NamedDatabaseId> namedDatabaseIdSet8 = allGdbIds7.getSetDiNamedDatabaseId();
    boolean boolean9 = setupGdbStoreSyncReply2.equals((java.lang.Object) allGdbIds7);
    org.junit.Assert.assertNotNull(pathArray1);
    org.junit.Assert.assertNotNull(setupGdbStoreSyncReply2);
    org.junit.Assert.assertTrue("'" + setupGdbSyncReplyStateType3 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply.SetupGdbSyncReplyStateType.OK
        + "'", setupGdbSyncReplyStateType3.equals(
        io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply.SetupGdbSyncReplyStateType.OK));
    org.junit.Assert.assertNotNull(namedDatabaseIdArray4);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(namedDatabaseIdSet8);
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test1885() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1885");
    }
    io.github.onograph.cluster.raft.control.AppComProFamilyGroupType appComProFamilyGroupType0 = io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo1 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType2 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer3 = applicationComProFamilyType2.getImpl();
    boolean boolean4 = viewClusterInfo1.equals((java.lang.Object) entProVer3);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType5 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer6 = applicationComProFamilyType5.getImpl();
    int int7 = entProVer3.compareTo(entProVer6);
    java.util.Optional<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyOptional8 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.finOptional(
        appComProFamilyGroupType0, entProVer6);
    java.util.List<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyList9 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.ctgrAppComProFamilyGroupType(
        appComProFamilyGroupType0);
    java.util.List<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyList10 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.ctgrAppComProFamilyGroupType(
        appComProFamilyGroupType0);
    java.util.List<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.util.Optional<io.github.onograph.cluster.raft.control.MutableComProFamily>>> strPairList11 = null;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType13 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer14 = applicationComProFamilyType13.getImpl();
    io.github.onograph.cluster.raft.control.connect.ClientException clientException15 = new io.github.onograph.cluster.raft.control.connect.ClientException(
        strPairList11, "default",
        (io.github.onograph.cluster.raft.control.ApplicationComProFamily) applicationComProFamilyType13);
    io.github.onograph.config.EntProVer entProVer16 = applicationComProFamilyType13.getImpl();
    io.github.onograph.config.EntProVer entProVer17 = applicationComProFamilyType13.getImpl();
    java.util.Optional<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyOptional18 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.finOptional(
        appComProFamilyGroupType0, entProVer17);
    java.lang.String str19 = appComProFamilyGroupType0.lowerName();
    org.junit.Assert.assertTrue("'" + appComProFamilyGroupType0 + "' != '"
            + io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL + "'",
        appComProFamilyGroupType0.equals(
            io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL));
    org.junit.Assert.assertNotNull(viewClusterInfo1);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType2 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType2.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer3);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType5 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType5.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertNotNull(applicationComProFamilyOptional8);
    org.junit.Assert.assertNotNull(applicationComProFamilyList9);
    org.junit.Assert.assertNotNull(applicationComProFamilyList10);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType13 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType13.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer14);
    org.junit.Assert.assertNotNull(entProVer16);
    org.junit.Assert.assertNotNull(entProVer17);
    org.junit.Assert.assertNotNull(applicationComProFamilyOptional18);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "raft_protocol" + "'", str19,
        "raft_protocol");
  }

  @Test
  public void test1886() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1886");
    }
    java.time.Duration duration0 = null;
    org.neo4j.dbms.database.DatabaseManager<io.github.onograph.dbms.gdb.EnterpriseClusterDbContext> enterpriseClusterDbContextDatabaseManager1 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy2 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService4 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    org.neo4j.monitoring.Monitors monitors6 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.cluster.raft.akkamsg.OutDirection<io.github.onograph.cluster.raft.id.ConsensusNodeId, io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AbstractConsensusMessage> consensusNodeIdOutDirection8 = null;
    org.neo4j.internal.helpers.TimeoutStrategy timeoutStrategy9 = null;
    io.github.onograph.cluster.raft.share.sync.SubCSManager subCSManager10 = null;
    java.util.UUID uUID11 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy12 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean13 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID11, consensusNodeIdLazy12);
    io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl syncStatusMetaServiceImpl14 = new io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl(
        clusterSessionBean13);
    try {
      io.github.onograph.cluster.raft.share.sync.ConsensusSynceratorImpl consensusSynceratorImpl15 = new io.github.onograph.cluster.raft.share.sync.ConsensusSynceratorImpl(
          duration0, enterpriseClusterDbContextDatabaseManager1, consensusNodeIdLazy2,
          (long) (short) 1, consensusLeaderNodeService4, logProvider5, monitors6, namedDatabaseId7,
          consensusNodeIdOutDirection8, timeoutStrategy9, subCSManager10,
          (io.github.onograph.cluster.raft.share.sync.SyncStatusMetaService) syncStatusMetaServiceImpl14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1887() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1887");
    }
    java.util.ArrayList<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>> answerMessageTypeMessageToByteEncoderRuleProcessorJoiningImplList0 = new java.util.ArrayList<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>>();
    io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorInitiatorImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder> answerMessageTypeMessageToByteEncoderRuleProcessorInitiatorImpl1 = new io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorInitiatorImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>(
        (java.util.List<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>>) answerMessageTypeMessageToByteEncoderRuleProcessorJoiningImplList0);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry6 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray7 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry6};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction8 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray7);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction9 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 100, 1536L, consensusLogEntryArray7);
    io.github.onograph.cluster.raft.share.calg.action.BulkAddAction bulkAddAction12 = new io.github.onograph.cluster.raft.share.calg.action.BulkAddAction(
        consensusLogEntryArray7, (long) (byte) 0, (int) (short) 1);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl13 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry14 = null;
    consensusLogCacheServiceNoopImpl13.putForCo(consensusLogEntry14, (long) '#');
    long long17 = consensusLogCacheServiceNoopImpl13.toabys();
    org.neo4j.logging.Log log18 = null;
    bulkAddAction12.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceNoopImpl13,
        log18);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.LivingCacheObserver livingCacheObserver23 = io.github.onograph.cluster.raft.share.calg.cle.cservice.LivingCacheObserver.VOI_LIVING_CACHE_OBSERVER;
    livingCacheObserver23.sememt((int) 'a');
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceLiveImpl consensusLogCacheServiceLiveImpl26 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceLiveImpl(
        32, false, (long) 13, livingCacheObserver23);
    long long27 = consensusLogCacheServiceLiveImpl26.toabys();
    consensusLogCacheServiceLiveImpl26.retspccac();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry30 = consensusLogCacheServiceLiveImpl26.getConsensusLogEntry(
        1L);
    org.neo4j.logging.Log log31 = null;
    bulkAddAction12.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceLiveImpl26,
        log31);
    boolean boolean33 = answerMessageTypeMessageToByteEncoderRuleProcessorInitiatorImpl1.equals(
        (java.lang.Object) bulkAddAction12);
    io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder answerMessageTypeMessageToByteEncoder34 = new io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder();
    io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder[] answerMessageTypeMessageToByteEncoderArray35 = new io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder[]{
        answerMessageTypeMessageToByteEncoder34};
    java.util.LinkedHashSet<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder> answerMessageTypeMessageToByteEncoderSet36 = new java.util.LinkedHashSet<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>();
    boolean boolean37 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>) answerMessageTypeMessageToByteEncoderSet36,
        answerMessageTypeMessageToByteEncoderArray35);
    java.util.Set<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder> answerMessageTypeMessageToByteEncoderSet38 = answerMessageTypeMessageToByteEncoderRuleProcessorInitiatorImpl1.aplSet(
        (java.util.Set<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>) answerMessageTypeMessageToByteEncoderSet36);
    org.junit.Assert.assertNotNull(consensusLogEntryArray7);
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    org.junit.Assert.assertNotNull(livingCacheObserver23);
    org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    org.junit.Assert.assertNull(consensusLogEntry30);
    //org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertNotNull(answerMessageTypeMessageToByteEncoderArray35);
    //org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertNotNull(answerMessageTypeMessageToByteEncoderSet38);
  }

  @Test
  public void test1888() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1888");
    }
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager0 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    readablePositionAwareChecksumChannelManager0.beginChecksum();
    try {
      java.lang.String str2 = io.github.onograph.cluster.raft.akkamsg.serialization.BasicStringSerializationHandler.unahString(
          (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error:  337d71e4-16ab-4986-b3d7-7e231af9f8ee");
    } catch (java.lang.IllegalArgumentException e) {
    }
  }

  @Test
  public void test1889() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1889");
    }
    io.github.onograph.cluster.raft.module.cuprot.LifecycleCatchupManagerImpl lifecycleCatchupManagerImpl0 = null;
    org.neo4j.logging.LogProvider logProvider1 = null;
    org.neo4j.logging.LogProvider logProvider3 = null;
    io.github.onograph.cluster.raft.share.NodeServerInfoLogService nodeServerInfoLogService4 = new io.github.onograph.cluster.raft.share.NodeServerInfoLogService(
        logProvider1, "temp-save", logProvider3);
    org.neo4j.logging.LogProvider logProvider5 = nodeServerInfoLogService4.getUserLogProvider();
    try {
      io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreService storeService6 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreService(
          lifecycleCatchupManagerImpl0, logProvider5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(logProvider5);
  }

  @Test
  public void test1890() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1890");
    }
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowersMeta<io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder> transactionLogSyncManagerBuilderConsensusNodeFollowersMeta0 = new io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowersMeta<io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder>();
    java.lang.String str1 = transactionLogSyncManagerBuilderConsensusNodeFollowersMeta0.toString();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    org.neo4j.logging.LogProvider logProvider3 = null;
    org.neo4j.memory.MemoryTracker memoryTracker4 = null;
    org.neo4j.io.pagecache.PageCache pageCache5 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer6 = null;
    io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder transactionLogSyncManagerBuilder7 = new io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder(
        fileSystemAbstraction2, logProvider3, memoryTracker4, pageCache5, pageCacheTracer6);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowerMeta consensusNodeFollowerMeta8 = transactionLogSyncManagerBuilderConsensusNodeFollowersMeta0.getConsensusNodeFollowerMeta(
        transactionLogSyncManagerBuilder7);
    java.lang.String str9 = transactionLogSyncManagerBuilderConsensusNodeFollowersMeta0.toString();
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowersMeta<io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder> transactionLogSyncManagerBuilderConsensusNodeFollowersMeta10 = new io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowersMeta<io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder>();
    java.lang.String str11 = transactionLogSyncManagerBuilderConsensusNodeFollowersMeta10.toString();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction12 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.memory.MemoryTracker memoryTracker14 = null;
    org.neo4j.io.pagecache.PageCache pageCache15 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = null;
    io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder transactionLogSyncManagerBuilder17 = new io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder(
        fileSystemAbstraction12, logProvider13, memoryTracker14, pageCache15, pageCacheTracer16);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowerMeta consensusNodeFollowerMeta18 = transactionLogSyncManagerBuilderConsensusNodeFollowersMeta10.getConsensusNodeFollowerMeta(
        transactionLogSyncManagerBuilder17);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowersMeta<io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder> transactionLogSyncManagerBuilderConsensusNodeFollowersMeta19 = new io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowersMeta<io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder>();
    java.lang.String str20 = transactionLogSyncManagerBuilderConsensusNodeFollowersMeta19.toString();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    org.neo4j.logging.LogProvider logProvider22 = null;
    org.neo4j.memory.MemoryTracker memoryTracker23 = null;
    org.neo4j.io.pagecache.PageCache pageCache24 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer25 = null;
    io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder transactionLogSyncManagerBuilder26 = new io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder(
        fileSystemAbstraction21, logProvider22, memoryTracker23, pageCache24, pageCacheTracer25);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowerMeta consensusNodeFollowerMeta27 = transactionLogSyncManagerBuilderConsensusNodeFollowersMeta19.getConsensusNodeFollowerMeta(
        transactionLogSyncManagerBuilder26);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowerMeta consensusNodeFollowerMeta29 = consensusNodeFollowerMeta27.onscresConsensusNodeFollowerMeta(
        (long) (short) 100);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowerMeta consensusNodeFollowerMeta31 = consensusNodeFollowerMeta29.onscresConsensusNodeFollowerMeta(
        (long) 2);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowerMeta consensusNodeFollowerMeta33 = consensusNodeFollowerMeta31.onscresConsensusNodeFollowerMeta(
        0L);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowerMeta consensusNodeFollowerMeta35 = consensusNodeFollowerMeta31.onscresConsensusNodeFollowerMeta(
        (long) (short) -1);
    io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowersMeta<io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder> transactionLogSyncManagerBuilderConsensusNodeFollowersMeta36 = new io.github.onograph.cluster.raft.share.calg.resp.ConsensusNodeFollowersMeta<io.github.onograph.cluster.raft.module.cuprot.TransactionLogSyncManagerBuilder>(
        transactionLogSyncManagerBuilderConsensusNodeFollowersMeta0,
        transactionLogSyncManagerBuilder17, consensusNodeFollowerMeta35);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "FollowerStates{}" + "'", str1,
        "FollowerStates{}");
    org.junit.Assert.assertNotNull(consensusNodeFollowerMeta8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "FollowerStates{}" + "'", str9,
        "FollowerStates{}");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "FollowerStates{}" + "'", str11,
        "FollowerStates{}");
    org.junit.Assert.assertNotNull(consensusNodeFollowerMeta18);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "FollowerStates{}" + "'", str20,
        "FollowerStates{}");
    org.junit.Assert.assertNotNull(consensusNodeFollowerMeta27);
    org.junit.Assert.assertNotNull(consensusNodeFollowerMeta29);
    org.junit.Assert.assertNotNull(consensusNodeFollowerMeta31);
    org.junit.Assert.assertNotNull(consensusNodeFollowerMeta33);
    org.junit.Assert.assertNotNull(consensusNodeFollowerMeta35);
  }

  @Test
  public void test1891() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1891");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler0 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl1 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.ident.GdbIdInboundHandler gdbIdInboundHandler2 = new io.github.onograph.cluster.raft.module.cuprot.current.ident.GdbIdInboundHandler(
        catchupAnswerLimitHandler0, refCatchupManagerImpl1);
    io.github.onograph.cluster.raft.module.cuprot.AnswerMessageType answerMessageType3 = io.github.onograph.cluster.raft.module.cuprot.AnswerMessageType.AMT_IS_ANSWER;
    boolean boolean4 = gdbIdInboundHandler2.acceptInboundMessage(
        (java.lang.Object) answerMessageType3);
    io.netty.channel.ChannelHandlerContext channelHandlerContext5 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ClusterInitMeta clusterInitMeta6 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ClusterInitMeta.EMT_CLUSTER_INIT_META;
    try {
      gdbIdInboundHandler2.channelRead(channelHandlerContext5, (java.lang.Object) clusterInitMeta6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + answerMessageType3 + "' != '"
            + io.github.onograph.cluster.raft.module.cuprot.AnswerMessageType.AMT_IS_ANSWER + "'",
        answerMessageType3.equals(
            io.github.onograph.cluster.raft.module.cuprot.AnswerMessageType.AMT_IS_ANSWER));
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertNotNull(clusterInitMeta6);
  }

  @Test
  public void test1892() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1892");
    }
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaCoreImpl gdbDiscoveryMetaCoreImpl0 = null;
    org.neo4j.dbms.identity.ServerId serverId1 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.GdbDiscoveryMetaCoreWrapper gdbDiscoveryMetaCoreWrapper2 = new io.github.onograph.cluster.raft.module.dprot.impl.structure.GdbDiscoveryMetaCoreWrapper(
        gdbDiscoveryMetaCoreImpl0, serverId1);
    io.github.onograph.dbms.ClusterDatabaseManagementException clusterDatabaseManagementException4 = new io.github.onograph.dbms.ClusterDatabaseManagementException(
        "store_version");
    io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure startFailure5 = new io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure(
        (java.lang.Throwable) clusterDatabaseManagementException4);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException gdbStoreSyncCrlException7 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException(
        (java.lang.Exception) startFailure5, "user-defined");
    boolean boolean8 = gdbDiscoveryMetaCoreWrapper2.equals(
        (java.lang.Object) gdbStoreSyncCrlException7);
    io.github.onograph.cluster.raft.share.meta.FSMData fSMData9 = io.github.onograph.cluster.raft.share.meta.FSMData.ofFSMData(
        (java.lang.Exception) gdbStoreSyncCrlException7);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(fSMData9);
  }

  @Test
  public void test1893() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1893");
    }
    org.neo4j.kernel.impl.factory.AccessCapabilityFactory accessCapabilityFactory0 = null;
    org.neo4j.kernel.impl.api.CommitProcessFactory commitProcessFactory1 = null;
    org.neo4j.graphdb.factory.module.id.DatabaseIdContext databaseIdContext2 = null;
    org.neo4j.kernel.impl.factory.AccessCapabilityFactory accessCapabilityFactory3 = null;
    org.neo4j.kernel.impl.api.CommitProcessFactory commitProcessFactory4 = null;
    org.neo4j.graphdb.factory.module.id.DatabaseIdContext databaseIdContext5 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService6 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl7 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator9 = null;
    java.util.function.Supplier<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSupplier10 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl leaseServiceEnterpriseImpl11 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl(
        consensusLeaderNodeService6, syncableLeasableCoreNodeDataFSMImpl7, namedDatabaseId8,
        syncerator9, consensusNodeIdSupplier10);
    org.neo4j.kernel.impl.locking.Locks locks12 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService coreGdbFSMService13 = null;
    org.neo4j.token.TokenHolders tokenHolders14 = null;
    io.github.onograph.cluster.raft.share.meta.CoreNodeWrapper coreNodeWrapper15 = new io.github.onograph.cluster.raft.share.meta.CoreNodeWrapper(
        accessCapabilityFactory3, commitProcessFactory4, databaseIdContext5,
        (org.neo4j.kernel.impl.api.LeaseService) leaseServiceEnterpriseImpl11, locks12,
        coreGdbFSMService13, tokenHolders14);
    org.neo4j.kernel.impl.locking.Locks locks16 = org.neo4j.kernel.impl.locking.Locks.NO_LOCKS;
    io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.EmptyReq> emptyReqFSMEmptyReq17 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService18 = null;
    java.lang.Runnable runnable19 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage20 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl21 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable19, leasableMetaStateStorage20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator23 = null;
    java.util.function.Supplier<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSupplier24 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl leaseServiceEnterpriseImpl25 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl(
        consensusLeaderNodeService18, syncableLeasableCoreNodeDataFSMImpl21, namedDatabaseId22,
        syncerator23, consensusNodeIdSupplier24);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl26 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl27 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.ReplicatedTransactionFSM replicatedTransactionFSM28 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl29 = null;
    org.neo4j.logging.LogProvider logProvider30 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier31 = null;
    java.util.function.Supplier<org.neo4j.kernel.impl.transaction.log.LogicalTransactionStore> logicalTransactionStoreSupplier32 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair transactionLogIndexRepair33 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair(
        logProvider30, transactionIdStoreSupplier31, logicalTransactionStoreSupplier32);
    io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService coreGdbFSMService34 = new io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService(
        emptyReqFSMEmptyReq17, syncableLeasableCoreNodeDataFSMImpl21, fSMTokenImpl26,
        fSMTokenImpl27, replicatedTransactionFSM28, fSMTokenImpl29, transactionLogIndexRepair33);
    org.neo4j.token.TokenHolders tokenHolders35 = null;
    io.github.onograph.cluster.raft.share.meta.CoreNodeWrapper coreNodeWrapper36 = new io.github.onograph.cluster.raft.share.meta.CoreNodeWrapper(
        accessCapabilityFactory0, commitProcessFactory1, databaseIdContext2,
        (org.neo4j.kernel.impl.api.LeaseService) leaseServiceEnterpriseImpl11, locks16,
        coreGdbFSMService34, tokenHolders35);
    try {
      long long37 = coreGdbFSMService34.gelsalin();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(locks16);
  }

  @Test
  public void test1894() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1894");
    }
    java.io.OutputStream outputStream0 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.WritableChecksumChannelDataOutputStreamImpl writableChecksumChannelDataOutputStreamImpl1 = new io.github.onograph.cluster.raft.akkamsg.serialization.WritableChecksumChannelDataOutputStreamImpl(
        outputStream0);
    try {
      org.neo4j.io.fs.WritableChecksumChannel writableChecksumChannel3 = writableChecksumChannelDataOutputStreamImpl1.putDouble(
          (double) (-1.0f));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1895() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1895");
    }
    io.github.onograph.cluster.raft.share.meta.cm.ClusterSyncerException clusterSyncerException0 = new io.github.onograph.cluster.raft.share.meta.cm.ClusterSyncerException();
    io.github.onograph.cluster.raft.share.sync.SyncMeta syncMeta1 = io.github.onograph.cluster.raft.share.sync.SyncMeta.norladSyncMeta(
        (java.lang.Throwable) clusterSyncerException0);
    io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure startFailure2 = new io.github.onograph.cluster.raft.module.dprot.impl.AkkaActorSystemRetry.StartFailure(
        (java.lang.Throwable) clusterSyncerException0);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry6 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray7 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry6};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction8 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray7);
    io.github.onograph.cluster.raft.share.calg.cle.parts.TransactionLogKernelException transactionLogKernelException9 = new io.github.onograph.cluster.raft.share.calg.cle.parts.TransactionLogKernelException(
        (java.lang.Throwable) startFailure2, "typically-connect-to-random-read-replica",
        (java.lang.Object[]) consensusLogEntryArray7);
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    java.lang.String str11 = transactionLogKernelException9.getUserMessage(tokenNameLookup10);
    org.junit.Assert.assertNotNull(syncMeta1);
    org.junit.Assert.assertNotNull(consensusLogEntryArray7);
    org.junit.Assert.assertEquals(
        "'" + str11 + "' != '" + "typically-connect-to-random-read-replica" + "'", str11,
        "typically-connect-to-random-read-replica");
  }

  @Test
  public void test1896() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1896");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.UniqueAddressJSerializer uniqueAddressJSerializer0 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.UniqueAddressJSerializer();
    boolean boolean1 = uniqueAddressJSerializer0.includeManifest();
    int int2 = uniqueAddressJSerializer0.identifier();
    //org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1002 + "'", int2 == 1002);
  }

  @Test
  public void test1897() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1897");
    }
    java.lang.String[] strArray1 = new java.lang.String[]{"type_comp"};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet2 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray1);
    org.junit.Assert.assertNotNull(strArray1);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet2);
  }

  @Test
  public void test1898() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1898");
    }
    java.util.Map<java.lang.String, java.net.InetAddress[]> strMap0 = null;
    io.github.onograph.cluster.raft.module.dprot.DomainToInetAddressProviderConfImpl domainToInetAddressProviderConfImpl1 = new io.github.onograph.cluster.raft.module.dprot.DomainToInetAddressProviderConfImpl(
        strMap0);
    try {
      java.net.InetAddress[] inetAddressArray3 = domainToInetAddressProviderConfImpl1.revdanmInetAddress(
          "hi!");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1899() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1899");
    }
    io.github.onograph.cluster.raft.module.cuprot.Ref<io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType> messageDataTypeRef0 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataTypeChannelInboundHandlerAdapter messageDataTypeChannelInboundHandlerAdapter1 = new io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataTypeChannelInboundHandlerAdapter(
        messageDataTypeRef0);
    io.netty.channel.ChannelHandlerContext channelHandlerContext2 = null;
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols3 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    io.github.onograph.cluster.raft.control.MutableComProFamily[] mutableComProFamilyArray4 = new io.github.onograph.cluster.raft.control.MutableComProFamily[]{
        mutableProtocols3};
    java.util.ArrayList<io.github.onograph.cluster.raft.control.MutableComProFamily> mutableComProFamilyList5 = new java.util.ArrayList<io.github.onograph.cluster.raft.control.MutableComProFamily>();
    boolean boolean6 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutableComProFamilyList5,
        mutableComProFamilyArray4);
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols7 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    java.lang.String str8 = mutableProtocols7.getImpl();
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols9 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols10 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC;
    io.github.onograph.cluster.raft.control.MutableComProFamily[] mutableComProFamilyArray11 = new io.github.onograph.cluster.raft.control.MutableComProFamily[]{
        mutableProtocols7, mutableProtocols9, mutableProtocols10};
    java.util.ArrayList<io.github.onograph.cluster.raft.control.MutableComProFamily> mutableComProFamilyList12 = new java.util.ArrayList<io.github.onograph.cluster.raft.control.MutableComProFamily>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutableComProFamilyList12,
        mutableComProFamilyArray11);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType14 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper comProFamilyWrapper15 = new io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper(
        (java.util.List<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutableComProFamilyList12,
        (io.github.onograph.cluster.raft.control.ApplicationComProFamily) applicationComProFamilyType14);
    io.github.onograph.cluster.raft.control.ApplicationComProFamily applicationComProFamily16 = comProFamilyWrapper15.getPaApplicationComProFamily();
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper comProFamilyWrapper17 = new io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper(
        (java.util.List<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutableComProFamilyList5,
        applicationComProFamily16);
    try {
      messageDataTypeChannelInboundHandlerAdapter1.channelRead(channelHandlerContext2,
          (java.lang.Object) applicationComProFamily16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + mutableProtocols3 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols3.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertNotNull(mutableComProFamilyArray4);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    org.junit.Assert.assertTrue("'" + mutableProtocols7 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols7.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Snappy" + "'", str8, "Snappy");
    org.junit.Assert.assertTrue("'" + mutableProtocols9 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols9.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertTrue("'" + mutableProtocols10 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC + "'",
        mutableProtocols10.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC));
    org.junit.Assert.assertNotNull(mutableComProFamilyArray11);
    //org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType14 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType14.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertTrue("'" + applicationComProFamily16 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamily16.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
  }

  @Test
  public void test1900() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1900");
    }
    org.neo4j.io.fs.WritableChannel writableChannel0 = null;
    io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl writableChecksumChannelImpl1 = new io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl(
        writableChannel0);
    writableChecksumChannelImpl1.beginChecksum();
    try {
      org.neo4j.io.fs.WritableChecksumChannel writableChecksumChannel4 = writableChecksumChannelImpl1.putFloat(
          (float) 100);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1901() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1901");
    }
    io.github.onograph.cluster.raft.control.connect.HandshakeClientMessageProcessorDefaultImpl handshakeClientMessageProcessorDefaultImpl0 = null;
    io.github.onograph.cluster.raft.control.connect.ClientHandshakeSimpleChannelInboundHandler clientHandshakeSimpleChannelInboundHandler1 = new io.github.onograph.cluster.raft.control.connect.ClientHandshakeSimpleChannelInboundHandler(
        handshakeClientMessageProcessorDefaultImpl0);
    io.netty.channel.ChannelHandlerContext channelHandlerContext2 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry9 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray10 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry9};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction11 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray10);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction12 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 100, 1536L, consensusLogEntryArray10);
    io.github.onograph.cluster.raft.share.calg.action.BulkAddAction bulkAddAction15 = new io.github.onograph.cluster.raft.share.calg.action.BulkAddAction(
        consensusLogEntryArray10, (long) (byte) 0, (int) (short) 1);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId16 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Ask ask19 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Ask(
        (long) (byte) 0, (long) 3, consensusLogEntryArray10, consensusNodeId16, 1L, (long) 128);
    io.github.onograph.cluster.raft.share.meta.MetaWrapper<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaMetaWrapper20 = io.github.onograph.cluster.raft.share.meta.MetaWrapper.META_WRAPPER_LES_LEASABLE_META;
    boolean boolean21 = ask19.equals((java.lang.Object) leasableMetaMetaWrapper20);
    try {
      clientHandshakeSimpleChannelInboundHandler1.channelRead(channelHandlerContext2,
          (java.lang.Object) boolean21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusLogEntryArray10);
    org.junit.Assert.assertNotNull(leasableMetaMetaWrapper20);
    //org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
  }

  @Test
  public void test1902() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1902");
    }
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupIncomingTransactionReply catchupIncomingTransactionReply0 = io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupIncomingTransactionReply.EMT_CATCHUP_INCOMING_TRANSACTION_REPLY;
    org.neo4j.storageengine.api.StoreId storeId1 = catchupIncomingTransactionReply0.getStoreId();
    int int2 = catchupIncomingTransactionReply0.getISt();
    org.junit.Assert.assertNotNull(catchupIncomingTransactionReply0);
    org.junit.Assert.assertNull(storeId1);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
  }

  @Test
  public void test1903() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1903");
    }
    io.github.onograph.cluster.raft.share.meta.pit.SnapshotData snapshotData2 = new io.github.onograph.cluster.raft.share.meta.pit.SnapshotData(
        (long) 2, (long) (short) -1);
    int int3 = snapshotData2.getMapCsmoSize();
    int int4 = snapshotData2.getMapCsmoSize();
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
  }

  @Test
  public void test1904() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1904");
    }
    java.util.ArrayList<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>> answerMessageTypeMessageToByteEncoderRuleProcessorJoiningImplList1 = new java.util.ArrayList<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>>();
    io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorInitiatorImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder> answerMessageTypeMessageToByteEncoderRuleProcessorInitiatorImpl2 = new io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorInitiatorImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>(
        (java.util.List<io.github.onograph.cluster.raft.gateway.gwlb.interceptors.RuleProcessorJoiningImpl<io.github.onograph.cluster.raft.module.cuprot.AnswerMessageTypeMessageToByteEncoder>>) answerMessageTypeMessageToByteEncoderRuleProcessorJoiningImplList1);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry7 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray8 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry7};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction9 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray8);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction10 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 100, 1536L, consensusLogEntryArray8);
    io.github.onograph.cluster.raft.share.calg.action.BulkAddAction bulkAddAction13 = new io.github.onograph.cluster.raft.share.calg.action.BulkAddAction(
        consensusLogEntryArray8, (long) (byte) 0, (int) (short) 1);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl consensusLogCacheServiceNoopImpl14 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNoopImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry15 = null;
    consensusLogCacheServiceNoopImpl14.putForCo(consensusLogEntry15, (long) '#');
    long long18 = consensusLogCacheServiceNoopImpl14.toabys();
    org.neo4j.logging.Log log19 = null;
    bulkAddAction13.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceNoopImpl14,
        log19);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.LivingCacheObserver livingCacheObserver24 = io.github.onograph.cluster.raft.share.calg.cle.cservice.LivingCacheObserver.VOI_LIVING_CACHE_OBSERVER;
    livingCacheObserver24.sememt((int) 'a');
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceLiveImpl consensusLogCacheServiceLiveImpl27 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceLiveImpl(
        32, false, (long) 13, livingCacheObserver24);
    long long28 = consensusLogCacheServiceLiveImpl27.toabys();
    consensusLogCacheServiceLiveImpl27.retspccac();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry31 = consensusLogCacheServiceLiveImpl27.getConsensusLogEntry(
        1L);
    org.neo4j.logging.Log log32 = null;
    bulkAddAction13.apltoForCoLo(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceLiveImpl27,
        log32);
    boolean boolean34 = answerMessageTypeMessageToByteEncoderRuleProcessorInitiatorImpl2.equals(
        (java.lang.Object) bulkAddAction13);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray35 = bulkAddAction13.enrsConsensusLogEntryArray;
    io.github.onograph.cluster.raft.share.calg.cle.parts.TransactionLogKernelException transactionLogKernelException36 = new io.github.onograph.cluster.raft.share.calg.cle.parts.TransactionLogKernelException(
        "typically-connect-to-random-read-replica", (java.lang.Object[]) consensusLogEntryArray35);
    org.junit.Assert.assertNotNull(consensusLogEntryArray8);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    org.junit.Assert.assertNotNull(livingCacheObserver24);
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertNull(consensusLogEntry31);
    //org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertNotNull(consensusLogEntryArray35);
  }

  @Test
  public void test1905() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1905");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartAllConds restartAllConds0 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.RestartAllConds();
    java.lang.String str1 = restartAllConds0.gersString();
    org.junit.Assert.assertEquals("'" + str1 + "' != '"
            + "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartAllConds. Running every PT10S"
            + "'", str1,
        "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartAllConds. Running every PT10S");
  }

  @Test
  public void test1906() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1906");
    }
    byte[] byteArray2 = new byte[]{(byte) 100, (byte) 8};
    org.neo4j.kernel.database.DatabaseId databaseId3 = null;
    byte[] byteArray6 = new byte[]{(byte) 1};
    io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService chunkedInputEncodingService8 = new io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService(
        byteArray6, true);
    org.neo4j.kernel.database.DatabaseId databaseId9 = null;
    io.github.onograph.cluster.raft.id.ConsensusMemberGroupId consensusMemberGroupId11 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId12 = null;
    java.time.Duration duration13 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.SetupConsensusDatabaseId setupConsensusDatabaseId14 = new io.github.onograph.cluster.raft.module.dprot.impl.structure.SetupConsensusDatabaseId(
        consensusMemberGroupId11, consensusNodeId12, duration13);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType15 = io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType.RTT_PROP;
    boolean boolean16 = setupConsensusDatabaseId14.equals((java.lang.Object) replicaTokenType15);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData17 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray6, databaseId9, "", replicaTokenType15);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData18 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray2, databaseId3, "", replicaTokenType15);
    org.junit.Assert.assertNotNull(byteArray2);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100, 8]");
    org.junit.Assert.assertNotNull(byteArray6);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]");
    org.junit.Assert.assertTrue("'" + replicaTokenType15 + "' != '"
            + io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType.RTT_PROP + "'",
        replicaTokenType15.equals(
            io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType.RTT_PROP));
    //org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1907() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1907");
    }
    java.util.List<org.neo4j.internal.helpers.collection.Pair<java.lang.String, java.util.Optional<io.github.onograph.cluster.raft.control.MutableComProFamily>>> strPairList0 = null;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType2 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer3 = applicationComProFamilyType2.getImpl();
    io.github.onograph.cluster.raft.control.connect.ClientException clientException4 = new io.github.onograph.cluster.raft.control.connect.ClientException(
        strPairList0, "default",
        (io.github.onograph.cluster.raft.control.ApplicationComProFamily) applicationComProFamilyType2);
    io.github.onograph.config.EntProVer entProVer5 = applicationComProFamilyType2.getImpl();
    io.netty.buffer.ByteBuf byteBuf6 = null;
    try {
      entProVer5.enoForBy(byteBuf6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType2 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType2.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer3);
    org.junit.Assert.assertNotNull(entProVer5);
  }

  @Test
  public void test1908() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1908");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler0 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler1 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler2 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler3 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler4 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler5 = null;
    org.neo4j.logging.Log log6 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler7 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler8 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl9 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler10 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler8, refCatchupManagerImpl9);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler11 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler7, refCatchupManagerImpl9);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler sliceMetaSimpleChannelInboundHandler12 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaSimpleChannelInboundHandler(
        catchupAnswerLimitHandler5, log6, refCatchupManagerImpl9);
    io.github.onograph.cluster.raft.module.cuprot.current.rtx.CatchupIncomingTransactionReplySimpleChannelInboundHandler catchupIncomingTransactionReplySimpleChannelInboundHandler13 = new io.github.onograph.cluster.raft.module.cuprot.current.rtx.CatchupIncomingTransactionReplySimpleChannelInboundHandler(
        catchupAnswerLimitHandler4, refCatchupManagerImpl9);
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler14 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler3, refCatchupManagerImpl9);
    io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler allGdbIdsInboundHandler15 = new io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler(
        catchupAnswerLimitHandler2, refCatchupManagerImpl9);
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType catchupManagerStatusType16 = io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.SETUP_SC_ANSWER;
    refCatchupManagerImpl9.exeForE(catchupManagerStatusType16);
    io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler allGdbIdsInboundHandler18 = new io.github.onograph.cluster.raft.module.cuprot.current.gdbi.AllGdbIdsInboundHandler(
        catchupAnswerLimitHandler1, refCatchupManagerImpl9);
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType catchupManagerStatusType19 = io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.SETUP_SC_ANSWER;
    refCatchupManagerImpl9.exeForE(catchupManagerStatusType19);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceSimpleChannelInboundHandler sliceSimpleChannelInboundHandler21 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceSimpleChannelInboundHandler(
        catchupAnswerLimitHandler0, refCatchupManagerImpl9);
    org.junit.Assert.assertTrue("'" + catchupManagerStatusType16 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.SETUP_SC_ANSWER
        + "'", catchupManagerStatusType16.equals(
        io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.SETUP_SC_ANSWER));
    org.junit.Assert.assertTrue("'" + catchupManagerStatusType19 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.SETUP_SC_ANSWER
        + "'", catchupManagerStatusType19.equals(
        io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl.CatchupManagerStatusType.SETUP_SC_ANSWER));
  }

  @Test
  public void test1909() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1909");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    org.neo4j.storageengine.api.StoreId storeId1 = null;
    java.nio.file.Path path3 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreResource requestStoreResource4 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreResource(
        databaseId0, storeId1, (long) ' ', path3);
  }

  @Test
  public void test1910() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1910");
    }
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS0 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta1 = marshalChannelImplCMS0.startState();
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS2 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta3 = marshalChannelImplCMS2.startState();
    boolean boolean5 = nodeServerMemberTransactionLogDataMeta3.isTrnt((long) '#');
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta6 = nodeServerMemberTransactionLogDataMeta3.neitcNodeServerMemberTransactionLogDataMeta();
    long long7 = marshalChannelImplCMS0.ordinal(nodeServerMemberTransactionLogDataMeta3);
    long long8 = nodeServerMemberTransactionLogDataMeta3.getLgOdnl();
    org.junit.Assert.assertNotNull(marshalChannelImplCMS0);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta1);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS2);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta3);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
  }

  @Test
  public void test1911() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1911");
    }
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionBlockLimiters.Configured configured1 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionBlockLimiters.Configured(
        (long) (-1));
  }

  @Test
  public void test1912() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1912");
    }
    io.github.onograph.cluster.raft.share.sync.DataSyncRunnerStatsManager dataSyncRunnerStatsManager0 = new io.github.onograph.cluster.raft.share.sync.DataSyncRunnerStatsManager();
    io.github.onograph.cluster.raft.akkamsg.serialization.DataManagerFactory<io.github.onograph.cluster.raft.share.sync.DataSyncRunnerStatsManager> dataSyncRunnerStatsManagerDataManagerFactory1 = io.github.onograph.cluster.raft.akkamsg.serialization.DataManagerFactory.fiieDataManagerFactory(
        dataSyncRunnerStatsManager0);
    org.neo4j.logging.Log log2 = null;
    dataSyncRunnerStatsManager0.log = log2;
    org.neo4j.dbms.database.DatabaseManager<?> wildcardDatabaseManager4 = dataSyncRunnerStatsManager0.databaseManagerDaamnObject;
    org.junit.Assert.assertNotNull(dataSyncRunnerStatsManagerDataManagerFactory1);
    org.junit.Assert.assertNull(wildcardDatabaseManager4);
  }

  @Test
  public void test1913() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1913");
    }
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS marshalChannelImplCMS0 = io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta candidateTermMeta1 = marshalChannelImplCMS0.startState();
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS marshalChannelImplCMS2 = io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.meta.CandidateTermMeta candidateTermMeta3 = marshalChannelImplCMS2.startState();
    long long4 = marshalChannelImplCMS0.ordinal(candidateTermMeta3);
    io.github.onograph.cluster.raft.id.ConsensusMemberGroupId.SafeStateMarshalImpl safeStateMarshalImpl5 = io.github.onograph.cluster.raft.id.ConsensusMemberGroupId.SafeStateMarshalImpl.IT;
    boolean boolean6 = candidateTermMeta3.equals((java.lang.Object) safeStateMarshalImpl5);
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager7 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl8 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager7);
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager9 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    readablePositionAwareChecksumChannelManager9.beginChecksum();
    org.neo4j.io.fs.ReadableChannel readableChannel11 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl12 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel11);
    readableClosablePositionAwareChecksumChannelPassThruImpl12.beginChecksum();
    readablePositionAwareChecksumChannelManager9.deettoForRe(
        (org.neo4j.kernel.impl.transaction.log.ReadableClosablePositionAwareChecksumChannel) readableClosablePositionAwareChecksumChannelPassThruImpl12);
    readablePositionAwareChecksumChannelManager7.deettoForRe(
        (org.neo4j.kernel.impl.transaction.log.ReadableClosablePositionAwareChecksumChannel) readableClosablePositionAwareChecksumChannelPassThruImpl12);
    try {
      io.github.onograph.cluster.raft.id.ConsensusMemberGroupId consensusMemberGroupId16 = safeStateMarshalImpl5.unmarshal(
          (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(marshalChannelImplCMS0);
    org.junit.Assert.assertNotNull(candidateTermMeta1);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS2);
    org.junit.Assert.assertNotNull(candidateTermMeta3);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNotNull(safeStateMarshalImpl5);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1914() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1914");
    }
    java.time.Clock clock0 = null;
    java.time.Duration duration1 = null;
    try {
      io.github.onograph.cluster.raft.share.calg.nltof.TransferCollection<io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl> safeStateMarshalImplTransferCollection2 = new io.github.onograph.cluster.raft.share.calg.nltof.TransferCollection<io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl>(
          clock0, duration1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1915() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1915");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.structure.StructureInfo structureInfo0 = io.github.onograph.cluster.raft.module.dprot.impl.structure.StructureInfo.EMT_STRUCTURE_INFO;
    java.util.stream.Stream<io.github.onograph.cluster.raft.module.dprot.impl.structure.GdbDiscoveryMetaCoreWrapper> gdbDiscoveryMetaCoreWrapperStream1 = structureInfo0.geseStream();
    boolean boolean3 = structureInfo0.equals((java.lang.Object) "FollowerStates{}");
    akka.cluster.UniqueAddress uniqueAddress4 = null;
    java.util.stream.Stream<io.github.onograph.cluster.raft.module.dprot.impl.structure.GdbDiscoveryMetaCoreWrapper> gdbDiscoveryMetaCoreWrapperStream5 = structureInfo0.geseStream(
        uniqueAddress4);
    java.util.stream.Stream<io.github.onograph.cluster.raft.module.dprot.impl.structure.GdbDiscoveryMetaCoreWrapper> gdbDiscoveryMetaCoreWrapperStream6 = structureInfo0.geseStream();
    org.junit.Assert.assertNotNull(structureInfo0);
    org.junit.Assert.assertNotNull(gdbDiscoveryMetaCoreWrapperStream1);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertNotNull(gdbDiscoveryMetaCoreWrapperStream5);
    org.junit.Assert.assertNotNull(gdbDiscoveryMetaCoreWrapperStream6);
  }

  @Test
  public void test1916() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1916");
    }
    io.github.onograph.cluster.raft.module.cuprot.current.ident.RequestGdbId requestGdbId1 = new io.github.onograph.cluster.raft.module.cuprot.current.ident.RequestGdbId(
        "cluster-state");
    java.lang.String str2 = requestGdbId1.decbString();
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "RequestGdbId for cluster-state" + "'",
        str2, "RequestGdbId for cluster-state");
  }

  @Test
  public void test1917() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1917");
    }
    org.neo4j.ssl.SslPolicy sslPolicy0 = null;
    io.github.onograph.cluster.raft.module.dprot.SSLContextManager sSLContextManager1 = new io.github.onograph.cluster.raft.module.dprot.SSLContextManager(
        sslPolicy0);
  }

  @Test
  public void test1918() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1918");
    }
    io.netty.channel.Channel channel0 = null;
    org.neo4j.logging.Log log1 = null;
    io.github.onograph.cluster.raft.akkamsg.NettyChannelImpl nettyChannelImpl2 = new io.github.onograph.cluster.raft.akkamsg.NettyChannelImpl(
        channel0, log1);
    boolean boolean3 = nettyChannelImpl2.isChannelDis();
    boolean boolean4 = nettyChannelImpl2.isChannelDis();
    try {
      nettyChannelImpl2.dipe();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
  }

  @Test
  public void test1919() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1919");
    }
    org.neo4j.internal.helpers.TimeoutStrategy timeoutStrategy1 = null;
    io.github.onograph.cluster.raft.module.dprot.DiscoveryRetryManager discoveryRetryManager2 = new io.github.onograph.cluster.raft.module.dprot.DiscoveryRetryManager(
        1L, timeoutStrategy1);
  }

  @Test
  public void test1920() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1920");
    }
    io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper memberIndexWrapper0 = null;
    io.github.onograph.cluster.raft.share.meta.pit.ConsensusMembershipState consensusMembershipState1 = new io.github.onograph.cluster.raft.share.meta.pit.ConsensusMembershipState(
        memberIndexWrapper0);
    io.github.onograph.cluster.raft.control.AppComProFamilyGroupType appComProFamilyGroupType2 = io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo3 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType4 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer5 = applicationComProFamilyType4.getImpl();
    boolean boolean6 = viewClusterInfo3.equals((java.lang.Object) entProVer5);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType7 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer8 = applicationComProFamilyType7.getImpl();
    int int9 = entProVer5.compareTo(entProVer8);
    java.util.Optional<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyOptional10 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.finOptional(
        appComProFamilyGroupType2, entProVer8);
    io.github.onograph.cluster.raft.control.AppComProFamilyGroupType appComProFamilyGroupType11 = io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo12 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType13 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer14 = applicationComProFamilyType13.getImpl();
    boolean boolean15 = viewClusterInfo12.equals((java.lang.Object) entProVer14);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType16 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer17 = applicationComProFamilyType16.getImpl();
    int int18 = entProVer14.compareTo(entProVer17);
    java.util.Optional<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyOptional19 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.finOptional(
        appComProFamilyGroupType11, entProVer17);
    io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper applicationCurrentActiveComProFamilyWrapper20 = io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper.alkopolApplicationCurrentActiveComProFamilyWrapper(
        (io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.ApplicationComProFamily>) appComProFamilyGroupType11);
    java.util.List<io.github.onograph.config.EntProVer> entProVerList21 = applicationCurrentActiveComProFamilyWrapper20.getListVrinU();
    io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper applicationCurrentActiveComProFamilyWrapper22 = io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper.foptoApplicationCurrentActiveComProFamilyWrapper(
        (io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.ApplicationComProFamily>) appComProFamilyGroupType2,
        entProVerList21);
    boolean boolean23 = consensusMembershipState1.equals(
        (java.lang.Object) applicationCurrentActiveComProFamilyWrapper22);
    io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper memberIndexWrapper24 = consensusMembershipState1.getCmitdMemberIndexWrapper();
    org.junit.Assert.assertTrue("'" + appComProFamilyGroupType2 + "' != '"
            + io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL + "'",
        appComProFamilyGroupType2.equals(
            io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL));
    org.junit.Assert.assertNotNull(viewClusterInfo3);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType4 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType4.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer5);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType7 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType7.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer8);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertNotNull(applicationComProFamilyOptional10);
    org.junit.Assert.assertTrue("'" + appComProFamilyGroupType11 + "' != '"
            + io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL + "'",
        appComProFamilyGroupType11.equals(
            io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL));
    org.junit.Assert.assertNotNull(viewClusterInfo12);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType13 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType13.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer14);
    //org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType16 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType16.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer17);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    org.junit.Assert.assertNotNull(applicationComProFamilyOptional19);
    org.junit.Assert.assertNotNull(applicationCurrentActiveComProFamilyWrapper20);
    org.junit.Assert.assertNotNull(entProVerList21);
    org.junit.Assert.assertNotNull(applicationCurrentActiveComProFamilyWrapper22);
    //org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertNull(memberIndexWrapper24);
  }

  @Test
  public void test1921() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1921");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    io.github.onograph.dbms.ClusterDatabaseManagementException clusterDatabaseManagementException2 = new io.github.onograph.dbms.ClusterDatabaseManagementException(
        "store_version");
    org.neo4j.dbms.api.DatabaseManagementException databaseManagementException3 = org.neo4j.dbms.api.DatabaseManagementException.wrap(
        (java.lang.Throwable) clusterDatabaseManagementException2);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException gdbStoreSyncCrlException5 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException(
        (java.lang.Exception) clusterDatabaseManagementException2, "protocols");
    org.neo4j.dbms.OperatorState operatorState6 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper discoveryGdbOperatorMetaWrapper7 = new io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper(
        databaseId0, (java.lang.Throwable) gdbStoreSyncCrlException5, operatorState6);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException gdbStoreSyncCrlException9 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException(
        (java.lang.Exception) gdbStoreSyncCrlException5, "RequestGdbId for cluster-state");
    org.junit.Assert.assertNotNull(databaseManagementException3);
  }

  @Test
  public void test1922() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1922");
    }
    io.github.onograph.cluster.raft.share.ClusterLoadBalancingServerPoliciesGroupSetting clusterLoadBalancingServerPoliciesGroupSetting1 = io.github.onograph.cluster.raft.share.ClusterLoadBalancingServerPoliciesGroupSetting.gruClusterLoadBalancingServerPoliciesGroupSetting(
        "raft_protocol");
    org.junit.Assert.assertNotNull(clusterLoadBalancingServerPoliciesGroupSetting1);
  }

  @Test
  public void test1923() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1923");
    }
    io.netty.bootstrap.Bootstrap bootstrap0 = null;
    io.netty.channel.pool.ChannelPoolHandler channelPoolHandler1 = null;
    io.github.onograph.cluster.raft.netty.NettyChannelPoolBuilder nettyChannelPoolBuilder2 = null;
    io.github.onograph.cluster.raft.netty.LBNettyChannelPoolMapImpl lBNettyChannelPoolMapImpl4 = new io.github.onograph.cluster.raft.netty.LBNettyChannelPoolMapImpl(
        bootstrap0, channelPoolHandler1, nettyChannelPoolBuilder2, (int) (byte) 9);
    java.util.Spliterator<java.util.Map.Entry<io.github.onograph.cluster.raft.netty.LBNettyChannelPoolMapImpl.ConsensusSocketAddressDTO, io.netty.channel.pool.ChannelPool>> consensusSocketAddressDTOEntrySpliterator5 = lBNettyChannelPoolMapImpl4.spliterator();
    boolean boolean6 = lBNettyChannelPoolMapImpl4.isEmpty();
    org.junit.Assert.assertNotNull(consensusSocketAddressDTOEntrySpliterator5);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
  }

  @Test
  public void test1924() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1924");
    }
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager0 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl1 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        (org.neo4j.io.fs.ReadableChannel) readablePositionAwareChecksumChannelManager0);
    try {
      readablePositionAwareChecksumChannelManager0.close();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error:  337d71e4-16ab-4986-b3d7-7e231af9f8ee");
    } catch (java.lang.IllegalArgumentException e) {
    }
  }

  @Test
  public void test1925() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1925");
    }
    io.github.onograph.RingQueue<io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta> syncedLeaderMetaRingQueue1 = new io.github.onograph.RingQueue<io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta>(
        (int) (short) 1);
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta3 = syncedLeaderMetaRingQueue1.getAtPos(
        (int) (byte) 3);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta4 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta5 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta4);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta6 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta7 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta6);
    akka.cluster.ddata.ReplicatedData replicatedData8 = syncedLeaderMeta5.merge(
        (akka.cluster.ddata.ReplicatedData) syncedLeaderMeta7);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta9 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta10 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta9);
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta11 = syncedLeaderMeta7.mergeData(
        syncedLeaderMeta10);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta12 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta13 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta12);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta14 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta15 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta14);
    akka.cluster.ddata.ReplicatedData replicatedData16 = syncedLeaderMeta13.merge(
        (akka.cluster.ddata.ReplicatedData) syncedLeaderMeta15);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta17 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta18 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta17);
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta19 = syncedLeaderMeta15.mergeData(
        syncedLeaderMeta18);
    akka.cluster.ddata.ReplicatedData replicatedData20 = syncedLeaderMeta11.merge(
        (akka.cluster.ddata.ReplicatedData) syncedLeaderMeta15);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta21 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta22 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta21);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta23 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta24 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta23);
    akka.cluster.ddata.ReplicatedData replicatedData25 = syncedLeaderMeta22.merge(
        (akka.cluster.ddata.ReplicatedData) syncedLeaderMeta24);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta26 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta27 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta26);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta28 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta29 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta28);
    akka.cluster.ddata.ReplicatedData replicatedData30 = syncedLeaderMeta27.merge(
        (akka.cluster.ddata.ReplicatedData) syncedLeaderMeta29);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta31 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta32 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta31);
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta33 = syncedLeaderMeta29.mergeData(
        syncedLeaderMeta32);
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta[] syncedLeaderMetaArray34 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta[]{
        syncedLeaderMeta15, syncedLeaderMeta22, syncedLeaderMeta29};
    try {
      syncedLeaderMetaRingQueue1.claForV(syncedLeaderMetaArray34);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: *** Error:  63523b69-c48e-4278-b396-a85463647e8d");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNull(syncedLeaderMeta3);
    org.junit.Assert.assertNotNull(replicatedData8);
    org.junit.Assert.assertNotNull(syncedLeaderMeta11);
    org.junit.Assert.assertNotNull(replicatedData16);
    org.junit.Assert.assertNotNull(syncedLeaderMeta19);
    org.junit.Assert.assertNotNull(replicatedData20);
    org.junit.Assert.assertNotNull(replicatedData25);
    org.junit.Assert.assertNotNull(replicatedData30);
    org.junit.Assert.assertNotNull(syncedLeaderMeta33);
    org.junit.Assert.assertNotNull(syncedLeaderMetaArray34);
  }

  @Test
  public void test1926() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1926");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo0 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType1 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer2 = applicationComProFamilyType1.getImpl();
    boolean boolean3 = viewClusterInfo0.equals((java.lang.Object) entProVer2);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType4 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer5 = applicationComProFamilyType4.getImpl();
    int int6 = entProVer2.compareTo(entProVer5);
    io.github.onograph.cluster.raft.share.sync.SyncStatus syncStatus7 = new io.github.onograph.cluster.raft.share.sync.SyncStatus();
    boolean boolean8 = entProVer2.equals((java.lang.Object) syncStatus7);
    syncStatus7.serlad();
    org.junit.Assert.assertNotNull(viewClusterInfo0);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType1 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType1.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer2);
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType4 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType4.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer5);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1927() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1927");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.ConsensusGdbServerCoordinatorSerializer consensusGdbServerCoordinatorSerializer0 = new io.github.onograph.cluster.raft.module.dprot.impl.serialize.ConsensusGdbServerCoordinatorSerializer();
    byte[] byteArray2 = new byte[]{(byte) 1};
    io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService chunkedInputEncodingService4 = new io.github.onograph.cluster.raft.akkamsg.serialization.ChunkedInputEncodingService(
        byteArray2, true);
    org.neo4j.kernel.database.DatabaseId databaseId5 = null;
    io.github.onograph.cluster.raft.id.ConsensusMemberGroupId consensusMemberGroupId7 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId8 = null;
    java.time.Duration duration9 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.SetupConsensusDatabaseId setupConsensusDatabaseId10 = new io.github.onograph.cluster.raft.module.dprot.impl.structure.SetupConsensusDatabaseId(
        consensusMemberGroupId7, consensusNodeId8, duration9);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType11 = io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType.RTT_PROP;
    boolean boolean12 = setupConsensusDatabaseId10.equals((java.lang.Object) replicaTokenType11);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData13 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray2, databaseId5, "", replicaTokenType11);
    try {
      java.lang.Object obj14 = consensusGdbServerCoordinatorSerializer0.fromBinary(byteArray2);
      org.junit.Assert.fail(
          "Expected exception of type akka.remote.MessageSerializer.SerializationException; message: *** Error:  42c5bd7f-3ac8-48ea-8a23-c7719f28fefe");
    } catch (akka.remote.MessageSerializer.SerializationException e) {
    }
    org.junit.Assert.assertNotNull(byteArray2);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1]");
    org.junit.Assert.assertTrue("'" + replicaTokenType11 + "' != '"
            + io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType.RTT_PROP + "'",
        replicaTokenType11.equals(
            io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType.RTT_PROP));
    //org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1928() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1928");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.DepartingMessageManagerMessageToByteEncoder departingMessageManagerMessageToByteEncoder0 = new io.github.onograph.cluster.raft.akkamsg.serialization.DepartingMessageManagerMessageToByteEncoder();
    java.lang.Object obj1 = null;
    boolean boolean2 = departingMessageManagerMessageToByteEncoder0.acceptOutboundMessage(obj1);
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
  }

  @Test
  public void test1929() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1929");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress3 = null;
    org.neo4j.dbms.identity.ServerId serverId4 = null;
    java.lang.String[] strArray11 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet12 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray11);
    io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta loadBalanceServerMeta13 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.LoadBalanceServerMeta(
        socketAddress3, serverId4, nodeGroupIdentifierSet12);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.AskToChange askToChange14 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.AskToChange(
        consensusNodeId0, (long) 1536, (long) (byte) 0, nodeGroupIdentifierSet12);
    long long15 = askToChange14.getLgT();
    long long16 = askToChange14.getLgT();
    org.junit.Assert.assertNotNull(strArray11);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet12);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
  }

  @Test
  public void test1930() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1930");
    }
    org.neo4j.kernel.impl.locking.Locks locks0 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LocksConsensusImpl locksConsensusImpl1 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LocksConsensusImpl(
        locks0);
    org.neo4j.kernel.impl.locking.Locks.Visitor visitor2 = null;
    try {
      locksConsensusImpl1.accept(visitor2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1931() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1931");
    }
    io.github.onograph.cluster.raft.module.cuprot.current.ident.GdbIdMessageToByteEncoder gdbIdMessageToByteEncoder0 = new io.github.onograph.cluster.raft.module.cuprot.current.ident.GdbIdMessageToByteEncoder();
    io.netty.channel.ChannelHandlerContext channelHandlerContext1 = null;
    gdbIdMessageToByteEncoder0.handlerAdded(channelHandlerContext1);
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler3 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl4 = null;
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedInboundHandler transactionChunkingCompletedInboundHandler5 = new io.github.onograph.cluster.raft.module.cuprot.synctrxr.TransactionChunkingCompletedInboundHandler(
        catchupAnswerLimitHandler3, refCatchupManagerImpl4);
    org.neo4j.graphdb.config.Setting<java.time.Duration> durationSetting6 = io.github.onograph.config.SettingsDeclarationClusterImpl.settingJoapoDuration;
    boolean boolean7 = transactionChunkingCompletedInboundHandler5.acceptInboundMessage(
        (java.lang.Object) durationSetting6);
    boolean boolean8 = gdbIdMessageToByteEncoder0.acceptOutboundMessage(
        (java.lang.Object) durationSetting6);
    org.junit.Assert.assertNotNull(durationSetting6);
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1932() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1932");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.AskState.AskStateSafeChannelMarshal askStateSafeChannelMarshal0 = new io.github.onograph.cluster.raft.share.meta.fsm.AskState.AskStateSafeChannelMarshal();
    org.neo4j.kernel.database.DatabaseId databaseId1 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId2 = null;
    java.util.UUID uUID3 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.AskState askState4 = new io.github.onograph.cluster.raft.share.meta.fsm.AskState(
        databaseId1, consensusNodeId2, uUID3);
    org.neo4j.kernel.database.DatabaseId databaseId5 = askState4.daasidDatabaseId();
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.ComProFamilyBuilder comProFamilyBuilder7 = io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.bulrComProFamilyWrapperComProFamilyBuilder();
    io.github.onograph.cluster.raft.control.connect.ServerException serverException8 = new io.github.onograph.cluster.raft.control.connect.ServerException(
        "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartRules1. Running every PT10S",
        comProFamilyBuilder7);
    boolean boolean9 = askState4.equals((java.lang.Object) comProFamilyBuilder7);
    java.util.UUID uUID10 = askState4.getMiUUID();
    org.neo4j.io.fs.WritableChannel writableChannel11 = null;
    io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl writableChecksumChannelImpl12 = new io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl(
        writableChannel11);
    writableChecksumChannelImpl12.beginChecksum();
    writableChecksumChannelImpl12.beginChecksum();
    try {
      askStateSafeChannelMarshal0.marshal(askState4,
          (org.neo4j.io.fs.WritableChannel) writableChecksumChannelImpl12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseId5);
    org.junit.Assert.assertNotNull(comProFamilyBuilder7);
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNull(uUID10);
  }

  @Test
  public void test1933() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1933");
    }
    io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaMessageToByteEncoder authMetaMessageToByteEncoder0 = new io.github.onograph.cluster.raft.module.cuprot.current.core.AuthMetaMessageToByteEncoder();
    io.netty.channel.ChannelHandlerContext channelHandlerContext1 = null;
    java.lang.Object obj2 = null;
    io.netty.channel.ChannelPromise channelPromise3 = null;
    try {
      authMetaMessageToByteEncoder0.write(channelHandlerContext1, obj2, channelPromise3);
      org.junit.Assert.fail(
          "Expected exception of type io.netty.handler.codec.EncoderException; message: java.lang.NullPointerException");
    } catch (io.netty.handler.codec.EncoderException e) {
    }
  }

  @Test
  public void test1934() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1934");
    }
    akka.actor.ActorRef actorRef0 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.RemoveReadReplicaNode removeReadReplicaNode1 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.RemoveReadReplicaNode(
        actorRef0);
    akka.actor.ActorRef actorRef2 = removeReadReplicaNode1.getMccActorRef();
    akka.actor.ActorRef actorRef3 = null;
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl4 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> databaseIdMap5 = null;
    akka.actor.ActorRef actorRef6 = null;
    org.neo4j.dbms.identity.ServerId serverId7 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo updateReadReplicaInfo8 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo(
        actorRef3, gdbDiscoveryMetaReadReplicaImpl4, databaseIdMap5, actorRef6, serverId7);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> databaseIdMap9 = updateReadReplicaInfo8.getMapDsdd();
    boolean boolean10 = removeReadReplicaNode1.equals((java.lang.Object) updateReadReplicaInfo8);
    java.lang.Object obj11 = null;
    boolean boolean12 = removeReadReplicaNode1.equals(obj11);
    java.lang.Object obj13 = null;
    boolean boolean14 = removeReadReplicaNode1.equals(obj13);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl consensusLogCacheServiceNLImpl15 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl();
    consensusLogCacheServiceNLImpl15.retspccac();
    consensusLogCacheServiceNLImpl15.enb();
    consensusLogCacheServiceNLImpl15.trnt(1000L);
    boolean boolean20 = removeReadReplicaNode1.equals((java.lang.Object) 1000L);
    org.junit.Assert.assertNull(actorRef2);
    org.junit.Assert.assertNull(databaseIdMap9);
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    //org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    //org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
  }

  @Test
  public void test1935() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1935");
    }
    io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager readablePositionAwareChecksumChannelManager0 = new io.github.onograph.cluster.raft.akkamsg.ReadablePositionAwareChecksumChannelManager();
    org.neo4j.io.fs.ReadableChannel readableChannel1 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl2 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel1);
    readablePositionAwareChecksumChannelManager0.deettoForRe(
        (org.neo4j.kernel.impl.transaction.log.ReadableClosablePositionAwareChecksumChannel) readableClosablePositionAwareChecksumChannelPassThruImpl2);
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition4 = readablePositionAwareChecksumChannelManager0.getCurrentPosition();
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition5 = readablePositionAwareChecksumChannelManager0.getCurrentPosition();
    readablePositionAwareChecksumChannelManager0.beginChecksum();
    org.junit.Assert.assertNotNull(logPosition4);
    org.junit.Assert.assertNotNull(logPosition5);
  }

  @Test
  public void test1936() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1936");
    }
    org.neo4j.kernel.impl.factory.AccessCapabilityFactory accessCapabilityFactory0 = null;
    org.neo4j.kernel.impl.api.CommitProcessFactory commitProcessFactory1 = null;
    org.neo4j.graphdb.factory.module.id.DatabaseIdContext databaseIdContext2 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService3 = null;
    java.lang.Runnable runnable4 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage5 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl6 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable4, leasableMetaStateStorage5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator8 = null;
    java.util.function.Supplier<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSupplier9 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl leaseServiceEnterpriseImpl10 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl(
        consensusLeaderNodeService3, syncableLeasableCoreNodeDataFSMImpl6, namedDatabaseId7,
        syncerator8, consensusNodeIdSupplier9);
    org.neo4j.kernel.impl.locking.Locks locks11 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.EmptyReq> emptyReqFSMEmptyReq12 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService13 = null;
    java.lang.Runnable runnable14 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage15 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl16 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable14, leasableMetaStateStorage15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator18 = null;
    java.util.function.Supplier<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSupplier19 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl leaseServiceEnterpriseImpl20 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl(
        consensusLeaderNodeService13, syncableLeasableCoreNodeDataFSMImpl16, namedDatabaseId17,
        syncerator18, consensusNodeIdSupplier19);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl21 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl22 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.ReplicatedTransactionFSM replicatedTransactionFSM23 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl24 = null;
    org.neo4j.logging.LogProvider logProvider25 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier26 = null;
    java.util.function.Supplier<org.neo4j.kernel.impl.transaction.log.LogicalTransactionStore> logicalTransactionStoreSupplier27 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair transactionLogIndexRepair28 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair(
        logProvider25, transactionIdStoreSupplier26, logicalTransactionStoreSupplier27);
    io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService coreGdbFSMService29 = new io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService(
        emptyReqFSMEmptyReq12, syncableLeasableCoreNodeDataFSMImpl16, fSMTokenImpl21,
        fSMTokenImpl22, replicatedTransactionFSM23, fSMTokenImpl24, transactionLogIndexRepair28);
    org.neo4j.token.TokenHolders tokenHolders30 = null;
    io.github.onograph.cluster.raft.share.meta.CoreNodeWrapper coreNodeWrapper31 = new io.github.onograph.cluster.raft.share.meta.CoreNodeWrapper(
        accessCapabilityFactory0, commitProcessFactory1, databaseIdContext2,
        (org.neo4j.kernel.impl.api.LeaseService) leaseServiceEnterpriseImpl10, locks11,
        coreGdbFSMService29, tokenHolders30);
    try {
      long long32 = coreGdbFSMService29.gelsalin();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1937() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1937");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreResourceWriterService storeResourceWriterService1 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.AbstractCatchupAnswerManager<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedAbstractCatchupAnswerManager2 = io.github.onograph.cluster.raft.module.cuprot.scmeta.AbstractCatchupAnswerManager.ficadrAbstractCatchupAnswerManager(
        log0, storeResourceWriterService1);
    java.util.concurrent.CompletableFuture<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedCompletableFuture3 = null;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.Slice slice4 = null;
    try {
      boolean boolean5 = storeSyncCompletedAbstractCatchupAnswerManager2.isOnficttForCoSl(
          storeSyncCompletedCompletableFuture3, slice4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(storeSyncCompletedAbstractCatchupAnswerManager2);
  }

  @Test
  public void test1938() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1938");
    }
    byte[] byteArray1 = new byte[]{(byte) 9};
    org.neo4j.kernel.database.DatabaseId databaseId2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.ReplicaTokenType replicaTokenType4 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData requestData5 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.RequestData(
        byteArray1, databaseId2, "name", replicaTokenType4);
    org.neo4j.kernel.database.DatabaseId databaseId6 = requestData5.daasidDatabaseId();
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataProcessor syncableDataProcessor7 = null;
    try {
      requestData5.dipcForSy(syncableDataProcessor7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[9]");
    org.junit.Assert.assertNull(databaseId6);
  }

  @Test
  public void test1939() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1939");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.LeaderMetaSafeChannelMarshal leaderMetaSafeChannelMarshal0 = io.github.onograph.cluster.raft.module.dprot.impl.serialize.LeaderMetaSafeChannelMarshal.IT;
    org.neo4j.io.fs.ReadableChannel readableChannel1 = null;
    try {
      io.github.onograph.cluster.raft.module.dprot.impl.directory.LeaderMeta leaderMeta2 = leaderMetaSafeChannelMarshal0.unmarshal(
          readableChannel1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(leaderMetaSafeChannelMarshal0);
  }

  @Test
  public void test1940() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1940");
    }
    org.neo4j.graphdb.config.Setting<java.lang.Integer> intSetting0 = io.github.onograph.config.SettingsDeclarationClusterImpl.settingRaestiInteger;
    org.junit.Assert.assertNotNull(intSetting0);
  }

  @Test
  public void test1941() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1941");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat0 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.CURT_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat1 = clusterMetaFormat0.plsoemnClusterMetaFormat();
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS2 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS3 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta4 = marshalChannelImplCMS3.startState();
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS marshalChannelImplCMS5 = io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta6 = marshalChannelImplCMS5.startState();
    boolean boolean8 = nodeServerMemberTransactionLogDataMeta6.isTrnt((long) '#');
    io.github.onograph.cluster.raft.share.calg.mnode.NodeServerMemberTransactionLogDataMeta nodeServerMemberTransactionLogDataMeta9 = nodeServerMemberTransactionLogDataMeta6.neitcNodeServerMemberTransactionLogDataMeta();
    long long10 = marshalChannelImplCMS3.ordinal(nodeServerMemberTransactionLogDataMeta6);
    long long11 = marshalChannelImplCMS2.ordinal(nodeServerMemberTransactionLogDataMeta6);
    io.github.onograph.cluster.raft.share.calg.mnode.MemberIndexWrapper memberIndexWrapper12 = nodeServerMemberTransactionLogDataMeta6.getCmitdMemberIndexWrapper();
    nodeServerMemberTransactionLogDataMeta6.start();
    boolean boolean14 = clusterMetaFormat0.equals(
        (java.lang.Object) nodeServerMemberTransactionLogDataMeta6);
    org.junit.Assert.assertNotNull(clusterMetaFormat0);
    org.junit.Assert.assertNotNull(clusterMetaFormat1);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS2);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS3);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta4);
    org.junit.Assert.assertNotNull(marshalChannelImplCMS5);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta6);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(nodeServerMemberTransactionLogDataMeta9);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
    org.junit.Assert.assertNull(memberIndexWrapper12);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
  }

  @Test
  public void test1942() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1942");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg1 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg(
        consensusNodeId0);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel2 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl3 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl4 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel2, safeStateMarshalImpl3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk5 = null;
    java.lang.Void void6 = processorImpl4.process(bulkAsk5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage7 = null;
    java.lang.Void void8 = processorImpl4.process(logClipRequestMessage7);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage9 = null;
    java.lang.Void void10 = processorImpl4.process(aliveReplyMessage9);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId11 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId12 = null;
    io.github.onograph.config.NodeGroupIdentifier nodeGroupIdentifier13 = io.github.onograph.config.NodeGroupIdentifier.EMT_NODE_GROUP_IDENTIFIER;
    io.github.onograph.config.NodeGroupIdentifier[] nodeGroupIdentifierArray14 = new io.github.onograph.config.NodeGroupIdentifier[]{
        nodeGroupIdentifier13};
    java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet15 = new java.util.LinkedHashSet<io.github.onograph.config.NodeGroupIdentifier>();
    boolean boolean16 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet15,
        nodeGroupIdentifierArray14);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec leaderRec17 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderRec(
        consensusNodeId11, consensusNodeId12,
        (java.util.Set<io.github.onograph.config.NodeGroupIdentifier>) nodeGroupIdentifierSet15);
    java.lang.Void void18 = processorImpl4.process(leaderRec17);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage19 = null;
    java.lang.Void void20 = processorImpl4.process(aliveReplyMessage19);
    java.lang.Void void21 = aliveMsg1.dipc(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception>) processorImpl4);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception> voidProcessor22 = null;
    try {
      java.lang.Void void23 = aliveMsg1.dipc(voidProcessor22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(void8);
    org.junit.Assert.assertNull(void10);
    org.junit.Assert.assertNotNull(nodeGroupIdentifier13);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierArray14);
    //org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNull(void18);
    org.junit.Assert.assertNull(void20);
    org.junit.Assert.assertNull(void21);
  }

  @Test
  public void test1943() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1943");
    }
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols0 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    java.lang.String str1 = mutableProtocols0.getImpl();
    java.lang.String str2 = mutableProtocols0.getImpl();
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols3 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols4 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC;
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols5 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    io.github.onograph.cluster.raft.control.MutableComProFamily[] mutableComProFamilyArray6 = new io.github.onograph.cluster.raft.control.MutableComProFamily[]{
        mutableProtocols0, mutableProtocols3, mutableProtocols4, mutableProtocols5};
    java.util.ArrayList<io.github.onograph.cluster.raft.control.MutableComProFamily> mutableComProFamilyList7 = new java.util.ArrayList<io.github.onograph.cluster.raft.control.MutableComProFamily>();
    boolean boolean8 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutableComProFamilyList7,
        mutableComProFamilyArray6);
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.ComProFamilyBuilder comProFamilyBuilder10 = io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.bulrComProFamilyWrapperComProFamilyBuilder();
    io.github.onograph.cluster.raft.control.connect.ServerException serverException11 = new io.github.onograph.cluster.raft.control.connect.ServerException(
        "AkkaActorSystemRestartStrategy: class io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach$RestartRules1. Running every PT10S",
        comProFamilyBuilder10);
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols12 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    java.lang.String str13 = mutableProtocols12.getImpl();
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.ComProFamilyBuilder comProFamilyBuilder14 = comProFamilyBuilder10.moieComProFamilyWrapperComProFamilyBuilder(
        (io.github.onograph.cluster.raft.control.MutableComProFamily) mutableProtocols12);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType15 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer16 = applicationComProFamilyType15.getImpl();
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper.ComProFamilyBuilder comProFamilyBuilder17 = comProFamilyBuilder14.aplaoComProFamilyWrapperComProFamilyBuilder(
        (io.github.onograph.cluster.raft.control.ApplicationComProFamily) applicationComProFamilyType15);
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper comProFamilyWrapper18 = new io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper(
        (java.util.List<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutableComProFamilyList7,
        (io.github.onograph.cluster.raft.control.ApplicationComProFamily) applicationComProFamilyType15);
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl consensusLogCacheServiceNLImpl19 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry21 = consensusLogCacheServiceNLImpl19.getConsensusLogEntry(
        (long) 1);
    consensusLogCacheServiceNLImpl19.enb();
    consensusLogCacheServiceNLImpl19.enb();
    boolean boolean24 = comProFamilyWrapper18.equals(
        (java.lang.Object) consensusLogCacheServiceNLImpl19);
    org.junit.Assert.assertTrue("'" + mutableProtocols0 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols0.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Snappy" + "'", str1, "Snappy");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Snappy" + "'", str2, "Snappy");
    org.junit.Assert.assertTrue("'" + mutableProtocols3 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols3.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertTrue("'" + mutableProtocols4 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC + "'",
        mutableProtocols4.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC));
    org.junit.Assert.assertTrue("'" + mutableProtocols5 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols5.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertNotNull(mutableComProFamilyArray6);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    org.junit.Assert.assertNotNull(comProFamilyBuilder10);
    org.junit.Assert.assertTrue("'" + mutableProtocols12 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols12.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Snappy" + "'", str13, "Snappy");
    org.junit.Assert.assertNotNull(comProFamilyBuilder14);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType15 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType15.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer16);
    org.junit.Assert.assertNotNull(comProFamilyBuilder17);
    org.junit.Assert.assertNull(consensusLogEntry21);
    //org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test1944() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1944");
    }
    org.neo4j.configuration.Config config0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.logging.LogProvider logProvider2 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    io.github.onograph.cluster.raft.share.NodeServerInfoLogService nodeServerInfoLogService5 = new io.github.onograph.cluster.raft.share.NodeServerInfoLogService(
        logProvider2, "temp-save", logProvider4);
    org.neo4j.logging.LogProvider logProvider6 = nodeServerInfoLogService5.getUserLogProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction7 = null;
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction9 = null;
    org.neo4j.logging.LogProvider logProvider10 = null;
    java.nio.file.Path path11 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo12 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path11);
    java.nio.file.Path path13 = clusterMetaTopologyInfo12.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker14 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo12);
    org.neo4j.memory.MemoryTracker memoryTracker15 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade16 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config8, fileSystemAbstraction9, logProvider10, clusterMetaTopologyInfo12, memoryTracker15);
    org.neo4j.logging.Log log17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.configuration.Config config19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    org.neo4j.logging.LogProvider logProvider21 = null;
    java.nio.file.Path path22 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo23 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path22);
    java.nio.file.Path path24 = clusterMetaTopologyInfo23.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker25 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo23);
    org.neo4j.memory.MemoryTracker memoryTracker26 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade27 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config19, fileSystemAbstraction20, logProvider21, clusterMetaTopologyInfo23,
        memoryTracker26);
    org.neo4j.logging.Log log28 = null;
    java.nio.file.Path path29 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo30 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path29);
    java.nio.file.Path path31 = clusterMetaTopologyInfo30.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker32 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo30);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat33 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv34 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction18, clusterSimpleStorageFacade27, log28, clusterMetaTopologyInfo30,
        clusterMetaFormat33);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat35 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv36 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction7, clusterSimpleStorageFacade16, log17, clusterMetaTopologyInfo30,
        clusterMetaFormat35);
    org.neo4j.memory.MemoryTracker memoryTracker37 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade38 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config0, fileSystemAbstraction1, logProvider6, clusterMetaTopologyInfo30, memoryTracker37);
    try {
      io.github.onograph.cluster.raft.readreplica.IdentityModuleReadReplicaNodeImpl identityModuleReadReplicaNodeImpl39 = new io.github.onograph.cluster.raft.readreplica.IdentityModuleReadReplicaNodeImpl(
          logProvider6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(logProvider6);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo12);
    org.junit.Assert.assertNull(path13);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo23);
    org.junit.Assert.assertNull(path24);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo30);
    org.junit.Assert.assertNull(path31);
    org.junit.Assert.assertNotNull(clusterMetaFormat33);
  }

  @Test
  public void test1945() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1945");
    }
    io.netty.buffer.ByteBuf byteBuf0 = null;
    try {
      io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelStandardImpl writableChecksumChannelStandardImpl2 = new io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelStandardImpl(
          byteBuf0, (long) (short) 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1946() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1946");
    }
    org.neo4j.graphdb.config.Setting<java.time.Duration> durationSetting1 = io.github.onograph.config.SettingsDeclarationClusterSystemImpl.settingCletqmutDuration;
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.NoComAction noComAction2 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.NoComAction(
        0L, (java.lang.Object) durationSetting1);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaByteToMessageDecoder sliceMetaByteToMessageDecoder3 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceMetaByteToMessageDecoder();
    io.netty.channel.ChannelHandlerContext channelHandlerContext4 = null;
    sliceMetaByteToMessageDecoder3.handlerRemoved(channelHandlerContext4);
    boolean boolean6 = noComAction2.equals((java.lang.Object) sliceMetaByteToMessageDecoder3);
    io.github.onograph.cluster.raft.share.calg.ConsensusTransactionLogProcessor consensusTransactionLogProcessor7 = null;
    io.github.onograph.cluster.raft.share.calg.LeaderNodeElectionEnv leaderNodeElectionEnv10 = new io.github.onograph.cluster.raft.share.calg.LeaderNodeElectionEnv(
        (long) '4', (-1L));
    long long11 = leaderNodeElectionEnv10.ter;
    try {
      noComAction2.apltoForCoLe(consensusTransactionLogProcessor7, leaderNodeElectionEnv10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(durationSetting1);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
  }

  @Test
  public void test1947() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1947");
    }
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType raftConsensusMessageType0 = io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType.HEALTH_PING_REQ;
    org.junit.Assert.assertTrue("'" + raftConsensusMessageType0 + "' != '"
        + io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType.HEALTH_PING_REQ
        + "'", raftConsensusMessageType0.equals(
        io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RaftConsensusMessageType.HEALTH_PING_REQ));
  }

  @Test
  public void test1948() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1948");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl messageProcessorImpl0 = io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl.SUPTL_MESSAGE_PROCESSOR_IMPL;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg1 = null;
    java.lang.Boolean boolean2 = messageProcessorImpl0.process(aliveMsg1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RequestTransactionLogCZMetaMessage requestTransactionLogCZMetaMessage3 = null;
    java.lang.Boolean boolean4 = messageProcessorImpl0.process(requestTransactionLogCZMetaMessage3);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId5 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId6 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.VotePreparationMessage.Ask ask10 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.VotePreparationMessage.Ask(
        consensusNodeId5, consensusNodeId6, (long) 1016, (long) (byte) 10, (long) (short) -1);
    java.lang.Boolean boolean11 = messageProcessorImpl0.process(ask10);
    org.junit.Assert.assertNotNull(messageProcessorImpl0);
    org.junit.Assert.assertEquals("'" + boolean2 + "' != '" + true + "'", boolean2, true);
    org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
    org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
  }

  @Test
  public void test1949() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1949");
    }
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId0 = null;
    org.neo4j.token.TokenRegistry tokenRegistry1 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator2 = null;
    org.neo4j.internal.id.IdGeneratorFactory idGeneratorFactory3 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.StorageEngine> storageEngineSupplier4 = null;
    org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer5 = null;
    org.neo4j.configuration.helpers.DatabaseReadOnlyChecker databaseReadOnlyChecker6 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.LabelTokenHolder labelTokenHolder7 = new io.github.onograph.cluster.raft.share.meta.fsm.comp.LabelTokenHolder(
        namedDatabaseId0, tokenRegistry1, syncerator2, idGeneratorFactory3, storageEngineSupplier4,
        pageCacheTracer5, databaseReadOnlyChecker6);
    try {
      int int9 = labelTokenHolder7.getIdByName("catchup_protocol");
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1950() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1950");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    org.neo4j.logging.LogProvider logProvider3 = null;
    java.nio.file.Path path4 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo5 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path4);
    java.nio.file.Path path6 = clusterMetaTopologyInfo5.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker7 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo5);
    org.neo4j.memory.MemoryTracker memoryTracker8 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade9 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config1, fileSystemAbstraction2, logProvider3, clusterMetaTopologyInfo5, memoryTracker8);
    org.neo4j.logging.Log log10 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config12 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction13 = null;
    org.neo4j.logging.LogProvider logProvider14 = null;
    java.nio.file.Path path15 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo16 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path15);
    java.nio.file.Path path17 = clusterMetaTopologyInfo16.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker18 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo16);
    org.neo4j.memory.MemoryTracker memoryTracker19 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade20 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config12, fileSystemAbstraction13, logProvider14, clusterMetaTopologyInfo16,
        memoryTracker19);
    org.neo4j.logging.Log log21 = null;
    java.nio.file.Path path22 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo23 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path22);
    java.nio.file.Path path24 = clusterMetaTopologyInfo23.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker25 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo23);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat26 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction11, clusterSimpleStorageFacade20, log21, clusterMetaTopologyInfo23,
        clusterMetaFormat26);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat28 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv29 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction0, clusterSimpleStorageFacade9, log10, clusterMetaTopologyInfo23,
        clusterMetaFormat28);
    try {
      org.neo4j.io.state.SimpleStorage<io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat> clusterMetaFormatSimpleStorage30 = clusterSimpleStorageFacade9.crectsavrsgSimpleStorage();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo5);
    org.junit.Assert.assertNull(path6);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo16);
    org.junit.Assert.assertNull(path17);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo23);
    org.junit.Assert.assertNull(path24);
    org.junit.Assert.assertNotNull(clusterMetaFormat26);
  }

  @Test
  public void test1951() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1951");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType setupGdbSyncReplyStateType1 = io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType.SYNC_SGUID_NOT_MATCHING_ERR;
    io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted storeSyncCompleted2 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted(
        0L, setupGdbSyncReplyStateType1);
    org.junit.Assert.assertTrue("'" + setupGdbSyncReplyStateType1 + "' != '"
        + io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType.SYNC_SGUID_NOT_MATCHING_ERR
        + "'", setupGdbSyncReplyStateType1.equals(
        io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted.SetupGdbSyncReplyStateType.SYNC_SGUID_NOT_MATCHING_ERR));
  }

  @Test
  public void test1952() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1952");
    }
    io.github.onograph.cluster.raft.control.AppComProFamilyGroupType appComProFamilyGroupType0 = io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo1 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType2 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer3 = applicationComProFamilyType2.getImpl();
    boolean boolean4 = viewClusterInfo1.equals((java.lang.Object) entProVer3);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType5 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.config.EntProVer entProVer6 = applicationComProFamilyType5.getImpl();
    int int7 = entProVer3.compareTo(entProVer6);
    java.util.Optional<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyOptional8 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.finOptional(
        appComProFamilyGroupType0, entProVer6);
    java.util.List<io.github.onograph.cluster.raft.control.ApplicationComProFamily> applicationComProFamilyList9 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.ctgrAppComProFamilyGroupType(
        appComProFamilyGroupType0);
    io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper applicationCurrentActiveComProFamilyWrapper10 = io.github.onograph.cluster.raft.control.connect.ApplicationCurrentActiveComProFamilyWrapper.alkopolApplicationCurrentActiveComProFamilyWrapper(
        (io.github.onograph.cluster.raft.control.ComProFamily.ComProFamilyGroup<io.github.onograph.cluster.raft.control.ApplicationComProFamily>) appComProFamilyGroupType0);
    java.lang.String str11 = appComProFamilyGroupType0.lowerName();
    org.junit.Assert.assertTrue("'" + appComProFamilyGroupType0 + "' != '"
            + io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL + "'",
        appComProFamilyGroupType0.equals(
            io.github.onograph.cluster.raft.control.AppComProFamilyGroupType.RAFT_PROTOCOL));
    org.junit.Assert.assertNotNull(viewClusterInfo1);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType2 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType2.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer3);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType5 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType5.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(entProVer6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertNotNull(applicationComProFamilyOptional8);
    org.junit.Assert.assertNotNull(applicationComProFamilyList9);
    org.junit.Assert.assertNotNull(applicationCurrentActiveComProFamilyWrapper10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "raft_protocol" + "'", str11,
        "raft_protocol");
  }

  @Test
  public void test1953() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1953");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId2 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.ConsensusByteToMessageDecoder.BulkTLCRequestBuilder bulkTLCRequestBuilder6 = new io.github.onograph.cluster.raft.akkamsg.serialization.ConsensusByteToMessageDecoder.BulkTLCRequestBuilder(
        (long) 2, (long) 32, consensusNodeId2, (int) (byte) 100, (long) (byte) -1,
        (long) (short) 10);
  }

  @Test
  public void test1954() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1954");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry6 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray7 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry6};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction8 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray7);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction9 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 100, 1536L, consensusLogEntryArray7);
    io.github.onograph.cluster.raft.share.calg.action.BulkAddAction bulkAddAction12 = new io.github.onograph.cluster.raft.share.calg.action.BulkAddAction(
        consensusLogEntryArray7, (long) (byte) 0, (int) (short) 1);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction13 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        10L, (long) (byte) 10, consensusLogEntryArray7);
    akka.cluster.UniqueAddress uniqueAddress14 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.FinishClear finishClear15 = new io.github.onograph.cluster.raft.module.dprot.impl.structure.FinishClear(
        uniqueAddress14);
    akka.cluster.UniqueAddress uniqueAddress16 = finishClear15.getUniqueAddress();
    boolean boolean17 = incomingAction13.equals((java.lang.Object) uniqueAddress16);
    org.junit.Assert.assertNotNull(consensusLogEntryArray7);
    org.junit.Assert.assertNull(uniqueAddress16);
    //org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
  }

  @Test
  public void test1955() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1955");
    }
    org.neo4j.kernel.impl.transaction.log.PhysicalTransactionRepresentation physicalTransactionRepresentation0 = null;
    org.neo4j.kernel.database.DatabaseId databaseId1 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.AbstractTransactionSync abstractTransactionSync3 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.AbstractTransactionSync(
        physicalTransactionRepresentation0, databaseId1, (long) (short) 0);
    org.neo4j.kernel.database.DatabaseId databaseId4 = abstractTransactionSync3.daasidDatabaseId();
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl messageProcessorImpl5 = io.github.onograph.cluster.raft.akkamsg.serialization.MessageProcessorImpl.SUPTL_MESSAGE_PROCESSOR_IMPL;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg6 = null;
    java.lang.Boolean boolean7 = messageProcessorImpl5.process(aliveMsg6);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.VotePreparationMessage.Ask ask8 = null;
    java.lang.Boolean boolean9 = messageProcessorImpl5.process(ask8);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.RequestTransactionLogCZMetaMessage requestTransactionLogCZMetaMessage10 = null;
    java.lang.Boolean boolean11 = messageProcessorImpl5.process(
        requestTransactionLogCZMetaMessage10);
    boolean boolean12 = abstractTransactionSync3.equals((java.lang.Object) boolean11);
    io.github.onograph.cluster.raft.share.sync.SessionSeqActionId sessionSeqActionId13 = null;
    java.util.UUID uUID14 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy15 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean16 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID14, consensusNodeIdLazy15);
    io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction dataSyncClusterAction17 = new io.github.onograph.cluster.raft.share.sync.DataSyncClusterAction(
        (io.github.onograph.cluster.raft.share.sync.SyncableData) abstractTransactionSync3,
        sessionSeqActionId13, clusterSessionBean16);
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataProcessor syncableDataProcessor18 = null;
    try {
      dataSyncClusterAction17.dipcForSy(syncableDataProcessor18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(databaseId4);
    org.junit.Assert.assertNotNull(messageProcessorImpl5);
    org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + true + "'", boolean7, true);
    org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + true + "'", boolean9, true);
    org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
    //org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1956() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1956");
    }
    akka.actor.ActorRef actorRef0 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.RemoveReadReplicaNode removeReadReplicaNode1 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.RemoveReadReplicaNode(
        actorRef0);
    akka.actor.ActorRef actorRef2 = removeReadReplicaNode1.getMccActorRef();
    akka.actor.ActorRef actorRef3 = null;
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl4 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> databaseIdMap5 = null;
    akka.actor.ActorRef actorRef6 = null;
    org.neo4j.dbms.identity.ServerId serverId7 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo updateReadReplicaInfo8 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo(
        actorRef3, gdbDiscoveryMetaReadReplicaImpl4, databaseIdMap5, actorRef6, serverId7);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> databaseIdMap9 = updateReadReplicaInfo8.getMapDsdd();
    boolean boolean10 = removeReadReplicaNode1.equals((java.lang.Object) updateReadReplicaInfo8);
    java.lang.Object obj11 = null;
    boolean boolean12 = removeReadReplicaNode1.equals(obj11);
    java.lang.Object obj13 = null;
    boolean boolean14 = removeReadReplicaNode1.equals(obj13);
    akka.actor.ActorRef actorRef15 = removeReadReplicaNode1.getMccActorRef();
    org.junit.Assert.assertNull(actorRef2);
    org.junit.Assert.assertNull(databaseIdMap9);
    //org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    //org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    //org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertNull(actorRef15);
  }

  @Test
  public void test1957() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1957");
    }
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl1 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl2 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel0, safeStateMarshalImpl1);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk3 = null;
    java.lang.Void void4 = processorImpl2.process(bulkAsk3);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage5 = null;
    java.lang.Void void6 = processorImpl2.process(logClipRequestMessage5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage7 = null;
    java.lang.Void void8 = processorImpl2.process(aliveReplyMessage7);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId9 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout consensusElectionTimeout10 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout(
        consensusNodeId9);
    java.lang.Void void11 = processorImpl2.process(consensusElectionTimeout10);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId12 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg aliveMsg13 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.AliveMsg(
        consensusNodeId12);
    java.lang.Void void14 = processorImpl2.process(aliveMsg13);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage15 = null;
    java.lang.Void void16 = processorImpl2.process(aliveReplyMessage15);
    org.junit.Assert.assertNull(void4);
    org.junit.Assert.assertNull(void6);
    org.junit.Assert.assertNull(void8);
    org.junit.Assert.assertNull(void11);
    org.junit.Assert.assertNull(void14);
    org.junit.Assert.assertNull(void16);
  }

  @Test
  public void test1958() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1958");
    }
    org.neo4j.io.fs.WritableChannel writableChannel1 = null;
    io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl writableChecksumChannelImpl2 = new io.github.onograph.cluster.raft.akkamsg.WritableChecksumChannelImpl(
        writableChannel1);
    writableChecksumChannelImpl2.beginChecksum();
    writableChecksumChannelImpl2.beginChecksum();
    try {
      io.github.onograph.cluster.raft.akkamsg.serialization.BasicBoolSerializationHandler.maslForWr(
          false, (org.neo4j.io.fs.WritableChannel) writableChecksumChannelImpl2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1959() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1959");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.NoRestartFailure noRestartFailure0 = new io.github.onograph.cluster.raft.module.dprot.impl.ActorLifecycleApproach.NoRestartFailure();
    akka.cluster.Cluster cluster1 = null;
    boolean boolean2 = noRestartFailure0.isRerruForCl(cluster1);
    try {
      java.lang.String str3 = noRestartFailure0.gersString();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalStateException; message: *** Error:  46d1fe78-23f9-4560-a1a5-8b458f19d299");
    } catch (java.lang.IllegalStateException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
  }

  @Test
  public void test1960() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1960");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout consensusElectionTimeout1 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Timeoutable.ConsensusElectionTimeout(
        consensusNodeId0);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId2 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Messager messager3 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Messager(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AbstractConsensusMessage) consensusElectionTimeout1,
        consensusNodeId2);
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel4 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId.SafeStateMarshalImpl safeStateMarshalImpl5 = null;
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl processorImpl6 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder.ProcessorImpl(
        defaultWritableChecksumChannel4, safeStateMarshalImpl5);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.MsgCreatorService.BulkAsk bulkAsk7 = null;
    java.lang.Void void8 = processorImpl6.process(bulkAsk7);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage9 = null;
    java.lang.Void void10 = processorImpl6.process(logClipRequestMessage9);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AliveReplyMessage aliveReplyMessage11 = null;
    java.lang.Void void12 = processorImpl6.process(aliveReplyMessage11);
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LogClipRequestMessage logClipRequestMessage13 = null;
    java.lang.Void void14 = processorImpl6.process(logClipRequestMessage13);
    java.lang.Void void15 = consensusElectionTimeout1.dipc(
        (io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.Processor<java.lang.Void, java.lang.Exception>) processorImpl6);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry22 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray23 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{
        consensusLogEntry22};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction24 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 0, 100L, consensusLogEntryArray23);
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction25 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        (long) (byte) 100, 1536L, consensusLogEntryArray23);
    io.github.onograph.cluster.raft.share.calg.action.BulkAddAction bulkAddAction28 = new io.github.onograph.cluster.raft.share.calg.action.BulkAddAction(
        consensusLogEntryArray23, (long) (byte) 0, (int) (short) 1);
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId29 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Ask ask32 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.TransactionLogAddMessage.Ask(
        (long) (byte) 0, (long) 3, consensusLogEntryArray23, consensusNodeId29, 1L, (long) 128);
    io.github.onograph.cluster.raft.share.meta.MetaWrapper<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaMetaWrapper33 = io.github.onograph.cluster.raft.share.meta.MetaWrapper.META_WRAPPER_LES_LEASABLE_META;
    boolean boolean34 = ask32.equals((java.lang.Object) leasableMetaMetaWrapper33);
    long long35 = ask32.getLdrComLng();
    try {
      java.lang.Void void36 = processorImpl6.process(ask32);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNull(void8);
    org.junit.Assert.assertNull(void10);
    org.junit.Assert.assertNull(void12);
    org.junit.Assert.assertNull(void14);
    org.junit.Assert.assertNull(void15);
    org.junit.Assert.assertNotNull(consensusLogEntryArray23);
    org.junit.Assert.assertNotNull(leasableMetaMetaWrapper33);
    //org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + long35 + "' != '" + 1L + "'", long35 == 1L);
  }

  @Test
  public void test1961() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1961");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl consensusLogCacheServiceNLImpl0 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl();
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry1 = null;
    consensusLogCacheServiceNLImpl0.putForCo(consensusLogEntry1, (long) '#');
  }

  @Test
  public void test1962() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1962");
    }
    io.github.onograph.cluster.raft.share.sync.ReplicationSessionManagerMeta replicationSessionManagerMeta0 = new io.github.onograph.cluster.raft.share.sync.ReplicationSessionManagerMeta();
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler1 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl2 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler3 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler1, refCatchupManagerImpl2);
    org.neo4j.graphdb.Label label4 = org.neo4j.dbms.database.SystemGraphDbmsModel.DELETED_DATABASE_LABEL;
    boolean boolean5 = catchupProblemInboundHandler3.acceptInboundMessage(
        (java.lang.Object) label4);
    boolean boolean6 = replicationSessionManagerMeta0.equals(
        (java.lang.Object) catchupProblemInboundHandler3);
    org.junit.Assert.assertNotNull(label4);
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    //org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
  }

  @Test
  public void test1963() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1963");
    }
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry0 = null;
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntryData consensusLogEntryData2 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntryData(
        consensusLogEntry0, (long) 1015);
    java.lang.String str3 = consensusLogEntryData2.toString();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "1015: null" + "'", str3, "1015: null");
  }

  @Test
  public void test1964() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1964");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder currentDepartingMessageManagerMessageToByteEncoder0 = new io.github.onograph.cluster.raft.akkamsg.serialization.current.encoding.CurrentDepartingMessageManagerMessageToByteEncoder();
    io.netty.channel.ChannelHandlerContext channelHandlerContext1 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.DepartingMessageManager departingMessageManager2 = null;
    io.netty.buffer.ByteBuf byteBuf3 = null;
    try {
      currentDepartingMessageManagerMessageToByteEncoder0.encode(channelHandlerContext1,
          departingMessageManager2, byteBuf3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1965() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1965");
    }
    org.neo4j.io.fs.ReadableChannel readableChannel0 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl1 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel0);
    readableClosablePositionAwareChecksumChannelPassThruImpl1.beginChecksum();
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition3 = readableClosablePositionAwareChecksumChannelPassThruImpl1.getCurrentPosition();
    byte[] byteArray7 = new byte[]{(byte) 0, (byte) 10, (byte) -1};
    io.github.onograph.cluster.raft.share.meta.fsm.DefaultSDEmptyReq defaultSDEmptyReq8 = new io.github.onograph.cluster.raft.share.meta.fsm.DefaultSDEmptyReq(
        byteArray7);
    try {
      readableClosablePositionAwareChecksumChannelPassThruImpl1.get(byteArray7, (int) '4');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(logPosition3);
    org.junit.Assert.assertNotNull(byteArray7);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 10, -1]");
  }

  @Test
  public void test1966() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1966");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    org.neo4j.logging.LogProvider logProvider3 = null;
    java.nio.file.Path path4 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo5 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path4);
    java.nio.file.Path path6 = clusterMetaTopologyInfo5.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker7 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo5);
    org.neo4j.memory.MemoryTracker memoryTracker8 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade9 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config1, fileSystemAbstraction2, logProvider3, clusterMetaTopologyInfo5, memoryTracker8);
    org.neo4j.logging.Log log10 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction11 = null;
    org.neo4j.configuration.Config config12 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction13 = null;
    org.neo4j.logging.LogProvider logProvider14 = null;
    java.nio.file.Path path15 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo16 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path15);
    java.nio.file.Path path17 = clusterMetaTopologyInfo16.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker18 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo16);
    org.neo4j.memory.MemoryTracker memoryTracker19 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade20 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config12, fileSystemAbstraction13, logProvider14, clusterMetaTopologyInfo16,
        memoryTracker19);
    org.neo4j.logging.Log log21 = null;
    java.nio.file.Path path22 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo23 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path22);
    java.nio.file.Path path24 = clusterMetaTopologyInfo23.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker25 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo23);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat26 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction11, clusterSimpleStorageFacade20, log21, clusterMetaTopologyInfo23,
        clusterMetaFormat26);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat28 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv29 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction0, clusterSimpleStorageFacade9, log10, clusterMetaTopologyInfo23,
        clusterMetaFormat28);
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade30 = upgradeMetaEnv29.getFsscClusterSimpleStorageFacade();
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo5);
    org.junit.Assert.assertNull(path6);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo16);
    org.junit.Assert.assertNull(path17);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo23);
    org.junit.Assert.assertNull(path24);
    org.junit.Assert.assertNotNull(clusterMetaFormat26);
    org.junit.Assert.assertNotNull(clusterSimpleStorageFacade30);
  }

  @Test
  public void test1967() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1967");
    }
    java.lang.Runnable runnable0 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage1 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl2 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable0, leasableMetaStateStorage1);
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta leasableMeta3 = io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta.INTL_LES_STAX;
    syncableLeasableCoreNodeDataFSMImpl2.inlspForLe(leasableMeta3);
    try {
      syncableLeasableCoreNodeDataFSMImpl2.fls();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(leasableMeta3);
  }

  @Test
  public void test1968() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1968");
    }
    org.neo4j.io.fs.ReadableChannel readableChannel0 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl1 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel0);
    readableClosablePositionAwareChecksumChannelPassThruImpl1.beginChecksum();
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition3 = readableClosablePositionAwareChecksumChannelPassThruImpl1.getCurrentPosition();
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl4 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        (org.neo4j.io.fs.ReadableChannel) readableClosablePositionAwareChecksumChannelPassThruImpl1);
    try {
      float float5 = readableClosablePositionAwareChecksumChannelPassThruImpl4.getFloat();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(logPosition3);
  }

  @Test
  public void test1969() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1969");
    }
    io.netty.channel.Channel channel0 = null;
    org.neo4j.logging.Log log1 = null;
    io.github.onograph.cluster.raft.akkamsg.NettyChannelImpl nettyChannelImpl2 = new io.github.onograph.cluster.raft.akkamsg.NettyChannelImpl(
        channel0, log1);
    boolean boolean3 = nettyChannelImpl2.isChannelDis();
    try {
      nettyChannelImpl2.dipe();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
  }

  @Test
  public void test1970() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1970");
    }
    io.github.onograph.config.EntProVer entProVer2 = new io.github.onograph.config.EntProVer(
        (int) 'a', 1016);
  }

  @Test
  public void test1971() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1971");
    }
    io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta.MarshalChannelImplCMS marshalChannelImplCMS0 = io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta.MarshalChannelImplCMS.IT;
    io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta candidateTallyMeta1 = new io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta();
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataTypeMessageToByteEncoder messageDataTypeMessageToByteEncoder2 = new io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataTypeMessageToByteEncoder();
    io.github.onograph.cluster.raft.share.sync.SyncStatus syncStatus3 = new io.github.onograph.cluster.raft.share.sync.SyncStatus();
    boolean boolean4 = messageDataTypeMessageToByteEncoder2.acceptOutboundMessage(
        (java.lang.Object) syncStatus3);
    syncStatus3.awrcn((long) (byte) 1);
    boolean boolean7 = syncStatus3.getIsRi();
    boolean boolean8 = candidateTallyMeta1.equals((java.lang.Object) syncStatus3);
    long long9 = marshalChannelImplCMS0.ordinal(candidateTallyMeta1);
    io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta candidateTallyMeta10 = marshalChannelImplCMS0.startState();
    io.github.onograph.cluster.raft.share.calg.CandidateTallyMeta candidateTallyMeta11 = marshalChannelImplCMS0.startState();
    org.junit.Assert.assertNotNull(marshalChannelImplCMS0);
    //org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    org.junit.Assert.assertNotNull(candidateTallyMeta10);
    org.junit.Assert.assertNotNull(candidateTallyMeta11);
  }

  @Test
  public void test1972() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1972");
    }
    akka.actor.ActorRef actorRef0 = null;
    java.time.Clock clock1 = null;
    org.neo4j.configuration.Config config2 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta> databaseIdMap3 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.id.ConsensusNodeId> databaseIdMap4 = null;
    java.util.Map<org.neo4j.kernel.database.DatabaseId, org.neo4j.dbms.DatabaseState> databaseIdMap5 = null;
    io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl gdbServerPointInTimeImpl6 = new io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTimeImpl(
        databaseIdMap3, databaseIdMap4, databaseIdMap5);
    io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryInitiator clusterDiscoveryInitiator7 = new io.github.onograph.cluster.raft.module.dprot.impl.ClusterDiscoveryInitiator(
        (io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTime) gdbServerPointInTimeImpl6);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, org.neo4j.dbms.DatabaseState> databaseIdMap8 = gdbServerPointInTimeImpl6.daassteMap();
    org.neo4j.configuration.Config config9 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    io.github.onograph.cluster.raft.share.NodeServerInfoLogService nodeServerInfoLogService14 = new io.github.onograph.cluster.raft.share.NodeServerInfoLogService(
        logProvider11, "temp-save", logProvider13);
    org.neo4j.logging.LogProvider logProvider15 = nodeServerInfoLogService14.getUserLogProvider();
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction16 = null;
    org.neo4j.configuration.Config config17 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction18 = null;
    org.neo4j.logging.LogProvider logProvider19 = null;
    java.nio.file.Path path20 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo21 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path20);
    java.nio.file.Path path22 = clusterMetaTopologyInfo21.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker23 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo21);
    org.neo4j.memory.MemoryTracker memoryTracker24 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade25 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config17, fileSystemAbstraction18, logProvider19, clusterMetaTopologyInfo21,
        memoryTracker24);
    org.neo4j.logging.Log log26 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction27 = null;
    org.neo4j.configuration.Config config28 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction29 = null;
    org.neo4j.logging.LogProvider logProvider30 = null;
    java.nio.file.Path path31 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo32 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path31);
    java.nio.file.Path path33 = clusterMetaTopologyInfo32.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker34 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo32);
    org.neo4j.memory.MemoryTracker memoryTracker35 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade36 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config28, fileSystemAbstraction29, logProvider30, clusterMetaTopologyInfo32,
        memoryTracker35);
    org.neo4j.logging.Log log37 = null;
    java.nio.file.Path path38 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo39 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path38);
    java.nio.file.Path path40 = clusterMetaTopologyInfo39.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker41 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo39);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat42 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv43 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction27, clusterSimpleStorageFacade36, log37, clusterMetaTopologyInfo39,
        clusterMetaFormat42);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat44 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv45 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction16, clusterSimpleStorageFacade25, log26, clusterMetaTopologyInfo39,
        clusterMetaFormat44);
    org.neo4j.memory.MemoryTracker memoryTracker46 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade47 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config9, fileSystemAbstraction10, logProvider15, clusterMetaTopologyInfo39,
        memoryTracker46);
    org.neo4j.dbms.identity.ServerId serverId48 = null;
    akka.stream.javadsl.SourceQueueWithComplete<java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta>> databaseIdMapSourceQueueWithComplete49 = null;
    akka.stream.javadsl.SourceQueueWithComplete<io.github.onograph.cluster.raft.module.dprot.ConsensusGdbServerCoordinator> consensusGdbServerCoordinatorSourceQueueWithComplete50 = null;
    akka.stream.javadsl.SourceQueueWithComplete<io.github.onograph.cluster.raft.module.dprot.ReadReplicateGdbMeta> readReplicateGdbMetaSourceQueueWithComplete51 = null;
    akka.stream.javadsl.SourceQueueWithComplete<io.github.onograph.cluster.raft.module.dprot.DatabaseCoreClusterStructure> databaseCoreClusterStructureSourceQueueWithComplete52 = null;
    akka.stream.javadsl.SourceQueueWithComplete<io.github.onograph.cluster.raft.module.dprot.DatabaseReadReplicaClusterStructure> databaseReadReplicaClusterStructureSourceQueueWithComplete53 = null;
    akka.actor.Props props54 = io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.ReadReplicaClientStructureActor.prpProps(
        actorRef0, clock1, config2,
        (io.github.onograph.cluster.raft.module.dprot.pit.GdbServerPointInTime) gdbServerPointInTimeImpl6,
        logProvider15, serverId48, databaseIdMapSourceQueueWithComplete49,
        consensusGdbServerCoordinatorSourceQueueWithComplete50,
        readReplicateGdbMetaSourceQueueWithComplete51,
        databaseCoreClusterStructureSourceQueueWithComplete52,
        databaseReadReplicaClusterStructureSourceQueueWithComplete53);
    org.junit.Assert.assertNull(databaseIdMap8);
    org.junit.Assert.assertNotNull(logProvider15);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo21);
    org.junit.Assert.assertNull(path22);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo32);
    org.junit.Assert.assertNull(path33);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo39);
    org.junit.Assert.assertNull(path40);
    org.junit.Assert.assertNotNull(clusterMetaFormat42);
    org.junit.Assert.assertNotNull(props54);
  }

  @Test
  public void test1973() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1973");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbIsoException gdbIsoException1 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbIsoException(
        "cc-discovery-actor-system");
    io.github.onograph.cluster.raft.share.meta.cm.ClusterSyncerException clusterSyncerException3 = new io.github.onograph.cluster.raft.share.meta.cm.ClusterSyncerException(
        (java.lang.Throwable) gdbIsoException1, "policy");
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException gdbStoreSyncCrlException5 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreSyncCrlException(
        (java.lang.Exception) gdbIsoException1, "causal_clustering.leadership_priority_group");
  }

  @Test
  public void test1974() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1974");
    }
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaCoreImpl gdbDiscoveryMetaCoreImpl0 = null;
    org.neo4j.dbms.identity.ServerId serverId1 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.GdbDiscoveryMetaCoreWrapper gdbDiscoveryMetaCoreWrapper2 = new io.github.onograph.cluster.raft.module.dprot.impl.structure.GdbDiscoveryMetaCoreWrapper(
        gdbDiscoveryMetaCoreImpl0, serverId1);
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler3 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerLimitHandler catchupAnswerLimitHandler4 = null;
    io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl refCatchupManagerImpl5 = new io.github.onograph.cluster.raft.module.cuprot.RefCatchupManagerImpl();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler catchupProblemInboundHandler6 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.CatchupProblemInboundHandler(
        catchupAnswerLimitHandler4, refCatchupManagerImpl5);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceSimpleChannelInboundHandler sliceSimpleChannelInboundHandler7 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SliceSimpleChannelInboundHandler(
        catchupAnswerLimitHandler3, refCatchupManagerImpl5);
    boolean boolean8 = gdbDiscoveryMetaCoreWrapper2.equals(
        (java.lang.Object) refCatchupManagerImpl5);
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1975() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1975");
    }
    io.netty.bootstrap.Bootstrap bootstrap0 = null;
    io.netty.channel.pool.ChannelPoolHandler channelPoolHandler1 = null;
    io.github.onograph.cluster.raft.netty.NettyChannelPoolBuilder nettyChannelPoolBuilder2 = null;
    io.github.onograph.cluster.raft.netty.LBNettyChannelPoolMapImpl lBNettyChannelPoolMapImpl4 = new io.github.onograph.cluster.raft.netty.LBNettyChannelPoolMapImpl(
        bootstrap0, channelPoolHandler1, nettyChannelPoolBuilder2, (int) (byte) 9);
    lBNettyChannelPoolMapImpl4.close();
    java.util.Iterator<java.util.Map.Entry<io.github.onograph.cluster.raft.netty.LBNettyChannelPoolMapImpl.ConsensusSocketAddressDTO, io.netty.channel.pool.ChannelPool>> consensusSocketAddressDTOEntryItor6 = lBNettyChannelPoolMapImpl4.iterator();
    io.github.onograph.cluster.raft.netty.LBNettyChannelPoolMapImpl.ConsensusSocketAddressDTO consensusSocketAddressDTO7 = null;
    try {
      io.netty.channel.pool.ChannelPool channelPool8 = lBNettyChannelPoolMapImpl4.get(
          consensusSocketAddressDTO7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: key");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(consensusSocketAddressDTOEntryItor6);
  }

  @Test
  public void test1976() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1976");
    }
    io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerManager<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedCatchupAnswerManager0 = new io.github.onograph.cluster.raft.module.cuprot.CatchupAnswerManager<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted>();
    io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupIncomingTransactionReply catchupIncomingTransactionReply1 = io.github.onograph.cluster.raft.module.cuprot.synctrxr.CatchupIncomingTransactionReply.EMT_CATCHUP_INCOMING_TRANSACTION_REPLY;
    org.neo4j.storageengine.api.StoreId storeId2 = catchupIncomingTransactionReply1.getStoreId();
    io.netty.channel.Channel channel3 = null;
    io.github.onograph.cluster.raft.module.cuprot.CatchupReplyChannelManager catchupReplyChannelManager4 = new io.github.onograph.cluster.raft.module.cuprot.CatchupReplyChannelManager(
        channel3);
    java.util.concurrent.CompletableFuture<io.github.onograph.cluster.raft.module.cuprot.scmeta.StoreSyncCompleted> storeSyncCompletedCompletableFuture5 = null;
    try {
      storeSyncCompletedCatchupAnswerManager0.ontpurseForCoCaCa(catchupIncomingTransactionReply1,
          catchupReplyChannelManager4, storeSyncCompletedCompletableFuture5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(catchupIncomingTransactionReply1);
    org.junit.Assert.assertNull(storeId2);
  }

  @Test
  public void test1977() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1977");
    }
    io.github.onograph.cluster.raft.akkamsg.serialization.ContentTypeRef contentTypeRef0 = new io.github.onograph.cluster.raft.akkamsg.serialization.ContentTypeRef();
    io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType messageDataType1 = io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType.DUPD_MD;
    contentTypeRef0.exeForE(messageDataType1);
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataDataManagerFactoryDecodingService syncableDataDataManagerFactoryDecodingService3 = new io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataDataManagerFactoryDecodingService(
        (io.github.onograph.cluster.raft.module.cuprot.Ref<io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType>) contentTypeRef0);
    io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataDataManagerFactoryDecodingService syncableDataDataManagerFactoryDecodingService4 = new io.github.onograph.cluster.raft.akkamsg.serialization.SyncableDataDataManagerFactoryDecodingService(
        (io.github.onograph.cluster.raft.module.cuprot.Ref<io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType>) contentTypeRef0);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry5 = null;
    io.github.onograph.cluster.raft.share.calg.action.AddAction addAction7 = new io.github.onograph.cluster.raft.share.calg.action.AddAction(
        consensusLogEntry5, (long) 2);
    boolean boolean8 = syncableDataDataManagerFactoryDecodingService4.acceptInboundMessage(
        (java.lang.Object) 2);
    org.junit.Assert.assertTrue("'" + messageDataType1 + "' != '"
            + io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType.DUPD_MD + "'",
        messageDataType1.equals(
            io.github.onograph.cluster.raft.akkamsg.serialization.MessageDataType.DUPD_MD));
    //org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
  }

  @Test
  public void test1978() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1978");
    }
    org.neo4j.kernel.impl.factory.AccessCapabilityFactory accessCapabilityFactory0 = null;
    org.neo4j.kernel.impl.api.CommitProcessFactory commitProcessFactory1 = null;
    org.neo4j.graphdb.factory.module.id.DatabaseIdContext databaseIdContext2 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService3 = null;
    java.lang.Runnable runnable4 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage5 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl6 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable4, leasableMetaStateStorage5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator8 = null;
    java.util.function.Supplier<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSupplier9 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl leaseServiceEnterpriseImpl10 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl(
        consensusLeaderNodeService3, syncableLeasableCoreNodeDataFSMImpl6, namedDatabaseId7,
        syncerator8, consensusNodeIdSupplier9);
    org.neo4j.kernel.impl.locking.Locks locks11 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.EmptyReq> emptyReqFSMEmptyReq12 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService13 = null;
    java.lang.Runnable runnable14 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage15 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl16 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable14, leasableMetaStateStorage15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator18 = null;
    java.util.function.Supplier<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSupplier19 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl leaseServiceEnterpriseImpl20 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl(
        consensusLeaderNodeService13, syncableLeasableCoreNodeDataFSMImpl16, namedDatabaseId17,
        syncerator18, consensusNodeIdSupplier19);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl21 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl22 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.ReplicatedTransactionFSM replicatedTransactionFSM23 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl24 = null;
    org.neo4j.logging.LogProvider logProvider25 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier26 = null;
    java.util.function.Supplier<org.neo4j.kernel.impl.transaction.log.LogicalTransactionStore> logicalTransactionStoreSupplier27 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair transactionLogIndexRepair28 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair(
        logProvider25, transactionIdStoreSupplier26, logicalTransactionStoreSupplier27);
    io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService coreGdbFSMService29 = new io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService(
        emptyReqFSMEmptyReq12, syncableLeasableCoreNodeDataFSMImpl16, fSMTokenImpl21,
        fSMTokenImpl22, replicatedTransactionFSM23, fSMTokenImpl24, transactionLogIndexRepair28);
    org.neo4j.token.TokenHolders tokenHolders30 = null;
    io.github.onograph.cluster.raft.share.meta.CoreNodeWrapper coreNodeWrapper31 = new io.github.onograph.cluster.raft.share.meta.CoreNodeWrapper(
        accessCapabilityFactory0, commitProcessFactory1, databaseIdContext2,
        (org.neo4j.kernel.impl.api.LeaseService) leaseServiceEnterpriseImpl10, locks11,
        coreGdbFSMService29, tokenHolders30);
    org.neo4j.configuration.helpers.DatabaseReadOnlyChecker databaseReadOnlyChecker32 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService33 = null;
    java.lang.Runnable runnable34 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage35 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl36 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable34, leasableMetaStateStorage35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId37 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator38 = null;
    java.util.function.Supplier<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdSupplier39 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl leaseServiceEnterpriseImpl40 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeaseServiceEnterpriseImpl(
        consensusLeaderNodeService33, syncableLeasableCoreNodeDataFSMImpl36, namedDatabaseId37,
        syncerator38, consensusNodeIdSupplier39);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId41 = null;
    io.github.onograph.cluster.raft.share.sync.Syncerator syncerator42 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionCommitProcessSyncableDataImpl transactionCommitProcessSyncableDataImpl43 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionCommitProcessSyncableDataImpl(
        databaseReadOnlyChecker32, leaseServiceEnterpriseImpl40, namedDatabaseId41, syncerator42);
    try {
      coreGdbFSMService29.inlcmpoForTr(
          (org.neo4j.kernel.impl.api.TransactionCommitProcess) transactionCommitProcessSyncableDataImpl43);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1979() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1979");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction2 = null;
    org.neo4j.logging.LogProvider logProvider3 = null;
    java.nio.file.Path path4 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo5 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path4);
    java.nio.file.Path path6 = clusterMetaTopologyInfo5.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker7 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo5);
    org.neo4j.memory.MemoryTracker memoryTracker8 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade9 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config1, fileSystemAbstraction2, logProvider3, clusterMetaTopologyInfo5, memoryTracker8);
    org.neo4j.logging.Log log10 = null;
    java.nio.file.Path path11 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo12 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path11);
    java.nio.file.Path path13 = clusterMetaTopologyInfo12.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker14 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo12);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat15 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv16 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction0, clusterSimpleStorageFacade9, log10, clusterMetaTopologyInfo12,
        clusterMetaFormat15);
    java.util.function.Function<org.neo4j.kernel.database.NamedDatabaseId, io.github.onograph.cluster.raft.share.calg.LeaderNodeEventHandlers> namedDatabaseIdFunction17 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule18 = null;
    org.neo4j.memory.MemoryTracker memoryTracker19 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction20 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade21 = null;
    org.neo4j.logging.Log log22 = null;
    java.nio.file.Path path23 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo24 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path23);
    java.nio.file.Path path25 = clusterMetaTopologyInfo24.getPscPath();
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat26 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv27 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction20, clusterSimpleStorageFacade21, log22, clusterMetaTopologyInfo24,
        clusterMetaFormat26);
    org.neo4j.logging.Log log28 = upgradeMetaEnv27.getLog();
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo29 = upgradeMetaEnv27.getLscClusterMetaTopologyInfo();
    io.github.onograph.config.NodeGroupIdentifierSetSupplier nodeGroupIdentifierSetSupplier30 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.LeaderGatekeeper leaderGatekeeper31 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder consensusNodeGroupWrapperBuilder32 = new io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder(
        clusterSimpleStorageFacade9, namedDatabaseIdFunction17, globalModule18, memoryTracker19,
        clusterMetaTopologyInfo29, nodeGroupIdentifierSetSupplier30, leaderGatekeeper31);
    org.neo4j.configuration.helpers.DbmsReadOnlyChecker dbmsReadOnlyChecker33 = null;
    io.github.onograph.cluster.raft.share.sync.InfoReplyMessageConsumer infoReplyMessageConsumer34 = new io.github.onograph.cluster.raft.share.sync.InfoReplyMessageConsumer();
    org.neo4j.logging.internal.DatabaseLogService databaseLogService35 = null;
    org.neo4j.collection.Dependencies dependencies36 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy37 = null;
    org.neo4j.kernel.lifecycle.LifeSupport lifeSupport38 = null;
    io.github.onograph.cluster.raft.share.calg.SyncableDataChannelMarshal syncableDataChannelMarshal39 = new io.github.onograph.cluster.raft.share.calg.SyncableDataChannelMarshal();
    org.neo4j.io.marshal.ChannelMarshal<io.github.onograph.cluster.raft.share.sync.SyncableData> syncableDataChannelMarshal41 = syncableDataChannelMarshal39.apply(
        (java.lang.Integer) 10);
    org.neo4j.monitoring.Monitors monitors42 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId43 = null;
    io.github.onograph.cluster.raft.akkamsg.OutDirection<io.github.onograph.cluster.raft.id.ConsensusNodeId, io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AbstractConsensusMessage> consensusNodeIdOutDirection44 = null;
    try {
      io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapper consensusNodeGroupWrapper45 = consensusNodeGroupWrapperBuilder32.craConsensusNodeGroupWrapper(
          dbmsReadOnlyChecker33,
          (java.util.function.Consumer<io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.InfoReplyMessage>) infoReplyMessageConsumer34,
          databaseLogService35, dependencies36, consensusNodeIdLazy37, lifeSupport38,
          syncableDataChannelMarshal39, monitors42, namedDatabaseId43,
          consensusNodeIdOutDirection44);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo5);
    org.junit.Assert.assertNull(path6);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo12);
    org.junit.Assert.assertNull(path13);
    org.junit.Assert.assertNotNull(clusterMetaFormat15);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo24);
    org.junit.Assert.assertNull(path25);
    org.junit.Assert.assertNull(log28);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo29);
    org.junit.Assert.assertNull(syncableDataChannelMarshal41);
  }

  @Test
  public void test1980() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1980");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo0 = io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo.EMT_VIEW_CLUSTER_INFO;
    boolean boolean1 = viewClusterInfo0.getIsCnegd();
    akka.cluster.Member member2 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.structure.ViewClusterInfo viewClusterInfo3 = viewClusterInfo0.unresponsiveMember(
        member2);
    java.util.Set<akka.cluster.Member> memberSet4 = viewClusterInfo0.getSetUrahbMember();
    io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureServiceHandler coreClusterStructureServiceHandler5 = new io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureServiceHandler();
    io.github.onograph.cluster.raft.share.calg.ConsensusOperationsManager consensusOperationsManager6 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureService coreClusterStructureService8 = null;
    io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureServiceLifecycleAdapter coreClusterStructureServiceLifecycleAdapter9 = new io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureServiceLifecycleAdapter(
        consensusOperationsManager6, namedDatabaseId7, coreClusterStructureService8);
    coreClusterStructureServiceLifecycleAdapter9.onungt();
    coreClusterStructureServiceLifecycleAdapter9.shutdown();
    coreClusterStructureServiceLifecycleAdapter9.onungt();
    coreClusterStructureServiceLifecycleAdapter9.onungt();
    coreClusterStructureServiceHandler5.adcrtolnForCo(
        (io.github.onograph.cluster.raft.module.dprot.CoreClusterStructureService.CoreStructureHandler) coreClusterStructureServiceLifecycleAdapter9);
    boolean boolean15 = viewClusterInfo0.equals(
        (java.lang.Object) coreClusterStructureServiceLifecycleAdapter9);
    org.junit.Assert.assertNotNull(viewClusterInfo0);
    //org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    org.junit.Assert.assertNotNull(viewClusterInfo3);
    org.junit.Assert.assertNotNull(memberSet4);
    //org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
  }

  @Test
  public void test1981() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1981");
    }
    io.github.onograph.cluster.raft.gateway.gwlb.mods.ClusteringBalancerServiceImpl clusteringBalancerServiceImpl0 = new io.github.onograph.cluster.raft.gateway.gwlb.mods.ClusteringBalancerServiceImpl();
    io.github.onograph.cluster.raft.module.dprot.ClusterStructureService clusterStructureService1 = null;
    io.github.onograph.cluster.raft.gateway.gwlb.ClusterLeader clusterLeader2 = null;
    org.neo4j.logging.LogProvider logProvider3 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    io.github.onograph.cluster.raft.share.NodeServerInfoLogService nodeServerInfoLogService6 = new io.github.onograph.cluster.raft.share.NodeServerInfoLogService(
        logProvider3, "temp-save", logProvider5);
    org.neo4j.logging.LogProvider logProvider7 = nodeServerInfoLogService6.getUserLogProvider();
    org.neo4j.configuration.Config config8 = null;
    try {
      clusteringBalancerServiceImpl0.iniForClClLoCo(clusterStructureService1, clusterLeader2,
          logProvider7, config8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(logProvider7);
  }

  @Test
  public void test1982() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1982");
    }
    io.github.onograph.RingQueue<io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta> syncedLeaderMetaRingQueue1 = new io.github.onograph.RingQueue<io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta>(
        (int) (short) 1);
    int int2 = syncedLeaderMetaRingQueue1.size();
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta3 = syncedLeaderMetaRingQueue1.reo();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNull(syncedLeaderMeta3);
  }

  @Test
  public void test1983() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1983");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbIsoException gdbIsoException1 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbIsoException(
        "store_creation_time");
  }

  @Test
  public void test1984() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1984");
    }
    java.time.Clock clock0 = null;
    io.github.onograph.cluster.raft.palapp.strategies.ReadReplicaNodeNamedServiceClusterApproach readReplicaNodeNamedServiceClusterApproach2 = new io.github.onograph.cluster.raft.palapp.strategies.ReadReplicaNodeNamedServiceClusterApproach(
        1536);
    java.lang.String str3 = readReplicaNodeNamedServiceClusterApproach2.getName();
    io.github.onograph.cluster.raft.palapp.NamedServiceApproachesServiceStandardImpl namedServiceApproachesServiceStandardImpl4 = new io.github.onograph.cluster.raft.palapp.NamedServiceApproachesServiceStandardImpl();
    java.util.Iterator<io.github.onograph.cluster.raft.palapp.AbstractNamedServiceClusterApproach> abstractNamedServiceClusterApproachItor5 = namedServiceApproachesServiceStandardImpl4.iterator();
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    io.github.onograph.cluster.raft.share.NodeServerInfoLogService nodeServerInfoLogService9 = new io.github.onograph.cluster.raft.share.NodeServerInfoLogService(
        logProvider6, "temp-save", logProvider8);
    org.neo4j.logging.LogProvider logProvider10 = nodeServerInfoLogService9.getUserLogProvider();
    try {
      io.github.onograph.cluster.raft.palapp.NamedServiceApproachManager namedServiceApproachManager11 = new io.github.onograph.cluster.raft.palapp.NamedServiceApproachManager(
          clock0,
          (io.github.onograph.cluster.raft.palapp.AbstractNamedServiceClusterApproach) readReplicaNodeNamedServiceClusterApproach2,
          (java.lang.Iterable<io.github.onograph.cluster.raft.palapp.AbstractNamedServiceClusterApproach>) namedServiceApproachesServiceStandardImpl4,
          logProvider10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "typically-connect-to-random-read-replica" + "'", str3,
        "typically-connect-to-random-read-replica");
    org.junit.Assert.assertNotNull(abstractNamedServiceClusterApproachItor5);
    org.junit.Assert.assertNotNull(logProvider10);
  }

  @Test
  public void test1985() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1985");
    }
    java.time.Duration duration0 = null;
    org.neo4j.dbms.database.DatabaseManager<io.github.onograph.dbms.gdb.EnterpriseClusterDbContext> enterpriseClusterDbContextDatabaseManager1 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy2 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusLeaderNodeService consensusLeaderNodeService4 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    org.neo4j.logging.LogProvider logProvider7 = null;
    io.github.onograph.cluster.raft.share.NodeServerInfoLogService nodeServerInfoLogService8 = new io.github.onograph.cluster.raft.share.NodeServerInfoLogService(
        logProvider5, "temp-save", logProvider7);
    org.neo4j.logging.LogProvider logProvider9 = nodeServerInfoLogService8.getUserLogProvider();
    org.neo4j.monitoring.Monitors monitors10 = null;
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    io.github.onograph.cluster.raft.akkamsg.OutDirection<io.github.onograph.cluster.raft.id.ConsensusNodeId, io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AbstractConsensusMessage> consensusNodeIdOutDirection12 = null;
    org.neo4j.internal.helpers.TimeoutStrategy timeoutStrategy13 = null;
    io.github.onograph.cluster.raft.share.sync.SubCSManager subCSManager14 = null;
    java.util.UUID uUID15 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy16 = null;
    io.github.onograph.cluster.raft.share.sync.ClusterSessionBean clusterSessionBean17 = new io.github.onograph.cluster.raft.share.sync.ClusterSessionBean(
        uUID15, consensusNodeIdLazy16);
    io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl syncStatusMetaServiceImpl18 = new io.github.onograph.cluster.raft.share.sync.SyncStatusMetaServiceImpl(
        clusterSessionBean17);
    try {
      io.github.onograph.cluster.raft.share.sync.ConsensusSynceratorImpl consensusSynceratorImpl19 = new io.github.onograph.cluster.raft.share.sync.ConsensusSynceratorImpl(
          duration0, enterpriseClusterDbContextDatabaseManager1, consensusNodeIdLazy2, 0L,
          consensusLeaderNodeService4, logProvider9, monitors10, namedDatabaseId11,
          consensusNodeIdOutDirection12, timeoutStrategy13, subCSManager14,
          (io.github.onograph.cluster.raft.share.sync.SyncStatusMetaService) syncStatusMetaServiceImpl18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(logProvider9);
  }

  @Test
  public void test1986() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1986");
    }
    org.neo4j.kernel.impl.transaction.log.PhysicalTransactionRepresentation physicalTransactionRepresentation0 = null;
    org.neo4j.kernel.database.DatabaseId databaseId1 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.AbstractTransactionSync abstractTransactionSync3 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.AbstractTransactionSync(
        physicalTransactionRepresentation0, databaseId1, (long) 100);
  }

  @Test
  public void test1987() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1987");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId1 = null;
    java.util.UUID uUID2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.AskState askState3 = new io.github.onograph.cluster.raft.share.meta.fsm.AskState(
        databaseId0, consensusNodeId1, uUID2);
    org.neo4j.kernel.database.DatabaseId databaseId4 = askState3.daasidDatabaseId();
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId5 = askState3.getImConsensusNodeId();
    org.junit.Assert.assertNull(databaseId4);
    org.junit.Assert.assertNull(consensusNodeId5);
  }

  @Test
  public void test1988() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1988");
    }
    io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl consensusLogCacheServiceNLImpl0 = new io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheServiceNLImpl();
    java.time.Clock clock1 = null;
    org.neo4j.function.Suppliers.Lazy<io.github.onograph.cluster.raft.id.ConsensusNodeId> consensusNodeIdLazy4 = null;
    org.neo4j.logging.LogProvider logProvider6 = null;
    io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog inMemoryConsensusTransactionLog7 = new io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog();
    long long10 = inMemoryConsensusTransactionLog7.pass((long) 0, (long) (short) -1);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[] consensusLogEntryArray14 = new io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry[]{};
    io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction incomingAction15 = new io.github.onograph.cluster.raft.share.calg.action.AbstractTransactionLogProcessorAction.IncomingAction(
        10L, (long) 0, consensusLogEntryArray14);
    io.github.onograph.cluster.raft.module.cuprot.RefException refException16 = new io.github.onograph.cluster.raft.module.cuprot.RefException(
        "causal_clustering.load_balancing.config.server_policies",
        (java.lang.Object[]) consensusLogEntryArray14);
    long long17 = inMemoryConsensusTransactionLog7.apeForCo(consensusLogEntryArray14);
    io.github.onograph.cluster.raft.share.calg.mnode.MemberNodes memberNodes18 = io.github.onograph.cluster.raft.share.calg.mnode.MemberNodes.EMT_MEMBER_NODES;
    io.github.onograph.cluster.raft.akkamsg.OutDirection<io.github.onograph.cluster.raft.id.ConsensusNodeId, io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.AbstractConsensusMessage> consensusNodeIdOutDirection19 = null;
    io.github.onograph.cluster.raft.share.calg.scholder.ScHolderJobScheduler scHolderJobScheduler20 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusProcessorService consensusProcessorService21 = new io.github.onograph.cluster.raft.share.calg.ConsensusProcessorService(
        (io.github.onograph.cluster.raft.share.calg.cle.cservice.ConsensusLogCacheService) consensusLogCacheServiceNLImpl0,
        clock1, 9, 1, consensusNodeIdLazy4, (long) 1015, logProvider6,
        (io.github.onograph.cluster.raft.share.calg.cle.ConsensusTransactionLogEntry) inMemoryConsensusTransactionLog7,
        memberNodes18, consensusNodeIdOutDirection19, scHolderJobScheduler20);
    consensusLogCacheServiceNLImpl0.enb();
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
    org.junit.Assert.assertNotNull(consensusLogEntryArray14);
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
    org.junit.Assert.assertNotNull(memberNodes18);
  }

  @Test
  public void test1989() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1989");
    }
    io.github.onograph.cluster.raft.logservice.ConsensusMessageLogServiceNOOPImpl<io.github.onograph.cluster.raft.module.cuprot.current.scmeta.StoreSyncCompletedMessageToByteEncoder> storeSyncCompletedMessageToByteEncoderConsensusMessageLogServiceNOOPImpl0 = new io.github.onograph.cluster.raft.logservice.ConsensusMessageLogServiceNOOPImpl<io.github.onograph.cluster.raft.module.cuprot.current.scmeta.StoreSyncCompletedMessageToByteEncoder>();
  }

  @Test
  public void test1990() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1990");
    }
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction0 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction1 = null;
    org.neo4j.configuration.Config config2 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    java.nio.file.Path path5 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo6 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path5);
    java.nio.file.Path path7 = clusterMetaTopologyInfo6.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker8 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo6);
    org.neo4j.memory.MemoryTracker memoryTracker9 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade10 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config2, fileSystemAbstraction3, logProvider4, clusterMetaTopologyInfo6, memoryTracker9);
    org.neo4j.logging.Log log11 = null;
    java.nio.file.Path path12 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo13 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path12);
    java.nio.file.Path path14 = clusterMetaTopologyInfo13.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker15 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo13);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat16 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv17 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction1, clusterSimpleStorageFacade10, log11, clusterMetaTopologyInfo13,
        clusterMetaFormat16);
    java.util.function.Function<org.neo4j.kernel.database.NamedDatabaseId, io.github.onograph.cluster.raft.share.calg.LeaderNodeEventHandlers> namedDatabaseIdFunction18 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule19 = null;
    org.neo4j.memory.MemoryTracker memoryTracker20 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction21 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade22 = null;
    org.neo4j.logging.Log log23 = null;
    java.nio.file.Path path24 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo25 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path24);
    java.nio.file.Path path26 = clusterMetaTopologyInfo25.getPscPath();
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat27 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv28 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction21, clusterSimpleStorageFacade22, log23, clusterMetaTopologyInfo25,
        clusterMetaFormat27);
    org.neo4j.logging.Log log29 = upgradeMetaEnv28.getLog();
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo30 = upgradeMetaEnv28.getLscClusterMetaTopologyInfo();
    io.github.onograph.config.NodeGroupIdentifierSetSupplier nodeGroupIdentifierSetSupplier31 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.LeaderGatekeeper leaderGatekeeper32 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder consensusNodeGroupWrapperBuilder33 = new io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder(
        clusterSimpleStorageFacade10, namedDatabaseIdFunction18, globalModule19, memoryTracker20,
        clusterMetaTopologyInfo30, nodeGroupIdentifierSetSupplier31, leaderGatekeeper32);
    org.neo4j.logging.Log log34 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction35 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade36 = null;
    org.neo4j.logging.Log log37 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade38 = null;
    java.util.function.Function<org.neo4j.kernel.database.NamedDatabaseId, io.github.onograph.cluster.raft.share.calg.LeaderNodeEventHandlers> namedDatabaseIdFunction39 = null;
    org.neo4j.graphdb.factory.module.GlobalModule globalModule40 = null;
    org.neo4j.memory.MemoryTracker memoryTracker41 = null;
    java.nio.file.Path path42 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo43 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path42);
    io.github.onograph.config.NodeGroupIdentifierSetSupplier nodeGroupIdentifierSetSupplier44 = null;
    io.github.onograph.cluster.raft.share.calg.nltof.LeaderGatekeeper leaderGatekeeper45 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder consensusNodeGroupWrapperBuilder46 = new io.github.onograph.cluster.raft.share.calg.ConsensusNodeGroupWrapperBuilder(
        clusterSimpleStorageFacade38, namedDatabaseIdFunction39, globalModule40, memoryTracker41,
        clusterMetaTopologyInfo43, nodeGroupIdentifierSetSupplier44, leaderGatekeeper45);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat47 = null;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv48 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction35, clusterSimpleStorageFacade36, log37, clusterMetaTopologyInfo43,
        clusterMetaFormat47);
    java.nio.file.Path path49 = clusterMetaTopologyInfo43.getPscPath();
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat50 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction51 = null;
    org.neo4j.configuration.Config config52 = null;
    org.neo4j.io.fs.FileSystemAbstraction fileSystemAbstraction53 = null;
    org.neo4j.logging.LogProvider logProvider54 = null;
    java.nio.file.Path path55 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo56 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path55);
    java.nio.file.Path path57 = clusterMetaTopologyInfo56.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker58 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo56);
    org.neo4j.memory.MemoryTracker memoryTracker59 = null;
    io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade clusterSimpleStorageFacade60 = new io.github.onograph.cluster.raft.shared.ClusterSimpleStorageFacade(
        config52, fileSystemAbstraction53, logProvider54, clusterMetaTopologyInfo56,
        memoryTracker59);
    org.neo4j.logging.Log log61 = null;
    java.nio.file.Path path62 = null;
    io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo clusterMetaTopologyInfo63 = io.github.onograph.cluster.raft.share.meta.ClusterMetaTopologyInfo.ofClusterMetaTopologyInfo(
        path62);
    java.nio.file.Path path64 = clusterMetaTopologyInfo63.getPscPath();
    io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker defaultDiscoveryInitialProcChecker65 = new io.github.onograph.cluster.raft.module.dprot.DefaultDiscoveryInitialProcChecker(
        clusterMetaTopologyInfo63);
    io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat clusterMetaFormat66 = io.github.onograph.cluster.raft.share.meta.fsm.ClusterMetaFormat.INTL_CLUSTER_META_FORMAT;
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv67 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction51, clusterSimpleStorageFacade60, log61, clusterMetaTopologyInfo63,
        clusterMetaFormat66);
    boolean boolean68 = clusterMetaFormat50.isLortaForCl(clusterMetaFormat66);
    io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv upgradeMetaEnv69 = new io.github.onograph.cluster.raft.share.meta.cm.UpgradeMetaEnv(
        fileSystemAbstraction0, clusterSimpleStorageFacade10, log34, clusterMetaTopologyInfo43,
        clusterMetaFormat66);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo6);
    org.junit.Assert.assertNull(path7);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo13);
    org.junit.Assert.assertNull(path14);
    org.junit.Assert.assertNotNull(clusterMetaFormat16);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo25);
    org.junit.Assert.assertNull(path26);
    org.junit.Assert.assertNull(log29);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo30);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo43);
    org.junit.Assert.assertNull(path49);
    org.junit.Assert.assertNotNull(clusterMetaFormat50);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo56);
    org.junit.Assert.assertNull(path57);
    org.junit.Assert.assertNotNull(clusterMetaTopologyInfo63);
    org.junit.Assert.assertNull(path64);
    org.junit.Assert.assertNotNull(clusterMetaFormat66);
    //org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
  }

  @Test
  public void test1991() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1991");
    }
    io.github.onograph.cluster.raft.module.dprot.impl.serialize.GdbDiscoveryMetaReadReplicaMarshal gdbDiscoveryMetaReadReplicaMarshal0 = io.github.onograph.cluster.raft.module.dprot.impl.serialize.GdbDiscoveryMetaReadReplicaMarshal.IT;
    akka.actor.ActorRef actorRef1 = null;
    io.github.onograph.cluster.raft.module.dprot.DiscoverySocketAddresses discoverySocketAddresses2 = null;
    org.neo4j.configuration.helpers.SocketAddress socketAddress3 = null;
    java.lang.String[] strArray10 = new java.lang.String[]{"store_random_id", "name", "leader-only",
        "store_random_id", "", ""};
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet11 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray10);
    java.util.Set<io.github.onograph.config.NodeGroupIdentifier> nodeGroupIdentifierSet12 = io.github.onograph.config.NodeGroupIdentifier.seoSet(
        strArray10);
    org.neo4j.kernel.database.DatabaseId[] databaseIdArray13 = new org.neo4j.kernel.database.DatabaseId[]{};
    java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId> databaseIdSet14 = new java.util.LinkedHashSet<org.neo4j.kernel.database.DatabaseId>();
    boolean boolean15 = java.util.Collections.addAll(
        (java.util.Collection<org.neo4j.kernel.database.DatabaseId>) databaseIdSet14,
        databaseIdArray13);
    io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl gdbDiscoveryMetaReadReplicaImpl16 = new io.github.onograph.cluster.raft.module.dprot.GdbDiscoveryMetaReadReplicaImpl(
        discoverySocketAddresses2, socketAddress3, nodeGroupIdentifierSet12,
        (java.util.Set<org.neo4j.kernel.database.DatabaseId>) databaseIdSet14);
    java.util.Map<org.neo4j.kernel.database.DatabaseId, io.github.onograph.cluster.raft.module.dprot.impl.gdb.DiscoveryGdbOperatorMetaWrapper> databaseIdMap17 = null;
    akka.actor.ActorRef actorRef18 = null;
    org.neo4j.dbms.identity.ServerId serverId19 = null;
    io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo updateReadReplicaInfo20 = new io.github.onograph.cluster.raft.module.dprot.impl.readreplicatopology.UpdateReadReplicaInfo(
        actorRef1, gdbDiscoveryMetaReadReplicaImpl16, databaseIdMap17, actorRef18, serverId19);
    io.netty.buffer.ByteBuf byteBuf21 = null;
    io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel defaultWritableChecksumChannel22 = new io.github.onograph.cluster.raft.akkamsg.DefaultWritableChecksumChannel(
        byteBuf21);
    defaultWritableChecksumChannel22.beginChecksum();
    io.netty.buffer.ByteBuf byteBuf24 = defaultWritableChecksumChannel22.byebfByteBuf();
    io.netty.buffer.ByteBuf byteBuf25 = defaultWritableChecksumChannel22.byebfByteBuf();
    io.netty.buffer.ByteBuf byteBuf26 = defaultWritableChecksumChannel22.byebfByteBuf();
    try {
      gdbDiscoveryMetaReadReplicaMarshal0.marshal(gdbDiscoveryMetaReadReplicaImpl16,
          (org.neo4j.io.fs.WritableChannel) defaultWritableChecksumChannel22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(gdbDiscoveryMetaReadReplicaMarshal0);
    org.junit.Assert.assertNotNull(strArray10);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet11);
    org.junit.Assert.assertNotNull(nodeGroupIdentifierSet12);
    org.junit.Assert.assertNotNull(databaseIdArray13);
    //org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNull(byteBuf24);
    org.junit.Assert.assertNull(byteBuf25);
    org.junit.Assert.assertNull(byteBuf26);
  }

  @Test
  public void test1992() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1992");
    }
    org.neo4j.io.fs.ReadableChannel readableChannel0 = null;
    io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl readableClosablePositionAwareChecksumChannelPassThruImpl1 = new io.github.onograph.cluster.raft.akkamsg.ReadableClosablePositionAwareChecksumChannelPassThruImpl(
        readableChannel0);
    readableClosablePositionAwareChecksumChannelPassThruImpl1.beginChecksum();
    org.neo4j.kernel.impl.transaction.log.LogPosition logPosition3 = readableClosablePositionAwareChecksumChannelPassThruImpl1.getCurrentPosition();
    int int4 = readableClosablePositionAwareChecksumChannelPassThruImpl1.endChecksumAndValidate();
    try {
      short short5 = readableClosablePositionAwareChecksumChannelPassThruImpl1.getShort();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(logPosition3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
  }

  @Test
  public void test1993() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1993");
    }
    io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.EmptyReq> emptyReqFSMEmptyReq0 = null;
    java.lang.Runnable runnable1 = null;
    org.neo4j.io.state.StateStorage<io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta> leasableMetaStateStorage2 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl3 = new io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl(
        runnable1, leasableMetaStateStorage2);
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta leasableMeta4 = io.github.onograph.cluster.raft.share.meta.fsm.lcservice.LeasableMeta.INTL_LES_STAX;
    syncableLeasableCoreNodeDataFSMImpl3.inlspForLe(leasableMeta4);
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl6 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl7 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.ReplicatedTransactionFSM replicatedTransactionFSM8 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl9 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.FSMEmptyReq<io.github.onograph.cluster.raft.share.meta.fsm.EmptyReq> emptyReqFSMEmptyReq10 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.lcservice.SyncableLeasableCoreNodeDataFSMImpl syncableLeasableCoreNodeDataFSMImpl11 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl12 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl13 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.ReplicatedTransactionFSM replicatedTransactionFSM14 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.comp.FSMTokenImpl fSMTokenImpl15 = null;
    org.neo4j.logging.LogProvider logProvider16 = null;
    java.util.function.Supplier<org.neo4j.storageengine.api.TransactionIdStore> transactionIdStoreSupplier17 = null;
    java.util.function.Supplier<org.neo4j.kernel.impl.transaction.log.LogicalTransactionStore> logicalTransactionStoreSupplier18 = null;
    io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair transactionLogIndexRepair19 = new io.github.onograph.cluster.raft.share.meta.fsm.servicetrx.TransactionLogIndexRepair(
        logProvider16, transactionIdStoreSupplier17, logicalTransactionStoreSupplier18);
    io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService coreGdbFSMService20 = new io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService(
        emptyReqFSMEmptyReq10, syncableLeasableCoreNodeDataFSMImpl11, fSMTokenImpl12,
        fSMTokenImpl13, replicatedTransactionFSM14, fSMTokenImpl15, transactionLogIndexRepair19);
    io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService coreGdbFSMService21 = new io.github.onograph.cluster.raft.share.meta.fsm.CoreGdbFSMService(
        emptyReqFSMEmptyReq0, syncableLeasableCoreNodeDataFSMImpl3, fSMTokenImpl6, fSMTokenImpl7,
        replicatedTransactionFSM8, fSMTokenImpl9, transactionLogIndexRepair19);
    org.junit.Assert.assertNotNull(leasableMeta4);
  }

  @Test
  public void test1994() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1994");
    }
    io.github.onograph.cluster.raft.control.connect.HandshakeClientMessageProcessorDefaultImpl handshakeClientMessageProcessorDefaultImpl0 = null;
    io.github.onograph.cluster.raft.control.connect.ClientHandshakeSimpleChannelInboundHandler clientHandshakeSimpleChannelInboundHandler1 = new io.github.onograph.cluster.raft.control.connect.ClientHandshakeSimpleChannelInboundHandler(
        handshakeClientMessageProcessorDefaultImpl0);
    boolean boolean3 = clientHandshakeSimpleChannelInboundHandler1.acceptInboundMessage(
        (java.lang.Object) 0);
    io.netty.channel.ChannelHandlerContext channelHandlerContext4 = null;
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols5 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    java.lang.String str6 = mutableProtocols5.getImpl();
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols7 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY;
    io.github.onograph.cluster.raft.control.MutableProtocols mutableProtocols8 = io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC;
    io.github.onograph.cluster.raft.control.MutableComProFamily[] mutableComProFamilyArray9 = new io.github.onograph.cluster.raft.control.MutableComProFamily[]{
        mutableProtocols5, mutableProtocols7, mutableProtocols8};
    java.util.ArrayList<io.github.onograph.cluster.raft.control.MutableComProFamily> mutableComProFamilyList10 = new java.util.ArrayList<io.github.onograph.cluster.raft.control.MutableComProFamily>();
    boolean boolean11 = java.util.Collections.addAll(
        (java.util.Collection<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutableComProFamilyList10,
        mutableComProFamilyArray9);
    io.github.onograph.cluster.raft.control.ApplicationComProFamilyType applicationComProFamilyType12 = io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.exiaccproApplicationComProFamilyType();
    io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper comProFamilyWrapper13 = new io.github.onograph.cluster.raft.control.connect.ComProFamilyWrapper(
        (java.util.List<io.github.onograph.cluster.raft.control.MutableComProFamily>) mutableComProFamilyList10,
        (io.github.onograph.cluster.raft.control.ApplicationComProFamily) applicationComProFamilyType12);
    io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply.SetupGdbStoreSyncReplyByteToMessageDecoder setupGdbStoreSyncReplyByteToMessageDecoder14 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.SetupGdbStoreSyncReply.SetupGdbStoreSyncReplyByteToMessageDecoder();
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestSnapshotByteToMessageDecoder requestSnapshotByteToMessageDecoder15 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestSnapshotByteToMessageDecoder();
    io.netty.handler.codec.ByteToMessageDecoder.Cumulator cumulator16 = io.netty.handler.codec.ByteToMessageDecoder.MERGE_CUMULATOR;
    requestSnapshotByteToMessageDecoder15.setCumulator(cumulator16);
    setupGdbStoreSyncReplyByteToMessageDecoder14.setCumulator(cumulator16);
    boolean boolean19 = comProFamilyWrapper13.equals(
        (java.lang.Object) setupGdbStoreSyncReplyByteToMessageDecoder14);
    try {
      clientHandshakeSimpleChannelInboundHandler1.channelRead(channelHandlerContext4,
          (java.lang.Object) boolean19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    //org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    org.junit.Assert.assertTrue("'" + mutableProtocols5 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols5.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Snappy" + "'", str6, "Snappy");
    org.junit.Assert.assertTrue("'" + mutableProtocols7 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY + "'",
        mutableProtocols7.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_SNAPPY));
    org.junit.Assert.assertTrue("'" + mutableProtocols8 + "' != '"
            + io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC + "'",
        mutableProtocols8.equals(
            io.github.onograph.cluster.raft.control.MutableProtocols.COM_TYPE_LZ4_HC));
    org.junit.Assert.assertNotNull(mutableComProFamilyArray9);
    //org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertTrue("'" + applicationComProFamilyType12 + "' != '"
            + io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV + "'",
        applicationComProFamilyType12.equals(
            io.github.onograph.cluster.raft.control.ApplicationComProFamilyType.CT_CURRV));
    org.junit.Assert.assertNotNull(cumulator16);
    //org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test1995() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1995");
    }
    io.github.onograph.cluster.raft.module.cuprot.ChannelInboundHandlerFacadeBuilder.CIHAdapterChannelHandlerService cIHAdapterChannelHandlerService0 = io.github.onograph.cluster.raft.module.cuprot.ChannelInboundHandlerFacadeBuilder.bulrChannelInboundHandlerFacadeBuilderCIHAdapterChannelHandlerService();
    io.github.onograph.cluster.raft.module.cuprot.AdapterChannelHandlerService adapterChannelHandlerService1 = null;
    io.github.onograph.cluster.raft.module.cuprot.ChannelInboundHandlerFacadeBuilder.CIHSocketAddress cIHSocketAddress2 = cIHAdapterChannelHandlerService0.causvhnChannelInboundHandlerFacadeBuilderCIHSocketAddress(
        adapterChannelHandlerService1);
    org.neo4j.configuration.helpers.SocketAddress socketAddress3 = null;
    io.github.onograph.cluster.raft.module.cuprot.ChannelInboundHandlerFacadeBuilder.CMBJobScheduler cMBJobScheduler4 = cIHSocketAddress2.litarsChannelInboundHandlerFacadeBuilderCMBJobScheduler(
        socketAddress3);
    org.junit.Assert.assertNotNull(cIHAdapterChannelHandlerService0);
    org.junit.Assert.assertNotNull(cIHSocketAddress2);
    org.junit.Assert.assertNotNull(cMBJobScheduler4);
  }

  @Test
  public void test1996() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1996");
    }
    org.neo4j.kernel.database.DatabaseId databaseId0 = null;
    org.neo4j.storageengine.api.StoreId storeId1 = null;
    java.nio.file.Path path3 = null;
    io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreResource requestStoreResource4 = new io.github.onograph.cluster.raft.module.cuprot.current.scmeta.RequestStoreResource(
        databaseId0, storeId1, 0L, path3);
    org.neo4j.kernel.database.DatabaseId databaseId5 = requestStoreResource4.getDatabaseId();
    org.junit.Assert.assertNull(databaseId5);
  }

  @Test
  public void test1997() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1997");
    }
    io.github.onograph.cluster.raft.id.ConsensusNodeId consensusNodeId0 = null;
    io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderNotAccepted leaderNotAccepted3 = new io.github.onograph.cluster.raft.share.calg.ConsensusMessageServiceMeta.LeaderChangeService.LeaderNotAccepted(
        consensusNodeId0, (long) 13, 0L);
  }

  @Test
  public void test1998() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1998");
    }
    io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector connector0 = new io.github.onograph.cluster.raft.module.cuprot.scmeta.GdbStoreTransferWatcher.Connector();
    connector0.strvstfi();
    connector0.fihrih();
    connector0.fihrfForSt("1015: null");
  }

  @Test
  public void test1999() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1999");
    }
    io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog inMemoryConsensusTransactionLog0 = new io.github.onograph.cluster.raft.share.calg.cle.InMemoryConsensusTransactionLog();
    long long3 = inMemoryConsensusTransactionLog0.pass((long) 0, (long) (short) -1);
    boolean boolean5 = inMemoryConsensusTransactionLog0.equals((java.lang.Object) "protocols");
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntryRawCursor consensusLogEntryRawCursor7 = inMemoryConsensusTransactionLog0.geercuoConsensusLogEntryRawCursor(
        (long) (byte) 1);
    io.github.onograph.cluster.raft.share.calg.cle.ConsensusLogEntry consensusLogEntry8 = consensusLogEntryRawCursor7.get();
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
    //org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    org.junit.Assert.assertNotNull(consensusLogEntryRawCursor7);
    org.junit.Assert.assertNull(consensusLogEntry8);
  }

  @Test
  public void test2000() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test2000");
    }
    byte[] byteArray3 = new byte[]{(byte) 0, (byte) 10, (byte) -1};
    io.github.onograph.cluster.raft.share.meta.fsm.DefaultSDEmptyReq defaultSDEmptyReq4 = new io.github.onograph.cluster.raft.share.meta.fsm.DefaultSDEmptyReq(
        byteArray3);
    io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta nodeServerMemberLeaderMeta5 = io.github.onograph.cluster.raft.share.calg.NodeServerMemberLeaderMeta.INTL_NODE_SERVER_MEMBER_LEADER_META;
    io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType clusterDataType6 = io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType.CDT_CONS_NODE_MAP;
    boolean boolean7 = nodeServerMemberLeaderMeta5.equals((java.lang.Object) clusterDataType6);
    io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta syncedLeaderMeta8 = new io.github.onograph.cluster.raft.module.dprot.impl.directory.SyncedLeaderMeta(
        nodeServerMemberLeaderMeta5);
    boolean boolean9 = defaultSDEmptyReq4.equals((java.lang.Object) nodeServerMemberLeaderMeta5);
    io.netty.handler.stream.ChunkedInput<io.netty.buffer.ByteBuf> byteBufChunkedInput11 = defaultSDEmptyReq4.enorChunkedInput(
        false);
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 10, -1]");
    org.junit.Assert.assertNotNull(nodeServerMemberLeaderMeta5);
    org.junit.Assert.assertTrue("'" + clusterDataType6 + "' != '"
        + io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType.CDT_CONS_NODE_MAP
        + "'", clusterDataType6.equals(
        io.github.onograph.cluster.raft.module.dprot.impl.watch.ClusterDataType.CDT_CONS_NODE_MAP));
    //org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    //org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(byteBufChunkedInput11);
  }
}

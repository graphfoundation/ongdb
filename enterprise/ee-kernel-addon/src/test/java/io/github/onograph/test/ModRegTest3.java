package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest3 {

  public static boolean debug = false;

  @Test
  public void test1501() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1501");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(1L, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 10, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 0, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((-1L), namedDatabaseId14);
  }

  @Test
  public void test1502() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1502");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = securityContextEnterpriseImpl0.mode();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl0.authorize(
        idLookup6, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertTrue(
        "'" + accessMode5 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode5.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
  }

  @Test
  public void test1503() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1503");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 6362, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
  }

  @Test
  public void test1504() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1504");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager4.stop();
    authManager4.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
  }

  @Test
  public void test1505() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1505");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet1 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = defaultLoginContext0.authorize(
        idLookup4, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog6);
    java.util.Set<java.lang.String> strSet8 = defaultLoginContext0.roeSet();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet1);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(strSet8);
  }

  @Test
  public void test1506() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1506");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl15.description();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl15.authorize(
        idLookup19, "PageCacheProfileLoader", abstractSecurityLog21);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl22.withMode(
        adminAccessMode23);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = securityContextEnterpriseImpl22.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl22.withMode(
        adminAccessMode26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "user '' with FULL" + "'", str18,
        "user '' with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertTrue("'" + accessMode25 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode25.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
  }

  @Test
  public void test1507() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1507");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl10;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl10.authorize(
        idLookup12, "", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl10;
    java.util.Set<java.lang.String> strSet17 = securityContextEnterpriseImpl10.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(strSet17);
  }

  @Test
  public void test1508() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1508");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl10.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = securityContextEnterpriseImpl10.mode();
    java.lang.String str13 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl10;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl10.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl10.authorize(
        idLookup16, "continuous", abstractSecurityLog18);
    authManager8.log("verbose",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertTrue("'" + accessMode12 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode12.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AUTH_DISABLED with FULL" + "'", str13,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
  }

  @Test
  public void test1509() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1509");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl0.database();
    java.lang.String str6 = securityContextEnterpriseImpl0.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource7 = null;
    boolean boolean8 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext10 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo9);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl11.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl11.connectionInfo();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = securityContextEnterpriseImpl11.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo9, accessMode17, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject21 = securityContextEnterpriseImpl20.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl20.withMode(
        adminAccessMode22);
    java.lang.String str24 = securityContextEnterpriseImpl20.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo25 = securityContextEnterpriseImpl20.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext26 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo25);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo25);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext28 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo25);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext30 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode17, clientConnectionInfo25, ".cacheprof");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(defaultLoginContext10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertTrue("'" + accessMode17 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode17.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(authSubject21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertNotNull(clientConnectionInfo25);
    org.junit.Assert.assertNotNull(defaultLoginContext26);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(loginContext28);
    org.junit.Assert.assertNotNull(securityContext30);
  }

  @Test
  public void test1510() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1510");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl12 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl12.start();
    securityProviderAuthDisabledImpl12.stop();
    securityProviderAuthDisabledImpl12.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager16 = securityProviderAuthDisabledImpl12.inClusterAuthManager();
    securityProviderAuthDisabledImpl12.start();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl12.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager19 = securityProviderAuthDisabledImpl12.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager20 = securityProviderAuthDisabledImpl12.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager21 = securityProviderAuthDisabledImpl12.loopbackAuthManager();
    boolean boolean22 = cachePopulatorExtensionFactory0.equals((java.lang.Object) authManager21);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl23.authorize(
        idLookup24, "neo4j", abstractSecurityLog26);
    java.lang.String str28 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl27.withMode(
        accessMode29);
    java.lang.String str31 = securityContextEnterpriseImpl27.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject32 = securityContextEnterpriseImpl27.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl27.withMode(
        adminAccessMode33);
    boolean boolean36 = securityContextEnterpriseImpl34.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl34.withMode(
        adminAccessMode37);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo39 = securityContextEnterpriseImpl34.connectionInfo();
    java.lang.String str40 = securityContextEnterpriseImpl34.database();
    java.lang.String str41 = securityContextEnterpriseImpl34.database();
    boolean boolean42 = cachePopulatorExtensionFactory0.equals((java.lang.Object) str41);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl12);
    org.junit.Assert.assertNotNull(authManager16);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertNotNull(authManager20);
    org.junit.Assert.assertNotNull(authManager21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNull(str28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AUTH_DISABLED with FULL" + "'", str31,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(clientConnectionInfo39);
    org.junit.Assert.assertNull(str40);
    org.junit.Assert.assertNull(str41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
  }

  @Test
  public void test1511() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1511");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(authManager9);
  }

  @Test
  public void test1512() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1512");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler13 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler13);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode15 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode15.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1513() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1513");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor8 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor9 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor10 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor11 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup12 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor8, nodeCursor9, propertyCursor10, labelSchemaDescriptor11,
          tokenNameLookup12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
  }

  @Test
  public void test1514() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1514");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (short) 0, uniquenessConstraintDescriptor5, (long) ' ');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
  }

  @Test
  public void test1515() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1515");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode15);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = securityContextEnterpriseImpl16.connectionInfo();
    authManager7.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = securityContextEnterpriseImpl16.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext20 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo19);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
    org.junit.Assert.assertNotNull(loginContext20);
  }

  @Test
  public void test1516() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1516");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext0.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = defaultLoginContext0.authorize(
        idLookup3, "AUTH_DISABLED with FULL", abstractSecurityLog5);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
  }

  @Test
  public void test1517() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1517");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    java.lang.String str1 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config2 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning4 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold6 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config2, systemNanoClock3, logPruning4, logProvider5);
    java.lang.String str7 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str8 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str9 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config10 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning12 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold14 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config10, systemNanoClock11, logPruning12, logProvider13);
    java.lang.String str15 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str16 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "continuous" + "'", str1, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "continuous" + "'", str7, "continuous");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "continuous" + "'", str8, "continuous");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "continuous" + "'", str9, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "continuous" + "'", str15, "continuous");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "continuous" + "'", str16, "continuous");
  }

  @Test
  public void test1518() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1518");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext6 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker7 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle8 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext6, componentsChecker7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test1519() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1519");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    boolean boolean8 = securityContextEnterpriseImpl6.allowExecuteAdminProcedure(0);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    try {
      java.lang.String str10 = securityContextEnterpriseImpl6.description();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
  }

  @Test
  public void test1520() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1520");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl4.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl4.inClusterAuthManager();
    securityProviderAuthDisabledImpl4.stop();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl4.inClusterAuthManager();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager15);
  }

  @Test
  public void test1521() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1521");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.Object obj7 = null;
    boolean boolean8 = cachePopulatorExtensionFactory0.equals(obj7);
    java.lang.String str9 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl10 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int11 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int12 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str13 = constraintSemanticsEnterpriseImpl10.getName();
    int int14 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int15 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str16 = constraintSemanticsEnterpriseImpl10.getName();
    boolean boolean17 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) constraintSemanticsEnterpriseImpl10);
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor19 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor20 = constraintSemanticsEnterpriseImpl10.createExistenceConstraint(
          (long) (short) 1, constraintDescriptor19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterpriseConstraints" + "'", str13,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "enterpriseConstraints" + "'", str16,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
  }

  @Test
  public void test1522() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1522");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.Object obj7 = null;
    boolean boolean8 = cachePopulatorExtensionFactory0.equals(obj7);
    java.lang.String str9 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl10 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int11 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int12 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str13 = constraintSemanticsEnterpriseImpl10.getName();
    int int14 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int15 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str16 = constraintSemanticsEnterpriseImpl10.getName();
    boolean boolean17 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) constraintSemanticsEnterpriseImpl10);
    java.lang.String str18 = constraintSemanticsEnterpriseImpl10.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor20 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor21 = constraintSemanticsEnterpriseImpl10.createExistenceConstraint(
          (long) 100, constraintDescriptor20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterpriseConstraints" + "'", str13,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "enterpriseConstraints" + "'", str16,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "enterpriseConstraints" + "'", str18,
        "enterpriseConstraints");
  }

  @Test
  public void test1523() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1523");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    java.time.Clock clock13 = null;
    org.neo4j.lock.LockTracer lockTracer14 = enterpriseTracerFactory0.createLockTracer(clock13);
    java.time.Clock clock15 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer16 = enterpriseTracerFactory0.createDatabaseTracer(
        clock15);
    java.lang.String str17 = enterpriseTracerFactory0.getName();
    java.time.Clock clock18 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer19 = enterpriseTracerFactory0.createDatabaseTracer(
        clock18);
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
    org.junit.Assert.assertNotNull(lockTracer14);
    org.junit.Assert.assertNotNull(databaseTracer16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "verbose" + "'", str17, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer19);
  }

  @Test
  public void test1524() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1524");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) -1, namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 100, namedDatabaseId13);
  }

  @Test
  public void test1525() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1525");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) 0, namedDatabaseId11);
  }

  @Test
  public void test1526() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1526");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler15 = null;
    securityContextEnterpriseImpl13.assertCredentialsNotExpired(securityAuthorizationHandler15);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource17 = null;
    boolean boolean18 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource17);
    boolean boolean20 = securityContextEnterpriseImpl13.allowExecuteAdminProcedure((int) (short) 1);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl21.authorize(
        idLookup22, "neo4j", abstractSecurityLog24);
    java.lang.String str26 = securityContextEnterpriseImpl25.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl25.withMode(
        accessMode27);
    java.lang.String str29 = securityContextEnterpriseImpl25.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource30 = null;
    boolean boolean31 = securityContextEnterpriseImpl25.allowsAdminAction(adminActionOnResource30);
    java.lang.String str32 = securityContextEnterpriseImpl25.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl25;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl25;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo35 = securityContextEnterpriseImpl25.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo35);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup37 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog39 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = defaultLoginContext36.authorize(
        idLookup37, "neo4j", abstractSecurityLog39);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup41 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = defaultLoginContext36.authorize(
        idLookup41, "localhost", abstractSecurityLog43);
    java.util.Set<java.lang.String> strSet45 = defaultLoginContext36.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup46 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = defaultLoginContext36.authorize(
        idLookup46, ".cacheprof", abstractSecurityLog48);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup50 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl49.authorize(
        idLookup50, "neo4j", abstractSecurityLog52);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl54 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup55 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog57 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = securityContextEnterpriseImpl54.authorize(
        idLookup55, "neo4j", abstractSecurityLog57);
    java.lang.String str59 = securityContextEnterpriseImpl58.database();
    java.lang.String str60 = securityContextEnterpriseImpl58.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode61 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = securityContextEnterpriseImpl58.withMode(
        adminAccessMode61);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo63 = securityContextEnterpriseImpl58.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext64 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode65 = securityContext64.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo63, accessMode65,
        "Property existence constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl68 = securityContextEnterpriseImpl49.withMode(
        accessMode65);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = securityContextEnterpriseImpl13.withMode(
        accessMode65);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNull(str26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AUTH_DISABLED with FULL" + "'", str29,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AUTH_DISABLED with FULL" + "'", str32,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo35);
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertNotNull(strSet45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNull(str59);
    org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AUTH_DISABLED with FULL" + "'", str60,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNotNull(clientConnectionInfo63);
    org.junit.Assert.assertNotNull(securityContext64);
    org.junit.Assert.assertTrue("'" + accessMode65 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode65.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl68);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
  }

  @Test
  public void test1527() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1527");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.storageengine.api.StorageReader storageReader7 = null;
    org.neo4j.internal.kernel.api.Read read8 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory9 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState10 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor11 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext12 = null;
    org.neo4j.memory.MemoryTracker memoryTracker13 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor14 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader7, read8, cursorFactory9, readableTransactionState10, txStateVisitor11,
          cursorContext12, memoryTracker13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1528() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1528");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    long long12 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy8.checkPointHappened(0L);
    long long15 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    long long18 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
  }

  @Test
  public void test1529() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1529");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) ' ', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(10L, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((-1L), namedDatabaseId24);
  }

  @Test
  public void test1530() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1530");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContextEnterpriseImpl17.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject21 = defaultLoginContext20.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup23 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl22.authorize(
        idLookup23, "neo4j", abstractSecurityLog25);
    java.lang.String str27 = securityContextEnterpriseImpl26.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl26.withMode(
        accessMode28);
    java.lang.String str30 = securityContextEnterpriseImpl26.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource31 = null;
    boolean boolean32 = securityContextEnterpriseImpl26.allowsAdminAction(adminActionOnResource31);
    java.lang.String str33 = securityContextEnterpriseImpl26.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl26;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl26;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo36 = securityContextEnterpriseImpl26.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup38 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl37.authorize(
        idLookup38, "neo4j", abstractSecurityLog40);
    java.lang.String str42 = securityContextEnterpriseImpl37.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource43 = null;
    boolean boolean44 = securityContextEnterpriseImpl37.allowsAdminAction(adminActionOnResource43);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup45 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog47 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = securityContextEnterpriseImpl37.authorize(
        idLookup45, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog47);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode49 = securityContextEnterpriseImpl48.mode();
    java.lang.String[] strArray62 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet63 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean64 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet63, strArray62);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode19, authSubject21, clientConnectionInfo36, accessMode49,
        (java.util.Set<java.lang.String>) strSet63, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = securityContextEnterpriseImpl17.withMode(
        accessMode49);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode68 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = securityContextEnterpriseImpl17.withMode(
        adminAccessMode68);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(authSubject21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNull(str27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AUTH_DISABLED with FULL" + "'", str30,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AUTH_DISABLED with FULL" + "'", str33,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNull(str42);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertTrue("'" + accessMode49 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode49.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray62);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
  }

  @Test
  public void test1531() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1531");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(0L, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 'a', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId15);
  }

  @Test
  public void test1532() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1532");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet1 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet4 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet1);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(strSet4);
  }

  @Test
  public void test1533() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1533");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10L, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 100, namedDatabaseId22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 1, namedDatabaseId25);
  }

  @Test
  public void test1534() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1534");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor7 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor8 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor9 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor10 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup11 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor7,
          nodeCursor8, propertyCursor9, labelSchemaDescriptor10, tokenNameLookup11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test1535() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1535");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    defaultAuthManager3.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl10.withMode(
        accessMode15);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl20;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl20.authorize(
        idLookup22, "", abstractSecurityLog24);
    defaultAuthManager3.log("localhost",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl20);
    defaultAuthManager3.claauch();
    defaultAuthManager3.claauch();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
  }

  @Test
  public void test1536() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1536");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
  }

  @Test
  public void test1537() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1537");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler8 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler8);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl10 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl10.start();
    securityProviderAuthDisabledImpl10.stop();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl10.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl10.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl10.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl17.authorize(
        idLookup18, "neo4j", abstractSecurityLog20);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl17.withMode(
        accessMode22);
    java.lang.String str24 = securityContextEnterpriseImpl17.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject25 = securityContextEnterpriseImpl17.subject();
    authManager15.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl17);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject27 = securityContextEnterpriseImpl17.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = securityContextEnterpriseImpl17.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode29 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext30 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo31 = defaultLoginContext30.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject32 = defaultLoginContext30.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo33 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext34 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode35 = securityContext34.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet37 = defaultLoginContext36.roeSet();
    java.util.Set<java.lang.String> strSet39 = defaultLoginContext36.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode29, authSubject32, clientConnectionInfo33, accessMode35, strSet39,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup43 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog45 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = securityContextEnterpriseImpl42.authorize(
        idLookup43, "neo4j", abstractSecurityLog45);
    java.lang.String str47 = securityContextEnterpriseImpl46.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl46.withMode(
        accessMode48);
    java.lang.String str50 = securityContextEnterpriseImpl46.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject51 = securityContextEnterpriseImpl46.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl46.withMode(
        adminAccessMode52);
    boolean boolean55 = securityContextEnterpriseImpl53.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode56 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl57 = securityContextEnterpriseImpl53.withMode(
        adminAccessMode56);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo58 = securityContextEnterpriseImpl53.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext60 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode35, clientConnectionInfo58, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo28, accessMode35, "pagecachewarmer");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = securityContextEnterpriseImpl4.withMode(
        accessMode35);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo64 = securityContextEnterpriseImpl4.connectionInfo();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl10);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertNotNull(authSubject25);
    org.junit.Assert.assertNotNull(authSubject27);
    org.junit.Assert.assertNotNull(clientConnectionInfo28);
    org.junit.Assert.assertNotNull(defaultLoginContext30);
    org.junit.Assert.assertNotNull(clientConnectionInfo31);
    org.junit.Assert.assertNotNull(authSubject32);
    org.junit.Assert.assertNotNull(securityContext34);
    org.junit.Assert.assertTrue("'" + accessMode35 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode35.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(strSet37);
    org.junit.Assert.assertNotNull(strSet39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNull(str47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AUTH_DISABLED with FULL" + "'", str50,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject51);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl57);
    org.junit.Assert.assertNotNull(clientConnectionInfo58);
    org.junit.Assert.assertNotNull(securityContext60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl63);
    org.junit.Assert.assertNotNull(clientConnectionInfo64);
  }

  @Test
  public void test1538() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1538");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 100);
    java.util.function.Consumer<java.lang.String> strConsumer15 = null;
    try {
      boolean boolean16 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) '4',
          (long) 6362, strConsumer15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test1539() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1539");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler29 = null;
    securityContextEnterpriseImpl19.assertCredentialsNotExpired(securityAuthorizationHandler29);
    java.lang.Class<?> wildcardClass31 = securityContextEnterpriseImpl19.getClass();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(wildcardClass31);
  }

  @Test
  public void test1540() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1540");
    }
    io.github.onograph.kernel.srv.pagecache.DefaultIOControllerService defaultIOControllerService0 = new io.github.onograph.kernel.srv.pagecache.DefaultIOControllerService();
    int int1 = defaultIOControllerService0.getPriority();
    int int2 = defaultIOControllerService0.getPriority();
    int int3 = defaultIOControllerService0.getPriority();
    int int4 = defaultIOControllerService0.getPriority();
    int int5 = defaultIOControllerService0.getPriority();
    int int6 = defaultIOControllerService0.getPriority();
    int int7 = defaultIOControllerService0.getPriority();
    int int8 = defaultIOControllerService0.getPriority();
    org.neo4j.configuration.Config config9 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock10 = null;
    try {
      org.neo4j.io.pagecache.IOController iOController11 = defaultIOControllerService0.createIOController(
          config9, systemNanoClock10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 10 + "'", int1 == 10);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
  }

  @Test
  public void test1541() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1541");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) (-1), constraintDescriptor5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
  }

  @Test
  public void test1542() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1542");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler15 = null;
    securityContextEnterpriseImpl13.assertCredentialsNotExpired(securityAuthorizationHandler15);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource17 = null;
    boolean boolean18 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource17);
    boolean boolean20 = securityContextEnterpriseImpl13.allowExecuteAdminProcedure((int) (short) 1);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = securityContextEnterpriseImpl13.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext22 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo21);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertNotNull(defaultLoginContext22);
  }

  @Test
  public void test1543() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1543");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor6,
          nodeCursor7, propertyCursor8, labelSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1544() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1544");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) (byte) 1, nodeKeyConstraintDescriptor6, (long) 100);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1545() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1545");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor7 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor8 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor9 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor10 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup11 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor7, nodeCursor8, propertyCursor9, labelSchemaDescriptor10,
          tokenNameLookup11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test1546() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1546");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    java.time.Clock clock10 = null;
    org.neo4j.lock.LockTracer lockTracer11 = enterpriseTracerFactory0.createLockTracer(clock10);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer9);
    org.junit.Assert.assertNotNull(lockTracer11);
  }

  @Test
  public void test1547() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1547");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test1548() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1548");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) 1, nodeKeyConstraintDescriptor7, 0L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1549() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1549");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl4.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject16 = securityContextEnterpriseImpl4.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(authSubject16);
  }

  @Test
  public void test1550() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1550");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl3 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl3.start();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl3.loopbackAuthManager();
    securityProviderAuthDisabledImpl3.stop();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl3.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager7.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl12.authorize(
        idLookup13, "neo4j", abstractSecurityLog15);
    java.lang.String str17 = securityContextEnterpriseImpl16.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl16.withMode(
        accessMode18);
    java.lang.String str20 = securityContextEnterpriseImpl16.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource21 = null;
    boolean boolean22 = securityContextEnterpriseImpl16.allowsAdminAction(adminActionOnResource21);
    authManager7.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl16);
    boolean boolean24 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test1551() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1551");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1552() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1552");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler16 = null;
    securityContextEnterpriseImpl11.assertCredentialsNotExpired(securityAuthorizationHandler16);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl11.authorize(
        idLookup18, "AUTH_DISABLED with FULL", abstractSecurityLog20);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
  }

  @Test
  public void test1553() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1553");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          1L, nodeKeyConstraintDescriptor5, (long) 2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1554() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1554");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.time.Clock clock6 = null;
    org.neo4j.lock.LockTracer lockTracer7 = enterpriseTracerFactory0.createLockTracer(clock6);
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    java.time.Clock clock10 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer11 = enterpriseTracerFactory0.createDatabaseTracer(
        clock10);
    java.time.Clock clock12 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer13 = enterpriseTracerFactory0.createDatabaseTracer(
        clock12);
    java.lang.String str14 = enterpriseTracerFactory0.getName();
    java.time.Clock clock15 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer16 = enterpriseTracerFactory0.createDatabaseTracer(
        clock15);
    java.time.Clock clock17 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer18 = enterpriseTracerFactory0.createDatabaseTracer(
        clock17);
    java.time.Clock clock19 = null;
    org.neo4j.lock.LockTracer lockTracer20 = enterpriseTracerFactory0.createLockTracer(clock19);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertNotNull(lockTracer7);
    org.junit.Assert.assertNotNull(databaseTracer9);
    org.junit.Assert.assertNotNull(databaseTracer11);
    org.junit.Assert.assertNotNull(databaseTracer13);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "verbose" + "'", str14, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer16);
    org.junit.Assert.assertNotNull(databaseTracer18);
    org.junit.Assert.assertNotNull(lockTracer20);
  }

  @Test
  public void test1555() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1555");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode12);
    java.util.Set<java.lang.String> strSet14 = securityContextEnterpriseImpl13.roles();
    java.lang.String str15 = securityContextEnterpriseImpl13.description();
    java.util.Set<java.lang.String> strSet16 = securityContextEnterpriseImpl13.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(strSet14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "user '' with FULL" + "'", str15,
        "user '' with FULL");
    org.junit.Assert.assertNotNull(strSet16);
  }

  @Test
  public void test1556() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1556");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(1L, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 0, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) -1, namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10000L, namedDatabaseId27);
  }

  @Test
  public void test1557() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1557");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext5.connectionInfo();
    java.util.Set<java.lang.String> strSet7 = defaultLoginContext5.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo3, accessMode4, strSet7, "volumetric");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode10);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject13 = securityContextEnterpriseImpl12.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl12.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl17 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl17.start();
    securityProviderAuthDisabledImpl17.stop();
    org.neo4j.kernel.api.security.AuthManager authManager20 = securityProviderAuthDisabledImpl17.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager21 = securityProviderAuthDisabledImpl17.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager22 = securityProviderAuthDisabledImpl17.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup25 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl24.authorize(
        idLookup25, "neo4j", abstractSecurityLog27);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl24.withMode(
        accessMode29);
    java.lang.String str31 = securityContextEnterpriseImpl24.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject32 = securityContextEnterpriseImpl24.subject();
    authManager22.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl24);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject34 = securityContextEnterpriseImpl24.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo36 = defaultLoginContext35.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo36);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext38 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo36);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext40 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo41 = defaultLoginContext40.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext42 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo41);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext44 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode39, clientConnectionInfo41,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext45 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo41);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext46 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode47 = securityContext46.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo41, accessMode47, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode50 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext51 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject52 = defaultLoginContext51.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo53 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext55 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo56 = defaultLoginContext55.connectionInfo();
    java.util.Set<java.lang.String> strSet57 = defaultLoginContext55.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode50, authSubject52, clientConnectionInfo53, accessMode54, strSet57,
        "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl61 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode16, authSubject34, clientConnectionInfo36, accessMode47, strSet57,
        "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext63 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode14, clientConnectionInfo36, "localhost");
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(authSubject13);
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl17);
    org.junit.Assert.assertNotNull(authManager20);
    org.junit.Assert.assertNotNull(authManager21);
    org.junit.Assert.assertNotNull(authManager22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNull(str31);
    org.junit.Assert.assertNotNull(authSubject32);
    org.junit.Assert.assertNotNull(authSubject34);
    org.junit.Assert.assertNotNull(defaultLoginContext35);
    org.junit.Assert.assertNotNull(clientConnectionInfo36);
    org.junit.Assert.assertNotNull(defaultLoginContext37);
    org.junit.Assert.assertNotNull(loginContext38);
    org.junit.Assert.assertNotNull(defaultLoginContext40);
    org.junit.Assert.assertNotNull(clientConnectionInfo41);
    org.junit.Assert.assertNotNull(loginContext42);
    org.junit.Assert.assertNotNull(securityContext44);
    org.junit.Assert.assertNotNull(defaultLoginContext45);
    org.junit.Assert.assertNotNull(securityContext46);
    org.junit.Assert.assertTrue("'" + accessMode47 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode47.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(defaultLoginContext51);
    org.junit.Assert.assertNotNull(authSubject52);
    org.junit.Assert.assertNotNull(defaultLoginContext55);
    org.junit.Assert.assertNotNull(clientConnectionInfo56);
    org.junit.Assert.assertNotNull(strSet57);
    org.junit.Assert.assertNotNull(securityContext63);
  }

  @Test
  public void test1558() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1558");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) 100, uniquenessConstraintDescriptor7, (long) (short) 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1559() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1559");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler12 = null;
    securityContextEnterpriseImpl11.assertCredentialsNotExpired(securityAuthorizationHandler12);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup14 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl11.authorize(
        idLookup14, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog16);
    java.util.Set<java.lang.String> strSet18 = securityContextEnterpriseImpl11.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = securityContextEnterpriseImpl11.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode20 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = defaultLoginContext21.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl23.authorize(
        idLookup24, "neo4j", abstractSecurityLog26);
    java.lang.String str28 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl27.withMode(
        accessMode29);
    java.lang.String str31 = securityContextEnterpriseImpl27.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource32 = null;
    boolean boolean33 = securityContextEnterpriseImpl27.allowsAdminAction(adminActionOnResource32);
    java.lang.String str34 = securityContextEnterpriseImpl27.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl27;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl27;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo37 = securityContextEnterpriseImpl27.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup39 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog41 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = securityContextEnterpriseImpl38.authorize(
        idLookup39, "neo4j", abstractSecurityLog41);
    java.lang.String str43 = securityContextEnterpriseImpl38.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource44 = null;
    boolean boolean45 = securityContextEnterpriseImpl38.allowsAdminAction(adminActionOnResource44);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup46 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl38.authorize(
        idLookup46, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog48);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode50 = securityContextEnterpriseImpl49.mode();
    java.lang.String[] strArray63 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet64 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean65 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet64, strArray63);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode20, authSubject22, clientConnectionInfo37, accessMode50,
        (java.util.Set<java.lang.String>) strSet64, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo19, accessMode50, "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo70 = securityContextEnterpriseImpl69.connectionInfo();
    authManager9.log("user '' with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl69);
    authManager9.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(strSet18);
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNull(str28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AUTH_DISABLED with FULL" + "'", str31,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AUTH_DISABLED with FULL" + "'", str34,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNull(str43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertTrue("'" + accessMode50 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode50.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray63);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertNotNull(clientConnectionInfo70);
  }

  @Test
  public void test1560() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1560");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor6,
          nodeCursor7, propertyCursor8, labelSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1561() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1561");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock15 = null;
    org.neo4j.logging.Log log16 = null;
    org.neo4j.configuration.Config config17 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors13, jobScheduler14, systemNanoClock15, log16, config17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(lockTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
  }

  @Test
  public void test1562() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1562");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode12);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl4.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo24 = securityContextEnterpriseImpl19.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext25 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo24);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext26 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo24);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext28 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode14, clientConnectionInfo24,
        "Property existence constraint requires Neo4j Enterprise Edition");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo24);
    org.junit.Assert.assertNotNull(defaultLoginContext25);
    org.junit.Assert.assertNotNull(defaultLoginContext26);
    org.junit.Assert.assertNotNull(securityContext28);
  }

  @Test
  public void test1563() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1563");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 'a', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId18);
  }

  @Test
  public void test1564() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1564");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    java.time.Clock clock10 = null;
    org.neo4j.lock.LockTracer lockTracer11 = enterpriseTracerFactory0.createLockTracer(clock10);
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer9);
    org.junit.Assert.assertNotNull(lockTracer11);
  }

  @Test
  public void test1565() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1565");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl8.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl10.withMode(
        accessMode15);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl10.authorize(
        idLookup17, "", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup21 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl20.authorize(
        idLookup21, "AUTH_DISABLED with FULL", abstractSecurityLog23);
    java.lang.String str25 = securityContextEnterpriseImpl20.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl20.withMode(
        adminAccessMode26);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = securityContextEnterpriseImpl27.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode29 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext30 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject31 = defaultLoginContext30.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup33 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl32.authorize(
        idLookup33, "neo4j", abstractSecurityLog35);
    java.lang.String str37 = securityContextEnterpriseImpl36.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl36.withMode(
        accessMode38);
    java.lang.String str40 = securityContextEnterpriseImpl36.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource41 = null;
    boolean boolean42 = securityContextEnterpriseImpl36.allowsAdminAction(adminActionOnResource41);
    java.lang.String str43 = securityContextEnterpriseImpl36.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl36;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl36;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo46 = securityContextEnterpriseImpl36.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup48 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog50 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl51 = securityContextEnterpriseImpl47.authorize(
        idLookup48, "neo4j", abstractSecurityLog50);
    java.lang.String str52 = securityContextEnterpriseImpl47.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource53 = null;
    boolean boolean54 = securityContextEnterpriseImpl47.allowsAdminAction(adminActionOnResource53);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup55 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog57 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = securityContextEnterpriseImpl47.authorize(
        idLookup55, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog57);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode59 = securityContextEnterpriseImpl58.mode();
    java.lang.String[] strArray72 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet73 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean74 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet73, strArray72);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl76 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode29, authSubject31, clientConnectionInfo46, accessMode59,
        (java.util.Set<java.lang.String>) strSet73, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = securityContextEnterpriseImpl27.withMode(
        accessMode59);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl78 = securityContextEnterpriseImpl8.withMode(
        accessMode59);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AUTH_DISABLED with FULL" + "'", str25,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertTrue("'" + accessMode28 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode28.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext30);
    org.junit.Assert.assertNotNull(authSubject31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNull(str37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AUTH_DISABLED with FULL" + "'", str40,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AUTH_DISABLED with FULL" + "'", str43,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo46);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl51);
    org.junit.Assert.assertNull(str52);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertTrue("'" + accessMode59 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode59.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray72);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl78);
  }

  @Test
  public void test1566() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1566");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    java.time.Clock clock10 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer11 = enterpriseTracerFactory0.createDatabaseTracer(
        clock10);
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer11);
  }

  @Test
  public void test1567() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1567");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    java.lang.String str12 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.logging.Log log13 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl14 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl14.prlcpdForNa((long) (short) 1, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl14.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl14.wapclForNa((long) (byte) 100, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl14.wamsrdForNa(namedDatabaseId23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = null;
    pageCacheLoadingWatcherDefaultImpl14.wamsrdForNa(namedDatabaseId25);
    boolean boolean27 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId29 = null;
    pageCacheLoadingWatcherDefaultImpl14.wapclForNa((long) 'a', namedDatabaseId29);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = null;
    pageCacheLoadingWatcherDefaultImpl14.wamsrdForNa(namedDatabaseId31);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pagecachewarmer" + "'", str12,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
  }

  @Test
  public void test1568() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1568");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 10, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId24);
  }

  @Test
  public void test1569() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1569");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          0L, uniquenessConstraintDescriptor6, (long) (short) 100);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1570() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1570");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
  }

  @Test
  public void test1571() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1571");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 0, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId9);
    java.lang.Class<?> wildcardClass11 = basePageCacheLoadingWatcher0.getClass();
    org.junit.Assert.assertNotNull(wildcardClass11);
  }

  @Test
  public void test1572() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1572");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str5 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str6 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    java.lang.String str13 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str14 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str15 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config16 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock17 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning18 = null;
    org.neo4j.logging.LogProvider logProvider19 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold20 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config16, systemNanoClock17, logPruning18, logProvider19);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "volumetric" + "'", str5, "volumetric");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "volumetric" + "'", str6, "volumetric");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "volumetric" + "'", str7, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "volumetric" + "'", str13, "volumetric");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "volumetric" + "'", str14, "volumetric");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "volumetric" + "'", str15, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold20);
  }

  @Test
  public void test1573() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1573");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize(1L);
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) ' ');
    long long14 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 100);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
  }

  @Test
  public void test1574() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1574");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str15 = securityContextEnterpriseImpl13.description();
    boolean boolean17 = securityContextEnterpriseImpl13.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext25 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject26 = defaultLoginContext25.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo27 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo30 = defaultLoginContext29.connectionInfo();
    java.util.Set<java.lang.String> strSet31 = defaultLoginContext29.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode24, authSubject26, clientConnectionInfo27, accessMode28, strSet31,
        "volumetric");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl33.withMode(
        adminAccessMode34);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject37 = securityContextEnterpriseImpl36.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode38 = securityContextEnterpriseImpl36.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl33.withMode(
        accessMode38);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl23.withMode(
        accessMode38);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler41 = null;
    securityContextEnterpriseImpl40.assertCredentialsNotExpired(securityAuthorizationHandler41);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(defaultLoginContext25);
    org.junit.Assert.assertNotNull(authSubject26);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(clientConnectionInfo30);
    org.junit.Assert.assertNotNull(strSet31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNotNull(authSubject37);
    org.junit.Assert.assertTrue("'" + accessMode38 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode38.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
  }

  @Test
  public void test1575() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1575");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource15 = null;
    boolean boolean16 = securityContextEnterpriseImpl14.allowsAdminAction(adminActionOnResource15);
    java.util.Set<java.lang.String> strSet17 = securityContextEnterpriseImpl14.roles();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl14.withMode(
        adminAccessMode18);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo20 = securityContextEnterpriseImpl19.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl21 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl21.start();
    securityProviderAuthDisabledImpl21.stop();
    org.neo4j.kernel.api.security.AuthManager authManager24 = securityProviderAuthDisabledImpl21.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager25 = securityProviderAuthDisabledImpl21.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager25.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl27);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup31 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl30.authorize(
        idLookup31, "neo4j", abstractSecurityLog33);
    authManager25.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl34);
    java.lang.String str36 = securityContextEnterpriseImpl34.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = securityContextEnterpriseImpl34.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo20, accessMode37, "verbose");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(strSet17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(clientConnectionInfo20);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl21);
    org.junit.Assert.assertNotNull(authManager24);
    org.junit.Assert.assertNotNull(authManager25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AUTH_DISABLED with FULL" + "'", str36,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode37 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode37.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
  }

  @Test
  public void test1576() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1576");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler8 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler8);
    boolean boolean11 = securityContextEnterpriseImpl4.allowExecuteAdminProcedure((int) '4');
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl4.subject();
    boolean boolean14 = securityContextEnterpriseImpl4.allowExecuteAdminProcedure(1);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl4.authorize(
        idLookup15, "user '' with FULL", abstractSecurityLog17);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler19 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
  }

  @Test
  public void test1577() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1577");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 'a', namedDatabaseId23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 10, namedDatabaseId28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 100, namedDatabaseId31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId34 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) ' ', namedDatabaseId34);
  }

  @Test
  public void test1578() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1578");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 'a', namedDatabaseId14);
  }

  @Test
  public void test1579() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1579");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode11);
    java.util.Set<java.lang.String> strSet13 = securityContextEnterpriseImpl12.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl12.connectionInfo();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(strSet13);
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
  }

  @Test
  public void test1580() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1580");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject24 = securityContextEnterpriseImpl23.subject();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler25 = null;
    securityContextEnterpriseImpl23.assertCredentialsNotExpired(securityAuthorizationHandler25);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode27 = securityContextEnterpriseImpl23.mode();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(authSubject24);
    org.junit.Assert.assertTrue("'" + accessMode27 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode27.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1581() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1581");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.init();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject7 = securityContextEnterpriseImpl6.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = securityContextEnterpriseImpl6.mode();
    defaultAuthManager0.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(authSubject7);
    org.junit.Assert.assertTrue(
        "'" + accessMode8 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode8.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1582() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1582");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext2 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager0.log("", securityContext2);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl9.withMode(
        accessMode11);
    java.lang.String str13 = securityContextEnterpriseImpl9.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource14 = null;
    boolean boolean15 = securityContextEnterpriseImpl9.allowsAdminAction(adminActionOnResource14);
    java.lang.String str16 = securityContextEnterpriseImpl9.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl9;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl9;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = securityContextEnterpriseImpl9.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo19);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup21 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = defaultLoginContext20.authorize(
        idLookup21, "neo4j", abstractSecurityLog23);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup25 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = defaultLoginContext20.authorize(
        idLookup25, "localhost", abstractSecurityLog27);
    java.util.Set<java.lang.String> strSet29 = defaultLoginContext20.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup30 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = defaultLoginContext20.authorize(
        idLookup30, ".cacheprof", abstractSecurityLog32);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup34 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog36 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl33.authorize(
        idLookup34, "neo4j", abstractSecurityLog36);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup39 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog41 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = securityContextEnterpriseImpl38.authorize(
        idLookup39, "neo4j", abstractSecurityLog41);
    java.lang.String str43 = securityContextEnterpriseImpl42.database();
    java.lang.String str44 = securityContextEnterpriseImpl42.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode45 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = securityContextEnterpriseImpl42.withMode(
        adminAccessMode45);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo47 = securityContextEnterpriseImpl42.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext48 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode49 = securityContext48.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl51 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo47, accessMode49,
        "Property existence constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl33.withMode(
        accessMode49);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContext2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AUTH_DISABLED with FULL" + "'", str13,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AUTH_DISABLED with FULL" + "'", str16,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(strSet29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNull(str43);
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AUTH_DISABLED with FULL" + "'", str44,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNotNull(clientConnectionInfo47);
    org.junit.Assert.assertNotNull(securityContext48);
    org.junit.Assert.assertTrue("'" + accessMode49 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode49.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl51);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
  }

  @Test
  public void test1583() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1583");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    java.lang.String str5 = securityContextEnterpriseImpl0.description();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler6 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler6);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode8 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl9 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl9.start();
    securityProviderAuthDisabledImpl9.stop();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl9.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl9.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager13.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl15);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl18.authorize(
        idLookup19, "neo4j", abstractSecurityLog21);
    authManager13.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    java.lang.String str24 = securityContextEnterpriseImpl22.description();
    boolean boolean26 = securityContextEnterpriseImpl22.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl22.withMode(
        adminAccessMode27);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject29 = securityContextEnterpriseImpl22.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup31 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl30.authorize(
        idLookup31, "neo4j", abstractSecurityLog33);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl30.withMode(
        accessMode35);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup37 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog39 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl30.authorize(
        idLookup37, "", abstractSecurityLog39);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup41 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl40.authorize(
        idLookup41, "AUTH_DISABLED with FULL", abstractSecurityLog43);
    java.lang.String str45 = securityContextEnterpriseImpl40.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl40.withMode(
        adminAccessMode46);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl40.withMode(
        adminAccessMode48);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo50 = securityContextEnterpriseImpl49.connectionInfo();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode51 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject53 = securityContextEnterpriseImpl52.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode54 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = securityContextEnterpriseImpl52.withMode(
        adminAccessMode54);
    java.lang.String str56 = securityContextEnterpriseImpl52.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo57 = securityContextEnterpriseImpl52.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext58 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo57);
    java.util.Set<java.lang.String> strSet60 = defaultLoginContext58.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode8, authSubject29, clientConnectionInfo50, accessMode51, strSet60,
        "PageCacheProfileLoader");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup64 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog66 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = securityContextEnterpriseImpl63.authorize(
        idLookup64, "neo4j", abstractSecurityLog66);
    java.lang.String str68 = securityContextEnterpriseImpl67.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode69 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl70 = securityContextEnterpriseImpl67.withMode(
        accessMode69);
    java.lang.String str71 = securityContextEnterpriseImpl67.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource72 = null;
    boolean boolean73 = securityContextEnterpriseImpl67.allowsAdminAction(adminActionOnResource72);
    java.lang.String str74 = securityContextEnterpriseImpl67.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl67;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl67;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo77 = securityContextEnterpriseImpl67.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext78 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode79 = securityContext78.mode();
    java.lang.String str80 = securityContext78.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode81 = securityContext78.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl83 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo77, accessMode81,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext84 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo85 = defaultLoginContext84.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext87 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode81, clientConnectionInfo85, ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl89 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo50, accessMode81, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl90 = securityContextEnterpriseImpl0.withMode(
        accessMode81);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AUTH_DISABLED with FULL" + "'", str5,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl9);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AUTH_DISABLED with FULL" + "'", str24,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(authSubject29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AUTH_DISABLED with FULL" + "'", str45,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(clientConnectionInfo50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNotNull(authSubject53);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertNull(str56);
    org.junit.Assert.assertNotNull(clientConnectionInfo57);
    org.junit.Assert.assertNotNull(defaultLoginContext58);
    org.junit.Assert.assertNotNull(strSet60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl63);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl67);
    org.junit.Assert.assertNull(str68);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl70);
    org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AUTH_DISABLED with FULL" + "'", str71,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    org.junit.Assert.assertEquals("'" + str74 + "' != '" + "AUTH_DISABLED with FULL" + "'", str74,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo77);
    org.junit.Assert.assertNotNull(securityContext78);
    org.junit.Assert.assertTrue("'" + accessMode79 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode79.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str80);
    org.junit.Assert.assertTrue("'" + accessMode81 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode81.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl83);
    org.junit.Assert.assertNotNull(defaultLoginContext84);
    org.junit.Assert.assertNotNull(clientConnectionInfo85);
    org.junit.Assert.assertNotNull(securityContext87);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl89);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl90);
  }

  @Test
  public void test1584() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1584");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str8 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl9 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl9.start();
    securityProviderAuthDisabledImpl9.stop();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl9.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl9.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl9.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl16.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl16.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject24 = securityContextEnterpriseImpl16.subject();
    authManager14.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl16);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup27 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl26.authorize(
        idLookup27, "neo4j", abstractSecurityLog29);
    java.lang.String str31 = securityContextEnterpriseImpl30.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl30.withMode(
        accessMode32);
    java.lang.String str34 = securityContextEnterpriseImpl30.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource35 = null;
    boolean boolean36 = securityContextEnterpriseImpl30.allowsAdminAction(adminActionOnResource35);
    java.lang.String str37 = securityContextEnterpriseImpl30.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl30.withMode(
        adminAccessMode38);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = securityContextEnterpriseImpl30.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl16.withMode(
        accessMode40);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl16.withMode(
        adminAccessMode42);
    boolean boolean44 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityContextEnterpriseImpl43);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pagecachewarmer" + "'", str8,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl9);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNull(str23);
    org.junit.Assert.assertNotNull(authSubject24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNull(str31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AUTH_DISABLED with FULL" + "'", str34,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AUTH_DISABLED with FULL" + "'", str37,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertTrue("'" + accessMode40 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode40.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
  }

  @Test
  public void test1585() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1585");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.description();
    java.lang.String str7 = securityContextEnterpriseImpl4.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AUTH_DISABLED with FULL" + "'", str7,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test1586() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1586");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    defaultAuthManager0.start();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl8 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl8.start();
    securityProviderAuthDisabledImpl8.start();
    org.neo4j.kernel.api.security.AuthManager authManager11 = securityProviderAuthDisabledImpl8.inClusterAuthManager();
    securityProviderAuthDisabledImpl8.stop();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl8.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl8.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl8.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl17.authorize(
        idLookup18, "neo4j", abstractSecurityLog20);
    java.lang.String str22 = securityContextEnterpriseImpl21.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl21.withMode(
        accessMode23);
    java.lang.String str25 = securityContextEnterpriseImpl21.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject26 = securityContextEnterpriseImpl21.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl21.withMode(
        adminAccessMode27);
    boolean boolean30 = securityContextEnterpriseImpl28.allowExecuteAdminProcedure((int) (byte) 1);
    authManager15.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl28);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl28.withMode(
        adminAccessMode32);
    defaultAuthManager0.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl8);
    org.junit.Assert.assertNotNull(authManager11);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNull(str22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AUTH_DISABLED with FULL" + "'", str25,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
  }

  @Test
  public void test1587() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1587");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (-1), namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(1L, namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(0L, namedDatabaseId12);
  }

  @Test
  public void test1588() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1588");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl17.authorize(
        idLookup18, "neo4j", abstractSecurityLog20);
    java.lang.String str22 = securityContextEnterpriseImpl21.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl21.withMode(
        accessMode23);
    java.lang.String str25 = securityContextEnterpriseImpl21.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl21.allowsAdminAction(adminActionOnResource26);
    java.lang.String str28 = securityContextEnterpriseImpl21.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl21.withMode(
        adminAccessMode29);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = securityContextEnterpriseImpl21.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl7.withMode(
        accessMode31);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl7.withMode(
        adminAccessMode33);
    java.util.Set<java.lang.String> strSet35 = securityContextEnterpriseImpl7.roles();
    boolean boolean37 = securityContextEnterpriseImpl7.allowExecuteAdminProcedure((int) (short) 0);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNull(str22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AUTH_DISABLED with FULL" + "'", str25,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AUTH_DISABLED with FULL" + "'", str28,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + accessMode31 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode31.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(strSet35);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
  }

  @Test
  public void test1589() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1589");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.lock.LockTracer lockTracer6 = enterpriseTracerFactory0.createLockTracer(clock5);
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(lockTracer6);
  }

  @Test
  public void test1590() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1590");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    java.util.Map<java.lang.String, java.lang.Object> strMap4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl9.withMode(
        accessMode11);
    java.lang.String str13 = securityContextEnterpriseImpl9.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource14 = null;
    boolean boolean15 = securityContextEnterpriseImpl9.allowsAdminAction(adminActionOnResource14);
    java.lang.String str16 = securityContextEnterpriseImpl9.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl9;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl9;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = securityContextEnterpriseImpl9.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl9;
    java.util.Set<java.lang.String> strSet21 = securityContextEnterpriseImpl9.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo22 = securityContextEnterpriseImpl9.connectionInfo();
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext23 = defaultAuthManager0.login(
          strMap4, clientConnectionInfo22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AUTH_DISABLED with FULL" + "'", str13,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AUTH_DISABLED with FULL" + "'", str16,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
    org.junit.Assert.assertNotNull(strSet21);
    org.junit.Assert.assertNotNull(clientConnectionInfo22);
  }

  @Test
  public void test1591() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1591");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
  }

  @Test
  public void test1592() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1592");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager7.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1593() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1593");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.lang.String str8 = enterpriseTracerFactory0.getName();
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "verbose" + "'", str8, "verbose");
  }

  @Test
  public void test1594() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1594");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 'a', namedDatabaseId23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(0L, namedDatabaseId26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId29 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId29);
  }

  @Test
  public void test1595() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1595");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor10 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          1L, nodeKeyConstraintDescriptor8, (long) (short) 100);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test1596() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1596");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl7 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyContinuousImpl7.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    java.lang.String str13 = checkPointThresholdPolicyContinuousImpl7.getName();
    java.lang.String str14 = checkPointThresholdPolicyContinuousImpl7.getName();
    java.lang.String str15 = checkPointThresholdPolicyContinuousImpl7.getName();
    org.neo4j.configuration.Config config16 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock17 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning18 = null;
    org.neo4j.logging.LogProvider logProvider19 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold20 = checkPointThresholdPolicyContinuousImpl7.createThreshold(
        config16, systemNanoClock17, logPruning18, logProvider19);
    java.lang.String str21 = checkPointThresholdPolicyContinuousImpl7.getName();
    org.neo4j.configuration.Config config22 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock23 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning24 = null;
    org.neo4j.logging.LogProvider logProvider25 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold26 = checkPointThresholdPolicyContinuousImpl7.createThreshold(
        config22, systemNanoClock23, logPruning24, logProvider25);
    java.lang.String str27 = checkPointThresholdPolicyContinuousImpl7.getName();
    org.neo4j.configuration.Config config28 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock29 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning30 = null;
    org.neo4j.logging.LogProvider logProvider31 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold32 = checkPointThresholdPolicyContinuousImpl7.createThreshold(
        config28, systemNanoClock29, logPruning30, logProvider31);
    boolean boolean33 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) systemNanoClock29);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "continuous" + "'", str13, "continuous");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "continuous" + "'", str14, "continuous");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "continuous" + "'", str15, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold20);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "continuous" + "'", str21, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold26);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "continuous" + "'", str27, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
  }

  @Test
  public void test1597() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1597");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1598() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1598");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = defaultLoginContext0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext2 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo1);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext3 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo1);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext4 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo1);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(defaultLoginContext2);
    org.junit.Assert.assertNotNull(loginContext3);
    org.junit.Assert.assertNotNull(loginContext4);
  }

  @Test
  public void test1599() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1599");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config5 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock6 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold9 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config5, systemNanoClock6, logPruning7, logProvider8);
    org.neo4j.configuration.Config config10 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning12 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold14 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config10, systemNanoClock11, logPruning12, logProvider13);
    org.neo4j.configuration.Config config15 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock16 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning17 = null;
    org.neo4j.logging.LogProvider logProvider18 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold19 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config15, systemNanoClock16, logPruning17, logProvider18);
    java.lang.String str20 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config21 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock22 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning23 = null;
    org.neo4j.logging.LogProvider logProvider24 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold25 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config21, systemNanoClock22, logPruning23, logProvider24);
    org.neo4j.configuration.Config config26 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock27 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning28 = null;
    org.neo4j.logging.LogProvider logProvider29 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold30 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config26, systemNanoClock27, logPruning28, logProvider29);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold9);
    org.junit.Assert.assertNotNull(checkPointThreshold14);
    org.junit.Assert.assertNotNull(checkPointThreshold19);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "volumetric" + "'", str20, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold25);
    org.junit.Assert.assertNotNull(checkPointThreshold30);
  }

  @Test
  public void test1600() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1600");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.storageengine.api.StorageReader storageReader7 = null;
    org.neo4j.internal.kernel.api.Read read8 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory9 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState10 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor11 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext12 = null;
    org.neo4j.memory.MemoryTracker memoryTracker13 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor14 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader7, read8, cursorFactory9, readableTransactionState10, txStateVisitor11,
          cursorContext12, memoryTracker13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1601() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1601");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 10, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId23);
  }

  @Test
  public void test1602() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1602");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(1L, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 0, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 100, namedDatabaseId24);
  }

  @Test
  public void test1603() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1603");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl17.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl17.withMode(
        adminAccessMode19);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = securityContextEnterpriseImpl20.mode();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo22 = securityContextEnterpriseImpl20.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext23 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNull(str18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + accessMode21 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode21.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(clientConnectionInfo22);
    org.junit.Assert.assertNotNull(loginContext23);
  }

  @Test
  public void test1604() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1604");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl4.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl4.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl4.inClusterAuthManager();
    securityProviderAuthDisabledImpl4.shutdown();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
  }

  @Test
  public void test1605() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1605");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 1, constraintDescriptor7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1606() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1606");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode15);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = securityContextEnterpriseImpl16.connectionInfo();
    authManager7.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl16);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = securityContextEnterpriseImpl16.mode();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertTrue("'" + accessMode19 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode19.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1607() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1607");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject17 = securityContextEnterpriseImpl7.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl7.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = defaultLoginContext20.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = defaultLoginContext20.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext24 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = securityContext24.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext26 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet27 = defaultLoginContext26.roeSet();
    java.util.Set<java.lang.String> strSet29 = defaultLoginContext26.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode19, authSubject22, clientConnectionInfo23, accessMode25, strSet29,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup33 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl32.authorize(
        idLookup33, "neo4j", abstractSecurityLog35);
    java.lang.String str37 = securityContextEnterpriseImpl36.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl36.withMode(
        accessMode38);
    java.lang.String str40 = securityContextEnterpriseImpl36.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject41 = securityContextEnterpriseImpl36.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl36.withMode(
        adminAccessMode42);
    boolean boolean45 = securityContextEnterpriseImpl43.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl43.withMode(
        adminAccessMode46);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo48 = securityContextEnterpriseImpl43.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext50 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode25, clientConnectionInfo48, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode25, "pagecachewarmer");
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl53 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl53.start();
    securityProviderAuthDisabledImpl53.start();
    org.neo4j.kernel.api.security.AuthManager authManager56 = securityProviderAuthDisabledImpl53.inClusterAuthManager();
    securityProviderAuthDisabledImpl53.stop();
    org.neo4j.kernel.api.security.AuthManager authManager58 = securityProviderAuthDisabledImpl53.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager59 = securityProviderAuthDisabledImpl53.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager60 = securityProviderAuthDisabledImpl53.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup63 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog65 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = securityContextEnterpriseImpl62.authorize(
        idLookup63, "neo4j", abstractSecurityLog65);
    java.lang.String str67 = securityContextEnterpriseImpl66.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode68 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = securityContextEnterpriseImpl66.withMode(
        accessMode68);
    java.lang.String str70 = securityContextEnterpriseImpl66.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject71 = securityContextEnterpriseImpl66.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode72 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = securityContextEnterpriseImpl66.withMode(
        adminAccessMode72);
    boolean boolean75 = securityContextEnterpriseImpl73.allowExecuteAdminProcedure((int) (byte) 1);
    authManager60.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl73);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup78 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog80 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl81 = securityContextEnterpriseImpl77.authorize(
        idLookup78, "neo4j", abstractSecurityLog80);
    java.lang.String str82 = securityContextEnterpriseImpl81.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode83 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl84 = securityContextEnterpriseImpl81.withMode(
        adminAccessMode83);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject85 = securityContextEnterpriseImpl84.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode86 = securityContextEnterpriseImpl84.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl87 = securityContextEnterpriseImpl73.withMode(
        accessMode86);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl89 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode86, "pagecachewarmer");
    java.lang.String str90 = securityContextEnterpriseImpl89.database();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(authSubject17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(securityContext24);
    org.junit.Assert.assertTrue("'" + accessMode25 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode25.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext26);
    org.junit.Assert.assertNotNull(strSet27);
    org.junit.Assert.assertNotNull(strSet29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNull(str37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AUTH_DISABLED with FULL" + "'", str40,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(clientConnectionInfo48);
    org.junit.Assert.assertNotNull(securityContext50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl53);
    org.junit.Assert.assertNotNull(authManager56);
    org.junit.Assert.assertNotNull(authManager58);
    org.junit.Assert.assertNotNull(authManager59);
    org.junit.Assert.assertNotNull(authManager60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertNull(str67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertEquals("'" + str70 + "' != '" + "AUTH_DISABLED with FULL" + "'", str70,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject71);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl81);
    org.junit.Assert.assertNull(str82);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl84);
    org.junit.Assert.assertNotNull(authSubject85);
    org.junit.Assert.assertTrue("'" + accessMode86 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode86.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl87);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl89);
    org.junit.Assert.assertEquals("'" + str90 + "' != '" + "pagecachewarmer" + "'", str90,
        "pagecachewarmer");
  }

  @Test
  public void test1608() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1608");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    defaultAuthManager0.stop();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl7 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl7.start();
    securityProviderAuthDisabledImpl7.stop();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl7.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager11 = securityProviderAuthDisabledImpl7.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl7.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl14.authorize(
        idLookup15, "neo4j", abstractSecurityLog17);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl14.withMode(
        accessMode19);
    java.lang.String str21 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = securityContextEnterpriseImpl14.subject();
    authManager12.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl14);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject24 = securityContextEnterpriseImpl14.subject();
    defaultAuthManager0.log("verbose",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl14);
    java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode27 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext28 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo29 = defaultLoginContext28.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext30 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo29);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext32 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode27, clientConnectionInfo29,
        "Node Key constraint requires Neo4j Enterprise Edition");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext33 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo29);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext34 = defaultAuthManager0.login(
          strMap26, clientConnectionInfo29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl7);
    org.junit.Assert.assertNotNull(authManager10);
    org.junit.Assert.assertNotNull(authManager11);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(authSubject24);
    org.junit.Assert.assertNotNull(defaultLoginContext28);
    org.junit.Assert.assertNotNull(clientConnectionInfo29);
    org.junit.Assert.assertNotNull(loginContext30);
    org.junit.Assert.assertNotNull(securityContext32);
    org.junit.Assert.assertNotNull(loginContext33);
  }

  @Test
  public void test1609() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1609");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(authManager9);
  }

  @Test
  public void test1610() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1610");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.authorize(
        idLookup5, "neo4j", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl8.withMode(
        adminAccessMode9);
    defaultAuthManager0.log("hi!",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl8);
    java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup14 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl13.authorize(
        idLookup14, "neo4j", abstractSecurityLog16);
    java.lang.String str18 = securityContextEnterpriseImpl13.database();
    java.lang.String str19 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource20 = null;
    boolean boolean21 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource20);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo22 = securityContextEnterpriseImpl13.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext23 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo22);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext24 = defaultAuthManager0.login(
          strMap12, clientConnectionInfo22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNull(str18);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AUTH_DISABLED with FULL" + "'", str19,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo22);
    org.junit.Assert.assertNotNull(defaultLoginContext23);
  }

  @Test
  public void test1611() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1611");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config5 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock6 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold9 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config5, systemNanoClock6, logPruning7, logProvider8);
    org.neo4j.configuration.Config config10 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning12 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold14 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config10, systemNanoClock11, logPruning12, logProvider13);
    java.lang.String str15 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config16 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock17 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning18 = null;
    org.neo4j.logging.LogProvider logProvider19 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold20 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config16, systemNanoClock17, logPruning18, logProvider19);
    java.lang.String str21 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config22 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock23 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning24 = null;
    org.neo4j.logging.LogProvider logProvider25 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold26 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config22, systemNanoClock23, logPruning24, logProvider25);
    org.neo4j.configuration.Config config27 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock28 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning29 = null;
    org.neo4j.logging.LogProvider logProvider30 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold31 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config27, systemNanoClock28, logPruning29, logProvider30);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold9);
    org.junit.Assert.assertNotNull(checkPointThreshold14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "volumetric" + "'", str15, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold20);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "volumetric" + "'", str21, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold26);
    org.junit.Assert.assertNotNull(checkPointThreshold31);
  }

  @Test
  public void test1612() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1612");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId17);
  }

  @Test
  public void test1613() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1613");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.lang.String str12 = securityContextEnterpriseImpl9.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource13 = null;
    boolean boolean14 = securityContextEnterpriseImpl9.allowsAdminAction(adminActionOnResource13);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
  }

  @Test
  public void test1614() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1614");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext1 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = securityContext1.mode();
    java.lang.String str3 = securityContext1.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = securityContext1.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject5 = securityContext1.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = defaultLoginContext6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext8 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext9 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl14.withMode(
        accessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl14.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl14.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet23 = defaultLoginContext21.roeSet();
    java.util.Set<java.lang.String> strSet24 = defaultLoginContext21.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject5, clientConnectionInfo7, accessMode20, strSet24, "");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext27 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo7);
    org.junit.Assert.assertNotNull(securityContext1);
    org.junit.Assert.assertTrue(
        "'" + accessMode2 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode2.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertTrue(
        "'" + accessMode4 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode4.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(defaultLoginContext8);
    org.junit.Assert.assertNotNull(defaultLoginContext9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(strSet23);
    org.junit.Assert.assertNotNull(strSet24);
    org.junit.Assert.assertNotNull(loginContext27);
  }

  @Test
  public void test1615() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1615");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.init();
    securityProviderAuthDisabledImpl0.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager9);
    org.junit.Assert.assertNotNull(authManager10);
  }

  @Test
  public void test1616() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1616");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl4.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl4.inClusterAuthManager();
    securityProviderAuthDisabledImpl4.start();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager13);
  }

  @Test
  public void test1617() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1617");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl7.withMode(
        adminAccessMode17);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource19 = null;
    boolean boolean20 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource19);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
  }

  @Test
  public void test1618() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1618");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler1 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler1);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.authorize(
        idLookup3, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog5);
    java.util.Set<java.lang.String> strSet7 = securityContextEnterpriseImpl0.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContextEnterpriseImpl0.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext10 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = defaultLoginContext10.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl12.authorize(
        idLookup13, "neo4j", abstractSecurityLog15);
    java.lang.String str17 = securityContextEnterpriseImpl16.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl16.withMode(
        accessMode18);
    java.lang.String str20 = securityContextEnterpriseImpl16.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource21 = null;
    boolean boolean22 = securityContextEnterpriseImpl16.allowsAdminAction(adminActionOnResource21);
    java.lang.String str23 = securityContextEnterpriseImpl16.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl16;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl16;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = securityContextEnterpriseImpl16.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup28 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl27.authorize(
        idLookup28, "neo4j", abstractSecurityLog30);
    java.lang.String str32 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource33 = null;
    boolean boolean34 = securityContextEnterpriseImpl27.allowsAdminAction(adminActionOnResource33);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl27.authorize(
        idLookup35, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog37);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContextEnterpriseImpl38.mode();
    java.lang.String[] strArray52 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean54 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet53, strArray52);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode9, authSubject11, clientConnectionInfo26, accessMode39,
        (java.util.Set<java.lang.String>) strSet53, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo8, accessMode39, "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext59 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo8);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext60 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertNotNull(defaultLoginContext10);
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNull(str32);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray52);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(loginContext59);
    org.junit.Assert.assertNotNull(defaultLoginContext60);
  }

  @Test
  public void test1619() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1619");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str8 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor9 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor10 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor11 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor12 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup13 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor9, relationshipScanCursor10, propertyCursor11,
          relationTypeSchemaDescriptor12, tokenNameLookup13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterpriseConstraints" + "'", str8,
        "enterpriseConstraints");
  }

  @Test
  public void test1620() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1620");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 100);
    checkPointThresholdVolumetricPolicy1.initialize(100L);
    long long15 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long16 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
  }

  @Test
  public void test1621() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1621");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    boolean boolean15 = securityContextEnterpriseImpl13.allowExecuteAdminProcedure(0);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContextEnterpriseImpl13.mode();
    authManager5.log("enterpriseConstraints",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(accessMode16);
  }

  @Test
  public void test1622() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1622");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 100);
    checkPointThresholdVolumetricPolicy1.initialize((long) 0);
    long long6 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
  }

  @Test
  public void test1623() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1623");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl19 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl19.start();
    org.neo4j.kernel.api.security.AuthManager authManager21 = securityProviderAuthDisabledImpl19.loopbackAuthManager();
    securityProviderAuthDisabledImpl19.stop();
    org.neo4j.kernel.api.security.AuthManager authManager23 = securityProviderAuthDisabledImpl19.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager23.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl25);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl28.authorize(
        idLookup29, "neo4j", abstractSecurityLog31);
    java.lang.String str33 = securityContextEnterpriseImpl32.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl32.withMode(
        accessMode34);
    java.lang.String str36 = securityContextEnterpriseImpl32.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource37 = null;
    boolean boolean38 = securityContextEnterpriseImpl32.allowsAdminAction(adminActionOnResource37);
    authManager23.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl32);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = securityContextEnterpriseImpl32.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode40, "neo4j");
    java.util.Set<java.lang.String> strSet43 = securityContextEnterpriseImpl42.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl19);
    org.junit.Assert.assertNotNull(authManager21);
    org.junit.Assert.assertNotNull(authManager23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AUTH_DISABLED with FULL" + "'", str36,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertTrue("'" + accessMode40 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode40.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(strSet43);
  }

  @Test
  public void test1624() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1624");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode5);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource16 = null;
    boolean boolean17 = securityContextEnterpriseImpl11.allowsAdminAction(adminActionOnResource16);
    java.lang.String str18 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode19);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = securityContextEnterpriseImpl11.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl4.withMode(
        accessMode21);
    boolean boolean24 = securityContextEnterpriseImpl4.allowExecuteAdminProcedure((int) (byte) 0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + accessMode21 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode21.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
  }

  @Test
  public void test1625() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1625");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext1 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = securityContext1.mode();
    java.lang.String str3 = securityContext1.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = securityContext1.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject5 = securityContext1.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = defaultLoginContext6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext8 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext9 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl14.withMode(
        accessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl14.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl14.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet23 = defaultLoginContext21.roeSet();
    java.util.Set<java.lang.String> strSet24 = defaultLoginContext21.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject5, clientConnectionInfo7, accessMode20, strSet24, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext28 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo29 = defaultLoginContext28.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext30 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo29);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup32 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl31.authorize(
        idLookup32, "neo4j", abstractSecurityLog34);
    java.lang.String str36 = securityContextEnterpriseImpl35.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl35.withMode(
        accessMode37);
    java.lang.String str39 = securityContextEnterpriseImpl35.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource40 = null;
    boolean boolean41 = securityContextEnterpriseImpl35.allowsAdminAction(adminActionOnResource40);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl35.withMode(
        adminAccessMode42);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode44 = securityContextEnterpriseImpl35.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo29, accessMode44, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo7, accessMode44,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext49 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext50 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo7);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext51 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo7);
    org.junit.Assert.assertNotNull(securityContext1);
    org.junit.Assert.assertTrue(
        "'" + accessMode2 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode2.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertTrue(
        "'" + accessMode4 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode4.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(defaultLoginContext8);
    org.junit.Assert.assertNotNull(defaultLoginContext9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(strSet23);
    org.junit.Assert.assertNotNull(strSet24);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(defaultLoginContext28);
    org.junit.Assert.assertNotNull(clientConnectionInfo29);
    org.junit.Assert.assertNotNull(loginContext30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNull(str36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AUTH_DISABLED with FULL" + "'", str39,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + accessMode44 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode44.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertNotNull(defaultLoginContext49);
    org.junit.Assert.assertNotNull(loginContext50);
    org.junit.Assert.assertNotNull(loginContext51);
  }

  @Test
  public void test1626() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1626");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    java.util.Set<java.lang.String> strSet6 = securityContextEnterpriseImpl5.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = securityContextEnterpriseImpl5.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode8 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl9 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl9.start();
    securityProviderAuthDisabledImpl9.stop();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl9.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl9.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl9.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl16.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl16.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject24 = securityContextEnterpriseImpl16.subject();
    authManager14.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl16);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject26 = securityContextEnterpriseImpl16.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = defaultLoginContext27.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo28);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext30 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo28);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext32 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo33 = defaultLoginContext32.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext34 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo33);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext36 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode31, clientConnectionInfo33,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo33);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext38 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContext38.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo33, accessMode39, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext43 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject44 = defaultLoginContext43.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo45 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext47 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo48 = defaultLoginContext47.connectionInfo();
    java.util.Set<java.lang.String> strSet49 = defaultLoginContext47.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl51 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode42, authSubject44, clientConnectionInfo45, accessMode46, strSet49,
        "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode8, authSubject26, clientConnectionInfo28, accessMode39, strSet49,
        "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo7, accessMode39, "volumetric");
    boolean boolean57 = securityContextEnterpriseImpl55.allowExecuteAdminProcedure(
        (int) (short) 10);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject58 = securityContextEnterpriseImpl55.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(strSet6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl9);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNull(str23);
    org.junit.Assert.assertNotNull(authSubject24);
    org.junit.Assert.assertNotNull(authSubject26);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(clientConnectionInfo28);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(loginContext30);
    org.junit.Assert.assertNotNull(defaultLoginContext32);
    org.junit.Assert.assertNotNull(clientConnectionInfo33);
    org.junit.Assert.assertNotNull(loginContext34);
    org.junit.Assert.assertNotNull(securityContext36);
    org.junit.Assert.assertNotNull(defaultLoginContext37);
    org.junit.Assert.assertNotNull(securityContext38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(defaultLoginContext43);
    org.junit.Assert.assertNotNull(authSubject44);
    org.junit.Assert.assertNotNull(defaultLoginContext47);
    org.junit.Assert.assertNotNull(clientConnectionInfo48);
    org.junit.Assert.assertNotNull(strSet49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    org.junit.Assert.assertNotNull(authSubject58);
  }

  @Test
  public void test1627() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1627");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (short) 100);
    java.lang.Class<?> wildcardClass10 = checkPointThresholdVolumetricPolicy1.getClass();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertNotNull(wildcardClass10);
  }

  @Test
  public void test1628() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1628");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
  }

  @Test
  public void test1629() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1629");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) ' ', namedDatabaseId18);
  }

  @Test
  public void test1630() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1630");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(100L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 100, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
  }

  @Test
  public void test1631() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1631");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    java.time.Clock clock9 = null;
    org.neo4j.lock.LockTracer lockTracer10 = enterpriseTracerFactory0.createLockTracer(clock9);
    java.lang.String str11 = enterpriseTracerFactory0.getName();
    java.time.Clock clock12 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer13 = enterpriseTracerFactory0.createDatabaseTracer(
        clock12);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(lockTracer8);
    org.junit.Assert.assertNotNull(lockTracer10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "verbose" + "'", str11, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer13);
  }

  @Test
  public void test1632() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1632");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) -1, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(100L, namedDatabaseId11);
  }

  @Test
  public void test1633() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1633");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext4 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = securityContext4.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = securityContext4.mode();
    boolean boolean7 = cachePopulatorExtensionFactory0.equals((java.lang.Object) accessMode6);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext8 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker9 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle10 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext8, componentsChecker9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityContext4);
    org.junit.Assert.assertTrue(
        "'" + accessMode5 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode5.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue(
        "'" + accessMode6 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode6.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1634() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1634");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 6362, namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(0L, namedDatabaseId13);
  }

  @Test
  public void test1635() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1635");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext5.connectionInfo();
    java.util.Set<java.lang.String> strSet7 = defaultLoginContext5.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo3, accessMode4, strSet7, "volumetric");
    java.util.Set<java.lang.String> strSet10 = securityContextEnterpriseImpl9.roles();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl9.subject();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(strSet10);
    org.junit.Assert.assertNotNull(authSubject11);
  }

  @Test
  public void test1636() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1636");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long12 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize(10L);
    long long15 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 6362);
    java.util.function.Consumer<java.lang.String> strConsumer20 = null;
    try {
      boolean boolean21 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(
          (long) (short) 100, 100L, strConsumer20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
  }

  @Test
  public void test1637() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1637");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning6 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy7 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning6);
    long long8 = checkPointThresholdVolumetricPolicy7.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy7.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy7.initialize((long) '4');
    long long13 = checkPointThresholdVolumetricPolicy7.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy7.checkPointHappened(1L);
    boolean boolean16 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy7);
    java.lang.String str17 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str18 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertEquals(
        "'" + str17 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str17, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "pagecachewarmer" + "'", str18,
        "pagecachewarmer");
  }

  @Test
  public void test1638() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1638");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    defaultAuthManager3.init();
    defaultAuthManager3.claauch();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test1639() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1639");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl23;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl25 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl25.start();
    securityProviderAuthDisabledImpl25.start();
    org.neo4j.kernel.api.security.AuthManager authManager28 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    securityProviderAuthDisabledImpl25.stop();
    org.neo4j.kernel.api.security.AuthManager authManager30 = securityProviderAuthDisabledImpl25.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager31 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager32 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl34.authorize(
        idLookup35, "neo4j", abstractSecurityLog37);
    java.lang.String str39 = securityContextEnterpriseImpl38.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl38.withMode(
        accessMode40);
    java.lang.String str42 = securityContextEnterpriseImpl38.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject43 = securityContextEnterpriseImpl38.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode44 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = securityContextEnterpriseImpl38.withMode(
        adminAccessMode44);
    boolean boolean47 = securityContextEnterpriseImpl45.allowExecuteAdminProcedure((int) (byte) 1);
    authManager32.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl45);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup50 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl49.authorize(
        idLookup50, "neo4j", abstractSecurityLog52);
    java.lang.String str54 = securityContextEnterpriseImpl53.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode55 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = securityContextEnterpriseImpl53.withMode(
        adminAccessMode55);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject57 = securityContextEnterpriseImpl56.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode58 = securityContextEnterpriseImpl56.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl45.withMode(
        accessMode58);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl60 = securityContextEnterpriseImpl23.withMode(
        accessMode58);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl61 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl61.start();
    securityProviderAuthDisabledImpl61.start();
    org.neo4j.kernel.api.security.AuthManager authManager64 = securityProviderAuthDisabledImpl61.inClusterAuthManager();
    securityProviderAuthDisabledImpl61.stop();
    org.neo4j.kernel.api.security.AuthManager authManager66 = securityProviderAuthDisabledImpl61.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager67 = securityProviderAuthDisabledImpl61.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager68 = securityProviderAuthDisabledImpl61.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl70 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup71 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog73 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl74 = securityContextEnterpriseImpl70.authorize(
        idLookup71, "neo4j", abstractSecurityLog73);
    java.lang.String str75 = securityContextEnterpriseImpl74.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode76 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = securityContextEnterpriseImpl74.withMode(
        accessMode76);
    java.lang.String str78 = securityContextEnterpriseImpl74.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject79 = securityContextEnterpriseImpl74.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode80 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl81 = securityContextEnterpriseImpl74.withMode(
        adminAccessMode80);
    boolean boolean83 = securityContextEnterpriseImpl81.allowExecuteAdminProcedure((int) (byte) 1);
    authManager68.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl81);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl85 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup86 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog88 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl89 = securityContextEnterpriseImpl85.authorize(
        idLookup86, "neo4j", abstractSecurityLog88);
    java.lang.String str90 = securityContextEnterpriseImpl89.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode91 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl92 = securityContextEnterpriseImpl89.withMode(
        adminAccessMode91);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject93 = securityContextEnterpriseImpl92.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode94 = securityContextEnterpriseImpl92.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl95 = securityContextEnterpriseImpl81.withMode(
        accessMode94);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo96 = securityContextEnterpriseImpl95.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext98 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode58, clientConnectionInfo96, "volumetric");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl25);
    org.junit.Assert.assertNotNull(authManager28);
    org.junit.Assert.assertNotNull(authManager30);
    org.junit.Assert.assertNotNull(authManager31);
    org.junit.Assert.assertNotNull(authManager32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNull(str39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AUTH_DISABLED with FULL" + "'", str42,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertNull(str54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(authSubject57);
    org.junit.Assert.assertTrue("'" + accessMode58 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode58.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl60);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl61);
    org.junit.Assert.assertNotNull(authManager64);
    org.junit.Assert.assertNotNull(authManager66);
    org.junit.Assert.assertNotNull(authManager67);
    org.junit.Assert.assertNotNull(authManager68);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl70);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl74);
    org.junit.Assert.assertNull(str75);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertEquals("'" + str78 + "' != '" + "AUTH_DISABLED with FULL" + "'", str78,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject79);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl81);
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl85);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl89);
    org.junit.Assert.assertNull(str90);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl92);
    org.junit.Assert.assertNotNull(authSubject93);
    org.junit.Assert.assertTrue("'" + accessMode94 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode94.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl95);
    org.junit.Assert.assertNotNull(clientConnectionInfo96);
    org.junit.Assert.assertNotNull(securityContext98);
  }

  @Test
  public void test1640() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1640");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    authManager4.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str21 = securityContextEnterpriseImpl13.database();
    java.lang.String str22 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = securityContextEnterpriseImpl13.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode24);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject26 = securityContextEnterpriseImpl13.subject();
    java.util.Set<java.lang.String> strSet27 = securityContextEnterpriseImpl13.roles();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode23 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode23.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(authSubject26);
    org.junit.Assert.assertNotNull(strSet27);
  }

  @Test
  public void test1641() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1641");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) (short) 100, nodeKeyConstraintDescriptor7, (long) 6362);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1642() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1642");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str8 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str9 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor10 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor11 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor12 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor13 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup14 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor10,
          nodeCursor11, propertyCursor12, labelSchemaDescriptor13, tokenNameLookup14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterpriseConstraints" + "'", str8,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterpriseConstraints" + "'", str9,
        "enterpriseConstraints");
  }

  @Test
  public void test1643() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1643");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test1644() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1644");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId21);
  }

  @Test
  public void test1645() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1645");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext10 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(loginContext10);
  }

  @Test
  public void test1646() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1646");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str8 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl13.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode19);
    boolean boolean21 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pagecachewarmer" + "'", str8,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
  }

  @Test
  public void test1647() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1647");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.start();
    defaultAuthManager0.init();
    defaultAuthManager0.clneac();
    defaultAuthManager0.claauch();
    defaultAuthManager0.init();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1648() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1648");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) ' ', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 100, namedDatabaseId22);
  }

  @Test
  public void test1649() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1649");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    java.lang.String str10 = enterpriseTracerFactory0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "verbose" + "'", str10, "verbose");
  }

  @Test
  public void test1650() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1650");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 100);
    checkPointThresholdVolumetricPolicy1.initialize((long) 10);
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test1651() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1651");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    java.lang.String str21 = securityContextEnterpriseImpl16.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource22 = null;
    boolean boolean23 = securityContextEnterpriseImpl16.allowsAdminAction(adminActionOnResource22);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl16.authorize(
        idLookup24, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog26);
    defaultAuthManager0.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo29 = securityContextEnterpriseImpl16.connectionInfo();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(clientConnectionInfo29);
  }

  @Test
  public void test1652() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1652");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = defaultLoginContext0.authorize(
        idLookup3, "localhost", abstractSecurityLog5);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
  }

  @Test
  public void test1653() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1653");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.Object obj7 = null;
    boolean boolean8 = cachePopulatorExtensionFactory0.equals(obj7);
    java.lang.String str9 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl10 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int11 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int12 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str13 = constraintSemanticsEnterpriseImpl10.getName();
    int int14 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int15 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str16 = constraintSemanticsEnterpriseImpl10.getName();
    boolean boolean17 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) constraintSemanticsEnterpriseImpl10);
    java.lang.String str18 = constraintSemanticsEnterpriseImpl10.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor19 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor20 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor21 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup22 = null;
    try {
      constraintSemanticsEnterpriseImpl10.validateNodeKeyConstraint(nodeCursor19, propertyCursor20,
          labelSchemaDescriptor21, tokenNameLookup22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterpriseConstraints" + "'", str13,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "enterpriseConstraints" + "'", str16,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "enterpriseConstraints" + "'", str18,
        "enterpriseConstraints");
  }

  @Test
  public void test1654() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1654");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) 10);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test1655() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1655");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(1L, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) 1, namedDatabaseId20);
  }

  @Test
  public void test1656() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1656");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (byte) -1, namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (byte) 0, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId7);
  }

  @Test
  public void test1657() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1657");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (byte) 0, uniquenessConstraintDescriptor5, (long) (short) -1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1658() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1658");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl8.subject();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler10 = null;
    securityContextEnterpriseImpl8.assertCredentialsNotExpired(securityAuthorizationHandler10);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(authSubject9);
  }

  @Test
  public void test1659() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1659");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    org.neo4j.kernel.api.security.AuthManager authManager1 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager1);
    org.junit.Assert.assertNotNull(authManager2);
  }

  @Test
  public void test1660() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1660");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str8 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor9 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor10 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor11 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup12 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor9,
          propertyCursor10, labelSchemaDescriptor11, tokenNameLookup12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterpriseConstraints" + "'", str8,
        "enterpriseConstraints");
  }

  @Test
  public void test1661() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1661");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) ' ', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId19);
    java.lang.Class<?> wildcardClass21 = basePageCacheLoadingWatcher0.getClass();
    org.junit.Assert.assertNotNull(wildcardClass21);
  }

  @Test
  public void test1662() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1662");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl14.authorize(
        idLookup15, "", abstractSecurityLog17);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = securityContextEnterpriseImpl14.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext20 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
    org.junit.Assert.assertNotNull(loginContext20);
  }

  @Test
  public void test1663() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1663");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 0, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (byte) -1, namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) 0, namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (byte) -1, namedDatabaseId16);
  }

  @Test
  public void test1664() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1664");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 10);
    checkPointThresholdVolumetricPolicy1.initialize((long) '#');
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
  }

  @Test
  public void test1665() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1665");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList2 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    org.neo4j.kernel.api.security.AuthManager authManager5 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource16 = null;
    boolean boolean17 = securityContextEnterpriseImpl11.allowsAdminAction(adminActionOnResource16);
    java.lang.String str18 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl11;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl11;
    authManager5.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl11);
    java.lang.String str22 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = securityContextEnterpriseImpl11.mode();
    org.neo4j.kernel.api.security.AuthManager authManager24 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup27 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl26.authorize(
        idLookup27, "neo4j", abstractSecurityLog29);
    java.lang.String str31 = securityContextEnterpriseImpl30.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl30.withMode(
        accessMode32);
    java.lang.String str34 = securityContextEnterpriseImpl30.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource35 = null;
    boolean boolean36 = securityContextEnterpriseImpl30.allowsAdminAction(adminActionOnResource35);
    java.lang.String str37 = securityContextEnterpriseImpl30.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl30;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl30;
    authManager24.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl30);
    java.lang.String str41 = securityContextEnterpriseImpl30.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode42 = securityContextEnterpriseImpl30.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup44 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl43.authorize(
        idLookup44, "neo4j", abstractSecurityLog46);
    java.lang.String str48 = securityContextEnterpriseImpl47.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode49 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl50 = securityContextEnterpriseImpl47.withMode(
        accessMode49);
    java.lang.String str51 = securityContextEnterpriseImpl47.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo52 = securityContextEnterpriseImpl47.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext54 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode42, clientConnectionInfo52, "volumetric");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext56 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode23, clientConnectionInfo52, "localhost");
    defaultAuthManager0.log("", securityContext56);
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList2);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str22);
    org.junit.Assert.assertTrue("'" + accessMode23 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode23.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authManager24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNull(str31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AUTH_DISABLED with FULL" + "'", str34,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AUTH_DISABLED with FULL" + "'", str37,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str41);
    org.junit.Assert.assertTrue("'" + accessMode42 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode42.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNull(str48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl50);
    org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AUTH_DISABLED with FULL" + "'", str51,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo52);
    org.junit.Assert.assertNotNull(securityContext54);
    org.junit.Assert.assertNotNull(securityContext56);
  }

  @Test
  public void test1666() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1666");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor5 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor5,
          nodeCursor6, propertyCursor7, labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1667() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1667");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor10 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) 'a', uniquenessConstraintDescriptor8, (long) ' ');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1668() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1668");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    authManager7.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1669() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1669");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext20 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo18);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl21.authorize(
        idLookup22, "neo4j", abstractSecurityLog24);
    java.lang.String str26 = securityContextEnterpriseImpl25.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl25.withMode(
        accessMode27);
    java.lang.String str29 = securityContextEnterpriseImpl25.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject30 = securityContextEnterpriseImpl25.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl25.withMode(
        adminAccessMode31);
    boolean boolean34 = securityContextEnterpriseImpl32.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl32.withMode(
        adminAccessMode35);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl36.withMode(
        adminAccessMode37);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo39 = securityContextEnterpriseImpl36.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl40 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl40.start();
    org.neo4j.kernel.api.security.AuthManager authManager42 = securityProviderAuthDisabledImpl40.loopbackAuthManager();
    securityProviderAuthDisabledImpl40.stop();
    org.neo4j.kernel.api.security.AuthManager authManager44 = securityProviderAuthDisabledImpl40.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager44.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl46);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup50 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl49.authorize(
        idLookup50, "neo4j", abstractSecurityLog52);
    java.lang.String str54 = securityContextEnterpriseImpl53.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode55 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = securityContextEnterpriseImpl53.withMode(
        accessMode55);
    java.lang.String str57 = securityContextEnterpriseImpl53.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource58 = null;
    boolean boolean59 = securityContextEnterpriseImpl53.allowsAdminAction(adminActionOnResource58);
    authManager44.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl53);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode61 = securityContextEnterpriseImpl53.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo39, accessMode61, "neo4j");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode61, "verbose");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(loginContext20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNull(str26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AUTH_DISABLED with FULL" + "'", str29,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(clientConnectionInfo39);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl40);
    org.junit.Assert.assertNotNull(authManager42);
    org.junit.Assert.assertNotNull(authManager44);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertNull(str54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AUTH_DISABLED with FULL" + "'", str57,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertTrue("'" + accessMode61 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode61.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl63);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
  }

  @Test
  public void test1670() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1670");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor10 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          0L, uniquenessConstraintDescriptor8, (long) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1671() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1671");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(authManager10);
  }

  @Test
  public void test1672() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1672");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) '#', constraintDescriptor7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1673() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1673");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock14 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning15 = null;
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold17 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config13, systemNanoClock14, logPruning15, logProvider16);
    java.lang.String str18 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config19 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock20 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning21 = null;
    org.neo4j.logging.LogProvider logProvider22 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold23 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config19, systemNanoClock20, logPruning21, logProvider22);
    org.neo4j.configuration.Config config24 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock25 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning26 = null;
    org.neo4j.logging.LogProvider logProvider27 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold28 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config24, systemNanoClock25, logPruning26, logProvider27);
    java.lang.String str29 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config30 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock31 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning32 = null;
    org.neo4j.logging.LogProvider logProvider33 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold34 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config30, systemNanoClock31, logPruning32, logProvider33);
    java.lang.String str35 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str36 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config37 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock38 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning39 = null;
    org.neo4j.logging.LogProvider logProvider40 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold41 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config37, systemNanoClock38, logPruning39, logProvider40);
    java.lang.String str42 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "continuous" + "'", str6, "continuous");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "continuous" + "'", str7, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertNotNull(checkPointThreshold17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "continuous" + "'", str18, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold23);
    org.junit.Assert.assertNotNull(checkPointThreshold28);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "continuous" + "'", str29, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold34);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "continuous" + "'", str35, "continuous");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "continuous" + "'", str36, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold41);
    org.junit.Assert.assertEquals("'" + str42 + "' != '" + "continuous" + "'", str42, "continuous");
  }

  @Test
  public void test1674() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1674");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1675() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1675");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode6 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext7 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = securityContext7.mode();
    java.lang.String str9 = securityContext7.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContext7.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContext7.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext12 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo13 = defaultLoginContext12.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext14 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo13);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo13);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    java.lang.String str21 = securityContextEnterpriseImpl20.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl20.withMode(
        accessMode22);
    java.lang.String str24 = securityContextEnterpriseImpl20.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject25 = securityContextEnterpriseImpl20.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode26 = securityContextEnterpriseImpl20.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet29 = defaultLoginContext27.roeSet();
    java.util.Set<java.lang.String> strSet30 = defaultLoginContext27.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode6, authSubject11, clientConnectionInfo13, accessMode26, strSet30, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext33 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo13);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext34 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo13);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext35 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo13);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = defaultAuthManager0.login(
          strMap5, clientConnectionInfo13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContext7);
    org.junit.Assert.assertTrue(
        "'" + accessMode8 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode8.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(defaultLoginContext12);
    org.junit.Assert.assertNotNull(clientConnectionInfo13);
    org.junit.Assert.assertNotNull(defaultLoginContext14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AUTH_DISABLED with FULL" + "'", str24,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject25);
    org.junit.Assert.assertTrue("'" + accessMode26 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode26.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(strSet29);
    org.junit.Assert.assertNotNull(strSet30);
    org.junit.Assert.assertNotNull(defaultLoginContext33);
    org.junit.Assert.assertNotNull(defaultLoginContext34);
    org.junit.Assert.assertNotNull(loginContext35);
  }

  @Test
  public void test1676() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1676");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10L, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 100, namedDatabaseId22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId24);
  }

  @Test
  public void test1677() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1677");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1678() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1678");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource29 = null;
    boolean boolean30 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource29);
    java.lang.String str31 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup32 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl19.authorize(
        idLookup32, "hi!", abstractSecurityLog34);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AUTH_DISABLED with FULL" + "'", str31,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
  }

  @Test
  public void test1679() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1679");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext5.connectionInfo();
    java.util.Set<java.lang.String> strSet7 = defaultLoginContext5.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo3, accessMode4, strSet7, "volumetric");
    java.util.Set<java.lang.String> strSet10 = securityContextEnterpriseImpl9.roles();
    java.lang.String str11 = securityContextEnterpriseImpl9.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = securityContextEnterpriseImpl9.mode();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(strSet10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "volumetric" + "'", str11, "volumetric");
    org.junit.Assert.assertNull(accessMode12);
  }

  @Test
  public void test1680() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1680");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager8.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test1681() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1681");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext5.connectionInfo();
    java.util.Set<java.lang.String> strSet7 = defaultLoginContext5.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo3, accessMode4, strSet7, "volumetric");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode10);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject13 = securityContextEnterpriseImpl12.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl12.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    java.util.Set<java.lang.String> strSet16 = securityContextEnterpriseImpl15.roles();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(authSubject13);
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(strSet16);
  }

  @Test
  public void test1682() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1682");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.lang.String str5 = enterpriseTracerFactory0.getName();
    java.time.Clock clock6 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer7 = enterpriseTracerFactory0.createDatabaseTracer(
        clock6);
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "verbose" + "'", str5, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer7);
  }

  @Test
  public void test1683() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1683");
    }
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext0 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = securityContext0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext2 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo1);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = defaultLoginContext2.authorize(
        idLookup4, "", abstractSecurityLog6);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = defaultLoginContext2.authorize(
        idLookup8, "PageCacheProfileLoader", abstractSecurityLog10);
    org.junit.Assert.assertNotNull(securityContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(defaultLoginContext2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
  }

  @Test
  public void test1684() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1684");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    long long12 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    long long13 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 1);
    checkPointThresholdVolumetricPolicy8.checkPointHappened((long) (short) 0);
    long long18 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    java.util.function.Consumer<java.lang.String> strConsumer21 = null;
    try {
      boolean boolean22 = checkPointThresholdVolumetricPolicy8.isCheckPointingNeeded((long) 0,
          (-1L), strConsumer21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
  }

  @Test
  public void test1685() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1685");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 100);
    checkPointThresholdVolumetricPolicy1.initialize((long) 0);
    java.util.function.Consumer<java.lang.String> strConsumer8 = null;
    try {
      boolean boolean9 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) 10, 10L,
          strConsumer8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1686() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1686");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList4);
  }

  @Test
  public void test1687() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1687");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.start();
    defaultAuthManager0.init();
    defaultAuthManager0.clneac();
    defaultAuthManager0.claauch();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList7 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.start();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList7);
  }

  @Test
  public void test1688() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1688");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = defaultLoginContext0.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = defaultLoginContext0.authorize(
        idLookup3, "localhost", abstractSecurityLog5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = defaultLoginContext0.authorize(
        idLookup7, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog9);
    java.util.Set<java.lang.String> strSet11 = defaultLoginContext0.roeSet();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(strSet11);
  }

  @Test
  public void test1689() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1689");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str8 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str9 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str10 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str11 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config12 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning14 = null;
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold16 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config12, systemNanoClock13, logPruning14, logProvider15);
    java.lang.String str17 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "continuous" + "'", str6, "continuous");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "continuous" + "'", str7, "continuous");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "continuous" + "'", str8, "continuous");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "continuous" + "'", str9, "continuous");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "continuous" + "'", str10, "continuous");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "continuous" + "'", str11, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "continuous" + "'", str17, "continuous");
  }

  @Test
  public void test1690() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1690");
    }
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext0 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = securityContext0.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler2 = null;
    securityContext0.assertCredentialsNotExpired(securityAuthorizationHandler2);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject4 = securityContext0.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = securityContext0.mode();
    org.junit.Assert.assertNotNull(securityContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(authSubject4);
    org.junit.Assert.assertTrue(
        "'" + accessMode5 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode5.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1691() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1691");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    java.util.Set<java.lang.String> strSet6 = securityContextEnterpriseImpl5.roles();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl5.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "pagecachewarmer", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = securityContextEnterpriseImpl10.mode();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(strSet6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + accessMode15 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode15.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1692() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1692");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = securityContextEnterpriseImpl14.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContextEnterpriseImpl14.mode();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + accessMode15 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode15.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue("'" + accessMode16 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode16.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1693() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1693");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test1694() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1694");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    java.util.Set<java.lang.String> strSet6 = securityContextEnterpriseImpl5.roles();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl5.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl10.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(strSet6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(authSubject11);
  }

  @Test
  public void test1695() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1695");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext1 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = securityContext1.mode();
    java.lang.String str3 = securityContext1.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = securityContext1.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject5 = securityContext1.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = defaultLoginContext6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext8 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext9 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl14.withMode(
        accessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl14.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl14.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet23 = defaultLoginContext21.roeSet();
    java.util.Set<java.lang.String> strSet24 = defaultLoginContext21.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject5, clientConnectionInfo7, accessMode20, strSet24, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup28 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = defaultLoginContext27.authorize(
        idLookup28, "AUTH_DISABLED with FULL", abstractSecurityLog30);
    java.util.Set<java.lang.String> strSet32 = defaultLoginContext27.roeSet();
    org.junit.Assert.assertNotNull(securityContext1);
    org.junit.Assert.assertTrue(
        "'" + accessMode2 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode2.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertTrue(
        "'" + accessMode4 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode4.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(defaultLoginContext8);
    org.junit.Assert.assertNotNull(defaultLoginContext9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(strSet23);
    org.junit.Assert.assertNotNull(strSet24);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(strSet32);
  }

  @Test
  public void test1696() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1696");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config7 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock8 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning9 = null;
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold11 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config7, systemNanoClock8, logPruning9, logProvider10);
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "volumetric" + "'", str6, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold11);
  }

  @Test
  public void test1697() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1697");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.time.Clock clock6 = null;
    org.neo4j.lock.LockTracer lockTracer7 = enterpriseTracerFactory0.createLockTracer(clock6);
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    java.time.Clock clock10 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer11 = enterpriseTracerFactory0.createDatabaseTracer(
        clock10);
    java.time.Clock clock12 = null;
    org.neo4j.lock.LockTracer lockTracer13 = enterpriseTracerFactory0.createLockTracer(clock12);
    java.time.Clock clock14 = null;
    org.neo4j.lock.LockTracer lockTracer15 = enterpriseTracerFactory0.createLockTracer(clock14);
    java.time.Clock clock16 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer17 = enterpriseTracerFactory0.createDatabaseTracer(
        clock16);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertNotNull(lockTracer7);
    org.junit.Assert.assertNotNull(databaseTracer9);
    org.junit.Assert.assertNotNull(databaseTracer11);
    org.junit.Assert.assertNotNull(lockTracer13);
    org.junit.Assert.assertNotNull(lockTracer15);
    org.junit.Assert.assertNotNull(databaseTracer17);
  }

  @Test
  public void test1698() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1698");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    checkPointThresholdVolumetricPolicy1.initialize((long) (byte) 1);
    checkPointThresholdVolumetricPolicy1.initialize(10000L);
    java.util.function.Consumer<java.lang.String> strConsumer13 = null;
    try {
      boolean boolean14 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) 10,
          (long) (short) 0, strConsumer13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
  }

  @Test
  public void test1699() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1699");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo11 = securityContextEnterpriseImpl6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext12 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(clientConnectionInfo11);
    org.junit.Assert.assertNotNull(defaultLoginContext12);
  }

  @Test
  public void test1700() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1700");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int7 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
  }

  @Test
  public void test1701() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1701");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    java.time.Clock clock13 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer14 = enterpriseTracerFactory0.createDatabaseTracer(
        clock13);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(lockTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
    org.junit.Assert.assertNotNull(databaseTracer14);
  }

  @Test
  public void test1702() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1702");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl17.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl17.withMode(
        adminAccessMode19);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler22 = null;
    securityContextEnterpriseImpl21.assertCredentialsNotExpired(securityAuthorizationHandler22);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl21.authorize(
        idLookup24, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog26);
    java.util.Set<java.lang.String> strSet28 = securityContextEnterpriseImpl21.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo29 = securityContextEnterpriseImpl21.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext31 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject32 = defaultLoginContext31.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup34 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog36 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl33.authorize(
        idLookup34, "neo4j", abstractSecurityLog36);
    java.lang.String str38 = securityContextEnterpriseImpl37.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl37.withMode(
        accessMode39);
    java.lang.String str41 = securityContextEnterpriseImpl37.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource42 = null;
    boolean boolean43 = securityContextEnterpriseImpl37.allowsAdminAction(adminActionOnResource42);
    java.lang.String str44 = securityContextEnterpriseImpl37.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl37;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl37;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo47 = securityContextEnterpriseImpl37.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup49 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog51 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl48.authorize(
        idLookup49, "neo4j", abstractSecurityLog51);
    java.lang.String str53 = securityContextEnterpriseImpl48.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource54 = null;
    boolean boolean55 = securityContextEnterpriseImpl48.allowsAdminAction(adminActionOnResource54);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup56 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog58 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl48.authorize(
        idLookup56, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog58);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode60 = securityContextEnterpriseImpl59.mode();
    java.lang.String[] strArray73 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet74 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean75 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet74, strArray73);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode30, authSubject32, clientConnectionInfo47, accessMode60,
        (java.util.Set<java.lang.String>) strSet74, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl79 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo29, accessMode60, "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl80 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject81 = securityContextEnterpriseImpl80.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode82 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl83 = securityContextEnterpriseImpl80.withMode(
        adminAccessMode82);
    java.lang.String str84 = securityContextEnterpriseImpl80.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo85 = securityContextEnterpriseImpl80.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext86 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo85);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext87 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo85);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext89 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode60, clientConnectionInfo85, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl90 = securityContextEnterpriseImpl17.withMode(
        accessMode60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNull(str18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(strSet28);
    org.junit.Assert.assertNotNull(clientConnectionInfo29);
    org.junit.Assert.assertNotNull(defaultLoginContext31);
    org.junit.Assert.assertNotNull(authSubject32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNull(str38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AUTH_DISABLED with FULL" + "'", str41,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AUTH_DISABLED with FULL" + "'", str44,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNull(str53);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertTrue("'" + accessMode60 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode60.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray73);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl79);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl80);
    org.junit.Assert.assertNotNull(authSubject81);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl83);
    org.junit.Assert.assertNull(str84);
    org.junit.Assert.assertNotNull(clientConnectionInfo85);
    org.junit.Assert.assertNotNull(defaultLoginContext86);
    org.junit.Assert.assertNotNull(defaultLoginContext87);
    org.junit.Assert.assertNotNull(securityContext89);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl90);
  }

  @Test
  public void test1703() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1703");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    java.time.Clock clock10 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer11 = enterpriseTracerFactory0.createDatabaseTracer(
        clock10);
    java.time.Clock clock12 = null;
    org.neo4j.lock.LockTracer lockTracer13 = enterpriseTracerFactory0.createLockTracer(clock12);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer9);
    org.junit.Assert.assertNotNull(databaseTracer11);
    org.junit.Assert.assertNotNull(lockTracer13);
  }

  @Test
  public void test1704() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1704");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = defaultLoginContext15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext15.authorize(
        idLookup20, "localhost", abstractSecurityLog22);
    java.util.Set<java.lang.String> strSet24 = defaultLoginContext15.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup25 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = defaultLoginContext15.authorize(
        idLookup25, ".cacheprof", abstractSecurityLog27);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl28.authorize(
        idLookup29, "neo4j", abstractSecurityLog31);
    java.lang.String str33 = securityContextEnterpriseImpl32.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(strSet24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AUTH_DISABLED with FULL" + "'", str33,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test1705() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1705");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId11);
  }

  @Test
  public void test1706() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1706");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    try {
      pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1707() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1707");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.time.Clock clock8 = null;
    org.neo4j.lock.LockTracer lockTracer9 = enterpriseTracerFactory0.createLockTracer(clock8);
    java.time.Clock clock10 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer11 = enterpriseTracerFactory0.createDatabaseTracer(
        clock10);
    java.time.Clock clock12 = null;
    org.neo4j.lock.LockTracer lockTracer13 = enterpriseTracerFactory0.createLockTracer(clock12);
    java.lang.String str14 = enterpriseTracerFactory0.getName();
    java.lang.String str15 = enterpriseTracerFactory0.getName();
    java.lang.String str16 = enterpriseTracerFactory0.getName();
    java.time.Clock clock17 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer18 = enterpriseTracerFactory0.createDatabaseTracer(
        clock17);
    java.time.Clock clock19 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer20 = enterpriseTracerFactory0.createDatabaseTracer(
        clock19);
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertNotNull(lockTracer9);
    org.junit.Assert.assertNotNull(databaseTracer11);
    org.junit.Assert.assertNotNull(lockTracer13);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "verbose" + "'", str14, "verbose");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "verbose" + "'", str15, "verbose");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "verbose" + "'", str16, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer18);
    org.junit.Assert.assertNotNull(databaseTracer20);
  }

  @Test
  public void test1708() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1708");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    defaultAuthManager0.claauch();
    java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl14.authorize(
        idLookup15, "neo4j", abstractSecurityLog17);
    java.lang.String str19 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl18.withMode(
        accessMode20);
    java.lang.String str22 = securityContextEnterpriseImpl18.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource23 = null;
    boolean boolean24 = securityContextEnterpriseImpl18.allowsAdminAction(adminActionOnResource23);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource25 = null;
    boolean boolean26 = securityContextEnterpriseImpl18.allowsAdminAction(adminActionOnResource25);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo27 = securityContextEnterpriseImpl18.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext28 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo27);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = defaultAuthManager0.login(
          strMap13, clientConnectionInfo27);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNull(str19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo27);
    org.junit.Assert.assertNotNull(defaultLoginContext28);
  }

  @Test
  public void test1709() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1709");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    java.lang.String str10 = enterpriseTracerFactory0.getName();
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    java.lang.String str13 = enterpriseTracerFactory0.getName();
    java.time.Clock clock14 = null;
    org.neo4j.lock.LockTracer lockTracer15 = enterpriseTracerFactory0.createLockTracer(clock14);
    org.neo4j.monitoring.Monitors monitors16 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler17 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock18 = null;
    org.neo4j.logging.Log log19 = null;
    org.neo4j.configuration.Config config20 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer21 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors16, jobScheduler17, systemNanoClock18, log19, config20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "verbose" + "'", str10, "verbose");
    org.junit.Assert.assertNotNull(lockTracer12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "verbose" + "'", str13, "verbose");
    org.junit.Assert.assertNotNull(lockTracer15);
  }

  @Test
  public void test1710() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1710");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
  }

  @Test
  public void test1711() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1711");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(1L, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId27);
  }

  @Test
  public void test1712() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1712");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str15 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContextEnterpriseImpl13.mode();
    java.util.Set<java.lang.String> strSet17 = securityContextEnterpriseImpl13.roles();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode16 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode16.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strSet17);
  }

  @Test
  public void test1713() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1713");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor8 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor9 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor10 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup11 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor8, propertyCursor9, relationTypeSchemaDescriptor10,
          tokenNameLookup11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
  }

  @Test
  public void test1714() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1714");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
  }

  @Test
  public void test1715() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1715");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 6362, namedDatabaseId12);
  }

  @Test
  public void test1716() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1716");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler1 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler1);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.authorize(
        idLookup3, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog5);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler7 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler7);
    boolean boolean10 = securityContextEnterpriseImpl0.allowExecuteAdminProcedure(
        (int) (short) 100);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
  }

  @Test
  public void test1717() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1717");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.init();
    defaultAuthManager0.start();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1718() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1718");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 1, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId17);
  }

  @Test
  public void test1719() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1719");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = defaultLoginContext19.authorize(
        idLookup24, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog26);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = defaultLoginContext19.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext29 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(clientConnectionInfo28);
    org.junit.Assert.assertNotNull(loginContext29);
  }

  @Test
  public void test1720() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1720");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
  }

  @Test
  public void test1721() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1721");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl9.authorize(
        idLookup16, "", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    java.lang.String str24 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode25);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode27);
    authManager7.log("pagecachewarmer",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl19;
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AUTH_DISABLED with FULL" + "'", str24,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
  }

  @Test
  public void test1722() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1722");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl4.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    java.lang.String str17 = securityContextEnterpriseImpl4.description();
    java.lang.String str18 = securityContextEnterpriseImpl4.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test1723() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1723");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    long long7 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) ' ');
    checkPointThresholdVolumetricPolicy1.initialize((long) 100);
    java.util.function.Consumer<java.lang.String> strConsumer14 = null;
    try {
      boolean boolean15 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(10L, 100L,
          strConsumer14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
  }

  @Test
  public void test1724() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1724");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test1725() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1725");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (-1), namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 0, namedDatabaseId9);
  }

  @Test
  public void test1726() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1726");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject3 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo4 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = securityContext5.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet8 = defaultLoginContext7.roeSet();
    java.util.Set<java.lang.String> strSet10 = defaultLoginContext7.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject3, clientConnectionInfo4, accessMode6, strSet10, ".cacheprof");
    java.util.Set<java.lang.String> strSet13 = securityContextEnterpriseImpl12.roles();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl12.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler16 = null;
    securityContextEnterpriseImpl12.assertCredentialsNotExpired(securityAuthorizationHandler16);
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(authSubject3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue(
        "'" + accessMode6 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode6.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(strSet8);
    org.junit.Assert.assertNotNull(strSet10);
    org.junit.Assert.assertNotNull(strSet13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
  }

  @Test
  public void test1727() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1727");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str8 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = securityContextEnterpriseImpl9.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode11);
    java.lang.String str13 = securityContextEnterpriseImpl9.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl9.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext16 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = defaultLoginContext16.authorize(
        idLookup17, ".cacheprof", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = defaultLoginContext16.connectionInfo();
    boolean boolean22 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultLoginContext16);
    java.lang.String str23 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str8, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(authSubject10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNull(str13);
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(defaultLoginContext16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pagecachewarmer" + "'", str23,
        "pagecachewarmer");
  }

  @Test
  public void test1728() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1728");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.init();
    defaultAuthManager0.start();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
  }

  @Test
  public void test1729() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1729");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1730() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1730");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str8 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str9 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor10 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor11 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor12 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup13 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor10, propertyCursor11,
          labelSchemaDescriptor12, tokenNameLookup13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterpriseConstraints" + "'", str8,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterpriseConstraints" + "'", str9,
        "enterpriseConstraints");
  }

  @Test
  public void test1731() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1731");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = defaultLoginContext0.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = defaultLoginContext0.authorize(
        idLookup2, "verbose", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = defaultLoginContext0.authorize(
        idLookup6, "PageCacheProfileLoader", abstractSecurityLog8);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
  }

  @Test
  public void test1732() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1732");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    java.util.Set<java.lang.String> strSet7 = securityContextEnterpriseImpl0.roles();
    java.util.Set<java.lang.String> strSet8 = securityContextEnterpriseImpl0.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl0.connectionInfo();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(strSet8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
  }

  @Test
  public void test1733() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1733");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    java.lang.String str13 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str14 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config15 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock16 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning17 = null;
    org.neo4j.logging.LogProvider logProvider18 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold19 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config15, systemNanoClock16, logPruning17, logProvider18);
    org.neo4j.configuration.Config config20 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock21 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning22 = null;
    org.neo4j.logging.LogProvider logProvider23 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold24 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config20, systemNanoClock21, logPruning22, logProvider23);
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "continuous" + "'", str6, "continuous");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "continuous" + "'", str7, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "continuous" + "'", str13, "continuous");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "continuous" + "'", str14, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold19);
    org.junit.Assert.assertNotNull(checkPointThreshold24);
  }

  @Test
  public void test1734() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1734");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    defaultAuthManager0.start();
    defaultAuthManager0.start();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl9.database();
    java.lang.String str15 = securityContextEnterpriseImpl9.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource16 = null;
    boolean boolean17 = securityContextEnterpriseImpl9.allowsAdminAction(adminActionOnResource16);
    defaultAuthManager0.log("hi!",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
  }

  @Test
  public void test1735() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1735");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext4 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = securityContext4.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = securityContext4.mode();
    boolean boolean7 = cachePopulatorExtensionFactory0.equals((java.lang.Object) accessMode6);
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory8 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str9 = cachePopulatorExtensionFactory8.getName();
    java.lang.String str10 = cachePopulatorExtensionFactory8.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager11 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext13 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager11.log("", securityContext13);
    boolean boolean15 = cachePopulatorExtensionFactory8.equals(
        (java.lang.Object) defaultAuthManager11);
    defaultAuthManager11.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl18.authorize(
        idLookup19, "neo4j", abstractSecurityLog21);
    java.lang.String str23 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl18.allowsAdminAction(adminActionOnResource24);
    defaultAuthManager11.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl18);
    defaultAuthManager11.claauch();
    defaultAuthManager11.claauch();
    boolean boolean29 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager11);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityContext4);
    org.junit.Assert.assertTrue(
        "'" + accessMode5 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode5.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue(
        "'" + accessMode6 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode6.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str10, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager11);
    org.junit.Assert.assertNotNull(securityContext13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNull(str23);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
  }

  @Test
  public void test1736() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1736");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          10L, uniquenessConstraintDescriptor6, (-1L));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1737() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1737");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor7, propertyCursor8,
          labelSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1738() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1738");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1739() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1739");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) 10, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10000L, namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId27);
  }

  @Test
  public void test1740() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1740");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = defaultLoginContext7.authorize(
        idLookup8, "user '' with FULL", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.authorize(
        idLookup12, "", abstractSecurityLog14);
    java.lang.String str16 = securityContextEnterpriseImpl15.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "user '' with FULL" + "'", str16,
        "user '' with FULL");
  }

  @Test
  public void test1741() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1741");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl1 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl1.start();
    securityProviderAuthDisabledImpl1.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl1.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl1.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl1.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl8.authorize(
        idLookup9, "neo4j", abstractSecurityLog11);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl8.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl8.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject16 = securityContextEnterpriseImpl8.subject();
    authManager6.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl8);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl8.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo20 = defaultLoginContext19.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo20);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext22 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo20);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext24 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo25 = defaultLoginContext24.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext26 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo25);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext28 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode23, clientConnectionInfo25,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo25);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext30 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = securityContext30.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo25, accessMode31, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject36 = defaultLoginContext35.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo37 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode38 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext39 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo40 = defaultLoginContext39.connectionInfo();
    java.util.Set<java.lang.String> strSet41 = defaultLoginContext39.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode34, authSubject36, clientConnectionInfo37, accessMode38, strSet41,
        "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject18, clientConnectionInfo20, accessMode31, strSet41,
        "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode46 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext47 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode48 = securityContext47.mode();
    java.lang.String str49 = securityContext47.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode50 = securityContext47.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject51 = securityContext47.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext52 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo53 = defaultLoginContext52.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext54 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo53);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext55 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo53);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup57 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog59 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl60 = securityContextEnterpriseImpl56.authorize(
        idLookup57, "neo4j", abstractSecurityLog59);
    java.lang.String str61 = securityContextEnterpriseImpl60.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode62 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = securityContextEnterpriseImpl60.withMode(
        accessMode62);
    java.lang.String str64 = securityContextEnterpriseImpl60.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject65 = securityContextEnterpriseImpl60.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode66 = securityContextEnterpriseImpl60.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext67 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet69 = defaultLoginContext67.roeSet();
    java.util.Set<java.lang.String> strSet70 = defaultLoginContext67.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl72 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode46, authSubject51, clientConnectionInfo53, accessMode66, strSet70, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup74 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog76 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = securityContextEnterpriseImpl73.authorize(
        idLookup74, "neo4j", abstractSecurityLog76);
    java.lang.String str78 = securityContextEnterpriseImpl77.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode79 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl80 = securityContextEnterpriseImpl77.withMode(
        accessMode79);
    java.lang.String str81 = securityContextEnterpriseImpl77.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource82 = null;
    boolean boolean83 = securityContextEnterpriseImpl77.allowsAdminAction(adminActionOnResource82);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource84 = null;
    boolean boolean85 = securityContextEnterpriseImpl77.allowsAdminAction(adminActionOnResource84);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo86 = securityContextEnterpriseImpl77.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext88 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode66, clientConnectionInfo86, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl90 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo20, accessMode66,
        "Property existence constraint requires Neo4j Enterprise Edition");
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo91 = securityContextEnterpriseImpl90.connectionInfo();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl1);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(authSubject16);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(clientConnectionInfo20);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(loginContext22);
    org.junit.Assert.assertNotNull(defaultLoginContext24);
    org.junit.Assert.assertNotNull(clientConnectionInfo25);
    org.junit.Assert.assertNotNull(loginContext26);
    org.junit.Assert.assertNotNull(securityContext28);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(securityContext30);
    org.junit.Assert.assertTrue("'" + accessMode31 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode31.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(defaultLoginContext35);
    org.junit.Assert.assertNotNull(authSubject36);
    org.junit.Assert.assertNotNull(defaultLoginContext39);
    org.junit.Assert.assertNotNull(clientConnectionInfo40);
    org.junit.Assert.assertNotNull(strSet41);
    org.junit.Assert.assertNotNull(securityContext47);
    org.junit.Assert.assertTrue("'" + accessMode48 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode48.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str49);
    org.junit.Assert.assertTrue("'" + accessMode50 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode50.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject51);
    org.junit.Assert.assertNotNull(defaultLoginContext52);
    org.junit.Assert.assertNotNull(clientConnectionInfo53);
    org.junit.Assert.assertNotNull(defaultLoginContext54);
    org.junit.Assert.assertNotNull(defaultLoginContext55);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl60);
    org.junit.Assert.assertNull(str61);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl63);
    org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AUTH_DISABLED with FULL" + "'", str64,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject65);
    org.junit.Assert.assertTrue("'" + accessMode66 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode66.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext67);
    org.junit.Assert.assertNotNull(strSet69);
    org.junit.Assert.assertNotNull(strSet70);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertNull(str78);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl80);
    org.junit.Assert.assertEquals("'" + str81 + "' != '" + "AUTH_DISABLED with FULL" + "'", str81,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo86);
    org.junit.Assert.assertNotNull(securityContext88);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl90);
    org.junit.Assert.assertNotNull(clientConnectionInfo91);
  }

  @Test
  public void test1742() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1742");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext1 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = securityContext1.mode();
    java.lang.String str3 = securityContext1.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = securityContext1.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject5 = securityContext1.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = defaultLoginContext6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext8 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext9 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl14.withMode(
        accessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl14.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl14.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet23 = defaultLoginContext21.roeSet();
    java.util.Set<java.lang.String> strSet24 = defaultLoginContext21.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject5, clientConnectionInfo7, accessMode20, strSet24, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext28 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo29 = defaultLoginContext28.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext30 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo29);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup32 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl31.authorize(
        idLookup32, "neo4j", abstractSecurityLog34);
    java.lang.String str36 = securityContextEnterpriseImpl35.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl35.withMode(
        accessMode37);
    java.lang.String str39 = securityContextEnterpriseImpl35.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource40 = null;
    boolean boolean41 = securityContextEnterpriseImpl35.allowsAdminAction(adminActionOnResource40);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl35.withMode(
        adminAccessMode42);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode44 = securityContextEnterpriseImpl35.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo29, accessMode44, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo7, accessMode44,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext49 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo7);
    org.junit.Assert.assertNotNull(securityContext1);
    org.junit.Assert.assertTrue(
        "'" + accessMode2 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode2.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertTrue(
        "'" + accessMode4 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode4.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(defaultLoginContext8);
    org.junit.Assert.assertNotNull(defaultLoginContext9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(strSet23);
    org.junit.Assert.assertNotNull(strSet24);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(defaultLoginContext28);
    org.junit.Assert.assertNotNull(clientConnectionInfo29);
    org.junit.Assert.assertNotNull(loginContext30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNull(str36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AUTH_DISABLED with FULL" + "'", str39,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + accessMode44 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode44.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertNotNull(loginContext49);
  }

  @Test
  public void test1743() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1743");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str8 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config9 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock10 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning11 = null;
    org.neo4j.logging.LogProvider logProvider12 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold13 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config9, systemNanoClock10, logPruning11, logProvider12);
    java.lang.String str14 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config15 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock16 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning17 = null;
    org.neo4j.logging.LogProvider logProvider18 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold19 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config15, systemNanoClock16, logPruning17, logProvider18);
    org.neo4j.configuration.Config config20 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock21 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning22 = null;
    org.neo4j.logging.LogProvider logProvider23 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold24 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config20, systemNanoClock21, logPruning22, logProvider23);
    java.lang.String str25 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "continuous" + "'", str6, "continuous");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "continuous" + "'", str7, "continuous");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "continuous" + "'", str8, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold13);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "continuous" + "'", str14, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold19);
    org.junit.Assert.assertNotNull(checkPointThreshold24);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "continuous" + "'", str25, "continuous");
  }

  @Test
  public void test1744() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1744");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str8 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config9 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock10 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning11 = null;
    org.neo4j.logging.LogProvider logProvider12 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold13 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config9, systemNanoClock10, logPruning11, logProvider12);
    java.lang.String str14 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config15 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock16 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning17 = null;
    org.neo4j.logging.LogProvider logProvider18 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold19 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config15, systemNanoClock16, logPruning17, logProvider18);
    java.lang.String str20 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str21 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str22 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str23 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "continuous" + "'", str6, "continuous");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "continuous" + "'", str7, "continuous");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "continuous" + "'", str8, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold13);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "continuous" + "'", str14, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold19);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "continuous" + "'", str20, "continuous");
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "continuous" + "'", str21, "continuous");
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "continuous" + "'", str22, "continuous");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "continuous" + "'", str23, "continuous");
  }

  @Test
  public void test1745() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1745");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl2.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl2.allowsAdminAction(adminActionOnResource8);
    boolean boolean10 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) adminActionOnResource8);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl11 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl11.start();
    securityProviderAuthDisabledImpl11.stop();
    securityProviderAuthDisabledImpl11.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl11.inClusterAuthManager();
    securityProviderAuthDisabledImpl11.start();
    org.neo4j.kernel.api.security.AuthManager authManager17 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager19 = securityProviderAuthDisabledImpl11.loopbackAuthManager();
    boolean boolean20 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl11);
    org.neo4j.logging.Log log21 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl22 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl22.prlcpdForNa((long) (short) 1, namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = null;
    pageCacheLoadingWatcherDefaultImpl22.wapclForNa((long) 6362, namedDatabaseId31);
    boolean boolean33 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl22);
    java.lang.String str34 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.logging.Log log35 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl36 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId38 = null;
    pageCacheLoadingWatcherDefaultImpl36.prlcpdForNa((long) (short) 1, namedDatabaseId38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    pageCacheLoadingWatcherDefaultImpl36.wamsrdForNa(namedDatabaseId40);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId43 = null;
    pageCacheLoadingWatcherDefaultImpl36.wapclForNa((long) (byte) 100, namedDatabaseId43);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId46 = null;
    pageCacheLoadingWatcherDefaultImpl36.wapclForNa((long) (-1), namedDatabaseId46);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId49 = null;
    pageCacheLoadingWatcherDefaultImpl36.wapclForNa((long) (short) -1, namedDatabaseId49);
    boolean boolean51 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl36);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext52 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker53 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle54 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext52, componentsChecker53);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl11);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager17);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str34, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
  }

  @Test
  public void test1746() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1746");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) ' ', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(10L, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 'a', namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = null;
    basePageCacheLoadingWatcher0.wapclForNa(100L, namedDatabaseId27);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId30 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId30);
  }

  @Test
  public void test1747() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1747");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl16 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl16.start();
    securityProviderAuthDisabledImpl16.stop();
    org.neo4j.kernel.api.security.AuthManager authManager19 = securityProviderAuthDisabledImpl16.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager20 = securityProviderAuthDisabledImpl16.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager20.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup26 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl25.authorize(
        idLookup26, "neo4j", abstractSecurityLog28);
    authManager20.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl29);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode31 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext32 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo33 = defaultLoginContext32.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject34 = defaultLoginContext32.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo35 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext36 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = securityContext36.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext38 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet39 = defaultLoginContext38.roeSet();
    java.util.Set<java.lang.String> strSet41 = defaultLoginContext38.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode31, authSubject34, clientConnectionInfo35, accessMode37, strSet41,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl29.withMode(
        accessMode37);
    defaultAuthManager0.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl44);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl16);
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertNotNull(authManager20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(defaultLoginContext32);
    org.junit.Assert.assertNotNull(clientConnectionInfo33);
    org.junit.Assert.assertNotNull(authSubject34);
    org.junit.Assert.assertNotNull(securityContext36);
    org.junit.Assert.assertTrue("'" + accessMode37 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode37.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext38);
    org.junit.Assert.assertNotNull(strSet39);
    org.junit.Assert.assertNotNull(strSet41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
  }

  @Test
  public void test1748() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1748");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl9.authorize(
        idLookup16, "", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    java.lang.String str24 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode25);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode27);
    authManager7.log("pagecachewarmer",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext31 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler32 = null;
    securityContext31.assertCredentialsNotExpired(securityAuthorizationHandler32);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContext31;
    authManager7.log("PageCacheProfileLoader", securityContext31);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AUTH_DISABLED with FULL" + "'", str24,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContext31);
  }

  @Test
  public void test1749() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1749");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl6.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl6.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl6.withMode(
        adminAccessMode16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
  }

  @Test
  public void test1750() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1750");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = defaultLoginContext0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext2 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo1);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext3 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo1);
    java.util.Set<java.lang.String> strSet4 = defaultLoginContext3.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext3.authorize(
        idLookup5, "pagecachewarmer", abstractSecurityLog7);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(defaultLoginContext2);
    org.junit.Assert.assertNotNull(defaultLoginContext3);
    org.junit.Assert.assertNotNull(strSet4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
  }

  @Test
  public void test1751() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1751");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl14.authorize(
        idLookup15, "neo4j", abstractSecurityLog17);
    java.lang.String str19 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl18.withMode(
        accessMode20);
    java.lang.String str22 = securityContextEnterpriseImpl18.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject23 = securityContextEnterpriseImpl18.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl18.withMode(
        adminAccessMode24);
    boolean boolean27 = securityContextEnterpriseImpl25.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl25.withMode(
        adminAccessMode28);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl29.withMode(
        adminAccessMode30);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo32 = securityContextEnterpriseImpl29.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl33 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl33.start();
    org.neo4j.kernel.api.security.AuthManager authManager35 = securityProviderAuthDisabledImpl33.loopbackAuthManager();
    securityProviderAuthDisabledImpl33.stop();
    org.neo4j.kernel.api.security.AuthManager authManager37 = securityProviderAuthDisabledImpl33.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager37.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl39);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup43 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog45 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = securityContextEnterpriseImpl42.authorize(
        idLookup43, "neo4j", abstractSecurityLog45);
    java.lang.String str47 = securityContextEnterpriseImpl46.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl46.withMode(
        accessMode48);
    java.lang.String str50 = securityContextEnterpriseImpl46.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource51 = null;
    boolean boolean52 = securityContextEnterpriseImpl46.allowsAdminAction(adminActionOnResource51);
    authManager37.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl46);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = securityContextEnterpriseImpl46.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo32, accessMode54, "neo4j");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl57 = securityContextEnterpriseImpl4.withMode(
        accessMode54);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo58 = securityContextEnterpriseImpl4.connectionInfo();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNull(str19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(clientConnectionInfo32);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl33);
    org.junit.Assert.assertNotNull(authManager35);
    org.junit.Assert.assertNotNull(authManager37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNull(str47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AUTH_DISABLED with FULL" + "'", str50,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertTrue("'" + accessMode54 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode54.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl57);
    org.junit.Assert.assertNotNull(clientConnectionInfo58);
  }

  @Test
  public void test1752() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1752");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = securityContextEnterpriseImpl14.mode();
    java.lang.String str16 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource17 = null;
    boolean boolean18 = securityContextEnterpriseImpl14.allowsAdminAction(adminActionOnResource17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + accessMode15 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode15.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
  }

  @Test
  public void test1753() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1753");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.storageengine.api.StorageReader storageReader6 = null;
    org.neo4j.internal.kernel.api.Read read7 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory8 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState9 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor10 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext11 = null;
    org.neo4j.memory.MemoryTracker memoryTracker12 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor13 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader6, read7, cursorFactory8, readableTransactionState9, txStateVisitor10,
          cursorContext11, memoryTracker12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1754() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1754");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl7.authorize(
        idLookup9, "", abstractSecurityLog11);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = securityContextEnterpriseImpl7.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl7.mode();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = securityContextEnterpriseImpl7.connectionInfo();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + accessMode13 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode13.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(clientConnectionInfo15);
  }

  @Test
  public void test1755() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1755");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) ' ', nodeKeyConstraintDescriptor7, (long) '#');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1756() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1756");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    java.lang.String str20 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode21);
    defaultAuthManager3.log("PageCacheProfileLoader",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    defaultAuthManager3.init();
    defaultAuthManager3.clneac();
    defaultAuthManager3.init();
    defaultAuthManager3.claauch();
    defaultAuthManager3.stop();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
  }

  @Test
  public void test1757() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1757");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList14 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.init();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(strMapList14);
  }

  @Test
  public void test1758() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1758");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl5 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl5.start();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl5.inClusterAuthManager();
    boolean boolean8 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl5);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl9 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl9.start();
    securityProviderAuthDisabledImpl9.stop();
    securityProviderAuthDisabledImpl9.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl9.inClusterAuthManager();
    securityProviderAuthDisabledImpl9.start();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl9.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager16 = securityProviderAuthDisabledImpl9.authManager();
    boolean boolean17 = cachePopulatorExtensionFactory0.equals((java.lang.Object) authManager16);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl18.authorize(
        idLookup19, "neo4j", abstractSecurityLog21);
    java.lang.String str23 = securityContextEnterpriseImpl22.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl22.withMode(
        accessMode24);
    java.lang.String str26 = securityContextEnterpriseImpl22.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource27 = null;
    boolean boolean28 = securityContextEnterpriseImpl22.allowsAdminAction(adminActionOnResource27);
    java.lang.String str29 = securityContextEnterpriseImpl22.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl22.withMode(
        adminAccessMode30);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler32 = null;
    securityContextEnterpriseImpl22.assertCredentialsNotExpired(securityAuthorizationHandler32);
    boolean boolean34 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityAuthorizationHandler32);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl5);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl9);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNull(str23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AUTH_DISABLED with FULL" + "'", str26,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AUTH_DISABLED with FULL" + "'", str29,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1759() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1759");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    org.neo4j.configuration.Config config6 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning8 = null;
    org.neo4j.logging.LogProvider logProvider9 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold10 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config6, systemNanoClock7, logPruning8, logProvider9);
    java.lang.String str11 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config12 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning14 = null;
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold16 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config12, systemNanoClock13, logPruning14, logProvider15);
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertNotNull(checkPointThreshold10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "continuous" + "'", str11, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold16);
  }

  @Test
  public void test1760() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1760");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((-1L), namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 10, namedDatabaseId21);
  }

  @Test
  public void test1761() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1761");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10L, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (-1), namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId20);
  }

  @Test
  public void test1762() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1762");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor5,
          propertyCursor6, labelSchemaDescriptor7, tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1763() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1763");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    java.lang.String str5 = securityContextEnterpriseImpl0.description();
    java.lang.String str6 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode7 = securityContextEnterpriseImpl0.mode();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AUTH_DISABLED with FULL" + "'", str5,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str6);
    org.junit.Assert.assertTrue(
        "'" + accessMode7 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode7.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1764() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1764");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = defaultLoginContext15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl19.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode21 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext22 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject23 = securityContext22.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext25 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = defaultLoginContext25.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext28 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode24, clientConnectionInfo26, "neo4j");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext29 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = securityContext29.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo26, accessMode30, "volumetric");
    org.neo4j.internal.kernel.api.security.AccessMode accessMode33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl34.authorize(
        idLookup35, "neo4j", abstractSecurityLog37);
    java.lang.String str39 = securityContextEnterpriseImpl34.database();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl34;
    java.util.Set<java.lang.String> strSet41 = securityContextEnterpriseImpl34.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode21, authSubject23, clientConnectionInfo26, accessMode33, strSet41,
        "enterpriseConstraints");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext45 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode20, clientConnectionInfo26, "volumetric");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContext22);
    org.junit.Assert.assertNotNull(authSubject23);
    org.junit.Assert.assertNotNull(defaultLoginContext25);
    org.junit.Assert.assertNotNull(clientConnectionInfo26);
    org.junit.Assert.assertNotNull(securityContext28);
    org.junit.Assert.assertNotNull(securityContext29);
    org.junit.Assert.assertTrue("'" + accessMode30 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode30.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNull(str39);
    org.junit.Assert.assertNotNull(strSet41);
    org.junit.Assert.assertNotNull(securityContext45);
  }

  @Test
  public void test1765() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1765");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 10, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((-1L), namedDatabaseId21);
  }

  @Test
  public void test1766() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1766");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 0);
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(10L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 1);
    checkPointThresholdVolumetricPolicy1.initialize(10L);
    checkPointThresholdVolumetricPolicy1.initialize((long) ' ');
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
  }

  @Test
  public void test1767() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1767");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl13.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode19);
    boolean boolean22 = securityContextEnterpriseImpl20.allowExecuteAdminProcedure((int) (byte) 1);
    authManager7.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl20);
    authManager7.stop();
    authManager7.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
  }

  @Test
  public void test1768() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1768");
    }
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo0 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl1 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = securityContextEnterpriseImpl1.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl1.withMode(
        adminAccessMode3);
    java.lang.String str5 = securityContextEnterpriseImpl1.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = securityContextEnterpriseImpl1.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo6);
    org.neo4j.kernel.api.security.AuthManager authManager8 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl14.withMode(
        accessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource19 = null;
    boolean boolean20 = securityContextEnterpriseImpl14.allowsAdminAction(adminActionOnResource19);
    java.lang.String str21 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl14;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl14;
    authManager8.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl14);
    java.lang.String str25 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode26 = securityContextEnterpriseImpl14.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo6, accessMode26, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo0, accessMode26,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AUTH_DISABLED with FULL" + "'", str21,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str25);
    org.junit.Assert.assertTrue("'" + accessMode26 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode26.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
  }

  @Test
  public void test1769() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1769");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) (short) -1, nodeKeyConstraintDescriptor5, (-1L));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
  }

  @Test
  public void test1770() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1770");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long10 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) -1);
    java.util.function.Consumer<java.lang.String> strConsumer16 = null;
    try {
      boolean boolean17 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) 'a',
          (long) (short) -1, strConsumer16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
  }

  @Test
  public void test1771() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1771");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
  }

  @Test
  public void test1772() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1772");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (-1), uniquenessConstraintDescriptor7, (long) (short) 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1773() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1773");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    int int8 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor10 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
  }

  @Test
  public void test1774() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1774");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    boolean boolean17 = securityContextEnterpriseImpl15.allowExecuteAdminProcedure(6362);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler18 = null;
    securityContextEnterpriseImpl15.assertCredentialsNotExpired(securityAuthorizationHandler18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
  }

  @Test
  public void test1775() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1775");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    authManager4.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str21 = securityContextEnterpriseImpl13.database();
    java.lang.String str22 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = securityContextEnterpriseImpl13.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode24);
    java.util.Set<java.lang.String> strSet26 = securityContextEnterpriseImpl25.roles();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode23 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode23.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(strSet26);
  }

  @Test
  public void test1776() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1776");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor6, nodeCursor7, propertyCursor8, labelSchemaDescriptor9,
          tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1777() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1777");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode18);
    boolean boolean21 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure((int) '#');
    java.util.Set<java.lang.String> strSet22 = securityContextEnterpriseImpl10.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNotNull(strSet22);
  }

  @Test
  public void test1778() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1778");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject8 = securityContextEnterpriseImpl7.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl7.authorize(
        idLookup9, "localhost", abstractSecurityLog11);
    java.util.Set<java.lang.String> strSet13 = securityContextEnterpriseImpl12.roles();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl12.mode();
    defaultAuthManager0.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(authSubject8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(strSet13);
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1779() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1779");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
  }

  @Test
  public void test1780() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1780");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject7 = securityContextEnterpriseImpl6.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl6.withMode(
        adminAccessMode8);
    java.lang.String str10 = securityContextEnterpriseImpl6.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo11 = securityContextEnterpriseImpl6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext12 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo11);
    java.util.Set<java.lang.String> strSet14 = defaultLoginContext12.roeSet();
    java.util.Set<java.lang.String> strSet15 = defaultLoginContext12.roeSet();
    boolean boolean16 = cachePopulatorExtensionFactory0.equals((java.lang.Object) strSet15);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(authSubject7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(clientConnectionInfo11);
    org.junit.Assert.assertNotNull(defaultLoginContext12);
    org.junit.Assert.assertNotNull(strSet14);
    org.junit.Assert.assertNotNull(strSet15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
  }

  @Test
  public void test1781() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1781");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test1782() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1782");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject17 = securityContextEnterpriseImpl7.subject();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler18 = null;
    securityContextEnterpriseImpl7.assertCredentialsNotExpired(securityAuthorizationHandler18);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl7.mode();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(authSubject17);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1783() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1783");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.init();
    defaultAuthManager0.start();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList6 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList6);
  }

  @Test
  public void test1784() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1784");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.claauch();
    defaultAuthManager0.stop();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList5 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.init();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList5);
  }

  @Test
  public void test1785() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1785");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 10, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 100, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '#', namedDatabaseId20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 1, namedDatabaseId23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) 10, namedDatabaseId26);
  }

  @Test
  public void test1786() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1786");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    int int8 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor9 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor10 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor11 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor12 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup13 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor9,
          nodeCursor10, propertyCursor11, labelSchemaDescriptor12, tokenNameLookup13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
  }

  @Test
  public void test1787() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1787");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) '4', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (short) -1, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    basePageCacheLoadingWatcher0.wapclForNa((-1L), namedDatabaseId20);
  }

  @Test
  public void test1788() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1788");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(100L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 10, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId18);
  }

  @Test
  public void test1789() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1789");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.time.Clock clock6 = null;
    org.neo4j.lock.LockTracer lockTracer7 = enterpriseTracerFactory0.createLockTracer(clock6);
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    java.time.Clock clock10 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer11 = enterpriseTracerFactory0.createDatabaseTracer(
        clock10);
    java.time.Clock clock12 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer13 = enterpriseTracerFactory0.createDatabaseTracer(
        clock12);
    java.time.Clock clock14 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer15 = enterpriseTracerFactory0.createDatabaseTracer(
        clock14);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertNotNull(lockTracer7);
    org.junit.Assert.assertNotNull(databaseTracer9);
    org.junit.Assert.assertNotNull(databaseTracer11);
    org.junit.Assert.assertNotNull(databaseTracer13);
    org.junit.Assert.assertNotNull(databaseTracer15);
  }

  @Test
  public void test1790() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1790");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor6, propertyCursor7,
          labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1791() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1791");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    authManager5.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test1792() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1792");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor6, nodeCursor7, propertyCursor8, labelSchemaDescriptor9,
          tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1793() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1793");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 'a', namedDatabaseId23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId25);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 10, namedDatabaseId28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 100, namedDatabaseId31);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId33 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId33);
  }

  @Test
  public void test1794() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1794");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) ' ', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (byte) 10, namedDatabaseId5);
  }

  @Test
  public void test1795() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1795");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler8 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler8);
    boolean boolean11 = securityContextEnterpriseImpl4.allowExecuteAdminProcedure((int) '4');
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl4.subject();
    boolean boolean14 = securityContextEnterpriseImpl4.allowExecuteAdminProcedure(1);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler16 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler16);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext18 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet20 = defaultLoginContext18.roeSet();
    java.util.Set<java.lang.String> strSet21 = defaultLoginContext18.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext18;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup23 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = defaultLoginContext18.authorize(
        idLookup23, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog25);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl27 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl27.start();
    org.neo4j.kernel.api.security.AuthManager authManager29 = securityProviderAuthDisabledImpl27.loopbackAuthManager();
    securityProviderAuthDisabledImpl27.stop();
    org.neo4j.kernel.api.security.AuthManager authManager31 = securityProviderAuthDisabledImpl27.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager31.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl33);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup37 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog39 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl36.authorize(
        idLookup37, "neo4j", abstractSecurityLog39);
    java.lang.String str41 = securityContextEnterpriseImpl40.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl40.withMode(
        accessMode42);
    java.lang.String str44 = securityContextEnterpriseImpl40.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource45 = null;
    boolean boolean46 = securityContextEnterpriseImpl40.allowsAdminAction(adminActionOnResource45);
    authManager31.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl40);
    java.lang.String str48 = securityContextEnterpriseImpl40.database();
    java.lang.String str49 = securityContextEnterpriseImpl40.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode50 = securityContextEnterpriseImpl40.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl51 = securityContextEnterpriseImpl26.withMode(
        accessMode50);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl4.withMode(
        accessMode50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo15);
    org.junit.Assert.assertNotNull(defaultLoginContext18);
    org.junit.Assert.assertNotNull(strSet20);
    org.junit.Assert.assertNotNull(strSet21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl27);
    org.junit.Assert.assertNotNull(authManager29);
    org.junit.Assert.assertNotNull(authManager31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNull(str41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AUTH_DISABLED with FULL" + "'", str44,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    org.junit.Assert.assertNull(str48);
    org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AUTH_DISABLED with FULL" + "'", str49,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode50 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode50.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl51);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
  }

  @Test
  public void test1796() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1796");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId13);
  }

  @Test
  public void test1797() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1797");
    }
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext0 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = securityContext0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext2 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo1);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = defaultLoginContext2.authorize(
        idLookup4, "", abstractSecurityLog6);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject8 = securityContextEnterpriseImpl7.subject();
    org.junit.Assert.assertNotNull(securityContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(defaultLoginContext2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(authSubject8);
  }

  @Test
  public void test1798() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1798");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor5, propertyCursor6, relationTypeSchemaDescriptor7,
          tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1799() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1799");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 'a', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) 0, namedDatabaseId17);
  }

  @Test
  public void test1800() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1800");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    java.lang.String str10 = enterpriseTracerFactory0.getName();
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    java.lang.String str13 = enterpriseTracerFactory0.getName();
    java.lang.String str14 = enterpriseTracerFactory0.getName();
    java.time.Clock clock15 = null;
    org.neo4j.lock.LockTracer lockTracer16 = enterpriseTracerFactory0.createLockTracer(clock15);
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "verbose" + "'", str10, "verbose");
    org.junit.Assert.assertNotNull(lockTracer12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "verbose" + "'", str13, "verbose");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "verbose" + "'", str14, "verbose");
    org.junit.Assert.assertNotNull(lockTracer16);
  }

  @Test
  public void test1801() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1801");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.lang.String str8 = enterpriseTracerFactory0.getName();
    java.time.Clock clock9 = null;
    org.neo4j.lock.LockTracer lockTracer10 = enterpriseTracerFactory0.createLockTracer(clock9);
    java.lang.String str11 = enterpriseTracerFactory0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "verbose" + "'", str8, "verbose");
    org.junit.Assert.assertNotNull(lockTracer10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "verbose" + "'", str11, "verbose");
  }

  @Test
  public void test1802() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1802");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl13.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode19);
    boolean boolean22 = securityContextEnterpriseImpl20.allowExecuteAdminProcedure((int) (byte) 1);
    authManager7.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl20);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl20.withMode(
        adminAccessMode24);
    java.lang.String str26 = securityContextEnterpriseImpl20.description();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "user '' with FULL" + "'", str26,
        "user '' with FULL");
  }

  @Test
  public void test1803() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1803");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor6, propertyCursor7,
          labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1804() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1804");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl1 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl1.authorize(
        idLookup2, "neo4j", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl1.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl1.authorize(
        idLookup8, "", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler12 = null;
    securityContextEnterpriseImpl1.assertCredentialsNotExpired(securityAuthorizationHandler12);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject14 = securityContextEnterpriseImpl1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl16.withMode(
        accessMode21);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup23 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl16.authorize(
        idLookup23, "", abstractSecurityLog25);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup27 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl26.authorize(
        idLookup27, "AUTH_DISABLED with FULL", abstractSecurityLog29);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = securityContextEnterpriseImpl30.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext32 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject33 = defaultLoginContext32.subject();
    java.util.Set<java.lang.String> strSet34 = defaultLoginContext32.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject14, clientConnectionInfo15, accessMode31, strSet34, "");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl36.withMode(
        adminAccessMode37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + accessMode31 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode31.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext32);
    org.junit.Assert.assertNotNull(authSubject33);
    org.junit.Assert.assertNotNull(strSet34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
  }

  @Test
  public void test1805() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1805");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    long long12 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    java.util.function.Consumer<java.lang.String> strConsumer15 = null;
    try {
      boolean boolean16 = checkPointThresholdVolumetricPolicy8.isCheckPointingNeeded((long) 1,
          (long) (short) 1, strConsumer15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
  }

  @Test
  public void test1806() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1806");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    authManager4.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str21 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext22 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = securityContext22.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl13.withMode(
        accessMode23);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl24.withMode(
        adminAccessMode25);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(securityContext22);
    org.junit.Assert.assertTrue("'" + accessMode23 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode23.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
  }

  @Test
  public void test1807() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1807");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager9);
  }

  @Test
  public void test1808() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1808");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    try {
      pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10000L, namedDatabaseId6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1809() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1809");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl2.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl2.allowsAdminAction(adminActionOnResource8);
    boolean boolean10 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) adminActionOnResource8);
    java.lang.String str11 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl12.authorize(
        idLookup13, "neo4j", abstractSecurityLog15);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl12.withMode(
        accessMode17);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl18.authorize(
        idLookup19, "neo4j", abstractSecurityLog21);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = securityContextEnterpriseImpl18.connectionInfo();
    boolean boolean24 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) clientConnectionInfo23);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl25 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl25.start();
    securityProviderAuthDisabledImpl25.stop();
    org.neo4j.kernel.api.security.AuthManager authManager28 = securityProviderAuthDisabledImpl25.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager29 = securityProviderAuthDisabledImpl25.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager30 = securityProviderAuthDisabledImpl25.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager31 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager32 = securityProviderAuthDisabledImpl25.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager33 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    boolean boolean34 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl25);
    java.lang.String str35 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject37 = securityContextEnterpriseImpl36.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup38 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl36.authorize(
        idLookup38, "localhost", abstractSecurityLog40);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource42 = null;
    boolean boolean43 = securityContextEnterpriseImpl36.allowsAdminAction(adminActionOnResource42);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource44 = null;
    boolean boolean45 = securityContextEnterpriseImpl36.allowsAdminAction(adminActionOnResource44);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup46 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl36.authorize(
        idLookup46, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog48);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode50 = securityContextEnterpriseImpl49.mode();
    boolean boolean51 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityContextEnterpriseImpl49);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pagecachewarmer" + "'", str11,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(clientConnectionInfo23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl25);
    org.junit.Assert.assertNotNull(authManager28);
    org.junit.Assert.assertNotNull(authManager29);
    org.junit.Assert.assertNotNull(authManager30);
    org.junit.Assert.assertNotNull(authManager31);
    org.junit.Assert.assertNotNull(authManager32);
    org.junit.Assert.assertNotNull(authManager33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "pagecachewarmer" + "'", str35,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNotNull(authSubject37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertTrue("'" + accessMode50 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode50.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
  }

  @Test
  public void test1810() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1810");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = defaultLoginContext0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "AUTH_DISABLED with FULL", abstractSecurityLog7);
    boolean boolean10 = securityContextEnterpriseImpl8.allowExecuteAdminProcedure((int) (short) 1);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
  }

  @Test
  public void test1811() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1811");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.init();
    securityProviderAuthDisabledImpl0.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
  }

  @Test
  public void test1812() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1812");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) (short) 0, constraintDescriptor8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1813() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1813");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 6362, namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 'a', namedDatabaseId13);
  }

  @Test
  public void test1814() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1814");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) -1, namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 0, namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId14);
  }

  @Test
  public void test1815() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1815");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) '4', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 'a', namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) ' ', namedDatabaseId20);
  }

  @Test
  public void test1816() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1816");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl4.connectionInfo();
    java.lang.Class<?> wildcardClass10 = clientConnectionInfo9.getClass();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(wildcardClass10);
  }

  @Test
  public void test1817() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1817");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.stop();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    java.lang.String str11 = securityContextEnterpriseImpl10.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl10.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource15 = null;
    boolean boolean16 = securityContextEnterpriseImpl10.allowsAdminAction(adminActionOnResource15);
    java.lang.String str17 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl10;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl10;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo20 = securityContextEnterpriseImpl10.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo20);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = defaultLoginContext21.authorize(
        idLookup22, "neo4j", abstractSecurityLog24);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup26 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = defaultLoginContext21.authorize(
        idLookup26, "localhost", abstractSecurityLog28);
    java.util.Set<java.lang.String> strSet30 = defaultLoginContext21.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup31 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = defaultLoginContext21.authorize(
        idLookup31, ".cacheprof", abstractSecurityLog33);
    defaultAuthManager0.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNull(str11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AUTH_DISABLED with FULL" + "'", str14,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo20);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(strSet30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
  }

  @Test
  public void test1818() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1818");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager5.start();
    authManager5.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test1819() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1819");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
  }

  @Test
  public void test1820() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1820");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    long long7 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test1821() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1821");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.claauch();
    defaultAuthManager0.stop();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList5 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    defaultAuthManager0.start();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList5);
  }

  @Test
  public void test1822() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1822");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test1823() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1823");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) '#', nodeKeyConstraintDescriptor7, (long) '4');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1824() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1824");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 100, constraintDescriptor8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1825() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1825");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) (short) 10, constraintDescriptor8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test1826() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1826");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1827() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1827");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) -1, namedDatabaseId20);
  }

  @Test
  public void test1828() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1828");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog9);
    boolean boolean12 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure(
        (int) (short) 10);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo13 = securityContextEnterpriseImpl10.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext14 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo13);
    org.junit.Assert.assertNotNull(defaultLoginContext14);
  }

  @Test
  public void test1829() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1829");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog7);
    java.util.Set<java.lang.String> strSet9 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet10 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = defaultLoginContext0.authorize(
        idLookup11, "pagecachewarmer", abstractSecurityLog13);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(strSet9);
    org.junit.Assert.assertNotNull(strSet10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
  }

  @Test
  public void test1830() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1830");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 1, namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId16);
  }

  @Test
  public void test1831() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1831");
    }
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext0 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode1 = securityContext0.mode();
    java.lang.String str2 = securityContext0.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode3 = securityContext0.mode();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler4 = null;
    securityContext0.assertCredentialsNotExpired(securityAuthorizationHandler4);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = securityContext0.connectionInfo();
    org.junit.Assert.assertNotNull(securityContext0);
    org.junit.Assert.assertTrue(
        "'" + accessMode1 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode1.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str2);
    org.junit.Assert.assertTrue(
        "'" + accessMode3 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode3.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
  }

  @Test
  public void test1832() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1832");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str8 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str9 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config10 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning12 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold14 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config10, systemNanoClock11, logPruning12, logProvider13);
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "continuous" + "'", str6, "continuous");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "continuous" + "'", str7, "continuous");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "continuous" + "'", str8, "continuous");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "continuous" + "'", str9, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold14);
  }

  @Test
  public void test1833() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1833");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    int int7 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor9 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor11 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) (byte) 1, nodeKeyConstraintDescriptor9, (long) (short) 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
  }

  @Test
  public void test1834() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1834");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    org.neo4j.monitoring.Monitors monitors10 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler11 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    org.neo4j.logging.Log log13 = null;
    org.neo4j.configuration.Config config14 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors10, jobScheduler11, systemNanoClock12, log13, config14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
  }

  @Test
  public void test1835() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1835");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    long long7 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(1L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 10);
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
  }

  @Test
  public void test1836() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1836");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager9);
    org.junit.Assert.assertNotNull(authManager10);
  }

  @Test
  public void test1837() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1837");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str15 = securityContextEnterpriseImpl13.description();
    boolean boolean17 = securityContextEnterpriseImpl13.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode18);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = defaultLoginContext20.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext22 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo21);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl23.authorize(
        idLookup24, "neo4j", abstractSecurityLog26);
    java.lang.String str28 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl27.withMode(
        accessMode29);
    java.lang.String str31 = securityContextEnterpriseImpl27.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource32 = null;
    boolean boolean33 = securityContextEnterpriseImpl27.allowsAdminAction(adminActionOnResource32);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl27.withMode(
        adminAccessMode34);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode36 = securityContextEnterpriseImpl27.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo21, accessMode36, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl19.withMode(
        accessMode36);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup41 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl40.authorize(
        idLookup41, "neo4j", abstractSecurityLog43);
    java.lang.String str45 = securityContextEnterpriseImpl44.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl44.withMode(
        accessMode46);
    java.lang.String str48 = securityContextEnterpriseImpl44.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource49 = null;
    boolean boolean50 = securityContextEnterpriseImpl44.allowsAdminAction(adminActionOnResource49);
    java.lang.String str51 = securityContextEnterpriseImpl44.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl44;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl44;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo54 = securityContextEnterpriseImpl44.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext55 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode56 = securityContext55.mode();
    java.lang.String str57 = securityContext55.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode58 = securityContext55.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl60 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo54, accessMode58,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext61 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo62 = defaultLoginContext61.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext64 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode58, clientConnectionInfo62, ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup66 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog68 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = securityContextEnterpriseImpl65.authorize(
        idLookup66, "neo4j", abstractSecurityLog68);
    java.lang.String str70 = securityContextEnterpriseImpl69.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode71 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl72 = securityContextEnterpriseImpl69.withMode(
        accessMode71);
    java.lang.String str73 = securityContextEnterpriseImpl69.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource74 = null;
    boolean boolean75 = securityContextEnterpriseImpl69.allowsAdminAction(adminActionOnResource74);
    java.lang.String str76 = securityContextEnterpriseImpl69.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl69;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl69;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo79 = securityContextEnterpriseImpl69.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext80 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo79);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext82 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode58, clientConnectionInfo79, "enterpriseConstraints");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext84 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode36, clientConnectionInfo79, "");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertNotNull(loginContext22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNull(str28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AUTH_DISABLED with FULL" + "'", str31,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertTrue("'" + accessMode36 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode36.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertNull(str45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AUTH_DISABLED with FULL" + "'", str48,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AUTH_DISABLED with FULL" + "'", str51,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo54);
    org.junit.Assert.assertNotNull(securityContext55);
    org.junit.Assert.assertTrue("'" + accessMode56 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode56.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str57);
    org.junit.Assert.assertTrue("'" + accessMode58 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode58.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl60);
    org.junit.Assert.assertNotNull(defaultLoginContext61);
    org.junit.Assert.assertNotNull(clientConnectionInfo62);
    org.junit.Assert.assertNotNull(securityContext64);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertNull(str70);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl72);
    org.junit.Assert.assertEquals("'" + str73 + "' != '" + "AUTH_DISABLED with FULL" + "'", str73,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    org.junit.Assert.assertEquals("'" + str76 + "' != '" + "AUTH_DISABLED with FULL" + "'", str76,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo79);
    org.junit.Assert.assertNotNull(defaultLoginContext80);
    org.junit.Assert.assertNotNull(securityContext82);
    org.junit.Assert.assertNotNull(securityContext84);
  }

  @Test
  public void test1838() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1838");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
  }

  @Test
  public void test1839() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1839");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext1 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = securityContext1.mode();
    java.lang.String str3 = securityContext1.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = securityContext1.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject5 = securityContext1.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = defaultLoginContext6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext8 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext9 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl14.withMode(
        accessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl14.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl14.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet23 = defaultLoginContext21.roeSet();
    java.util.Set<java.lang.String> strSet24 = defaultLoginContext21.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject5, clientConnectionInfo7, accessMode20, strSet24, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup28 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl27.authorize(
        idLookup28, "neo4j", abstractSecurityLog30);
    java.lang.String str32 = securityContextEnterpriseImpl31.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl31.withMode(
        accessMode33);
    java.lang.String str35 = securityContextEnterpriseImpl31.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource36 = null;
    boolean boolean37 = securityContextEnterpriseImpl31.allowsAdminAction(adminActionOnResource36);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource38 = null;
    boolean boolean39 = securityContextEnterpriseImpl31.allowsAdminAction(adminActionOnResource38);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo40 = securityContextEnterpriseImpl31.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext42 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode20, clientConnectionInfo40, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext43 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo40);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup44 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = defaultLoginContext43.authorize(
        idLookup44, "enterpriseConstraints", abstractSecurityLog46);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl47;
    org.junit.Assert.assertNotNull(securityContext1);
    org.junit.Assert.assertTrue(
        "'" + accessMode2 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode2.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertTrue(
        "'" + accessMode4 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode4.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(defaultLoginContext8);
    org.junit.Assert.assertNotNull(defaultLoginContext9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(strSet23);
    org.junit.Assert.assertNotNull(strSet24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNull(str32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AUTH_DISABLED with FULL" + "'", str35,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo40);
    org.junit.Assert.assertNotNull(securityContext42);
    org.junit.Assert.assertNotNull(defaultLoginContext43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
  }

  @Test
  public void test1840() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1840");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "pagecachewarmer", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = defaultLoginContext0.connectionInfo();
    java.util.Set<java.lang.String> strSet10 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = defaultLoginContext0.authorize(
        idLookup11, "localhost", abstractSecurityLog13);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(strSet10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
  }

  @Test
  public void test1841() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1841");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 1, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (byte) 10, namedDatabaseId14);
  }

  @Test
  public void test1842() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1842");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl19 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl19.start();
    org.neo4j.kernel.api.security.AuthManager authManager21 = securityProviderAuthDisabledImpl19.loopbackAuthManager();
    securityProviderAuthDisabledImpl19.stop();
    org.neo4j.kernel.api.security.AuthManager authManager23 = securityProviderAuthDisabledImpl19.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager23.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl25);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl28.authorize(
        idLookup29, "neo4j", abstractSecurityLog31);
    java.lang.String str33 = securityContextEnterpriseImpl32.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl32.withMode(
        accessMode34);
    java.lang.String str36 = securityContextEnterpriseImpl32.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource37 = null;
    boolean boolean38 = securityContextEnterpriseImpl32.allowsAdminAction(adminActionOnResource37);
    authManager23.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl32);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = securityContextEnterpriseImpl32.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode40, "neo4j");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext43 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext43;
    java.util.Set<java.lang.String> strSet45 = defaultLoginContext43.roeSet();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl19);
    org.junit.Assert.assertNotNull(authManager21);
    org.junit.Assert.assertNotNull(authManager23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AUTH_DISABLED with FULL" + "'", str36,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertTrue("'" + accessMode40 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode40.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(defaultLoginContext43);
    org.junit.Assert.assertNotNull(strSet45);
  }

  @Test
  public void test1843() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1843");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource15 = null;
    boolean boolean16 = securityContextEnterpriseImpl14.allowsAdminAction(adminActionOnResource15);
    authManager5.log("localhost",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl14);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl14.connectionInfo();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
  }

  @Test
  public void test1844() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1844");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 2, namedDatabaseId12);
  }

  @Test
  public void test1845() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1845");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
  }

  @Test
  public void test1846() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1846");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long10 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize(100L);
    checkPointThresholdVolumetricPolicy1.initialize(10000L);
    checkPointThresholdVolumetricPolicy1.initialize(100L);
    java.util.function.Consumer<java.lang.String> strConsumer19 = null;
    try {
      boolean boolean20 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) ' ', 1L,
          strConsumer19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
  }

  @Test
  public void test1847() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1847");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler11 = null;
    securityContextEnterpriseImpl10.assertCredentialsNotExpired(securityAuthorizationHandler11);
    boolean boolean14 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure((int) '4');
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
  }

  @Test
  public void test1848() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1848");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList5 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList5);
  }

  @Test
  public void test1849() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1849");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    defaultAuthManager0.start();
    defaultAuthManager0.stop();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
  }

  @Test
  public void test1850() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1850");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl4.subject();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl12 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl12.start();
    securityProviderAuthDisabledImpl12.stop();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl12.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager16 = securityProviderAuthDisabledImpl12.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager16.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl18);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl21.authorize(
        idLookup22, "neo4j", abstractSecurityLog24);
    authManager16.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl25);
    java.lang.String str27 = securityContextEnterpriseImpl25.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = securityContextEnterpriseImpl25.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl4.withMode(
        accessMode28);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl31 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl31.start();
    securityProviderAuthDisabledImpl31.stop();
    org.neo4j.kernel.api.security.AuthManager authManager34 = securityProviderAuthDisabledImpl31.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager35 = securityProviderAuthDisabledImpl31.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager36 = securityProviderAuthDisabledImpl31.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup39 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog41 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = securityContextEnterpriseImpl38.authorize(
        idLookup39, "neo4j", abstractSecurityLog41);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl38.withMode(
        accessMode43);
    java.lang.String str45 = securityContextEnterpriseImpl38.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject46 = securityContextEnterpriseImpl38.subject();
    authManager36.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl38);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject48 = securityContextEnterpriseImpl38.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext49 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo50 = defaultLoginContext49.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext51 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo50);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext52 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo50);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode53 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext54 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo55 = defaultLoginContext54.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext56 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo55);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext58 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode53, clientConnectionInfo55,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext59 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo55);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext60 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode61 = securityContext60.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo55, accessMode61, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode64 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext65 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject66 = defaultLoginContext65.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo67 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode68 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext69 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo70 = defaultLoginContext69.connectionInfo();
    java.util.Set<java.lang.String> strSet71 = defaultLoginContext69.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode64, authSubject66, clientConnectionInfo67, accessMode68, strSet71,
        "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl75 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode30, authSubject48, clientConnectionInfo50, accessMode61, strSet71,
        "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext77 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode28, clientConnectionInfo50, "user '' with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl12);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AUTH_DISABLED with FULL" + "'", str27,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode28 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode28.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl31);
    org.junit.Assert.assertNotNull(authManager34);
    org.junit.Assert.assertNotNull(authManager35);
    org.junit.Assert.assertNotNull(authManager36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertNull(str45);
    org.junit.Assert.assertNotNull(authSubject46);
    org.junit.Assert.assertNotNull(authSubject48);
    org.junit.Assert.assertNotNull(defaultLoginContext49);
    org.junit.Assert.assertNotNull(clientConnectionInfo50);
    org.junit.Assert.assertNotNull(defaultLoginContext51);
    org.junit.Assert.assertNotNull(loginContext52);
    org.junit.Assert.assertNotNull(defaultLoginContext54);
    org.junit.Assert.assertNotNull(clientConnectionInfo55);
    org.junit.Assert.assertNotNull(loginContext56);
    org.junit.Assert.assertNotNull(securityContext58);
    org.junit.Assert.assertNotNull(defaultLoginContext59);
    org.junit.Assert.assertNotNull(securityContext60);
    org.junit.Assert.assertTrue("'" + accessMode61 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode61.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl63);
    org.junit.Assert.assertNotNull(defaultLoginContext65);
    org.junit.Assert.assertNotNull(authSubject66);
    org.junit.Assert.assertNotNull(defaultLoginContext69);
    org.junit.Assert.assertNotNull(clientConnectionInfo70);
    org.junit.Assert.assertNotNull(strSet71);
    org.junit.Assert.assertNotNull(securityContext77);
  }

  @Test
  public void test1851() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1851");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1852() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1852");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl8 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl8.start();
    securityProviderAuthDisabledImpl8.stop();
    securityProviderAuthDisabledImpl8.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl8.inClusterAuthManager();
    securityProviderAuthDisabledImpl8.start();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl8.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl8.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl17.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl17.authorize(
        idLookup19, "localhost", abstractSecurityLog21);
    authManager15.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    boolean boolean24 = cachePopulatorExtensionFactory0.equals((java.lang.Object) authManager15);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext25 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet26 = defaultLoginContext25.roeSet();
    java.util.Set<java.lang.String> strSet28 = defaultLoginContext25.roeSet();
    java.util.Set<java.lang.String> strSet29 = defaultLoginContext25.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext25;
    java.util.Set<java.lang.String> strSet31 = defaultLoginContext25.roeSet();
    boolean boolean32 = cachePopulatorExtensionFactory0.equals((java.lang.Object) strSet31);
    boolean boolean34 = cachePopulatorExtensionFactory0.equals((java.lang.Object) 0.0d);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl8);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(defaultLoginContext25);
    org.junit.Assert.assertNotNull(strSet26);
    org.junit.Assert.assertNotNull(strSet28);
    org.junit.Assert.assertNotNull(strSet29);
    org.junit.Assert.assertNotNull(strSet31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1853() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1853");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long3 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (short) -1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
  }

  @Test
  public void test1854() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1854");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler2 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler2);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource4 = null;
    boolean boolean5 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
  }

  @Test
  public void test1855() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1855");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "pagecachewarmer", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = defaultLoginContext0.connectionInfo();
    java.util.Set<java.lang.String> strSet10 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = defaultLoginContext0.authorize(
        idLookup11, "verbose", abstractSecurityLog13);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(strSet10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
  }

  @Test
  public void test1856() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1856");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '4', namedDatabaseId21);
  }

  @Test
  public void test1857() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1857");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext8 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager9 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager9.stop();
    defaultAuthManager9.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager9.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList13 = defaultAuthManager9.gepiggatgcfList();
    defaultAuthManager9.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager9.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl16);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl16.authorize(
        idLookup18, "", abstractSecurityLog20);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode22 = securityContextEnterpriseImpl16.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo5, accessMode22, "");
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = securityContextEnterpriseImpl24.mode();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(defaultLoginContext8);
    org.junit.Assert.assertNotNull(defaultAuthManager9);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(strMapList13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertTrue("'" + accessMode22 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode22.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertTrue("'" + accessMode25 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode25.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1858() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1858");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1859() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1859");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(0L, namedDatabaseId15);
  }

  @Test
  public void test1860() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1860");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.lock.LockTracer lockTracer5 = enterpriseTracerFactory0.createLockTracer(clock4);
    java.time.Clock clock6 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer7 = enterpriseTracerFactory0.createDatabaseTracer(
        clock6);
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(lockTracer5);
    org.junit.Assert.assertNotNull(databaseTracer7);
    org.junit.Assert.assertNotNull(databaseTracer9);
  }

  @Test
  public void test1861() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1861");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList5 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.init();
    defaultAuthManager0.shutdown();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList5);
  }

  @Test
  public void test1862() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1862");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode6);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject8 = securityContextEnterpriseImpl7.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode9 = securityContextEnterpriseImpl7.mode();
    boolean boolean11 = securityContextEnterpriseImpl7.allowExecuteAdminProcedure(6362);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(authSubject8);
    org.junit.Assert.assertTrue(
        "'" + accessMode9 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode9.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
  }

  @Test
  public void test1863() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1863");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 0);
    checkPointThresholdVolumetricPolicy1.initialize((long) (byte) 10);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 100);
    java.util.function.Consumer<java.lang.String> strConsumer17 = null;
    try {
      boolean boolean18 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(0L, 1L,
          strConsumer17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
  }

  @Test
  public void test1864() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1864");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl8 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl8.start();
    securityProviderAuthDisabledImpl8.stop();
    securityProviderAuthDisabledImpl8.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl8.inClusterAuthManager();
    securityProviderAuthDisabledImpl8.start();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl8.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl8.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl17.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl17.authorize(
        idLookup19, "localhost", abstractSecurityLog21);
    authManager15.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    boolean boolean24 = cachePopulatorExtensionFactory0.equals((java.lang.Object) authManager15);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext25 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet27 = defaultLoginContext25.roeSet();
    java.util.Set<java.lang.String> strSet28 = defaultLoginContext25.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup30 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = defaultLoginContext25.authorize(
        idLookup30, "pagecachewarmer", abstractSecurityLog32);
    boolean boolean34 = cachePopulatorExtensionFactory0.equals((java.lang.Object) idLookup30);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext35 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker36 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle37 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext35, componentsChecker36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl8);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(defaultLoginContext25);
    org.junit.Assert.assertNotNull(strSet27);
    org.junit.Assert.assertNotNull(strSet28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
  }

  @Test
  public void test1865() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1865");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 100);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test1866() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1866");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl1 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl1.authorize(
        idLookup2, "neo4j", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl1.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl1.authorize(
        idLookup8, "", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler12 = null;
    securityContextEnterpriseImpl1.assertCredentialsNotExpired(securityAuthorizationHandler12);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject14 = securityContextEnterpriseImpl1.subject();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl15 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl15.start();
    securityProviderAuthDisabledImpl15.stop();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl15.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager19 = securityProviderAuthDisabledImpl15.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager20 = securityProviderAuthDisabledImpl15.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup23 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl22.authorize(
        idLookup23, "neo4j", abstractSecurityLog25);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl22.withMode(
        accessMode27);
    java.lang.String str29 = securityContextEnterpriseImpl22.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject30 = securityContextEnterpriseImpl22.subject();
    authManager20.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject32 = securityContextEnterpriseImpl22.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo33 = securityContextEnterpriseImpl22.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo36 = defaultLoginContext35.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject37 = defaultLoginContext35.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo38 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext39 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = securityContext39.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext41 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet42 = defaultLoginContext41.roeSet();
    java.util.Set<java.lang.String> strSet44 = defaultLoginContext41.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode34, authSubject37, clientConnectionInfo38, accessMode40, strSet44,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup48 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog50 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl51 = securityContextEnterpriseImpl47.authorize(
        idLookup48, "neo4j", abstractSecurityLog50);
    java.lang.String str52 = securityContextEnterpriseImpl51.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode53 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl54 = securityContextEnterpriseImpl51.withMode(
        accessMode53);
    java.lang.String str55 = securityContextEnterpriseImpl51.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject56 = securityContextEnterpriseImpl51.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode57 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = securityContextEnterpriseImpl51.withMode(
        adminAccessMode57);
    boolean boolean60 = securityContextEnterpriseImpl58.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode61 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = securityContextEnterpriseImpl58.withMode(
        adminAccessMode61);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo63 = securityContextEnterpriseImpl58.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext65 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode40, clientConnectionInfo63, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo33, accessMode40, "pagecachewarmer");
    boolean boolean69 = securityContextEnterpriseImpl67.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo70 = securityContextEnterpriseImpl67.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext71 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo70);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext72 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup75 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog77 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl78 = defaultLoginContext72.authorize(
        idLookup75, "user '' with FULL", abstractSecurityLog77);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl79 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup80 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog82 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl83 = securityContextEnterpriseImpl79.authorize(
        idLookup80, "neo4j", abstractSecurityLog82);
    java.lang.String str84 = securityContextEnterpriseImpl83.database();
    java.lang.String str85 = securityContextEnterpriseImpl83.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode86 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl87 = securityContextEnterpriseImpl83.withMode(
        adminAccessMode86);
    boolean boolean89 = securityContextEnterpriseImpl87.allowExecuteAdminProcedure((int) (short) 1);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode90 = securityContextEnterpriseImpl87.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl91 = securityContextEnterpriseImpl78.withMode(
        accessMode90);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl92 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject93 = securityContextEnterpriseImpl92.subject();
    java.util.Set<java.lang.String> strSet94 = securityContextEnterpriseImpl92.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl96 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject14, clientConnectionInfo70, accessMode90, strSet94, "");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject14);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl15);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertNotNull(authManager20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNull(str29);
    org.junit.Assert.assertNotNull(authSubject30);
    org.junit.Assert.assertNotNull(authSubject32);
    org.junit.Assert.assertNotNull(clientConnectionInfo33);
    org.junit.Assert.assertNotNull(defaultLoginContext35);
    org.junit.Assert.assertNotNull(clientConnectionInfo36);
    org.junit.Assert.assertNotNull(authSubject37);
    org.junit.Assert.assertNotNull(securityContext39);
    org.junit.Assert.assertTrue("'" + accessMode40 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode40.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext41);
    org.junit.Assert.assertNotNull(strSet42);
    org.junit.Assert.assertNotNull(strSet44);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl51);
    org.junit.Assert.assertNull(str52);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl54);
    org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AUTH_DISABLED with FULL" + "'", str55,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject56);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNotNull(clientConnectionInfo63);
    org.junit.Assert.assertNotNull(securityContext65);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl67);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo70);
    org.junit.Assert.assertNotNull(defaultLoginContext71);
    org.junit.Assert.assertNotNull(defaultLoginContext72);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl78);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl79);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl83);
    org.junit.Assert.assertNull(str84);
    org.junit.Assert.assertEquals("'" + str85 + "' != '" + "AUTH_DISABLED with FULL" + "'", str85,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl87);
    org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    org.junit.Assert.assertTrue("'" + accessMode90 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode90.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl91);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl92);
    org.junit.Assert.assertNotNull(authSubject93);
    org.junit.Assert.assertNotNull(strSet94);
  }

  @Test
  public void test1867() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1867");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) (byte) 100, nodeKeyConstraintDescriptor5, (long) (short) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1868() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1868");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
  }

  @Test
  public void test1869() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1869");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext10 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = securityContext10.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo9, accessMode11,
        "Property existence constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext14 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo9);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext15 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo9);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext16 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(securityContext10);
    org.junit.Assert.assertTrue("'" + accessMode11 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode11.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(defaultLoginContext14);
    org.junit.Assert.assertNotNull(loginContext15);
    org.junit.Assert.assertNotNull(loginContext16);
  }

  @Test
  public void test1870() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1870");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager10.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(authManager9);
    org.junit.Assert.assertNotNull(authManager10);
  }

  @Test
  public void test1871() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1871");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1872() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1872");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.start();
    defaultAuthManager0.stop();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl7 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl7.start();
    securityProviderAuthDisabledImpl7.start();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl7.inClusterAuthManager();
    securityProviderAuthDisabledImpl7.stop();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl7.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl7.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl7.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    java.lang.String str21 = securityContextEnterpriseImpl20.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl20.withMode(
        adminAccessMode22);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo24 = securityContextEnterpriseImpl23.connectionInfo();
    authManager14.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl23);
    defaultAuthManager0.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl23);
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl7);
    org.junit.Assert.assertNotNull(authManager10);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(clientConnectionInfo24);
  }

  @Test
  public void test1873() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1873");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.lang.String str8 = enterpriseTracerFactory0.getName();
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.lang.String str11 = enterpriseTracerFactory0.getName();
    java.time.Clock clock12 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer13 = enterpriseTracerFactory0.createDatabaseTracer(
        clock12);
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "verbose" + "'", str8, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "verbose" + "'", str11, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer13);
  }

  @Test
  public void test1874() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1874");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.lang.String str2 = enterpriseTracerFactory0.getName();
    java.lang.Class<?> wildcardClass3 = enterpriseTracerFactory0.getClass();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "verbose" + "'", str2, "verbose");
    org.junit.Assert.assertNotNull(wildcardClass3);
  }

  @Test
  public void test1875() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1875");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = defaultLoginContext6.authorize(
        idLookup8, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
  }

  @Test
  public void test1876() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1876");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler10 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
  }

  @Test
  public void test1877() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1877");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl10;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl10.authorize(
        idLookup12, "", abstractSecurityLog14);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl16 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl16.start();
    securityProviderAuthDisabledImpl16.stop();
    securityProviderAuthDisabledImpl16.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager20 = securityProviderAuthDisabledImpl16.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager21 = securityProviderAuthDisabledImpl16.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl23.authorize(
        idLookup24, "neo4j", abstractSecurityLog26);
    java.lang.String str28 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl27.withMode(
        accessMode29);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler31 = null;
    securityContextEnterpriseImpl27.assertCredentialsNotExpired(securityAuthorizationHandler31);
    authManager21.log("pagecachewarmer",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl27);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler34 = null;
    securityContextEnterpriseImpl27.assertCredentialsNotExpired(securityAuthorizationHandler34);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode36 = securityContextEnterpriseImpl27.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl15.withMode(
        accessMode36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl16);
    org.junit.Assert.assertNotNull(authManager20);
    org.junit.Assert.assertNotNull(authManager21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNull(str28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + accessMode36 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode36.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
  }

  @Test
  public void test1878() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1878");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.time.Clock clock6 = null;
    org.neo4j.lock.LockTracer lockTracer7 = enterpriseTracerFactory0.createLockTracer(clock6);
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    java.time.Clock clock10 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer11 = enterpriseTracerFactory0.createDatabaseTracer(
        clock10);
    java.lang.String str12 = enterpriseTracerFactory0.getName();
    java.lang.String str13 = enterpriseTracerFactory0.getName();
    java.time.Clock clock14 = null;
    org.neo4j.lock.LockTracer lockTracer15 = enterpriseTracerFactory0.createLockTracer(clock14);
    java.lang.String str16 = enterpriseTracerFactory0.getName();
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertNotNull(lockTracer7);
    org.junit.Assert.assertNotNull(databaseTracer9);
    org.junit.Assert.assertNotNull(databaseTracer11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "verbose" + "'", str12, "verbose");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "verbose" + "'", str13, "verbose");
    org.junit.Assert.assertNotNull(lockTracer15);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "verbose" + "'", str16, "verbose");
  }

  @Test
  public void test1879() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1879");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList4);
  }

  @Test
  public void test1880() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1880");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId17);
  }

  @Test
  public void test1881() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1881");
    }
    org.neo4j.kernel.api.security.AuthManager authManager0 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl6.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl6.withMode(
        accessMode8);
    java.lang.String str10 = securityContextEnterpriseImpl6.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource11 = null;
    boolean boolean12 = securityContextEnterpriseImpl6.allowsAdminAction(adminActionOnResource11);
    java.lang.String str13 = securityContextEnterpriseImpl6.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    authManager0.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    java.lang.String str17 = securityContextEnterpriseImpl6.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContextEnterpriseImpl6.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet21 = defaultLoginContext19.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = defaultLoginContext19.authorize(
        idLookup22, "PageCacheProfileLoader", abstractSecurityLog24);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = securityContextEnterpriseImpl25.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext28 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo26, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject30 = securityContextEnterpriseImpl29.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl29.withMode(
        adminAccessMode31);
    java.lang.String str33 = securityContextEnterpriseImpl29.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo34 = securityContextEnterpriseImpl29.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo34);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo34);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext37 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo34);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext39 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo34, "");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext40 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo34);
    org.junit.Assert.assertNotNull(authManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AUTH_DISABLED with FULL" + "'", str10,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AUTH_DISABLED with FULL" + "'", str13,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(strSet21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(clientConnectionInfo26);
    org.junit.Assert.assertNotNull(securityContext28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(authSubject30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertNotNull(clientConnectionInfo34);
    org.junit.Assert.assertNotNull(defaultLoginContext35);
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(loginContext37);
    org.junit.Assert.assertNotNull(securityContext39);
    org.junit.Assert.assertNotNull(loginContext40);
  }

  @Test
  public void test1882() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1882");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = defaultLoginContext19.authorize(
        idLookup24, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog26);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = defaultLoginContext19.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo28);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext30 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(clientConnectionInfo28);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(defaultLoginContext30);
  }

  @Test
  public void test1883() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1883");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor7,
          propertyCursor8, labelSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1884() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1884");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) -1, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId20);
  }

  @Test
  public void test1885() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1885");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher6 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher6.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher6.prlcpdForNa((long) 6362, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher6.wapclForNa((long) 6362, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    basePageCacheLoadingWatcher6.prlcpdForNa((long) 0, namedDatabaseId17);
    boolean boolean19 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) basePageCacheLoadingWatcher6);
    java.lang.String str20 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext21 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker22 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle23 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext21, componentsChecker22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pagecachewarmer" + "'", str20,
        "pagecachewarmer");
  }

  @Test
  public void test1886() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1886");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext8 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo5);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext9 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(loginContext8);
    org.junit.Assert.assertNotNull(defaultLoginContext9);
  }

  @Test
  public void test1887() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1887");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(authManager10);
  }

  @Test
  public void test1888() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1888");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1889() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1889");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (-1), namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId8);
  }

  @Test
  public void test1890() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1890");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl4.loopbackAuthManager();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.init();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(authManager12);
  }

  @Test
  public void test1891() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1891");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str8 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str9 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str10 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.Class<?> wildcardClass11 = checkPointThresholdPolicyContinuousImpl0.getClass();
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "continuous" + "'", str6, "continuous");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "continuous" + "'", str7, "continuous");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "continuous" + "'", str8, "continuous");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "continuous" + "'", str9, "continuous");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "continuous" + "'", str10, "continuous");
    org.junit.Assert.assertNotNull(wildcardClass11);
  }

  @Test
  public void test1892() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1892");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler1 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler1);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.authorize(
        idLookup3, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog5);
    java.util.Set<java.lang.String> strSet7 = securityContextEnterpriseImpl0.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContextEnterpriseImpl0.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext10 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = defaultLoginContext10.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl12.authorize(
        idLookup13, "neo4j", abstractSecurityLog15);
    java.lang.String str17 = securityContextEnterpriseImpl16.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl16.withMode(
        accessMode18);
    java.lang.String str20 = securityContextEnterpriseImpl16.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource21 = null;
    boolean boolean22 = securityContextEnterpriseImpl16.allowsAdminAction(adminActionOnResource21);
    java.lang.String str23 = securityContextEnterpriseImpl16.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl16;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl16;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = securityContextEnterpriseImpl16.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup28 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl27.authorize(
        idLookup28, "neo4j", abstractSecurityLog30);
    java.lang.String str32 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource33 = null;
    boolean boolean34 = securityContextEnterpriseImpl27.allowsAdminAction(adminActionOnResource33);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl27.authorize(
        idLookup35, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog37);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContextEnterpriseImpl38.mode();
    java.lang.String[] strArray52 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean54 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet53, strArray52);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode9, authSubject11, clientConnectionInfo26, accessMode39,
        (java.util.Set<java.lang.String>) strSet53, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo8, accessMode39, "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext59 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo8);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext60 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertNotNull(defaultLoginContext10);
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNull(str32);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray52);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(defaultLoginContext59);
    org.junit.Assert.assertNotNull(defaultLoginContext60);
  }

  @Test
  public void test1893() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1893");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(10L, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 2, namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (byte) 0, namedDatabaseId16);
  }

  @Test
  public void test1894() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1894");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList2 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    org.neo4j.kernel.api.security.AuthManager authManager5 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource16 = null;
    boolean boolean17 = securityContextEnterpriseImpl11.allowsAdminAction(adminActionOnResource16);
    java.lang.String str18 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl11;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl11;
    authManager5.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl11);
    java.lang.String str22 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = securityContextEnterpriseImpl11.mode();
    org.neo4j.kernel.api.security.AuthManager authManager24 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup27 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl26.authorize(
        idLookup27, "neo4j", abstractSecurityLog29);
    java.lang.String str31 = securityContextEnterpriseImpl30.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl30.withMode(
        accessMode32);
    java.lang.String str34 = securityContextEnterpriseImpl30.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource35 = null;
    boolean boolean36 = securityContextEnterpriseImpl30.allowsAdminAction(adminActionOnResource35);
    java.lang.String str37 = securityContextEnterpriseImpl30.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl30;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl30;
    authManager24.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl30);
    java.lang.String str41 = securityContextEnterpriseImpl30.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode42 = securityContextEnterpriseImpl30.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup44 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl43.authorize(
        idLookup44, "neo4j", abstractSecurityLog46);
    java.lang.String str48 = securityContextEnterpriseImpl47.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode49 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl50 = securityContextEnterpriseImpl47.withMode(
        accessMode49);
    java.lang.String str51 = securityContextEnterpriseImpl47.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo52 = securityContextEnterpriseImpl47.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext54 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode42, clientConnectionInfo52, "volumetric");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext56 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode23, clientConnectionInfo52, "localhost");
    defaultAuthManager0.log("", securityContext56);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContext56;
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList2);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str22);
    org.junit.Assert.assertTrue("'" + accessMode23 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode23.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authManager24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNull(str31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AUTH_DISABLED with FULL" + "'", str34,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AUTH_DISABLED with FULL" + "'", str37,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str41);
    org.junit.Assert.assertTrue("'" + accessMode42 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode42.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNull(str48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl50);
    org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AUTH_DISABLED with FULL" + "'", str51,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo52);
    org.junit.Assert.assertNotNull(securityContext54);
    org.junit.Assert.assertNotNull(securityContext56);
  }

  @Test
  public void test1895() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1895");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.initialize((long) '#');
    checkPointThresholdVolumetricPolicy1.initialize(10000L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test1896() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1896");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    long long12 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    long long13 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 1);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 1);
    java.util.function.Consumer<java.lang.String> strConsumer20 = null;
    try {
      boolean boolean21 = checkPointThresholdVolumetricPolicy8.isCheckPointingNeeded(0L,
          (long) (byte) -1, strConsumer20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
  }

  @Test
  public void test1897() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1897");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet1 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet4 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "hi!", abstractSecurityLog7);
    java.util.Set<java.lang.String> strSet9 = defaultLoginContext0.roeSet();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet1);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(strSet4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(strSet9);
  }

  @Test
  public void test1898() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1898");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject17 = securityContextEnterpriseImpl7.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl7.withMode(
        adminAccessMode18);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(authSubject17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
  }

  @Test
  public void test1899() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1899");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl2 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl2.start();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl2.inClusterAuthManager();
    securityProviderAuthDisabledImpl2.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl2.authManager();
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl2);
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl2.authManager();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test1900() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1900");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    java.time.Clock clock13 = null;
    org.neo4j.lock.LockTracer lockTracer14 = enterpriseTracerFactory0.createLockTracer(clock13);
    java.time.Clock clock15 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer16 = enterpriseTracerFactory0.createDatabaseTracer(
        clock15);
    java.time.Clock clock17 = null;
    org.neo4j.lock.LockTracer lockTracer18 = enterpriseTracerFactory0.createLockTracer(clock17);
    org.neo4j.monitoring.Monitors monitors19 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler20 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock21 = null;
    org.neo4j.logging.Log log22 = null;
    org.neo4j.configuration.Config config23 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer24 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors19, jobScheduler20, systemNanoClock21, log22, config23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
    org.junit.Assert.assertNotNull(lockTracer14);
    org.junit.Assert.assertNotNull(databaseTracer16);
    org.junit.Assert.assertNotNull(lockTracer18);
  }

  @Test
  public void test1901() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1901");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10L, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
    java.lang.Class<?> wildcardClass18 = pageCacheLoadingWatcherDefaultImpl1.getClass();
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test1902() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1902");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog9);
    boolean boolean12 = securityContextEnterpriseImpl6.allowExecuteAdminProcedure((int) (short) 1);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = securityContextEnterpriseImpl6.mode();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertNull(accessMode13);
  }

  @Test
  public void test1903() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1903");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode6);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject8 = securityContextEnterpriseImpl7.subject();
    java.lang.String str9 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext11 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = securityContext11.mode();
    java.lang.String str13 = securityContext11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContext11.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContext11.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext16 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = defaultLoginContext16.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext18 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo17);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo17);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup21 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl20.authorize(
        idLookup21, "neo4j", abstractSecurityLog23);
    java.lang.String str25 = securityContextEnterpriseImpl24.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl24.withMode(
        accessMode26);
    java.lang.String str28 = securityContextEnterpriseImpl24.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject29 = securityContextEnterpriseImpl24.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = securityContextEnterpriseImpl24.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext31 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet33 = defaultLoginContext31.roeSet();
    java.util.Set<java.lang.String> strSet34 = defaultLoginContext31.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode10, authSubject15, clientConnectionInfo17, accessMode30, strSet34, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo17);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext38 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo39 = defaultLoginContext38.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext40 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo39);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup42 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog44 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = securityContextEnterpriseImpl41.authorize(
        idLookup42, "neo4j", abstractSecurityLog44);
    java.lang.String str46 = securityContextEnterpriseImpl45.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode47 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = securityContextEnterpriseImpl45.withMode(
        accessMode47);
    java.lang.String str49 = securityContextEnterpriseImpl45.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource50 = null;
    boolean boolean51 = securityContextEnterpriseImpl45.allowsAdminAction(adminActionOnResource50);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl45.withMode(
        adminAccessMode52);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = securityContextEnterpriseImpl45.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo39, accessMode54, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo17, accessMode54,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl7.withMode(
        accessMode54);
    boolean boolean61 = securityContextEnterpriseImpl7.allowExecuteAdminProcedure((int) ' ');
    boolean boolean63 = securityContextEnterpriseImpl7.allowExecuteAdminProcedure((int) (short) -1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(authSubject8);
    org.junit.Assert.assertNull(str9);
    org.junit.Assert.assertNotNull(securityContext11);
    org.junit.Assert.assertTrue("'" + accessMode12 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode12.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str13);
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(defaultLoginContext16);
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(defaultLoginContext18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNull(str25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AUTH_DISABLED with FULL" + "'", str28,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject29);
    org.junit.Assert.assertTrue("'" + accessMode30 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode30.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext31);
    org.junit.Assert.assertNotNull(strSet33);
    org.junit.Assert.assertNotNull(strSet34);
    org.junit.Assert.assertNotNull(defaultLoginContext37);
    org.junit.Assert.assertNotNull(defaultLoginContext38);
    org.junit.Assert.assertNotNull(clientConnectionInfo39);
    org.junit.Assert.assertNotNull(loginContext40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNull(str46);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AUTH_DISABLED with FULL" + "'", str49,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertTrue("'" + accessMode54 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode54.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
  }

  @Test
  public void test1904() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1904");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl4.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    java.lang.String str17 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler18 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test1905() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1905");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    authManager4.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode21);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject23 = securityContextEnterpriseImpl22.subject();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(authSubject23);
  }

  @Test
  public void test1906() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1906");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(0L, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) -1, namedDatabaseId21);
  }

  @Test
  public void test1907() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1907");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 1, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 2, namedDatabaseId19);
  }

  @Test
  public void test1908() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1908");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    int int8 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor9 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor10 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor11 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup12 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor9,
          propertyCursor10, labelSchemaDescriptor11, tokenNameLookup12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
  }

  @Test
  public void test1909() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1909");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher6 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher6.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher6.prlcpdForNa((long) 6362, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher6.wapclForNa((long) 6362, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    basePageCacheLoadingWatcher6.prlcpdForNa((long) 0, namedDatabaseId17);
    boolean boolean19 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) basePageCacheLoadingWatcher6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    basePageCacheLoadingWatcher6.wapclForNa((long) 'a', namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    basePageCacheLoadingWatcher6.wamsrdForNa(namedDatabaseId23);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test1910() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1910");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long12 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize(10L);
    long long15 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 6362);
    checkPointThresholdVolumetricPolicy1.checkPointHappened(100L);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 10);
    checkPointThresholdVolumetricPolicy1.initialize(0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
  }

  @Test
  public void test1911() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1911");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject24 = defaultLoginContext19.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(authSubject24);
  }

  @Test
  public void test1912() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1912");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler1 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler1);
    java.lang.String str3 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject4 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertNotNull(authSubject4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
  }

  @Test
  public void test1913() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1913");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    java.util.Set<java.lang.String> strSet16 = securityContextEnterpriseImpl4.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContextEnterpriseImpl4.mode();
    java.util.Set<java.lang.String> strSet19 = securityContextEnterpriseImpl4.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(strSet16);
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strSet19);
  }

  @Test
  public void test1914() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1914");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1915() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1915");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor7, propertyCursor8, relationTypeSchemaDescriptor9,
          tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1916() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1916");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler1 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler1);
    java.lang.String str3 = securityContextEnterpriseImpl0.database();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.authorize(
        idLookup5, "neo4j", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl4.withMode(
        accessMode9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl4.authorize(
        idLookup11, "", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl14.authorize(
        idLookup15, "AUTH_DISABLED with FULL", abstractSecurityLog17);
    java.lang.String str19 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl14.withMode(
        adminAccessMode20);
    java.lang.String str22 = securityContextEnterpriseImpl21.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = securityContextEnterpriseImpl21.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup25 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl24.authorize(
        idLookup25, "neo4j", abstractSecurityLog27);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl24.withMode(
        accessMode29);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup31 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl24.authorize(
        idLookup31, "", abstractSecurityLog33);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl34.authorize(
        idLookup35, "AUTH_DISABLED with FULL", abstractSecurityLog37);
    java.lang.String str39 = securityContextEnterpriseImpl34.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl34.withMode(
        adminAccessMode40);
    java.lang.String str42 = securityContextEnterpriseImpl41.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode43 = securityContextEnterpriseImpl41.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode44 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext45 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo46 = defaultLoginContext45.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext47 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo46);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext49 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode44, clientConnectionInfo46,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext50 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo46);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext52 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode43, clientConnectionInfo46, "neo4j");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext54 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode23, clientConnectionInfo46, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup56 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog58 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl55.authorize(
        idLookup56, "neo4j", abstractSecurityLog58);
    java.lang.String str60 = securityContextEnterpriseImpl59.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode61 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = securityContextEnterpriseImpl59.withMode(
        accessMode61);
    java.lang.String str63 = securityContextEnterpriseImpl59.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject64 = securityContextEnterpriseImpl59.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode65 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = securityContextEnterpriseImpl59.withMode(
        adminAccessMode65);
    boolean boolean68 = securityContextEnterpriseImpl66.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode69 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl70 = securityContextEnterpriseImpl66.withMode(
        adminAccessMode69);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo71 = securityContextEnterpriseImpl70.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext73 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode23, clientConnectionInfo71, "neo4j");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl74 = securityContextEnterpriseImpl0.withMode(
        accessMode23);
    java.lang.String str75 = securityContextEnterpriseImpl74.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AUTH_DISABLED with FULL" + "'", str19,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNull(str22);
    org.junit.Assert.assertTrue("'" + accessMode23 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode23.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AUTH_DISABLED with FULL" + "'", str39,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNull(str42);
    org.junit.Assert.assertTrue("'" + accessMode43 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode43.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext45);
    org.junit.Assert.assertNotNull(clientConnectionInfo46);
    org.junit.Assert.assertNotNull(loginContext47);
    org.junit.Assert.assertNotNull(securityContext49);
    org.junit.Assert.assertNotNull(defaultLoginContext50);
    org.junit.Assert.assertNotNull(securityContext52);
    org.junit.Assert.assertNotNull(securityContext54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNull(str60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AUTH_DISABLED with FULL" + "'", str63,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject64);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl70);
    org.junit.Assert.assertNotNull(clientConnectionInfo71);
    org.junit.Assert.assertNotNull(securityContext73);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl74);
    org.junit.Assert.assertNull(str75);
  }

  @Test
  public void test1917() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1917");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor5 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor5, relationshipScanCursor6, propertyCursor7,
          relationTypeSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1918() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1918");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
  }

  @Test
  public void test1919() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1919");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager6 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager6.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    java.lang.String str16 = securityContextEnterpriseImpl9.database();
    defaultAuthManager6.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    defaultAuthManager0.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(defaultAuthManager6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNull(str16);
  }

  @Test
  public void test1920() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1920");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = defaultLoginContext0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext2 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo1);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext3 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo1);
    java.util.Set<java.lang.String> strSet4 = defaultLoginContext3.roeSet();
    java.util.Set<java.lang.String> strSet5 = defaultLoginContext3.roeSet();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(defaultLoginContext2);
    org.junit.Assert.assertNotNull(defaultLoginContext3);
    org.junit.Assert.assertNotNull(strSet4);
    org.junit.Assert.assertNotNull(strSet5);
  }

  @Test
  public void test1921() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1921");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.authorize(
        idLookup5, "neo4j", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl8.withMode(
        adminAccessMode9);
    defaultAuthManager0.log("hi!",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl8);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject14 = securityContextEnterpriseImpl13.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl13.authorize(
        idLookup15, "localhost", abstractSecurityLog17);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource19 = null;
    boolean boolean20 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource19);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource21 = null;
    boolean boolean22 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource21);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler23 = null;
    securityContextEnterpriseImpl13.assertCredentialsNotExpired(securityAuthorizationHandler23);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode25);
    defaultAuthManager0.log("user '' with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl26);
    java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup30 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl29.authorize(
        idLookup30, "neo4j", abstractSecurityLog32);
    java.lang.String str34 = securityContextEnterpriseImpl33.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl33.withMode(
        accessMode35);
    java.lang.String str37 = securityContextEnterpriseImpl33.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource38 = null;
    boolean boolean39 = securityContextEnterpriseImpl33.allowsAdminAction(adminActionOnResource38);
    java.lang.String str40 = securityContextEnterpriseImpl33.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl33;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl33;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo43 = securityContextEnterpriseImpl33.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext44 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode45 = securityContext44.mode();
    java.lang.String str46 = securityContext44.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode47 = securityContext44.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo43, accessMode47,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext50 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo51 = defaultLoginContext50.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext52 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo51);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext53 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo51);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext55 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode47, clientConnectionInfo51, "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl56 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl56.start();
    securityProviderAuthDisabledImpl56.stop();
    org.neo4j.kernel.api.security.AuthManager authManager59 = securityProviderAuthDisabledImpl56.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager60 = securityProviderAuthDisabledImpl56.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager60.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl62);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup66 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog68 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = securityContextEnterpriseImpl65.authorize(
        idLookup66, "neo4j", abstractSecurityLog68);
    authManager60.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl69);
    java.lang.String str71 = securityContextEnterpriseImpl69.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo72 = securityContextEnterpriseImpl69.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup74 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog76 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = securityContextEnterpriseImpl73.authorize(
        idLookup74, "neo4j", abstractSecurityLog76);
    java.lang.String str78 = securityContextEnterpriseImpl77.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode79 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl80 = securityContextEnterpriseImpl77.withMode(
        accessMode79);
    java.lang.String str81 = securityContextEnterpriseImpl77.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource82 = null;
    boolean boolean83 = securityContextEnterpriseImpl77.allowsAdminAction(adminActionOnResource82);
    java.lang.String str84 = securityContextEnterpriseImpl77.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode85 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl86 = securityContextEnterpriseImpl77.withMode(
        adminAccessMode85);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode87 = securityContextEnterpriseImpl77.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl88 = securityContextEnterpriseImpl69.withMode(
        accessMode87);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl90 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo51, accessMode87,
        "Node Key constraint requires Neo4j Enterprise Edition");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext91 = defaultAuthManager0.login(
          strMap28, clientConnectionInfo51);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(authSubject14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNull(str34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AUTH_DISABLED with FULL" + "'", str37,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AUTH_DISABLED with FULL" + "'", str40,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo43);
    org.junit.Assert.assertNotNull(securityContext44);
    org.junit.Assert.assertTrue("'" + accessMode45 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode45.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str46);
    org.junit.Assert.assertTrue("'" + accessMode47 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode47.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(defaultLoginContext50);
    org.junit.Assert.assertNotNull(clientConnectionInfo51);
    org.junit.Assert.assertNotNull(loginContext52);
    org.junit.Assert.assertNotNull(loginContext53);
    org.junit.Assert.assertNotNull(securityContext55);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl56);
    org.junit.Assert.assertNotNull(authManager59);
    org.junit.Assert.assertNotNull(authManager60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AUTH_DISABLED with FULL" + "'", str71,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo72);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertNull(str78);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl80);
    org.junit.Assert.assertEquals("'" + str81 + "' != '" + "AUTH_DISABLED with FULL" + "'", str81,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    org.junit.Assert.assertEquals("'" + str84 + "' != '" + "AUTH_DISABLED with FULL" + "'", str84,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl86);
    org.junit.Assert.assertTrue("'" + accessMode87 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode87.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl88);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl90);
  }

  @Test
  public void test1922() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1922");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource15 = null;
    boolean boolean16 = securityContextEnterpriseImpl10.allowsAdminAction(adminActionOnResource15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
  }

  @Test
  public void test1923() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1923");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test1924() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1924");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10L, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId22);
  }

  @Test
  public void test1925() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1925");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler8 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler8);
    boolean boolean11 = securityContextEnterpriseImpl4.allowExecuteAdminProcedure((int) '4');
    java.lang.String str12 = securityContextEnterpriseImpl4.database();
    java.lang.String str13 = securityContextEnterpriseImpl4.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNull(str13);
  }

  @Test
  public void test1926() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1926");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor5 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor5,
          nodeCursor6, propertyCursor7, labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1927() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1927");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          0L, constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1928() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1928");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "", abstractSecurityLog18);
    boolean boolean21 = securityContextEnterpriseImpl15.allowExecuteAdminProcedure((int) (byte) 10);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject23 = securityContextEnterpriseImpl22.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl22.withMode(
        adminAccessMode24);
    java.lang.String str26 = securityContextEnterpriseImpl22.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo27 = securityContextEnterpriseImpl22.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext28 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo27);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo27);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext31 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo32 = defaultLoginContext31.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject33 = defaultLoginContext31.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo34 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext35 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode36 = securityContext35.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet38 = defaultLoginContext37.roeSet();
    java.util.Set<java.lang.String> strSet40 = defaultLoginContext37.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode30, authSubject33, clientConnectionInfo34, accessMode36, strSet40,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup44 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl43.authorize(
        idLookup44, "neo4j", abstractSecurityLog46);
    java.lang.String str48 = securityContextEnterpriseImpl47.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode49 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl50 = securityContextEnterpriseImpl47.withMode(
        accessMode49);
    java.lang.String str51 = securityContextEnterpriseImpl47.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject52 = securityContextEnterpriseImpl47.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode53 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl54 = securityContextEnterpriseImpl47.withMode(
        adminAccessMode53);
    boolean boolean56 = securityContextEnterpriseImpl54.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode57 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = securityContextEnterpriseImpl54.withMode(
        adminAccessMode57);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo59 = securityContextEnterpriseImpl54.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext61 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode36, clientConnectionInfo59, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo27, accessMode36, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl64 = securityContextEnterpriseImpl15.withMode(
        accessMode36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(authSubject23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNull(str26);
    org.junit.Assert.assertNotNull(clientConnectionInfo27);
    org.junit.Assert.assertNotNull(defaultLoginContext28);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(defaultLoginContext31);
    org.junit.Assert.assertNotNull(clientConnectionInfo32);
    org.junit.Assert.assertNotNull(authSubject33);
    org.junit.Assert.assertNotNull(securityContext35);
    org.junit.Assert.assertTrue("'" + accessMode36 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode36.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext37);
    org.junit.Assert.assertNotNull(strSet38);
    org.junit.Assert.assertNotNull(strSet40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNull(str48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl50);
    org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AUTH_DISABLED with FULL" + "'", str51,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject52);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl54);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(clientConnectionInfo59);
    org.junit.Assert.assertNotNull(securityContext61);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl63);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl64);
  }

  @Test
  public void test1929() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1929");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
  }

  @Test
  public void test1930() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1930");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler17 = null;
    securityContextEnterpriseImpl7.assertCredentialsNotExpired(securityAuthorizationHandler17);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = securityContextEnterpriseImpl7.mode();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertTrue("'" + accessMode19 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode19.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1931() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1931");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.init();
    java.lang.Class<?> wildcardClass8 = securityProviderAuthDisabledImpl0.getClass();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test1932() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1932");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject17 = securityContextEnterpriseImpl7.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl7.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = defaultLoginContext20.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = defaultLoginContext20.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext24 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = securityContext24.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext26 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet27 = defaultLoginContext26.roeSet();
    java.util.Set<java.lang.String> strSet29 = defaultLoginContext26.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode19, authSubject22, clientConnectionInfo23, accessMode25, strSet29,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup33 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl32.authorize(
        idLookup33, "neo4j", abstractSecurityLog35);
    java.lang.String str37 = securityContextEnterpriseImpl36.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl36.withMode(
        accessMode38);
    java.lang.String str40 = securityContextEnterpriseImpl36.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject41 = securityContextEnterpriseImpl36.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl36.withMode(
        adminAccessMode42);
    boolean boolean45 = securityContextEnterpriseImpl43.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl43.withMode(
        adminAccessMode46);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo48 = securityContextEnterpriseImpl43.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext50 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode25, clientConnectionInfo48, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode25, "pagecachewarmer");
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl52;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup54 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog56 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl57 = securityContextEnterpriseImpl52.authorize(
        idLookup54, "hi!", abstractSecurityLog56);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode58 = securityContextEnterpriseImpl52.mode();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(authSubject17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(securityContext24);
    org.junit.Assert.assertTrue("'" + accessMode25 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode25.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext26);
    org.junit.Assert.assertNotNull(strSet27);
    org.junit.Assert.assertNotNull(strSet29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNull(str37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AUTH_DISABLED with FULL" + "'", str40,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(clientConnectionInfo48);
    org.junit.Assert.assertNotNull(securityContext50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl57);
    org.junit.Assert.assertTrue("'" + accessMode58 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode58.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1933() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1933");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor10 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) 10, nodeKeyConstraintDescriptor8, (long) (short) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1934() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1934");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    boolean boolean9 = securityContextEnterpriseImpl6.allowExecuteAdminProcedure((int) (byte) -1);
    java.util.Set<java.lang.String> strSet10 = securityContextEnterpriseImpl6.roles();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(strSet10);
  }

  @Test
  public void test1935() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1935");
    }
    io.github.onograph.kernel.srv.pagecache.DefaultIOControllerService defaultIOControllerService0 = new io.github.onograph.kernel.srv.pagecache.DefaultIOControllerService();
    int int1 = defaultIOControllerService0.getPriority();
    int int2 = defaultIOControllerService0.getPriority();
    int int3 = defaultIOControllerService0.getPriority();
    int int4 = defaultIOControllerService0.getPriority();
    int int5 = defaultIOControllerService0.getPriority();
    int int6 = defaultIOControllerService0.getPriority();
    int int7 = defaultIOControllerService0.getPriority();
    int int8 = defaultIOControllerService0.getPriority();
    int int9 = defaultIOControllerService0.getPriority();
    int int10 = defaultIOControllerService0.getPriority();
    int int11 = defaultIOControllerService0.getPriority();
    int int12 = defaultIOControllerService0.getPriority();
    int int13 = defaultIOControllerService0.getPriority();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 10 + "'", int1 == 10);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
  }

  @Test
  public void test1936() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1936");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) 'a');
    checkPointThresholdVolumetricPolicy1.initialize((long) (byte) -1);
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    java.util.function.Consumer<java.lang.String> strConsumer14 = null;
    try {
      boolean boolean15 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(
          (long) (byte) -1, (long) 6362, strConsumer14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
  }

  @Test
  public void test1937() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1937");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '4', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId19);
  }

  @Test
  public void test1938() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1938");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(authManager9);
  }

  @Test
  public void test1939() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1939");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = defaultLoginContext0.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = defaultLoginContext0.authorize(
        idLookup2, "verbose", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = defaultLoginContext0.authorize(
        idLookup6, "user '' with FULL", abstractSecurityLog8);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo10 = defaultLoginContext0.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    java.lang.String str16 = securityContextEnterpriseImpl15.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl15.withMode(
        accessMode17);
    java.lang.String str19 = securityContextEnterpriseImpl15.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource20 = null;
    boolean boolean21 = securityContextEnterpriseImpl15.allowsAdminAction(adminActionOnResource20);
    java.lang.String str22 = securityContextEnterpriseImpl15.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode23);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = securityContextEnterpriseImpl15.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo10, accessMode25, "enterpriseConstraints");
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject28 = securityContextEnterpriseImpl27.subject();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(clientConnectionInfo10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AUTH_DISABLED with FULL" + "'", str19,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertTrue("'" + accessMode25 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode25.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(authSubject28);
  }

  @Test
  public void test1940() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1940");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = defaultLoginContext7.authorize(
        idLookup8, ".cacheprof", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo12 = securityContextEnterpriseImpl11.connectionInfo();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(clientConnectionInfo12);
  }

  @Test
  public void test1941() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1941");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor6,
          propertyCursor7, labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1942() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1942");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode11);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext15 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContext15.mode();
    java.lang.String str17 = securityContext15.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContext15.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContext15.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = defaultLoginContext20.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext22 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo21);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext23 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo21);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup25 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl24.authorize(
        idLookup25, "neo4j", abstractSecurityLog27);
    java.lang.String str29 = securityContextEnterpriseImpl28.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl28.withMode(
        accessMode30);
    java.lang.String str32 = securityContextEnterpriseImpl28.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject33 = securityContextEnterpriseImpl28.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode34 = securityContextEnterpriseImpl28.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet37 = defaultLoginContext35.roeSet();
    java.util.Set<java.lang.String> strSet38 = defaultLoginContext35.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode14, authSubject19, clientConnectionInfo21, accessMode34, strSet38, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext41 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo21);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext43 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode13, clientConnectionInfo21,
        "Property existence constraint requires Neo4j Enterprise Edition");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + accessMode13 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode13.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContext15);
    org.junit.Assert.assertTrue("'" + accessMode16 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode16.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertNotNull(defaultLoginContext22);
    org.junit.Assert.assertNotNull(defaultLoginContext23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNull(str29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AUTH_DISABLED with FULL" + "'", str32,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject33);
    org.junit.Assert.assertTrue("'" + accessMode34 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode34.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext35);
    org.junit.Assert.assertNotNull(strSet37);
    org.junit.Assert.assertNotNull(strSet38);
    org.junit.Assert.assertNotNull(defaultLoginContext41);
    org.junit.Assert.assertNotNull(securityContext43);
  }

  @Test
  public void test1943() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1943");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 'a', namedDatabaseId15);
  }

  @Test
  public void test1944() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1944");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl7.authorize(
        idLookup9, "", abstractSecurityLog11);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = securityContextEnterpriseImpl7.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl7.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = securityContextEnterpriseImpl19.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo28);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext31 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode14, clientConnectionInfo28, "user '' with FULL");
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + accessMode13 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode13.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo28);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(securityContext31);
  }

  @Test
  public void test1945() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1945");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    java.lang.String str12 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str13 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext14 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker15 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle16 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext14, componentsChecker15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str12, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str13, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test1946() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1946");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 10, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId8);
  }

  @Test
  public void test1947() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1947");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl17.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl17.withMode(
        adminAccessMode19);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = securityContextEnterpriseImpl20.mode();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo22 = securityContextEnterpriseImpl20.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler23 = null;
    securityContextEnterpriseImpl20.assertCredentialsNotExpired(securityAuthorizationHandler23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNull(str18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + accessMode21 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode21.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(clientConnectionInfo22);
  }

  @Test
  public void test1948() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1948");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    java.util.Set<java.lang.String> strSet7 = securityContextEnterpriseImpl0.roles();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler8 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(strSet7);
  }

  @Test
  public void test1949() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1949");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl8 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl8.start();
    securityProviderAuthDisabledImpl8.stop();
    securityProviderAuthDisabledImpl8.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl8.inClusterAuthManager();
    securityProviderAuthDisabledImpl8.start();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl8.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl8.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl17.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl17.authorize(
        idLookup19, "localhost", abstractSecurityLog21);
    authManager15.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    boolean boolean24 = cachePopulatorExtensionFactory0.equals((java.lang.Object) authManager15);
    java.lang.String str25 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl8);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pagecachewarmer" + "'", str25,
        "pagecachewarmer");
  }

  @Test
  public void test1950() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1950");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl3.authorize(
        idLookup4, "neo4j", abstractSecurityLog6);
    java.lang.String str8 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl7.withMode(
        accessMode9);
    java.lang.String str11 = securityContextEnterpriseImpl7.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource12 = null;
    boolean boolean13 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource12);
    java.lang.String str14 = securityContextEnterpriseImpl7.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl7;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl7;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = securityContextEnterpriseImpl7.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl18.authorize(
        idLookup19, "neo4j", abstractSecurityLog21);
    java.lang.String str23 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl18.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup26 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl18.authorize(
        idLookup26, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog28);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = securityContextEnterpriseImpl29.mode();
    java.lang.String[] strArray43 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean45 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet44, strArray43);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo17, accessMode30,
        (java.util.Set<java.lang.String>) strSet44, "user '' with FULL");
    java.lang.String str48 = securityContextEnterpriseImpl47.description();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler49 = null;
    securityContextEnterpriseImpl47.assertCredentialsNotExpired(securityAuthorizationHandler49);
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNull(str8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AUTH_DISABLED with FULL" + "'", str14,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNull(str23);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertTrue("'" + accessMode30 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode30.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "user '' with FULL" + "'", str48,
        "user '' with FULL");
  }

  @Test
  public void test1951() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1951");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    java.util.Set<java.lang.String> strSet7 = securityContextEnterpriseImpl0.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl8.authorize(
        idLookup9, "neo4j", abstractSecurityLog11);
    java.lang.String str13 = securityContextEnterpriseImpl12.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl12.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject16 = securityContextEnterpriseImpl15.subject();
    java.lang.String str17 = securityContextEnterpriseImpl15.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext19 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContext19.mode();
    java.lang.String str21 = securityContext19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode22 = securityContext19.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject23 = securityContext19.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext24 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo25 = defaultLoginContext24.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext26 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo25);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo25);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl28.authorize(
        idLookup29, "neo4j", abstractSecurityLog31);
    java.lang.String str33 = securityContextEnterpriseImpl32.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl32.withMode(
        accessMode34);
    java.lang.String str36 = securityContextEnterpriseImpl32.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject37 = securityContextEnterpriseImpl32.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode38 = securityContextEnterpriseImpl32.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext39 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet41 = defaultLoginContext39.roeSet();
    java.util.Set<java.lang.String> strSet42 = defaultLoginContext39.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode18, authSubject23, clientConnectionInfo25, accessMode38, strSet42, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext45 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo25);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext46 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo47 = defaultLoginContext46.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext48 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo47);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup50 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl49.authorize(
        idLookup50, "neo4j", abstractSecurityLog52);
    java.lang.String str54 = securityContextEnterpriseImpl53.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode55 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = securityContextEnterpriseImpl53.withMode(
        accessMode55);
    java.lang.String str57 = securityContextEnterpriseImpl53.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource58 = null;
    boolean boolean59 = securityContextEnterpriseImpl53.allowsAdminAction(adminActionOnResource58);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode60 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl61 = securityContextEnterpriseImpl53.withMode(
        adminAccessMode60);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode62 = securityContextEnterpriseImpl53.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl64 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo47, accessMode62, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo25, accessMode62,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = securityContextEnterpriseImpl15.withMode(
        accessMode62);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl68 = securityContextEnterpriseImpl0.withMode(
        accessMode62);
    java.lang.String str69 = securityContextEnterpriseImpl0.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNull(str13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(authSubject16);
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertNotNull(securityContext19);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertTrue("'" + accessMode22 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode22.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject23);
    org.junit.Assert.assertNotNull(defaultLoginContext24);
    org.junit.Assert.assertNotNull(clientConnectionInfo25);
    org.junit.Assert.assertNotNull(defaultLoginContext26);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AUTH_DISABLED with FULL" + "'", str36,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject37);
    org.junit.Assert.assertTrue("'" + accessMode38 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode38.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext39);
    org.junit.Assert.assertNotNull(strSet41);
    org.junit.Assert.assertNotNull(strSet42);
    org.junit.Assert.assertNotNull(defaultLoginContext45);
    org.junit.Assert.assertNotNull(defaultLoginContext46);
    org.junit.Assert.assertNotNull(clientConnectionInfo47);
    org.junit.Assert.assertNotNull(loginContext48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertNull(str54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AUTH_DISABLED with FULL" + "'", str57,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl61);
    org.junit.Assert.assertTrue("'" + accessMode62 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode62.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl64);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl68);
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AUTH_DISABLED with FULL" + "'", str69,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test1952() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1952");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler1 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler1);
    java.lang.String str3 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl0.authorize(
        idLookup4, "", abstractSecurityLog6);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject8 = securityContextEnterpriseImpl7.subject();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl7.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(authSubject8);
    org.junit.Assert.assertNotNull(authSubject9);
  }

  @Test
  public void test1953() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1953");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int7 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor8 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor9 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor10 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup11 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor8, propertyCursor9,
          labelSchemaDescriptor10, tokenNameLookup11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
  }

  @Test
  public void test1954() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1954");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = defaultLoginContext15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext15.authorize(
        idLookup20, "hi!", abstractSecurityLog22);
    boolean boolean25 = securityContextEnterpriseImpl23.allowExecuteAdminProcedure((int) (short) 0);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl23;
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
  }

  @Test
  public void test1955() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1955");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext1 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = securityContext1.mode();
    java.lang.String str3 = securityContext1.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = securityContext1.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject5 = securityContext1.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = defaultLoginContext6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext8 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext9 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl14.withMode(
        accessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl14.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl14.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet23 = defaultLoginContext21.roeSet();
    java.util.Set<java.lang.String> strSet24 = defaultLoginContext21.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject5, clientConnectionInfo7, accessMode20, strSet24, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup28 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = defaultLoginContext27.authorize(
        idLookup28, "AUTH_DISABLED with FULL", abstractSecurityLog30);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo33 = defaultLoginContext27.connectionInfo();
    org.junit.Assert.assertNotNull(securityContext1);
    org.junit.Assert.assertTrue(
        "'" + accessMode2 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode2.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertTrue(
        "'" + accessMode4 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode4.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(defaultLoginContext8);
    org.junit.Assert.assertNotNull(defaultLoginContext9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(strSet23);
    org.junit.Assert.assertNotNull(strSet24);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(clientConnectionInfo33);
  }

  @Test
  public void test1956() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1956");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    java.lang.String str13 = enterpriseTracerFactory0.getName();
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "verbose" + "'", str13, "verbose");
  }

  @Test
  public void test1957() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1957");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 100);
    checkPointThresholdVolumetricPolicy1.initialize((long) 10);
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) 2);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test1958() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1958");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) (byte) 0, constraintDescriptor7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1959() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1959");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor7 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor8 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor9 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor10 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup11 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor7, relationshipScanCursor8, propertyCursor9,
          relationTypeSchemaDescriptor10, tokenNameLookup11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1960() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1960");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject3 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo4 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = securityContext5.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet8 = defaultLoginContext7.roeSet();
    java.util.Set<java.lang.String> strSet10 = defaultLoginContext7.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject3, clientConnectionInfo4, accessMode6, strSet10, ".cacheprof");
    java.util.Set<java.lang.String> strSet13 = securityContextEnterpriseImpl12.roles();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl12.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl17.authorize(
        idLookup18, "pagecachewarmer", abstractSecurityLog20);
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(authSubject3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue(
        "'" + accessMode6 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode6.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(strSet8);
    org.junit.Assert.assertNotNull(strSet10);
    org.junit.Assert.assertNotNull(strSet13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
  }

  @Test
  public void test1961() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1961");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor8 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor9 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor10 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor11 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup12 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor8, nodeCursor9, propertyCursor10, labelSchemaDescriptor11,
          tokenNameLookup12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
  }

  @Test
  public void test1962() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1962");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    defaultAuthManager0.start();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList10 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(strMapList10);
  }

  @Test
  public void test1963() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1963");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor5 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor5, relationshipScanCursor6, propertyCursor7,
          relationTypeSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1964() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1964");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.lock.LockTracer lockTracer5 = enterpriseTracerFactory0.createLockTracer(clock4);
    java.time.Clock clock6 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer7 = enterpriseTracerFactory0.createDatabaseTracer(
        clock6);
    java.time.Clock clock8 = null;
    org.neo4j.lock.LockTracer lockTracer9 = enterpriseTracerFactory0.createLockTracer(clock8);
    java.time.Clock clock10 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer11 = enterpriseTracerFactory0.createDatabaseTracer(
        clock10);
    java.lang.String str12 = enterpriseTracerFactory0.getName();
    java.time.Clock clock13 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer14 = enterpriseTracerFactory0.createDatabaseTracer(
        clock13);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(lockTracer5);
    org.junit.Assert.assertNotNull(databaseTracer7);
    org.junit.Assert.assertNotNull(lockTracer9);
    org.junit.Assert.assertNotNull(databaseTracer11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "verbose" + "'", str12, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer14);
  }

  @Test
  public void test1965() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1965");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1966() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1966");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl4.authorize(
        idLookup6, "localhost", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource11 = null;
    boolean boolean12 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource11);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AUTH_DISABLED with FULL" + "'", str10,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
  }

  @Test
  public void test1967() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1967");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 100, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(100L, namedDatabaseId23);
  }

  @Test
  public void test1968() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1968");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.start();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList5 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.stop();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList5);
  }

  @Test
  public void test1969() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1969");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer12 = enterpriseTracerFactory0.createDatabaseTracer(
        clock11);
    java.time.Clock clock13 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer14 = enterpriseTracerFactory0.createDatabaseTracer(
        clock13);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(lockTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(databaseTracer12);
    org.junit.Assert.assertNotNull(databaseTracer14);
  }

  @Test
  public void test1970() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1970");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext1 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = securityContext1.mode();
    java.lang.String str3 = securityContext1.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = securityContext1.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject5 = securityContext1.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = defaultLoginContext6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext8 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext9 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl14.withMode(
        accessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl14.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl14.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet23 = defaultLoginContext21.roeSet();
    java.util.Set<java.lang.String> strSet24 = defaultLoginContext21.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject5, clientConnectionInfo7, accessMode20, strSet24, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext28 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo29 = defaultLoginContext28.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext30 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo29);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup32 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl31.authorize(
        idLookup32, "neo4j", abstractSecurityLog34);
    java.lang.String str36 = securityContextEnterpriseImpl35.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl35.withMode(
        accessMode37);
    java.lang.String str39 = securityContextEnterpriseImpl35.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource40 = null;
    boolean boolean41 = securityContextEnterpriseImpl35.allowsAdminAction(adminActionOnResource40);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl35.withMode(
        adminAccessMode42);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode44 = securityContextEnterpriseImpl35.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo29, accessMode44, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo7, accessMode44,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext49 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    org.junit.Assert.assertNotNull(securityContext1);
    org.junit.Assert.assertTrue(
        "'" + accessMode2 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode2.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertTrue(
        "'" + accessMode4 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode4.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(defaultLoginContext8);
    org.junit.Assert.assertNotNull(defaultLoginContext9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(strSet23);
    org.junit.Assert.assertNotNull(strSet24);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(defaultLoginContext28);
    org.junit.Assert.assertNotNull(clientConnectionInfo29);
    org.junit.Assert.assertNotNull(loginContext30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNull(str36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AUTH_DISABLED with FULL" + "'", str39,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + accessMode44 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode44.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertNotNull(defaultLoginContext49);
  }

  @Test
  public void test1971() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1971");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.init();
    defaultAuthManager0.start();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1972() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1972");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    java.lang.String str1 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config2 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning4 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold6 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config2, systemNanoClock3, logPruning4, logProvider5);
    java.lang.String str7 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str8 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str9 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str10 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config11 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning13 = null;
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold15 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config11, systemNanoClock12, logPruning13, logProvider14);
    java.lang.String str16 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "continuous" + "'", str1, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "continuous" + "'", str7, "continuous");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "continuous" + "'", str8, "continuous");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "continuous" + "'", str9, "continuous");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "continuous" + "'", str10, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold15);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "continuous" + "'", str16, "continuous");
  }

  @Test
  public void test1973() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1973");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.lang.String str8 = enterpriseTracerFactory0.getName();
    java.time.Clock clock9 = null;
    org.neo4j.lock.LockTracer lockTracer10 = enterpriseTracerFactory0.createLockTracer(clock9);
    java.time.Clock clock11 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer12 = enterpriseTracerFactory0.createDatabaseTracer(
        clock11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock15 = null;
    org.neo4j.logging.Log log16 = null;
    org.neo4j.configuration.Config config17 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors13, jobScheduler14, systemNanoClock15, log16, config17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "verbose" + "'", str8, "verbose");
    org.junit.Assert.assertNotNull(lockTracer10);
    org.junit.Assert.assertNotNull(databaseTracer12);
  }

  @Test
  public void test1974() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1974");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext15 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContext15.mode();
    java.lang.String str17 = securityContext15.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContext15.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo14, accessMode18,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo22 = defaultLoginContext21.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext23 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo22);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext24 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo22);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext26 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo22, "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext27 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo22);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext28 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(securityContext15);
    org.junit.Assert.assertTrue("'" + accessMode16 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode16.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(clientConnectionInfo22);
    org.junit.Assert.assertNotNull(loginContext23);
    org.junit.Assert.assertNotNull(loginContext24);
    org.junit.Assert.assertNotNull(securityContext26);
    org.junit.Assert.assertNotNull(loginContext27);
    org.junit.Assert.assertNotNull(loginContext28);
  }

  @Test
  public void test1975() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1975");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager3);
  }

  @Test
  public void test1976() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1976");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) (byte) 10, nodeKeyConstraintDescriptor7, (long) 6362);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1977() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1977");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((-1L), namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '4', namedDatabaseId19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 100, namedDatabaseId22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId25);
  }

  @Test
  public void test1978() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1978");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config2 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning4 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold6 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config2, systemNanoClock3, logPruning4, logProvider5);
    org.neo4j.configuration.Config config7 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock8 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning9 = null;
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold11 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config7, systemNanoClock8, logPruning9, logProvider10);
    java.lang.String str12 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock14 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning15 = null;
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold17 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config13, systemNanoClock14, logPruning15, logProvider16);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold6);
    org.junit.Assert.assertNotNull(checkPointThreshold11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "volumetric" + "'", str12, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold17);
  }

  @Test
  public void test1979() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1979");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode5);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource16 = null;
    boolean boolean17 = securityContextEnterpriseImpl11.allowsAdminAction(adminActionOnResource16);
    java.lang.String str18 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode19);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = securityContextEnterpriseImpl11.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl4.withMode(
        accessMode21);
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager23 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager23.stop();
    defaultAuthManager23.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList26 = defaultAuthManager23.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList27 = defaultAuthManager23.gepiggatgcfList();
    defaultAuthManager23.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager23.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl30);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup32 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl30.authorize(
        idLookup32, "", abstractSecurityLog34);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode36 = securityContextEnterpriseImpl30.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = securityContextEnterpriseImpl30.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl4.withMode(
        accessMode37);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup40 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl39.authorize(
        idLookup40, "neo4j", abstractSecurityLog42);
    java.lang.String str44 = securityContextEnterpriseImpl43.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode45 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = securityContextEnterpriseImpl43.withMode(
        accessMode45);
    java.lang.String str47 = securityContextEnterpriseImpl43.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject48 = securityContextEnterpriseImpl43.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode49 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl50 = securityContextEnterpriseImpl43.withMode(
        adminAccessMode49);
    boolean boolean52 = securityContextEnterpriseImpl50.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode53 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl54 = securityContextEnterpriseImpl50.withMode(
        adminAccessMode53);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo55 = securityContextEnterpriseImpl54.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext57 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode37, clientConnectionInfo55, "user '' with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + accessMode21 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode21.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(defaultAuthManager23);
    org.junit.Assert.assertNotNull(strMapList26);
    org.junit.Assert.assertNotNull(strMapList27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertTrue("'" + accessMode36 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode36.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue("'" + accessMode37 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode37.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertNull(str44);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AUTH_DISABLED with FULL" + "'", str47,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl50);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl54);
    org.junit.Assert.assertNotNull(clientConnectionInfo55);
    org.junit.Assert.assertNotNull(securityContext57);
  }

  @Test
  public void test1980() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1980");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str8 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor10 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "enterpriseConstraints" + "'", str8,
        "enterpriseConstraints");
  }

  @Test
  public void test1981() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1981");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    java.lang.String str21 = securityContextEnterpriseImpl16.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource22 = null;
    boolean boolean23 = securityContextEnterpriseImpl16.allowsAdminAction(adminActionOnResource22);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl16.authorize(
        idLookup24, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog26);
    defaultAuthManager0.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl16);
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
  }

  @Test
  public void test1982() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1982");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.start();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl8.authorize(
        idLookup9, "neo4j", abstractSecurityLog11);
    java.lang.String str13 = securityContextEnterpriseImpl12.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl12.withMode(
        accessMode14);
    java.lang.String str16 = securityContextEnterpriseImpl12.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = securityContextEnterpriseImpl12.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl18 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl18.start();
    securityProviderAuthDisabledImpl18.stop();
    org.neo4j.kernel.api.security.AuthManager authManager21 = securityProviderAuthDisabledImpl18.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager22 = securityProviderAuthDisabledImpl18.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager22.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl24);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup28 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl27.authorize(
        idLookup28, "neo4j", abstractSecurityLog30);
    authManager22.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl31);
    java.lang.String str33 = securityContextEnterpriseImpl31.description();
    boolean boolean35 = securityContextEnterpriseImpl31.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode36 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl31.withMode(
        adminAccessMode36);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext38 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo39 = defaultLoginContext38.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext40 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo39);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup42 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog44 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = securityContextEnterpriseImpl41.authorize(
        idLookup42, "neo4j", abstractSecurityLog44);
    java.lang.String str46 = securityContextEnterpriseImpl45.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode47 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = securityContextEnterpriseImpl45.withMode(
        accessMode47);
    java.lang.String str49 = securityContextEnterpriseImpl45.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource50 = null;
    boolean boolean51 = securityContextEnterpriseImpl45.allowsAdminAction(adminActionOnResource50);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl45.withMode(
        adminAccessMode52);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = securityContextEnterpriseImpl45.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo39, accessMode54, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl57 = securityContextEnterpriseImpl37.withMode(
        accessMode54);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo17, accessMode54, "");
    defaultAuthManager0.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl59);
    java.util.Set<java.lang.String> strSet61 = securityContextEnterpriseImpl59.roles();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNull(str13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AUTH_DISABLED with FULL" + "'", str16,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl18);
    org.junit.Assert.assertNotNull(authManager21);
    org.junit.Assert.assertNotNull(authManager22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AUTH_DISABLED with FULL" + "'", str33,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNotNull(defaultLoginContext38);
    org.junit.Assert.assertNotNull(clientConnectionInfo39);
    org.junit.Assert.assertNotNull(loginContext40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNull(str46);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AUTH_DISABLED with FULL" + "'", str49,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertTrue("'" + accessMode54 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode54.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNotNull(strSet61);
  }

  @Test
  public void test1983() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1983");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 100, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 1, namedDatabaseId20);
  }

  @Test
  public void test1984() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest3.test1984");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl4.subject();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl12 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl12.start();
    securityProviderAuthDisabledImpl12.stop();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl12.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager16 = securityProviderAuthDisabledImpl12.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager16.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl18);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl21.authorize(
        idLookup22, "neo4j", abstractSecurityLog24);
    authManager16.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl25);
    java.lang.String str27 = securityContextEnterpriseImpl25.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = securityContextEnterpriseImpl25.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl4.withMode(
        accessMode28);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = securityContextEnterpriseImpl4.mode();
    java.util.Set<java.lang.String> strSet31 = securityContextEnterpriseImpl4.roles();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl12);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AUTH_DISABLED with FULL" + "'", str27,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode28 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode28.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertTrue("'" + accessMode30 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode30.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strSet31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
  }
}


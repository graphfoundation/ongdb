package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest1 {

  public static boolean debug = false;

  @Test
  public void test0501() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0501");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;

    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = defaultLoginContext0.connectionInfo();
    //org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    //org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    java.util.Set<java.lang.String> strSet4 = defaultLoginContext0.roeSet();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(strSet4);
  }

  @Test
  public void test0502() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0502");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor4 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) 6362, nodeKeyConstraintDescriptor4, (long) 'a');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
  }

  @Test
  public void test0503() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0503");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor4 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor4, nodeCursor5, propertyCursor6, labelSchemaDescriptor7,
          tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0504() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0504");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = defaultLoginContext0.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext2 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo1);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo1, accessMode3, "hi!");
    try {
      java.lang.String str6 = securityContextEnterpriseImpl5.description();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(loginContext2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
  }

  @Test
  public void test0505() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0505");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId18);
  }

  @Test
  public void test0506() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0506");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 100);
    long long4 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
  }

  @Test
  public void test0507() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0507");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList5 = defaultAuthManager0.gepiggatgcfList();
    java.lang.Class<?> wildcardClass6 = defaultAuthManager0.getClass();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList5);
    org.junit.Assert.assertNotNull(wildcardClass6);
  }

  @Test
  public void test0508() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0508");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory4 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory4.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory4.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory4.createDatabaseTracer(
        clock9);
    java.lang.String str11 = enterpriseTracerFactory4.getName();
    java.time.Clock clock12 = null;
    org.neo4j.lock.LockTracer lockTracer13 = enterpriseTracerFactory4.createLockTracer(clock12);
    java.time.Clock clock14 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer15 = enterpriseTracerFactory4.createDatabaseTracer(
        clock14);
    java.time.Clock clock16 = null;
    org.neo4j.lock.LockTracer lockTracer17 = enterpriseTracerFactory4.createLockTracer(clock16);
    boolean boolean18 = cachePopulatorExtensionFactory0.equals((java.lang.Object) lockTracer17);
    java.lang.String str19 = cachePopulatorExtensionFactory0.toString();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "verbose" + "'", str11, "verbose");
    org.junit.Assert.assertNotNull(lockTracer13);
    org.junit.Assert.assertNotNull(databaseTracer15);
    org.junit.Assert.assertNotNull(lockTracer17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertEquals(
        "'" + str19 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str19, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test0509() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0509");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl1 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl1.authorize(
        idLookup2, "neo4j", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl1.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl1.authorize(
        idLookup8, "", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl1.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext14 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = defaultLoginContext14.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext16 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo15);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext18 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode13, clientConnectionInfo15,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl19 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl19.start();
    securityProviderAuthDisabledImpl19.stop();
    org.neo4j.kernel.api.security.AuthManager authManager22 = securityProviderAuthDisabledImpl19.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager23 = securityProviderAuthDisabledImpl19.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager23.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl25);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl28.authorize(
        idLookup29, "neo4j", abstractSecurityLog31);
    authManager23.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl32);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo36 = defaultLoginContext35.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject37 = defaultLoginContext35.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo38 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext39 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = securityContext39.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext41 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet42 = defaultLoginContext41.roeSet();
    //io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT = defaultLoginContext41;
    java.util.Set<java.lang.String> strSet44 = defaultLoginContext41.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode34, authSubject37, clientConnectionInfo38, accessMode40, strSet44,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl32.withMode(
        accessMode40);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup49 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog51 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl48.authorize(
        idLookup49, "neo4j", abstractSecurityLog51);
    java.lang.String str53 = securityContextEnterpriseImpl52.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = securityContextEnterpriseImpl52.withMode(
        accessMode54);
    java.lang.String str56 = securityContextEnterpriseImpl52.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource57 = null;
    boolean boolean58 = securityContextEnterpriseImpl52.allowsAdminAction(adminActionOnResource57);
    java.lang.String str59 = securityContextEnterpriseImpl52.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode60 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl61 = securityContextEnterpriseImpl52.withMode(
        adminAccessMode60);
    java.util.Set<java.lang.String> strSet62 = securityContextEnterpriseImpl61.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl64 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject12, clientConnectionInfo15, accessMode40, strSet62, "verbose");
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo65 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext67 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode40, clientConnectionInfo65,
        "Node Key constraint requires Neo4j Enterprise Edition");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertNotNull(defaultLoginContext14);
    org.junit.Assert.assertNotNull(clientConnectionInfo15);
    org.junit.Assert.assertNotNull(loginContext16);
    org.junit.Assert.assertNotNull(securityContext18);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl19);
    org.junit.Assert.assertNotNull(authManager22);
    org.junit.Assert.assertNotNull(authManager23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(defaultLoginContext35);
    org.junit.Assert.assertNotNull(clientConnectionInfo36);
    org.junit.Assert.assertNotNull(authSubject37);
    org.junit.Assert.assertNotNull(securityContext39);
    org.junit.Assert.assertTrue("'" + accessMode40 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode40.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext41);
    org.junit.Assert.assertNotNull(strSet42);
    org.junit.Assert.assertNotNull(strSet44);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNull(str53);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AUTH_DISABLED with FULL" + "'", str56,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AUTH_DISABLED with FULL" + "'", str59,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl61);
    org.junit.Assert.assertNotNull(strSet62);
    org.junit.Assert.assertNotNull(securityContext67);
  }

  @Test
  public void test0510() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0510");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.lang.Class<?> wildcardClass8 = enterpriseTracerFactory0.getClass();
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test0511() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0511");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str5 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str6 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config7 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock8 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning9 = null;
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold11 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config7, systemNanoClock8, logPruning9, logProvider10);
    org.neo4j.configuration.Config config12 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning14 = null;
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold16 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config12, systemNanoClock13, logPruning14, logProvider15);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "volumetric" + "'", str5, "volumetric");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "volumetric" + "'", str6, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold11);
    org.junit.Assert.assertNotNull(checkPointThreshold16);
  }

  @Test
  public void test0512() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0512");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = securityContextEnterpriseImpl9.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl9.authorize(
        idLookup11, "localhost", abstractSecurityLog13);
    authManager7.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl14);
    java.util.Set<java.lang.String> strSet16 = securityContextEnterpriseImpl14.roles();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler17 = null;
    securityContextEnterpriseImpl14.assertCredentialsNotExpired(securityAuthorizationHandler17);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(authSubject10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(strSet16);
  }

  @Test
  public void test0513() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0513");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.logging.Log log6 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl7 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl7.prlcpdForNa((long) (short) 1, namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl7.wamsrdForNa(namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl7.wapclForNa((long) (byte) 100, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl7.wapclForNa((long) (-1), namedDatabaseId17);
    boolean boolean19 = cachePopulatorExtensionFactory0.equals((java.lang.Object) (-1));
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext20 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker21 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle22 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext20, componentsChecker21);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test0514() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0514");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long10 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize(0L);
    checkPointThresholdVolumetricPolicy1.initialize(10000L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
  }

  @Test
  public void test0515() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0515");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) 100, uniquenessConstraintDescriptor5, (long) 2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
  }

  @Test
  public void test0516() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0516");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(100L, namedDatabaseId16);
  }

  @Test
  public void test0517() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0517");
    }
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo0);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNull(clientConnectionInfo2);
  }

  @Test
  public void test0518() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0518");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config7 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock8 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning9 = null;
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold11 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config7, systemNanoClock8, logPruning9, logProvider10);
    org.neo4j.configuration.Config config12 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning14 = null;
    org.neo4j.logging.LogProvider logProvider15 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold16 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config12, systemNanoClock13, logPruning14, logProvider15);
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "continuous" + "'", str6, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold11);
    org.junit.Assert.assertNotNull(checkPointThreshold16);
  }

  @Test
  public void test0519() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0519");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    //io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT = defaultLoginContext0;

    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext3 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = defaultLoginContext3.authorize(
        idLookup4, ".cacheprof", abstractSecurityLog6);
    java.util.Set<java.lang.String> strSet8 = defaultLoginContext3.roeSet();
    java.lang.Class<?> wildcardClass9 = strSet8.getClass();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(defaultLoginContext3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(strSet8);
    org.junit.Assert.assertNotNull(wildcardClass9);
  }

  @Test
  public void test0520() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0520");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          0L, uniquenessConstraintDescriptor6, 1L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0521() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0521");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl19 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl19.start();
    org.neo4j.kernel.api.security.AuthManager authManager21 = securityProviderAuthDisabledImpl19.loopbackAuthManager();
    securityProviderAuthDisabledImpl19.stop();
    org.neo4j.kernel.api.security.AuthManager authManager23 = securityProviderAuthDisabledImpl19.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager23.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl25);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl28.authorize(
        idLookup29, "neo4j", abstractSecurityLog31);
    java.lang.String str33 = securityContextEnterpriseImpl32.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl32.withMode(
        accessMode34);
    java.lang.String str36 = securityContextEnterpriseImpl32.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource37 = null;
    boolean boolean38 = securityContextEnterpriseImpl32.allowsAdminAction(adminActionOnResource37);
    authManager23.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl32);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = securityContextEnterpriseImpl32.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode40, "neo4j");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup44 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl43.authorize(
        idLookup44, "neo4j", abstractSecurityLog46);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl43.withMode(
        accessMode48);
    boolean boolean51 = securityContextEnterpriseImpl49.allowExecuteAdminProcedure(0);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl49;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo53 = securityContextEnterpriseImpl49.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl54 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup55 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog57 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = securityContextEnterpriseImpl54.authorize(
        idLookup55, "neo4j", abstractSecurityLog57);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode59 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl60 = securityContextEnterpriseImpl54.withMode(
        accessMode59);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup61 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog63 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl64 = securityContextEnterpriseImpl54.authorize(
        idLookup61, "", abstractSecurityLog63);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup65 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog67 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl68 = securityContextEnterpriseImpl64.authorize(
        idLookup65, "AUTH_DISABLED with FULL", abstractSecurityLog67);
    java.lang.String str69 = securityContextEnterpriseImpl64.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode70 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl71 = securityContextEnterpriseImpl64.withMode(
        adminAccessMode70);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode72 = securityContextEnterpriseImpl71.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl74 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo53, accessMode72, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl76 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode72,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl19);
    org.junit.Assert.assertNotNull(authManager21);
    org.junit.Assert.assertNotNull(authManager23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AUTH_DISABLED with FULL" + "'", str36,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertTrue("'" + accessMode40 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode40.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo53);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl64);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl68);
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AUTH_DISABLED with FULL" + "'", str69,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl71);
    org.junit.Assert.assertTrue("'" + accessMode72 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode72.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl74);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl76);
  }

  @Test
  public void test0522() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0522");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          10000L, uniquenessConstraintDescriptor5, (long) (byte) 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0523() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0523");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl4.inClusterAuthManager();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(authManager12);
  }

  @Test
  public void test0524() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0524");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList2 = defaultAuthManager0.gepiggatgcfList();
    java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.authorize(
        idLookup5, "neo4j", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl4.withMode(
        accessMode9);
    boolean boolean12 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure(0);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl10;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl10.connectionInfo();
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = defaultAuthManager0.login(
          strMap3, clientConnectionInfo14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
  }

  @Test
  public void test0525() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0525");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode6);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContextEnterpriseImpl7.connectionInfo();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode9 = securityContextEnterpriseImpl7.mode();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertTrue(
        "'" + accessMode9 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode9.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test0526() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0526");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    //io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT = defaultLoginContext19;
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
  }

  @Test
  public void test0527() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0527");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor6,
          nodeCursor7, propertyCursor8, labelSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0528() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0528");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl1 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl1.start();
    securityProviderAuthDisabledImpl1.stop();
    securityProviderAuthDisabledImpl1.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl1.inClusterAuthManager();
    securityProviderAuthDisabledImpl1.start();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl1.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl1.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl10.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl10.authorize(
        idLookup12, "localhost", abstractSecurityLog14);
    authManager8.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl15);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject17 = securityContextEnterpriseImpl15.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo20 = defaultLoginContext19.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext21 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo20);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext23 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo20,
        "Node Key constraint requires Neo4j Enterprise Edition");
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo24 = securityContext23.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup26 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl25.authorize(
        idLookup26, "neo4j", abstractSecurityLog28);
    java.lang.String str30 = securityContextEnterpriseImpl29.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl29.withMode(
        adminAccessMode31);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject33 = securityContextEnterpriseImpl32.subject();
    java.lang.String str34 = securityContextEnterpriseImpl32.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode35 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext36 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = securityContext36.mode();
    java.lang.String str38 = securityContext36.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContext36.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject40 = securityContext36.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext41 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo42 = defaultLoginContext41.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext43 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo42);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext44 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo42);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup46 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl45.authorize(
        idLookup46, "neo4j", abstractSecurityLog48);
    java.lang.String str50 = securityContextEnterpriseImpl49.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode51 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl49.withMode(
        accessMode51);
    java.lang.String str53 = securityContextEnterpriseImpl49.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject54 = securityContextEnterpriseImpl49.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode55 = securityContextEnterpriseImpl49.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext56 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    //io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT = defaultLoginContext56;
    java.util.Set<java.lang.String> strSet58 = defaultLoginContext56.roeSet();
    java.util.Set<java.lang.String> strSet59 = defaultLoginContext56.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl61 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode35, authSubject40, clientConnectionInfo42, accessMode55, strSet59, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext62 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo42);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext63 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo64 = defaultLoginContext63.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext65 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo64);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup67 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog69 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl70 = securityContextEnterpriseImpl66.authorize(
        idLookup67, "neo4j", abstractSecurityLog69);
    java.lang.String str71 = securityContextEnterpriseImpl70.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode72 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = securityContextEnterpriseImpl70.withMode(
        accessMode72);
    java.lang.String str74 = securityContextEnterpriseImpl70.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource75 = null;
    boolean boolean76 = securityContextEnterpriseImpl70.allowsAdminAction(adminActionOnResource75);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode77 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl78 = securityContextEnterpriseImpl70.withMode(
        adminAccessMode77);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode79 = securityContextEnterpriseImpl70.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl81 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo64, accessMode79, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl83 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo42, accessMode79,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl84 = securityContextEnterpriseImpl32.withMode(
        accessMode79);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext85 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet86 = defaultLoginContext85.roeSet();
    java.util.Set<java.lang.String> strSet88 = defaultLoginContext85.roeSet();
    java.util.Set<java.lang.String> strSet89 = defaultLoginContext85.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl91 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject17, clientConnectionInfo24, accessMode79, strSet89,
        "localhost");
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource92 = null;
    try {
      boolean boolean93 = securityContextEnterpriseImpl91.allowsAdminAction(
          adminActionOnResource92);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl1);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(authSubject17);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(clientConnectionInfo20);
    org.junit.Assert.assertNotNull(loginContext21);
    org.junit.Assert.assertNotNull(securityContext23);
    org.junit.Assert.assertNotNull(clientConnectionInfo24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNull(str30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(authSubject33);
    org.junit.Assert.assertNull(str34);
    org.junit.Assert.assertNotNull(securityContext36);
    org.junit.Assert.assertTrue("'" + accessMode37 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode37.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject40);
    org.junit.Assert.assertNotNull(defaultLoginContext41);
    org.junit.Assert.assertNotNull(clientConnectionInfo42);
    org.junit.Assert.assertNotNull(defaultLoginContext43);
    org.junit.Assert.assertNotNull(defaultLoginContext44);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNull(str50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AUTH_DISABLED with FULL" + "'", str53,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject54);
    org.junit.Assert.assertTrue("'" + accessMode55 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode55.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext56);
    org.junit.Assert.assertNotNull(strSet58);
    org.junit.Assert.assertNotNull(strSet59);
    org.junit.Assert.assertNotNull(defaultLoginContext62);
    org.junit.Assert.assertNotNull(defaultLoginContext63);
    org.junit.Assert.assertNotNull(clientConnectionInfo64);
    org.junit.Assert.assertNotNull(loginContext65);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl70);
    org.junit.Assert.assertNull(str71);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertEquals("'" + str74 + "' != '" + "AUTH_DISABLED with FULL" + "'", str74,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl78);
    org.junit.Assert.assertTrue("'" + accessMode79 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode79.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl81);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl83);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl84);
    org.junit.Assert.assertNotNull(defaultLoginContext85);
    org.junit.Assert.assertNotNull(strSet86);
    org.junit.Assert.assertNotNull(strSet88);
    org.junit.Assert.assertNotNull(strSet89);
  }

  @Test
  public void test0529() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0529");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor6, nodeCursor7, propertyCursor8, labelSchemaDescriptor9,
          tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0530() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0530");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    java.lang.String str10 = enterpriseTracerFactory0.getName();
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler12 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    org.neo4j.logging.Log log14 = null;
    org.neo4j.configuration.Config config15 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors11, jobScheduler12, systemNanoClock13, log14, config15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "verbose" + "'", str10, "verbose");
  }

  @Test
  public void test0531() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0531");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str5 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str6 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    java.lang.String str13 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str14 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config15 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock16 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning17 = null;
    org.neo4j.logging.LogProvider logProvider18 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold19 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config15, systemNanoClock16, logPruning17, logProvider18);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "volumetric" + "'", str5, "volumetric");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "volumetric" + "'", str6, "volumetric");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "volumetric" + "'", str7, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "volumetric" + "'", str13, "volumetric");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "volumetric" + "'", str14, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold19);
  }

  @Test
  public void test0532() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0532");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl13.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode19);
    boolean boolean22 = securityContextEnterpriseImpl20.allowExecuteAdminProcedure((int) (byte) 1);
    authManager7.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl20);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup25 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl24.authorize(
        idLookup25, "neo4j", abstractSecurityLog27);
    java.lang.String str29 = securityContextEnterpriseImpl28.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl28.withMode(
        adminAccessMode30);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject32 = securityContextEnterpriseImpl31.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode33 = securityContextEnterpriseImpl31.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl20.withMode(
        accessMode33);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode35 = securityContextEnterpriseImpl34.mode();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNull(str29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(authSubject32);
    org.junit.Assert.assertTrue("'" + accessMode33 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode33.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertTrue("'" + accessMode35 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode35.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test0533() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0533");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (short) 100, uniquenessConstraintDescriptor6, (long) (-1));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test0534() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0534");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    java.util.function.Consumer<java.lang.String> strConsumer7 = null;
    try {
      boolean boolean8 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) 2, 0L,
          strConsumer7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
  }

  @Test
  public void test0535() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0535");
    }
    io.github.onograph.kernel.srv.pagecache.DefaultIOControllerService defaultIOControllerService0 = new io.github.onograph.kernel.srv.pagecache.DefaultIOControllerService();
    int int1 = defaultIOControllerService0.getPriority();
    int int2 = defaultIOControllerService0.getPriority();
    int int3 = defaultIOControllerService0.getPriority();
    int int4 = defaultIOControllerService0.getPriority();
    int int5 = defaultIOControllerService0.getPriority();
    int int6 = defaultIOControllerService0.getPriority();
    org.neo4j.configuration.Config config7 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock8 = null;
    try {
      org.neo4j.io.pagecache.IOController iOController9 = defaultIOControllerService0.createIOController(
          config7, systemNanoClock8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 10 + "'", int1 == 10);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
  }

  @Test
  public void test0536() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0536");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor5 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor5,
          nodeCursor6, propertyCursor7, labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0537() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0537");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          10000L, constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test0538() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0538");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) 10, uniquenessConstraintDescriptor6, (long) (byte) -1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0539() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0539");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test0540() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0540");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.storageengine.api.StorageReader storageReader4 = null;
    org.neo4j.internal.kernel.api.Read read5 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory6 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState7 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor8 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext9 = null;
    org.neo4j.memory.MemoryTracker memoryTracker10 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor11 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader4, read5, cursorFactory6, readableTransactionState7, txStateVisitor8,
          cursorContext9, memoryTracker10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0541() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0541");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
  }

  @Test
  public void test0542() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0542");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) -1, namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((-1L), namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) -1, namedDatabaseId15);
  }

  @Test
  public void test0543() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0543");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
  }

  @Test
  public void test0544() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0544");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId13);
  }

  @Test
  public void test0545() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0545");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    //io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT = defaultLoginContext0;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = defaultLoginContext0.authorize(
        idLookup3, "localhost", abstractSecurityLog5);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
  }

  @Test
  public void test0546() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0546");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    java.lang.Class<?> wildcardClass8 = securityProviderAuthDisabledImpl0.getClass();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test0547() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0547");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.stop();
    java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.authorize(
        idLookup5, "neo4j", abstractSecurityLog7);
    java.lang.String str9 = securityContextEnterpriseImpl8.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl8.withMode(
        accessMode10);
    java.lang.String str12 = securityContextEnterpriseImpl8.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource13 = null;
    boolean boolean14 = securityContextEnterpriseImpl8.allowsAdminAction(adminActionOnResource13);
    java.lang.String str15 = securityContextEnterpriseImpl8.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl8;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl8;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl8.connectionInfo();
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = defaultAuthManager0.login(
          strMap3, clientConnectionInfo18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNull(str9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AUTH_DISABLED with FULL" + "'", str12,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
  }

  @Test
  public void test0548() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0548");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    defaultAuthManager0.stop();
    java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    java.lang.String str16 = securityContextEnterpriseImpl15.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode17);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = securityContextEnterpriseImpl18.connectionInfo();
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = defaultAuthManager0.login(
          strMap10, clientConnectionInfo19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
  }

  @Test
  public void test0549() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0549");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 10, namedDatabaseId11);
  }

  @Test
  public void test0550() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0550");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) 6362);
    long long10 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) (-1));
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
  }

  @Test
  public void test0551() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0551");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 100);
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    java.util.function.Consumer<java.lang.String> strConsumer8 = null;
    try {
      boolean boolean9 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) 'a',
          (long) 2, strConsumer8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0552() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0552");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    java.lang.String str20 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode21);
    defaultAuthManager3.log("PageCacheProfileLoader",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    boolean boolean25 = securityContextEnterpriseImpl22.allowExecuteAdminProcedure(1);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
  }

  @Test
  public void test0553() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0553");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          10L, nodeKeyConstraintDescriptor6, 0L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0554() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0554");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext10 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = securityContext10.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo9, accessMode11,
        "Property existence constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext14 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo9);
    //io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT = defaultLoginContext14;
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(securityContext10);
    org.junit.Assert.assertTrue("'" + accessMode11 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode11.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(defaultLoginContext14);
  }

  @Test
  public void test0555() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0555");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor3 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) 1, nodeKeyConstraintDescriptor3, (long) 'a');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
  }

  @Test
  public void test0556() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0556");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = defaultLoginContext0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(strSet3);
  }

  @Test
  public void test0557() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0557");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor6,
          propertyCursor7, labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0558() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0558");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor4 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor4,
          nodeCursor5, propertyCursor6, labelSchemaDescriptor7, tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0559() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0559");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    defaultAuthManager0.shutdown();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test0560() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0560");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor5 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor5, nodeCursor6, propertyCursor7, labelSchemaDescriptor8,
          tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test0561() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0561");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor4 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) ' ', uniquenessConstraintDescriptor4, 10000L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
  }

  @Test
  public void test0562() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0562");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (-1L), constraintDescriptor5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
  }

  @Test
  public void test0563() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0563");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor6, propertyCursor7,
          labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0564() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0564");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          1L, uniquenessConstraintDescriptor7, (long) (byte) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0565() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0565");
    }
    org.neo4j.internal.kernel.api.security.AccessMode accessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext3 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode0, clientConnectionInfo2,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext7 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = securityContext7.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo2, accessMode8, "hi!");
    boolean boolean12 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure((int) (byte) 1);
    java.util.Set<java.lang.String> strSet13 = securityContextEnterpriseImpl10.roles();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(loginContext3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(securityContext7);
    org.junit.Assert.assertTrue(
        "'" + accessMode8 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode8.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertNotNull(strSet13);
  }

  @Test
  public void test0566() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0566");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource15 = null;
    boolean boolean16 = securityContextEnterpriseImpl14.allowsAdminAction(adminActionOnResource15);
    authManager5.log("localhost",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl14);
    authManager5.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
  }

  @Test
  public void test0567() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0567");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0568() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0568");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test0569() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0569");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 100, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId18);
  }

  @Test
  public void test0570() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0570");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          0L, uniquenessConstraintDescriptor5, (long) (-1));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0571() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0571");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test0572() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0572");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl11.connectionInfo();
    java.lang.String str17 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl11.authorize(
        idLookup18, "", abstractSecurityLog20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
  }

  @Test
  public void test0573() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0573");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    //io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT = defaultLoginContext1;
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext1.roeSet();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject4 = defaultLoginContext1.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl9.withMode(
        accessMode11);
    java.lang.String str13 = securityContextEnterpriseImpl9.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource14 = null;
    boolean boolean15 = securityContextEnterpriseImpl9.allowsAdminAction(adminActionOnResource14);
    java.lang.String str16 = securityContextEnterpriseImpl9.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl9;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl9;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = securityContextEnterpriseImpl9.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext20 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = securityContext20.mode();
    java.lang.String str22 = securityContext20.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = securityContext20.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo19, accessMode23,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext26 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo27 = defaultLoginContext26.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext28 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo27);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext29 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo27);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext31 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode23, clientConnectionInfo27, "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext32 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo27);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup34 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog36 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl33.authorize(
        idLookup34, "neo4j", abstractSecurityLog36);
    java.lang.String str38 = securityContextEnterpriseImpl37.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl37.withMode(
        accessMode39);
    java.lang.String str41 = securityContextEnterpriseImpl37.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource42 = null;
    boolean boolean43 = securityContextEnterpriseImpl37.allowsAdminAction(adminActionOnResource42);
    java.lang.String str44 = securityContextEnterpriseImpl37.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl37;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl37;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo47 = securityContextEnterpriseImpl37.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext48 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode49 = securityContext48.mode();
    java.lang.String str50 = securityContext48.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode51 = securityContext48.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo47, accessMode51,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext54 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo55 = defaultLoginContext54.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext57 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode51, clientConnectionInfo55, ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup59 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog61 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = securityContextEnterpriseImpl58.authorize(
        idLookup59, "neo4j", abstractSecurityLog61);
    java.lang.String str63 = securityContextEnterpriseImpl62.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode64 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = securityContextEnterpriseImpl62.withMode(
        accessMode64);
    java.lang.String str66 = securityContextEnterpriseImpl62.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource67 = null;
    boolean boolean68 = securityContextEnterpriseImpl62.allowsAdminAction(adminActionOnResource67);
    java.lang.String str69 = securityContextEnterpriseImpl62.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl62;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl62;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo72 = securityContextEnterpriseImpl62.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext73 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo72);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext75 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode51, clientConnectionInfo72, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl76 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup77 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog79 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl80 = securityContextEnterpriseImpl76.authorize(
        idLookup77, "neo4j", abstractSecurityLog79);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode81 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl82 = securityContextEnterpriseImpl76.withMode(
        accessMode81);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup83 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog85 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl86 = securityContextEnterpriseImpl82.authorize(
        idLookup83, "neo4j", abstractSecurityLog85);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl86;
    java.util.Set<java.lang.String> strSet88 = securityContextEnterpriseImpl86.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl90 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject4, clientConnectionInfo27, accessMode51, strSet88, "neo4j");
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(authSubject4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AUTH_DISABLED with FULL" + "'", str13,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AUTH_DISABLED with FULL" + "'", str16,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
    org.junit.Assert.assertNotNull(securityContext20);
    org.junit.Assert.assertTrue("'" + accessMode21 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode21.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str22);
    org.junit.Assert.assertTrue("'" + accessMode23 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode23.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(defaultLoginContext26);
    org.junit.Assert.assertNotNull(clientConnectionInfo27);
    org.junit.Assert.assertNotNull(loginContext28);
    org.junit.Assert.assertNotNull(loginContext29);
    org.junit.Assert.assertNotNull(securityContext31);
    org.junit.Assert.assertNotNull(loginContext32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNull(str38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AUTH_DISABLED with FULL" + "'", str41,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AUTH_DISABLED with FULL" + "'", str44,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo47);
    org.junit.Assert.assertNotNull(securityContext48);
    org.junit.Assert.assertTrue("'" + accessMode49 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode49.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str50);
    org.junit.Assert.assertTrue("'" + accessMode51 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode51.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertNotNull(defaultLoginContext54);
    org.junit.Assert.assertNotNull(clientConnectionInfo55);
    org.junit.Assert.assertNotNull(securityContext57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNull(str63);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
    org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AUTH_DISABLED with FULL" + "'", str66,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AUTH_DISABLED with FULL" + "'", str69,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo72);
    org.junit.Assert.assertNotNull(defaultLoginContext73);
    org.junit.Assert.assertNotNull(securityContext75);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl76);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl80);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl82);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl86);
    org.junit.Assert.assertNotNull(strSet88);
  }

  @Test
  public void test0574() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0574");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.Class<?> wildcardClass3 = enterpriseTracerFactory0.getClass();
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertNotNull(wildcardClass3);
  }

  @Test
  public void test0575() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0575");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    java.util.Set<java.lang.String> strSet6 = securityContextEnterpriseImpl5.roles();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl5;
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(strSet6);
  }

  @Test
  public void test0576() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0576");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((-1L), namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
  }

  @Test
  public void test0577() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0577");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config5 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock6 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold9 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config5, systemNanoClock6, logPruning7, logProvider8);
    java.lang.String str10 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str11 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "volumetric" + "'", str10, "volumetric");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "volumetric" + "'", str11, "volumetric");
  }

  @Test
  public void test0578() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0578");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor4 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) (byte) 10, nodeKeyConstraintDescriptor4, (long) (byte) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
  }

  @Test
  public void test0579() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0579");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config3 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock4 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning5 = null;
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold7 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config3, systemNanoClock4, logPruning5, logProvider6);
    java.lang.String str8 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config9 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock10 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning11 = null;
    org.neo4j.logging.LogProvider logProvider12 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold13 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config9, systemNanoClock10, logPruning11, logProvider12);
    org.neo4j.configuration.Config config14 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock15 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning16 = null;
    org.neo4j.logging.LogProvider logProvider17 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold18 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config14, systemNanoClock15, logPruning16, logProvider17);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "volumetric" + "'", str8, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold13);
    org.junit.Assert.assertNotNull(checkPointThreshold18);
  }

  @Test
  public void test0580() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0580");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext8 = null;
    authManager6.log("verbose", securityContext8);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
  }

  @Test
  public void test0581() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0581");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    //io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT = defaultLoginContext6;
    java.util.Set<java.lang.String> strSet8 = defaultLoginContext6.roeSet();
    java.util.Set<java.lang.String> strSet9 = defaultLoginContext6.roeSet();
    //io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT = defaultLoginContext6;
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(strSet8);
    org.junit.Assert.assertNotNull(strSet9);
  }

  @Test
  public void test0582() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0582");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor6, propertyCursor7,
          labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0583() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0583");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
  }

  @Test
  public void test0584() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0584");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          1L, uniquenessConstraintDescriptor5, (-1L));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0585() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0585");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) (byte) 1, constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0586() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0586");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    java.lang.String str1 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler2 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNull(str1);
  }

  @Test
  public void test0587() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0587");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor6,
          nodeCursor7, propertyCursor8, labelSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0588() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0588");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) '4', nodeKeyConstraintDescriptor5, 100L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0589() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0589");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor4 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor5 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor6 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup7 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor4, propertyCursor5, relationTypeSchemaDescriptor6,
          tokenNameLookup7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0590() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0590");
    }
    io.github.onograph.kernel.srv.pagecache.DefaultIOControllerService defaultIOControllerService0 = new io.github.onograph.kernel.srv.pagecache.DefaultIOControllerService();
    int int1 = defaultIOControllerService0.getPriority();
    int int2 = defaultIOControllerService0.getPriority();
    int int3 = defaultIOControllerService0.getPriority();
    int int4 = defaultIOControllerService0.getPriority();
    int int5 = defaultIOControllerService0.getPriority();
    int int6 = defaultIOControllerService0.getPriority();
    int int7 = defaultIOControllerService0.getPriority();
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    try {
      org.neo4j.io.pagecache.IOController iOController10 = defaultIOControllerService0.createIOController(
          config8, systemNanoClock9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 10 + "'", int1 == 10);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
  }

  @Test
  public void test0591() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0591");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.logging.Log log10 = null;
    org.neo4j.configuration.Config config11 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors7, jobScheduler8, systemNanoClock9, log10, config11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
  }

  @Test
  public void test0592() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0592");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          100L, uniquenessConstraintDescriptor7, (long) (short) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0593() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0593");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 6362, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(10L, namedDatabaseId11);
  }

  @Test
  public void test0594() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0594");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str15 = securityContextEnterpriseImpl13.description();
    boolean boolean17 = securityContextEnterpriseImpl13.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        abstractSecurityLog22);
    java.lang.Class<?> wildcardClass24 = securityContextEnterpriseImpl19.getClass();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(wildcardClass24);
  }

  @Test
  public void test0595() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0595");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 'a', namedDatabaseId18);
  }

  @Test
  public void test0596() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0596");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    org.neo4j.configuration.Config config6 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning8 = null;
    org.neo4j.logging.LogProvider logProvider9 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold10 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config6, systemNanoClock7, logPruning8, logProvider9);
    org.neo4j.configuration.Config config11 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning13 = null;
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold15 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config11, systemNanoClock12, logPruning13, logProvider14);
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertNotNull(checkPointThreshold10);
    org.junit.Assert.assertNotNull(checkPointThreshold15);
  }

  @Test
  public void test0597() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0597");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    org.neo4j.configuration.Config config6 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning8 = null;
    org.neo4j.logging.LogProvider logProvider9 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold10 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config6, systemNanoClock7, logPruning8, logProvider9);
    java.lang.String str11 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str12 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock14 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning15 = null;
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold17 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config13, systemNanoClock14, logPruning15, logProvider16);
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertNotNull(checkPointThreshold10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "continuous" + "'", str11, "continuous");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "continuous" + "'", str12, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold17);
  }

  @Test
  public void test0598() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0598");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor3 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) 'a', uniquenessConstraintDescriptor3, (-1L));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
  }

  @Test
  public void test0599() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0599");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList8 = defaultAuthManager3.gepiggatgcfList();
    defaultAuthManager3.init();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(strMapList8);
  }

  @Test
  public void test0600() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0600");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.init();
    java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    java.lang.String str11 = securityContextEnterpriseImpl10.database();
    java.lang.String str12 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode13);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = securityContextEnterpriseImpl10.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext16 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = securityContext16.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo15, accessMode17,
        "Property existence constraint requires Neo4j Enterprise Edition");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = defaultAuthManager0.login(
          strMap5, clientConnectionInfo15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNull(str11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AUTH_DISABLED with FULL" + "'", str12,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(clientConnectionInfo15);
    org.junit.Assert.assertNotNull(securityContext16);
    org.junit.Assert.assertTrue("'" + accessMode17 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode17.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
  }

  @Test
  public void test0601() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0601");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl0.authorize(
        idLookup8, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AUTH_DISABLED with FULL" + "'", str12,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test0602() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0602");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    long long7 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) ' ');
    checkPointThresholdVolumetricPolicy1.initialize((long) 100);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 10);
    java.util.function.Consumer<java.lang.String> strConsumer16 = null;
    try {
      boolean boolean17 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) '4',
          (long) (byte) -1, strConsumer16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
  }

  @Test
  public void test0603() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0603");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode7);
    boolean boolean10 = securityContextEnterpriseImpl8.allowExecuteAdminProcedure((int) (short) 1);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource11 = null;
    try {
      boolean boolean12 = securityContextEnterpriseImpl8.allowsAdminAction(adminActionOnResource11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
  }

  @Test
  public void test0604() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0604");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode5);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
  }

  @Test
  public void test0605() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0605");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext1 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = securityContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler3 = null;
    securityContext1.assertCredentialsNotExpired(securityAuthorizationHandler3);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject5 = securityContext1.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl6.withMode(
        accessMode11);
    boolean boolean14 = securityContextEnterpriseImpl12.allowExecuteAdminProcedure(0);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl12;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl12.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl17.authorize(
        idLookup18, "neo4j", abstractSecurityLog20);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode22 = securityContextEnterpriseImpl17.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode23 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext24 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject25 = defaultLoginContext24.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode27 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext28 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo29 = defaultLoginContext28.connectionInfo();
    java.util.Set<java.lang.String> strSet30 = defaultLoginContext28.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode23, authSubject25, clientConnectionInfo26, accessMode27, strSet30,
        "volumetric");
    java.util.Set<java.lang.String> strSet33 = securityContextEnterpriseImpl32.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject5, clientConnectionInfo16, accessMode22, strSet33,
        "pagecachewarmer");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo38 = defaultLoginContext36.connectionInfo();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo39 = defaultLoginContext36.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext41 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode22, clientConnectionInfo39, "continuous");
    org.junit.Assert.assertNotNull(securityContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(authSubject5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertTrue("'" + accessMode22 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode22.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext24);
    org.junit.Assert.assertNotNull(authSubject25);
    org.junit.Assert.assertNotNull(defaultLoginContext28);
    org.junit.Assert.assertNotNull(clientConnectionInfo29);
    org.junit.Assert.assertNotNull(strSet30);
    org.junit.Assert.assertNotNull(strSet33);
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(clientConnectionInfo38);
    org.junit.Assert.assertNotNull(clientConnectionInfo39);
    org.junit.Assert.assertNotNull(securityContext41);
  }

  @Test
  public void test0606() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0606");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor5, propertyCursor6, relationTypeSchemaDescriptor7,
          tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0607() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0607");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor6, nodeCursor7, propertyCursor8, labelSchemaDescriptor9,
          tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0608() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0608");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    defaultAuthManager0.stop();
    java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl11.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl11.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext17 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo16);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext18 = defaultAuthManager0.login(
          strMap10, clientConnectionInfo16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNotNull(loginContext17);
  }

  @Test
  public void test0609() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0609");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.Object obj6 = null;
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(obj6);
    java.lang.String str8 = cachePopulatorExtensionFactory0.toString();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str8, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test0610() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0610");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContextEnterpriseImpl17.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject21 = defaultLoginContext20.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup23 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl22.authorize(
        idLookup23, "neo4j", abstractSecurityLog25);
    java.lang.String str27 = securityContextEnterpriseImpl26.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl26.withMode(
        accessMode28);
    java.lang.String str30 = securityContextEnterpriseImpl26.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource31 = null;
    boolean boolean32 = securityContextEnterpriseImpl26.allowsAdminAction(adminActionOnResource31);
    java.lang.String str33 = securityContextEnterpriseImpl26.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl26;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl26;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo36 = securityContextEnterpriseImpl26.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup38 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl37.authorize(
        idLookup38, "neo4j", abstractSecurityLog40);
    java.lang.String str42 = securityContextEnterpriseImpl37.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource43 = null;
    boolean boolean44 = securityContextEnterpriseImpl37.allowsAdminAction(adminActionOnResource43);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup45 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog47 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = securityContextEnterpriseImpl37.authorize(
        idLookup45, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog47);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode49 = securityContextEnterpriseImpl48.mode();
    java.lang.String[] strArray62 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet63 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean64 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet63, strArray62);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode19, authSubject21, clientConnectionInfo36, accessMode49,
        (java.util.Set<java.lang.String>) strSet63, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = securityContextEnterpriseImpl17.withMode(
        accessMode49);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl68 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup69 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog71 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl72 = securityContextEnterpriseImpl68.authorize(
        idLookup69, "neo4j", abstractSecurityLog71);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode73 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl74 = securityContextEnterpriseImpl68.withMode(
        accessMode73);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup75 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog77 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl78 = securityContextEnterpriseImpl74.authorize(
        idLookup75, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog77);
    boolean boolean80 = securityContextEnterpriseImpl78.allowExecuteAdminProcedure(
        (int) (short) 10);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo81 = securityContextEnterpriseImpl78.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext83 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode49, clientConnectionInfo81, "localhost");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(authSubject21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNull(str27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AUTH_DISABLED with FULL" + "'", str30,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AUTH_DISABLED with FULL" + "'", str33,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNull(str42);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertTrue("'" + accessMode49 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode49.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray62);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl68);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl72);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl74);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl78);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo81);
    org.junit.Assert.assertNotNull(securityContext83);
  }

  @Test
  public void test0611() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0611");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = defaultLoginContext0.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext2 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo1);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl3.authorize(
        idLookup4, "neo4j", abstractSecurityLog6);
    java.lang.String str8 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl7.withMode(
        accessMode9);
    java.lang.String str11 = securityContextEnterpriseImpl7.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource12 = null;
    boolean boolean13 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource12);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl7.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContextEnterpriseImpl7.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo1, accessMode16, "enterpriseConstraints");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext19 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo1);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(loginContext2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNull(str8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + accessMode16 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode16.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(loginContext19);
  }

  @Test
  public void test0612() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0612");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) 10, uniquenessConstraintDescriptor7, 0L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0613() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0613");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    boolean boolean8 = securityContextEnterpriseImpl6.allowExecuteAdminProcedure(0);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode9 = securityContextEnterpriseImpl6.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext11 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo12 = defaultLoginContext11.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext14 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode10, clientConnectionInfo12, "neo4j");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext15 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContext15.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo12, accessMode16, "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl6.withMode(
        accessMode16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    org.junit.Assert.assertNull(accessMode9);
    org.junit.Assert.assertNotNull(defaultLoginContext11);
    org.junit.Assert.assertNotNull(clientConnectionInfo12);
    org.junit.Assert.assertNotNull(securityContext14);
    org.junit.Assert.assertNotNull(securityContext15);
    org.junit.Assert.assertTrue("'" + accessMode16 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode16.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
  }

  @Test
  public void test0614() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0614");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) 6362, nodeKeyConstraintDescriptor6, (long) ' ');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0615() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0615");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    java.util.Set<java.lang.String> strSet6 = securityContextEnterpriseImpl5.roles();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl5.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "pagecachewarmer", abstractSecurityLog13);
    boolean boolean16 = securityContextEnterpriseImpl14.allowExecuteAdminProcedure((int) (byte) 10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(strSet6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
  }

  @Test
  public void test0616() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0616");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor4 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor5 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor6 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup7 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor4, propertyCursor5,
          labelSchemaDescriptor6, tokenNameLookup7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0617() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0617");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str15 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl13.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext17 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo16);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext18 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo16);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNotNull(loginContext17);
    org.junit.Assert.assertNotNull(loginContext18);
  }

  @Test
  public void test0618() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0618");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (-1), uniquenessConstraintDescriptor7, 1L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0619() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0619");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.stop();
    java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject5 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl4.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext10 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo9);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext11 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo9);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext12 = defaultAuthManager0.login(
          strMap3, clientConnectionInfo9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(authSubject5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNull(str8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(defaultLoginContext10);
    org.junit.Assert.assertNotNull(defaultLoginContext11);
  }

  @Test
  public void test0620() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0620");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext5.connectionInfo();
    java.util.Set<java.lang.String> strSet7 = defaultLoginContext5.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo3, accessMode4, strSet7, "volumetric");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode10);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject13 = securityContextEnterpriseImpl12.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl12.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    java.lang.Class<?> wildcardClass16 = accessMode14.getClass();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(authSubject13);
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test0621() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0621");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.kernel.api.security.AuthManager authManager18 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup21 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl20.authorize(
        idLookup21, "neo4j", abstractSecurityLog23);
    java.lang.String str25 = securityContextEnterpriseImpl24.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl24.withMode(
        accessMode26);
    java.lang.String str28 = securityContextEnterpriseImpl24.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource29 = null;
    boolean boolean30 = securityContextEnterpriseImpl24.allowsAdminAction(adminActionOnResource29);
    java.lang.String str31 = securityContextEnterpriseImpl24.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl24;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl24;
    authManager18.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl24);
    authManager5.log("verbose",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl24);
    authManager5.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNull(str25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AUTH_DISABLED with FULL" + "'", str28,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AUTH_DISABLED with FULL" + "'", str31,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test0622() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0622");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource4 = null;
    boolean boolean5 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
  }

  @Test
  public void test0623() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0623");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor3 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor4 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor5 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor6 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup7 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor3, relationshipScanCursor4, propertyCursor5,
          relationTypeSchemaDescriptor6, tokenNameLookup7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
  }

  @Test
  public void test0624() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0624");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl2.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl2.allowsAdminAction(adminActionOnResource8);
    boolean boolean10 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) adminActionOnResource8);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl11 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl11.start();
    securityProviderAuthDisabledImpl11.stop();
    securityProviderAuthDisabledImpl11.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl11.inClusterAuthManager();
    securityProviderAuthDisabledImpl11.start();
    org.neo4j.kernel.api.security.AuthManager authManager17 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager19 = securityProviderAuthDisabledImpl11.loopbackAuthManager();
    boolean boolean20 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl11);
    org.neo4j.kernel.api.security.AuthManager authManager21 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager22 = securityProviderAuthDisabledImpl11.loopbackAuthManager();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl11);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager17);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertNotNull(authManager21);
    org.junit.Assert.assertNotNull(authManager22);
  }

  @Test
  public void test0625() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0625");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) 1, nodeKeyConstraintDescriptor5, 10000L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0626() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0626");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler10 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    org.neo4j.logging.Log log12 = null;
    org.neo4j.configuration.Config config13 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors9, jobScheduler10, systemNanoClock11, log12, config13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertNotNull(lockTracer8);
  }

  @Test
  public void test0627() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0627");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode14);
    java.lang.Class<?> wildcardClass16 = securityContextEnterpriseImpl4.getClass();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(wildcardClass16);
  }

  @Test
  public void test0628() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0628");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (-1L), nodeKeyConstraintDescriptor6, (long) (short) 100);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0629() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0629");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId17);
  }

  @Test
  public void test0630() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0630");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList14 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(strMapList14);
  }

  @Test
  public void test0631() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0631");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    org.neo4j.monitoring.Monitors monitors10 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler11 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    org.neo4j.logging.Log log13 = null;
    org.neo4j.configuration.Config config14 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors10, jobScheduler11, systemNanoClock12, log13, config14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(lockTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
  }

  @Test
  public void test0632() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0632");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.time.Clock clock8 = null;
    org.neo4j.lock.LockTracer lockTracer9 = enterpriseTracerFactory0.createLockTracer(clock8);
    java.time.Clock clock10 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer11 = enterpriseTracerFactory0.createDatabaseTracer(
        clock10);
    org.neo4j.monitoring.Monitors monitors12 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler13 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock14 = null;
    org.neo4j.logging.Log log15 = null;
    org.neo4j.configuration.Config config16 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer17 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors12, jobScheduler13, systemNanoClock14, log15, config16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertNotNull(lockTracer9);
    org.junit.Assert.assertNotNull(databaseTracer11);
  }

  @Test
  public void test0633() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0633");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long10 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize(100L);
    checkPointThresholdVolumetricPolicy1.initialize(10000L);
    java.util.function.Consumer<java.lang.String> strConsumer17 = null;
    try {
      boolean boolean18 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(1L, 100L,
          strConsumer17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
  }

  @Test
  public void test0634() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0634");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject3 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo4 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = securityContext5.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet8 = defaultLoginContext7.roeSet();
    java.util.Set<java.lang.String> strSet10 = defaultLoginContext7.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject3, clientConnectionInfo4, accessMode6, strSet10, ".cacheprof");
    java.util.Set<java.lang.String> strSet13 = securityContextEnterpriseImpl12.roles();
    java.lang.Class<?> wildcardClass14 = strSet13.getClass();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(authSubject3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue(
        "'" + accessMode6 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode6.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(strSet8);
    org.junit.Assert.assertNotNull(strSet10);
    org.junit.Assert.assertNotNull(strSet13);
    org.junit.Assert.assertNotNull(wildcardClass14);
  }

  @Test
  public void test0635() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0635");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.start();
    defaultAuthManager0.claauch();
    java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = securityContextEnterpriseImpl9.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = securityContextEnterpriseImpl9.mode();
    java.lang.String str12 = securityContextEnterpriseImpl9.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl9;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject14 = securityContextEnterpriseImpl9.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject16 = securityContextEnterpriseImpl15.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode17);
    java.lang.String str19 = securityContextEnterpriseImpl15.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo20 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo20);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext22 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo20);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl23.authorize(
        idLookup24, "neo4j", abstractSecurityLog26);
    java.lang.String str28 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl27.withMode(
        accessMode29);
    java.lang.String str31 = securityContextEnterpriseImpl27.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource32 = null;
    boolean boolean33 = securityContextEnterpriseImpl27.allowsAdminAction(adminActionOnResource32);
    java.lang.String str34 = securityContextEnterpriseImpl27.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl27;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl27;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo37 = securityContextEnterpriseImpl27.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext38 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContext38.mode();
    java.lang.String str40 = securityContext38.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode41 = securityContext38.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo37, accessMode41,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext44 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo45 = defaultLoginContext44.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext46 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo45);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext47 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo45);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext49 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode41, clientConnectionInfo45, "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl50 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler51 = null;
    securityContextEnterpriseImpl50.assertCredentialsNotExpired(securityAuthorizationHandler51);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup53 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog55 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = securityContextEnterpriseImpl50.authorize(
        idLookup53, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog55);
    java.util.Set<java.lang.String> strSet57 = securityContextEnterpriseImpl50.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode8, authSubject14, clientConnectionInfo20, accessMode41, strSet57,
        "volumetric");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext60 = defaultAuthManager0.login(
          strMap7, clientConnectionInfo20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(authSubject10);
    org.junit.Assert.assertTrue("'" + accessMode11 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode11.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AUTH_DISABLED with FULL" + "'", str12,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(authSubject16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNull(str19);
    org.junit.Assert.assertNotNull(clientConnectionInfo20);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(loginContext22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNull(str28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AUTH_DISABLED with FULL" + "'", str31,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AUTH_DISABLED with FULL" + "'", str34,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo37);
    org.junit.Assert.assertNotNull(securityContext38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str40);
    org.junit.Assert.assertTrue("'" + accessMode41 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode41.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertNotNull(defaultLoginContext44);
    org.junit.Assert.assertNotNull(clientConnectionInfo45);
    org.junit.Assert.assertNotNull(loginContext46);
    org.junit.Assert.assertNotNull(loginContext47);
    org.junit.Assert.assertNotNull(securityContext49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(strSet57);
  }

  @Test
  public void test0636() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0636");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    java.util.Set<java.lang.String> strSet8 = defaultLoginContext6.roeSet();
    java.util.Set<java.lang.String> strSet9 = defaultLoginContext6.roeSet();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo10 = defaultLoginContext6.connectionInfo();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(strSet8);
    org.junit.Assert.assertNotNull(strSet9);
    org.junit.Assert.assertNotNull(clientConnectionInfo10);
  }

  @Test
  public void test0637() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0637");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 0, namedDatabaseId4);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (byte) 100, namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId11);
  }

  @Test
  public void test0638() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0638");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (byte) 1, namedDatabaseId14);
  }

  @Test
  public void test0639() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0639");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    authManager5.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test0640() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0640");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
  }

  @Test
  public void test0641() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0641");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str15 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl13.connectionInfo();
    boolean boolean18 = securityContextEnterpriseImpl13.allowExecuteAdminProcedure((int) (byte) -1);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
  }

  @Test
  public void test0642() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0642");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    java.lang.String str12 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pagecachewarmer" + "'", str12,
        "pagecachewarmer");
  }

  @Test
  public void test0643() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0643");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = securityContextEnterpriseImpl0.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl10 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl10.start();
    securityProviderAuthDisabledImpl10.stop();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl10.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl10.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl10.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl17.authorize(
        idLookup18, "neo4j", abstractSecurityLog20);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl17.withMode(
        accessMode22);
    java.lang.String str24 = securityContextEnterpriseImpl17.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject25 = securityContextEnterpriseImpl17.subject();
    authManager15.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl17);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler27 = null;
    securityContextEnterpriseImpl17.assertCredentialsNotExpired(securityAuthorizationHandler27);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject29 = securityContextEnterpriseImpl17.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject31 = securityContextEnterpriseImpl30.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl30.withMode(
        adminAccessMode32);
    java.lang.String str34 = securityContextEnterpriseImpl30.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo35 = securityContextEnterpriseImpl30.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext36 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo35);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext38 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo39 = defaultLoginContext38.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext40 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo39);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext42 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode37, clientConnectionInfo39,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext43 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo39);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext44 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode45 = securityContext44.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo39, accessMode45, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode48 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext49 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode50 = securityContext49.mode();
    java.lang.String str51 = securityContext49.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode52 = securityContext49.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject53 = securityContext49.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext54 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo55 = defaultLoginContext54.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext56 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo55);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext57 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo55);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup59 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog61 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = securityContextEnterpriseImpl58.authorize(
        idLookup59, "neo4j", abstractSecurityLog61);
    java.lang.String str63 = securityContextEnterpriseImpl62.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode64 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = securityContextEnterpriseImpl62.withMode(
        accessMode64);
    java.lang.String str66 = securityContextEnterpriseImpl62.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject67 = securityContextEnterpriseImpl62.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode68 = securityContextEnterpriseImpl62.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext69 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet71 = defaultLoginContext69.roeSet();
    java.util.Set<java.lang.String> strSet72 = defaultLoginContext69.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl74 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode48, authSubject53, clientConnectionInfo55, accessMode68, strSet72, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl76 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode9, authSubject29, clientConnectionInfo35, accessMode45, strSet72,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext78 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode8, clientConnectionInfo35, "");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue(
        "'" + accessMode8 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode8.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl10);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertNotNull(authSubject25);
    org.junit.Assert.assertNotNull(authSubject29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(authSubject31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNull(str34);
    org.junit.Assert.assertNotNull(clientConnectionInfo35);
    org.junit.Assert.assertNotNull(loginContext36);
    org.junit.Assert.assertNotNull(defaultLoginContext38);
    org.junit.Assert.assertNotNull(clientConnectionInfo39);
    org.junit.Assert.assertNotNull(loginContext40);
    org.junit.Assert.assertNotNull(securityContext42);
    org.junit.Assert.assertNotNull(defaultLoginContext43);
    org.junit.Assert.assertNotNull(securityContext44);
    org.junit.Assert.assertTrue("'" + accessMode45 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode45.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(securityContext49);
    org.junit.Assert.assertTrue("'" + accessMode50 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode50.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str51);
    org.junit.Assert.assertTrue("'" + accessMode52 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode52.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject53);
    org.junit.Assert.assertNotNull(defaultLoginContext54);
    org.junit.Assert.assertNotNull(clientConnectionInfo55);
    org.junit.Assert.assertNotNull(defaultLoginContext56);
    org.junit.Assert.assertNotNull(defaultLoginContext57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNull(str63);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
    org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AUTH_DISABLED with FULL" + "'", str66,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject67);
    org.junit.Assert.assertTrue("'" + accessMode68 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode68.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext69);
    org.junit.Assert.assertNotNull(strSet71);
    org.junit.Assert.assertNotNull(strSet72);
    org.junit.Assert.assertNotNull(securityContext78);
  }

  @Test
  public void test0644() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0644");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl4.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl4.authorize(
        idLookup15, "hi!", abstractSecurityLog17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
  }

  @Test
  public void test0645() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0645");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 1, namedDatabaseId11);
  }

  @Test
  public void test0646() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0646");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.lang.String str8 = enterpriseTracerFactory0.getName();
    java.time.Clock clock9 = null;
    org.neo4j.lock.LockTracer lockTracer10 = enterpriseTracerFactory0.createLockTracer(clock9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler12 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    org.neo4j.logging.Log log14 = null;
    org.neo4j.configuration.Config config15 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors11, jobScheduler12, systemNanoClock13, log14, config15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "verbose" + "'", str8, "verbose");
    org.junit.Assert.assertNotNull(lockTracer10);
  }

  @Test
  public void test0647() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0647");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
  }

  @Test
  public void test0648() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0648");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler10 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler10);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl0.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler16 = null;
    securityContextEnterpriseImpl15.assertCredentialsNotExpired(securityAuthorizationHandler16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
  }

  @Test
  public void test0649() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0649");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.init();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject7 = securityContextEnterpriseImpl6.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = securityContextEnterpriseImpl6.mode();
    defaultAuthManager0.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl6.mode();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(authSubject7);
    org.junit.Assert.assertTrue(
        "'" + accessMode8 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode8.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test0650() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0650");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) ' ', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (byte) 10, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 10, namedDatabaseId20);
  }

  @Test
  public void test0651() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0651");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode8 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext9 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContext9.mode();
    java.lang.String str11 = securityContext9.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = securityContext9.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject13 = securityContext9.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext14 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = defaultLoginContext14.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext16 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo15);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext17 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo15);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl18.authorize(
        idLookup19, "neo4j", abstractSecurityLog21);
    java.lang.String str23 = securityContextEnterpriseImpl22.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl22.withMode(
        accessMode24);
    java.lang.String str26 = securityContextEnterpriseImpl22.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject27 = securityContextEnterpriseImpl22.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = securityContextEnterpriseImpl22.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet31 = defaultLoginContext29.roeSet();
    java.util.Set<java.lang.String> strSet32 = defaultLoginContext29.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode8, authSubject13, clientConnectionInfo15, accessMode28, strSet32, "");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = defaultAuthManager0.login(
          strMap7, clientConnectionInfo15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContext9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str11);
    org.junit.Assert.assertTrue("'" + accessMode12 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode12.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject13);
    org.junit.Assert.assertNotNull(defaultLoginContext14);
    org.junit.Assert.assertNotNull(clientConnectionInfo15);
    org.junit.Assert.assertNotNull(defaultLoginContext16);
    org.junit.Assert.assertNotNull(defaultLoginContext17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNull(str23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AUTH_DISABLED with FULL" + "'", str26,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject27);
    org.junit.Assert.assertTrue("'" + accessMode28 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode28.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(strSet31);
    org.junit.Assert.assertNotNull(strSet32);
  }

  @Test
  public void test0652() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0652");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 10, constraintDescriptor7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0653() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0653");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.authorize(
        idLookup10, "AUTH_DISABLED with FULL", abstractSecurityLog12);
    try {
      java.lang.String str14 = securityContextEnterpriseImpl13.description();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
  }

  @Test
  public void test0654() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0654");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(100L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId14);
  }

  @Test
  public void test0655() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0655");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl17.database();
    java.util.Set<java.lang.String> strSet19 = securityContextEnterpriseImpl17.roles();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource20 = null;
    try {
      boolean boolean21 = securityContextEnterpriseImpl17.allowsAdminAction(
          adminActionOnResource20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNull(str18);
    org.junit.Assert.assertNotNull(strSet19);
  }

  @Test
  public void test0656() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0656");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor6,
          nodeCursor7, propertyCursor8, labelSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0657() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0657");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId17);
  }

  @Test
  public void test0658() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0658");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = securityContextEnterpriseImpl14.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    java.lang.String str21 = securityContextEnterpriseImpl20.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl20.withMode(
        accessMode22);
    java.lang.String str24 = securityContextEnterpriseImpl20.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject25 = securityContextEnterpriseImpl20.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl20.withMode(
        adminAccessMode26);
    boolean boolean29 = securityContextEnterpriseImpl27.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl27.withMode(
        adminAccessMode30);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl31.withMode(
        adminAccessMode32);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo34 = securityContextEnterpriseImpl31.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo34);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext37 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode15, clientConnectionInfo34,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + accessMode15 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode15.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AUTH_DISABLED with FULL" + "'", str24,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(clientConnectionInfo34);
    org.junit.Assert.assertNotNull(defaultLoginContext35);
    org.junit.Assert.assertNotNull(securityContext37);
  }

  @Test
  public void test0659() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0659");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) (byte) -1, nodeKeyConstraintDescriptor6, (long) (short) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test0660() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0660");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test0661() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0661");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 'a', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId19);
  }

  @Test
  public void test0662() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0662");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler17 = null;
    securityContextEnterpriseImpl7.assertCredentialsNotExpired(securityAuthorizationHandler17);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource19 = null;
    boolean boolean20 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource19);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
  }

  @Test
  public void test0663() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0663");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode6);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContextEnterpriseImpl7.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext9 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo8);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = loginContext9.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertNotNull(loginContext9);
    org.junit.Assert.assertNotNull(authSubject10);
  }

  @Test
  public void test0664() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0664");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl12.authorize(
        idLookup13, "neo4j", abstractSecurityLog15);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl12.withMode(
        accessMode17);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl18.authorize(
        idLookup19, "neo4j", abstractSecurityLog21);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl22;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl22.authorize(
        idLookup24, "", abstractSecurityLog26);
    authManager10.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(authManager9);
    org.junit.Assert.assertNotNull(authManager10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
  }

  @Test
  public void test0665() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0665");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = defaultLoginContext7.authorize(
        idLookup8, "volumetric", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl11.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject12);
  }

  @Test
  public void test0666() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0666");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl5.withMode(
        accessMode10);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl15;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl15.authorize(
        idLookup17, "", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl15;
    authManager3.log("Property existence constraint requires Neo4j Enterprise Edition",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
  }

  @Test
  public void test0667() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0667");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl23;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl25 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl25.start();
    securityProviderAuthDisabledImpl25.start();
    org.neo4j.kernel.api.security.AuthManager authManager28 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    securityProviderAuthDisabledImpl25.stop();
    org.neo4j.kernel.api.security.AuthManager authManager30 = securityProviderAuthDisabledImpl25.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager31 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager32 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl34.authorize(
        idLookup35, "neo4j", abstractSecurityLog37);
    java.lang.String str39 = securityContextEnterpriseImpl38.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl38.withMode(
        accessMode40);
    java.lang.String str42 = securityContextEnterpriseImpl38.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject43 = securityContextEnterpriseImpl38.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode44 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = securityContextEnterpriseImpl38.withMode(
        adminAccessMode44);
    boolean boolean47 = securityContextEnterpriseImpl45.allowExecuteAdminProcedure((int) (byte) 1);
    authManager32.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl45);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup50 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl49.authorize(
        idLookup50, "neo4j", abstractSecurityLog52);
    java.lang.String str54 = securityContextEnterpriseImpl53.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode55 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = securityContextEnterpriseImpl53.withMode(
        adminAccessMode55);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject57 = securityContextEnterpriseImpl56.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode58 = securityContextEnterpriseImpl56.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl45.withMode(
        accessMode58);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl60 = securityContextEnterpriseImpl23.withMode(
        accessMode58);
    java.lang.String str61 = securityContextEnterpriseImpl23.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl25);
    org.junit.Assert.assertNotNull(authManager28);
    org.junit.Assert.assertNotNull(authManager30);
    org.junit.Assert.assertNotNull(authManager31);
    org.junit.Assert.assertNotNull(authManager32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNull(str39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AUTH_DISABLED with FULL" + "'", str42,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertNull(str54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(authSubject57);
    org.junit.Assert.assertTrue("'" + accessMode58 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode58.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl60);
    org.junit.Assert.assertEquals("'" + str61 + "' != '" + "AUTH_DISABLED with FULL" + "'", str61,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test0668() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0668");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
  }

  @Test
  public void test0669() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0669");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer8);
  }

  @Test
  public void test0670() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0670");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    java.lang.String str20 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode21);
    defaultAuthManager3.log("PageCacheProfileLoader",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    java.lang.String str24 = securityContextEnterpriseImpl22.database();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNull(str24);
  }

  @Test
  public void test0671() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0671");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl4.authorize(
        idLookup12, ".cacheprof", abstractSecurityLog14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
  }

  @Test
  public void test0672() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0672");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) 2, uniquenessConstraintDescriptor6, (long) (short) 100);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test0673() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0673");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl4.authorize(
        idLookup6, "localhost", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler11 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler11);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode13 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext14 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = securityContext14.mode();
    java.lang.String str16 = securityContext14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = securityContext14.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContext14.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo20 = defaultLoginContext19.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo20);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext22 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo20);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl23.authorize(
        idLookup24, "neo4j", abstractSecurityLog26);
    java.lang.String str28 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl27.withMode(
        accessMode29);
    java.lang.String str31 = securityContextEnterpriseImpl27.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject32 = securityContextEnterpriseImpl27.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode33 = securityContextEnterpriseImpl27.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext34 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet36 = defaultLoginContext34.roeSet();
    java.util.Set<java.lang.String> strSet37 = defaultLoginContext34.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode13, authSubject18, clientConnectionInfo20, accessMode33, strSet37, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl4.withMode(
        accessMode33);
    java.lang.String str41 = securityContextEnterpriseImpl4.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AUTH_DISABLED with FULL" + "'", str10,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContext14);
    org.junit.Assert.assertTrue("'" + accessMode15 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode15.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertTrue("'" + accessMode17 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode17.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(clientConnectionInfo20);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(defaultLoginContext22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNull(str28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AUTH_DISABLED with FULL" + "'", str31,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject32);
    org.junit.Assert.assertTrue("'" + accessMode33 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode33.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext34);
    org.junit.Assert.assertNotNull(strSet36);
    org.junit.Assert.assertNotNull(strSet37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNull(str41);
  }

  @Test
  public void test0674() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0674");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer12 = enterpriseTracerFactory0.createDatabaseTracer(
        clock11);
    java.time.Clock clock13 = null;
    org.neo4j.lock.LockTracer lockTracer14 = enterpriseTracerFactory0.createLockTracer(clock13);
    java.time.Clock clock15 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer16 = enterpriseTracerFactory0.createDatabaseTracer(
        clock15);
    java.lang.String str17 = enterpriseTracerFactory0.getName();
    org.neo4j.monitoring.Monitors monitors18 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock20 = null;
    org.neo4j.logging.Log log21 = null;
    org.neo4j.configuration.Config config22 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer23 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors18, jobScheduler19, systemNanoClock20, log21, config22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(databaseTracer12);
    org.junit.Assert.assertNotNull(lockTracer14);
    org.junit.Assert.assertNotNull(databaseTracer16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "verbose" + "'", str17, "verbose");
  }

  @Test
  public void test0675() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0675");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str8 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager9 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager9.stop();
    defaultAuthManager9.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager9.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList13 = defaultAuthManager9.gepiggatgcfList();
    defaultAuthManager9.start();
    defaultAuthManager9.claauch();
    boolean boolean16 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager9);
    java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl18.authorize(
        idLookup19, "neo4j", abstractSecurityLog21);
    java.lang.String str23 = securityContextEnterpriseImpl22.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl22.withMode(
        accessMode24);
    java.lang.String str26 = securityContextEnterpriseImpl22.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject27 = securityContextEnterpriseImpl22.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl22.withMode(
        adminAccessMode28);
    boolean boolean31 = securityContextEnterpriseImpl29.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl29.withMode(
        adminAccessMode32);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl33.withMode(
        adminAccessMode34);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo36 = securityContextEnterpriseImpl33.connectionInfo();
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = defaultAuthManager9.login(
          strMap17, clientConnectionInfo36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pagecachewarmer" + "'", str8,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(defaultAuthManager9);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(strMapList13);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNull(str23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AUTH_DISABLED with FULL" + "'", str26,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNotNull(clientConnectionInfo36);
  }

  @Test
  public void test0676() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0676");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    authManager4.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
  }

  @Test
  public void test0677() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0677");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList29 = defaultAuthManager0.gepiggatgcfList();
    java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject32 = securityContextEnterpriseImpl31.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl31.withMode(
        adminAccessMode33);
    java.lang.String str35 = securityContextEnterpriseImpl31.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo36 = securityContextEnterpriseImpl31.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo36);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext38 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo36);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext39 = defaultAuthManager0.login(
          strMap30, clientConnectionInfo36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(strMapList29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(authSubject32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNull(str35);
    org.junit.Assert.assertNotNull(clientConnectionInfo36);
    org.junit.Assert.assertNotNull(defaultLoginContext37);
    org.junit.Assert.assertNotNull(loginContext38);
  }

  @Test
  public void test0678() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0678");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) 6362, uniquenessConstraintDescriptor5, (long) 'a');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
  }

  @Test
  public void test0679() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0679");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str15 = securityContextEnterpriseImpl13.database();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str15);
  }

  @Test
  public void test0680() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0680");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager5.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test0681() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0681");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 1, namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId12);
  }

  @Test
  public void test0682() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0682");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(10L, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 6362, namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.wapclForNa(0L, namedDatabaseId13);
  }

  @Test
  public void test0683() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0683");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(10L, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (short) 10, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId10);
  }

  @Test
  public void test0684() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0684");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.start();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl7 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl7.start();
    securityProviderAuthDisabledImpl7.stop();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl7.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager11 = securityProviderAuthDisabledImpl7.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl7.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl14.authorize(
        idLookup15, "neo4j", abstractSecurityLog17);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl14.withMode(
        accessMode19);
    java.lang.String str21 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = securityContextEnterpriseImpl14.subject();
    authManager12.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl14);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject24 = securityContextEnterpriseImpl14.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo25 = securityContextEnterpriseImpl14.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode26 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = defaultLoginContext27.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject29 = defaultLoginContext27.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo30 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext31 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode32 = securityContext31.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext33 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet34 = defaultLoginContext33.roeSet();
    java.util.Set<java.lang.String> strSet36 = defaultLoginContext33.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode26, authSubject29, clientConnectionInfo30, accessMode32, strSet36,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup40 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl39.authorize(
        idLookup40, "neo4j", abstractSecurityLog42);
    java.lang.String str44 = securityContextEnterpriseImpl43.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode45 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = securityContextEnterpriseImpl43.withMode(
        accessMode45);
    java.lang.String str47 = securityContextEnterpriseImpl43.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject48 = securityContextEnterpriseImpl43.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode49 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl50 = securityContextEnterpriseImpl43.withMode(
        adminAccessMode49);
    boolean boolean52 = securityContextEnterpriseImpl50.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode53 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl54 = securityContextEnterpriseImpl50.withMode(
        adminAccessMode53);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo55 = securityContextEnterpriseImpl50.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext57 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode32, clientConnectionInfo55, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo25, accessMode32, "pagecachewarmer");
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl60 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl60.start();
    securityProviderAuthDisabledImpl60.start();
    org.neo4j.kernel.api.security.AuthManager authManager63 = securityProviderAuthDisabledImpl60.inClusterAuthManager();
    securityProviderAuthDisabledImpl60.stop();
    org.neo4j.kernel.api.security.AuthManager authManager65 = securityProviderAuthDisabledImpl60.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager66 = securityProviderAuthDisabledImpl60.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager67 = securityProviderAuthDisabledImpl60.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup70 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog72 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = securityContextEnterpriseImpl69.authorize(
        idLookup70, "neo4j", abstractSecurityLog72);
    java.lang.String str74 = securityContextEnterpriseImpl73.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode75 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl76 = securityContextEnterpriseImpl73.withMode(
        accessMode75);
    java.lang.String str77 = securityContextEnterpriseImpl73.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject78 = securityContextEnterpriseImpl73.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode79 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl80 = securityContextEnterpriseImpl73.withMode(
        adminAccessMode79);
    boolean boolean82 = securityContextEnterpriseImpl80.allowExecuteAdminProcedure((int) (byte) 1);
    authManager67.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl80);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl84 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup85 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog87 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl88 = securityContextEnterpriseImpl84.authorize(
        idLookup85, "neo4j", abstractSecurityLog87);
    java.lang.String str89 = securityContextEnterpriseImpl88.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode90 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl91 = securityContextEnterpriseImpl88.withMode(
        adminAccessMode90);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject92 = securityContextEnterpriseImpl91.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode93 = securityContextEnterpriseImpl91.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl94 = securityContextEnterpriseImpl80.withMode(
        accessMode93);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl96 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo25, accessMode93, "pagecachewarmer");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext97 = defaultAuthManager0.login(
          strMap6, clientConnectionInfo25);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl7);
    org.junit.Assert.assertNotNull(authManager10);
    org.junit.Assert.assertNotNull(authManager11);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(authSubject24);
    org.junit.Assert.assertNotNull(clientConnectionInfo25);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(clientConnectionInfo28);
    org.junit.Assert.assertNotNull(authSubject29);
    org.junit.Assert.assertNotNull(securityContext31);
    org.junit.Assert.assertTrue("'" + accessMode32 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode32.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext33);
    org.junit.Assert.assertNotNull(strSet34);
    org.junit.Assert.assertNotNull(strSet36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertNull(str44);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AUTH_DISABLED with FULL" + "'", str47,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl50);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl54);
    org.junit.Assert.assertNotNull(clientConnectionInfo55);
    org.junit.Assert.assertNotNull(securityContext57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl60);
    org.junit.Assert.assertNotNull(authManager63);
    org.junit.Assert.assertNotNull(authManager65);
    org.junit.Assert.assertNotNull(authManager66);
    org.junit.Assert.assertNotNull(authManager67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertNull(str74);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl76);
    org.junit.Assert.assertEquals("'" + str77 + "' != '" + "AUTH_DISABLED with FULL" + "'", str77,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject78);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl80);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl84);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl88);
    org.junit.Assert.assertNull(str89);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl91);
    org.junit.Assert.assertNotNull(authSubject92);
    org.junit.Assert.assertTrue("'" + accessMode93 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode93.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl94);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl96);
  }

  @Test
  public void test0685() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0685");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor5 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor5,
          nodeCursor6, propertyCursor7, labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0686() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0686");
    }
    org.neo4j.internal.kernel.api.security.AccessMode accessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext3 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode0, clientConnectionInfo2,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext7 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = securityContext7.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo2, accessMode8, "hi!");
    boolean boolean12 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject13 = securityContextEnterpriseImpl10.subject();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(loginContext3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(securityContext7);
    org.junit.Assert.assertTrue(
        "'" + accessMode8 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode8.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertNotNull(authSubject13);
  }

  @Test
  public void test0687() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0687");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor2 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor4 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (byte) 1, uniquenessConstraintDescriptor2, 0L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0688() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0688");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager5.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test0689() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0689");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    java.lang.String str12 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning13 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy14 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning13);
    long long15 = checkPointThresholdVolumetricPolicy14.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy14.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy14.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy14.checkPointHappened((-1L));
    boolean boolean22 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy14);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str12, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
  }

  @Test
  public void test0690() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0690");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 0, namedDatabaseId16);
  }

  @Test
  public void test0691() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0691");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
  }

  @Test
  public void test0692() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0692");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) (short) 100, nodeKeyConstraintDescriptor5, (long) (-1));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0693() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0693");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor5, propertyCursor6, relationTypeSchemaDescriptor7,
          tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0694() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0694");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl4.inClusterAuthManager();
    securityProviderAuthDisabledImpl4.start();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl4.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager11 = securityProviderAuthDisabledImpl4.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject14 = securityContextEnterpriseImpl13.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl13.authorize(
        idLookup15, "localhost", abstractSecurityLog17);
    authManager11.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl18);
    java.util.Set<java.lang.String> strSet20 = securityContextEnterpriseImpl18.roles();
    java.lang.String str21 = securityContextEnterpriseImpl18.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode22 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext23 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo24 = defaultLoginContext23.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject25 = defaultLoginContext23.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext27 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = securityContext27.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet30 = defaultLoginContext29.roeSet();
    java.util.Set<java.lang.String> strSet32 = defaultLoginContext29.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode22, authSubject25, clientConnectionInfo26, accessMode28, strSet32,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl18.withMode(
        accessMode28);
    defaultAuthManager0.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl18);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl18.withMode(
        adminAccessMode37);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(authManager10);
    org.junit.Assert.assertNotNull(authManager11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(authSubject14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(strSet20);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AUTH_DISABLED with FULL" + "'", str21,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(defaultLoginContext23);
    org.junit.Assert.assertNotNull(clientConnectionInfo24);
    org.junit.Assert.assertNotNull(authSubject25);
    org.junit.Assert.assertNotNull(securityContext27);
    org.junit.Assert.assertTrue("'" + accessMode28 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode28.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(strSet30);
    org.junit.Assert.assertNotNull(strSet32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
  }

  @Test
  public void test0695() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0695");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor6, nodeCursor7, propertyCursor8, labelSchemaDescriptor9,
          tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0696() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0696");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl4.authorize(
        idLookup17, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
  }

  @Test
  public void test0697() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0697");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 100);
    java.util.function.Consumer<java.lang.String> strConsumer15 = null;
    try {
      boolean boolean16 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((-1L), 0L,
          strConsumer15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test0698() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0698");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (short) 10, uniquenessConstraintDescriptor7, (long) '4');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0699() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0699");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 10);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    java.util.function.Consumer<java.lang.String> strConsumer13 = null;
    try {
      boolean boolean14 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) 10,
          (long) (byte) 10, strConsumer13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
  }

  @Test
  public void test0700() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0700");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.Object obj6 = null;
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(obj6);
    java.lang.String str8 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str9 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext10 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker11 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle12 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext10, componentsChecker11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pagecachewarmer" + "'", str8,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
  }

  @Test
  public void test0701() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0701");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
  }

  @Test
  public void test0702() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0702");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor2 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor3 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          0L, constraintDescriptor2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0703() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0703");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    securityProviderAuthDisabledImpl4.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl4.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl4.loopbackAuthManager();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
  }

  @Test
  public void test0704() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0704");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 6362, constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0705() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0705");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode1 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject3 = securityContextEnterpriseImpl2.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = securityContextEnterpriseImpl2.mode();
    java.lang.String str5 = securityContextEnterpriseImpl2.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl2;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject7 = securityContextEnterpriseImpl2.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl8.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl8.withMode(
        adminAccessMode10);
    java.lang.String str12 = securityContextEnterpriseImpl8.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo13 = securityContextEnterpriseImpl8.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext14 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo13);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext15 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo13);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    java.lang.String str21 = securityContextEnterpriseImpl20.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl20.withMode(
        accessMode22);
    java.lang.String str24 = securityContextEnterpriseImpl20.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource25 = null;
    boolean boolean26 = securityContextEnterpriseImpl20.allowsAdminAction(adminActionOnResource25);
    java.lang.String str27 = securityContextEnterpriseImpl20.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl20;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl20;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo30 = securityContextEnterpriseImpl20.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext31 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode32 = securityContext31.mode();
    java.lang.String str33 = securityContext31.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode34 = securityContext31.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo30, accessMode34,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo38 = defaultLoginContext37.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext39 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo38);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext40 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo38);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext42 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode34, clientConnectionInfo38, "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler44 = null;
    securityContextEnterpriseImpl43.assertCredentialsNotExpired(securityAuthorizationHandler44);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup46 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl43.authorize(
        idLookup46, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog48);
    java.util.Set<java.lang.String> strSet50 = securityContextEnterpriseImpl43.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode1, authSubject7, clientConnectionInfo13, accessMode34, strSet50,
        "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject54 = securityContextEnterpriseImpl53.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup55 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog57 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = securityContextEnterpriseImpl53.authorize(
        idLookup55, "localhost", abstractSecurityLog57);
    java.util.Set<java.lang.String> strSet59 = securityContextEnterpriseImpl58.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo60 = securityContextEnterpriseImpl58.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl61 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup62 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog64 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = securityContextEnterpriseImpl61.authorize(
        idLookup62, "neo4j", abstractSecurityLog64);
    java.lang.String str66 = securityContextEnterpriseImpl65.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode67 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl68 = securityContextEnterpriseImpl65.withMode(
        accessMode67);
    java.lang.String str69 = securityContextEnterpriseImpl65.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource70 = null;
    boolean boolean71 = securityContextEnterpriseImpl65.allowsAdminAction(adminActionOnResource70);
    java.lang.String str72 = securityContextEnterpriseImpl65.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl65;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl65;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo75 = securityContextEnterpriseImpl65.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext76 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode77 = securityContext76.mode();
    java.lang.String str78 = securityContext76.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode79 = securityContext76.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl81 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo75, accessMode79,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext82 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo83 = defaultLoginContext82.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext84 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo83);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext85 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo83);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext87 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode79, clientConnectionInfo83, "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext88 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet90 = defaultLoginContext88.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl92 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject7, clientConnectionInfo60, accessMode79, strSet90, "hi!");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(authSubject3);
    org.junit.Assert.assertTrue(
        "'" + accessMode4 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode4.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AUTH_DISABLED with FULL" + "'", str5,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(clientConnectionInfo13);
    org.junit.Assert.assertNotNull(defaultLoginContext14);
    org.junit.Assert.assertNotNull(loginContext15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AUTH_DISABLED with FULL" + "'", str24,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AUTH_DISABLED with FULL" + "'", str27,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo30);
    org.junit.Assert.assertNotNull(securityContext31);
    org.junit.Assert.assertTrue("'" + accessMode32 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode32.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertTrue("'" + accessMode34 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode34.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNotNull(defaultLoginContext37);
    org.junit.Assert.assertNotNull(clientConnectionInfo38);
    org.junit.Assert.assertNotNull(loginContext39);
    org.junit.Assert.assertNotNull(loginContext40);
    org.junit.Assert.assertNotNull(securityContext42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(strSet50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertNotNull(authSubject54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(strSet59);
    org.junit.Assert.assertNotNull(clientConnectionInfo60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl61);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
    org.junit.Assert.assertNull(str66);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl68);
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AUTH_DISABLED with FULL" + "'", str69,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertEquals("'" + str72 + "' != '" + "AUTH_DISABLED with FULL" + "'", str72,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo75);
    org.junit.Assert.assertNotNull(securityContext76);
    org.junit.Assert.assertTrue("'" + accessMode77 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode77.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str78);
    org.junit.Assert.assertTrue("'" + accessMode79 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode79.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl81);
    org.junit.Assert.assertNotNull(defaultLoginContext82);
    org.junit.Assert.assertNotNull(clientConnectionInfo83);
    org.junit.Assert.assertNotNull(loginContext84);
    org.junit.Assert.assertNotNull(loginContext85);
    org.junit.Assert.assertNotNull(securityContext87);
    org.junit.Assert.assertNotNull(defaultLoginContext88);
    org.junit.Assert.assertNotNull(strSet90);
  }

  @Test
  public void test0706() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0706");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    authManager3.stop();
    authManager3.start();
    authManager3.start();
    authManager3.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
  }

  @Test
  public void test0707() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0707");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler15 = null;
    securityContextEnterpriseImpl11.assertCredentialsNotExpired(securityAuthorizationHandler15);
    authManager5.log("pagecachewarmer",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl11);
    boolean boolean19 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure(
        (int) (short) -1);
    java.lang.String str20 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = securityContextEnterpriseImpl11.connectionInfo();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
  }

  @Test
  public void test0708() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0708");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor4 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
  }

  @Test
  public void test0709() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0709");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor7 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor8 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor9 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor10 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup11 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor7, relationshipScanCursor8, propertyCursor9,
          relationTypeSchemaDescriptor10, tokenNameLookup11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test0710() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0710");
    }
    org.neo4j.internal.kernel.api.security.AccessMode accessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext4 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode0, clientConnectionInfo2, "neo4j");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = securityContext5.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo2, accessMode6, "volumetric");
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl8.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl8.description();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(securityContext4);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue(
        "'" + accessMode6 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode6.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test0711() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0711");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.kernel.api.security.AuthManager authManager18 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup21 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl20.authorize(
        idLookup21, "neo4j", abstractSecurityLog23);
    java.lang.String str25 = securityContextEnterpriseImpl24.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl24.withMode(
        accessMode26);
    java.lang.String str28 = securityContextEnterpriseImpl24.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource29 = null;
    boolean boolean30 = securityContextEnterpriseImpl24.allowsAdminAction(adminActionOnResource29);
    java.lang.String str31 = securityContextEnterpriseImpl24.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl24;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl24;
    authManager18.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl24);
    authManager5.log("verbose",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl24);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup38 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl37.authorize(
        idLookup38, "neo4j", abstractSecurityLog40);
    java.lang.String str42 = securityContextEnterpriseImpl41.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl41.withMode(
        accessMode43);
    java.lang.String str45 = securityContextEnterpriseImpl41.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource46 = null;
    boolean boolean47 = securityContextEnterpriseImpl41.allowsAdminAction(adminActionOnResource46);
    java.lang.String str48 = securityContextEnterpriseImpl41.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl41;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl41;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo51 = securityContextEnterpriseImpl41.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext52 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode53 = securityContext52.mode();
    java.lang.String str54 = securityContext52.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode55 = securityContext52.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl57 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo51, accessMode55,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext58 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo59 = defaultLoginContext58.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext61 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode55, clientConnectionInfo59, ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup63 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog65 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = securityContextEnterpriseImpl62.authorize(
        idLookup63, "neo4j", abstractSecurityLog65);
    java.lang.String str67 = securityContextEnterpriseImpl66.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode68 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = securityContextEnterpriseImpl66.withMode(
        accessMode68);
    java.lang.String str70 = securityContextEnterpriseImpl66.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource71 = null;
    boolean boolean72 = securityContextEnterpriseImpl66.allowsAdminAction(adminActionOnResource71);
    java.lang.String str73 = securityContextEnterpriseImpl66.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl66;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl66;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo76 = securityContextEnterpriseImpl66.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext77 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo76);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext79 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode55, clientConnectionInfo76, "enterpriseConstraints");
    java.lang.String str80 = securityContext79.description();
    authManager5.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        securityContext79);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNull(str25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AUTH_DISABLED with FULL" + "'", str28,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AUTH_DISABLED with FULL" + "'", str31,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNull(str42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AUTH_DISABLED with FULL" + "'", str45,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AUTH_DISABLED with FULL" + "'", str48,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo51);
    org.junit.Assert.assertNotNull(securityContext52);
    org.junit.Assert.assertTrue("'" + accessMode53 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode53.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str54);
    org.junit.Assert.assertTrue("'" + accessMode55 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode55.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl57);
    org.junit.Assert.assertNotNull(defaultLoginContext58);
    org.junit.Assert.assertNotNull(clientConnectionInfo59);
    org.junit.Assert.assertNotNull(securityContext61);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertNull(str67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertEquals("'" + str70 + "' != '" + "AUTH_DISABLED with FULL" + "'", str70,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    org.junit.Assert.assertEquals("'" + str73 + "' != '" + "AUTH_DISABLED with FULL" + "'", str73,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo76);
    org.junit.Assert.assertNotNull(defaultLoginContext77);
    org.junit.Assert.assertNotNull(securityContext79);
    org.junit.Assert.assertEquals("'" + str80 + "' != '" + "AUTH_DISABLED with FULL" + "'", str80,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test0712() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0712");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext5.connectionInfo();
    java.util.Set<java.lang.String> strSet7 = defaultLoginContext5.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo3, accessMode4, strSet7, "volumetric");
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl9;
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(strSet7);
  }

  @Test
  public void test0713() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0713");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId11);
    java.lang.Class<?> wildcardClass13 = pageCacheLoadingWatcherDefaultImpl1.getClass();
    org.junit.Assert.assertNotNull(wildcardClass13);
  }

  @Test
  public void test0714() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0714");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10L, namedDatabaseId5);
  }

  @Test
  public void test0715() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0715");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.authorize(
        idLookup10, "AUTH_DISABLED with FULL", abstractSecurityLog12);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl13.mode();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(accessMode14);
  }

  @Test
  public void test0716() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0716");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    java.util.Set<java.lang.String> strSet6 = securityContextEnterpriseImpl5.roles();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode7 = securityContextEnterpriseImpl5.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext8 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = defaultLoginContext8.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext10 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo9);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    java.lang.String str16 = securityContextEnterpriseImpl15.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl15.withMode(
        accessMode17);
    java.lang.String str19 = securityContextEnterpriseImpl15.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource20 = null;
    boolean boolean21 = securityContextEnterpriseImpl15.allowsAdminAction(adminActionOnResource20);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode22);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = securityContextEnterpriseImpl15.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo9, accessMode24, "enterpriseConstraints");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext28 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode7, clientConnectionInfo9,
        "Property existence constraint requires Neo4j Enterprise Edition");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(strSet6);
    org.junit.Assert.assertTrue(
        "'" + accessMode7 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode7.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(loginContext10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AUTH_DISABLED with FULL" + "'", str19,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertTrue("'" + accessMode24 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode24.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContext28);
  }

  @Test
  public void test0717() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0717");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler1 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler1);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.authorize(
        idLookup3, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog5);
    java.util.Set<java.lang.String> strSet7 = securityContextEnterpriseImpl0.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContextEnterpriseImpl0.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
  }

  @Test
  public void test0718() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0718");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.lock.LockTracer lockTracer5 = enterpriseTracerFactory0.createLockTracer(clock4);
    java.time.Clock clock6 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer7 = enterpriseTracerFactory0.createDatabaseTracer(
        clock6);
    org.neo4j.monitoring.Monitors monitors8 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler9 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock10 = null;
    org.neo4j.logging.Log log11 = null;
    org.neo4j.configuration.Config config12 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer13 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors8, jobScheduler9, systemNanoClock10, log11, config12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(lockTracer5);
    org.junit.Assert.assertNotNull(databaseTracer7);
  }

  @Test
  public void test0719() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0719");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str5 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str6 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    java.lang.String str13 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str14 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str15 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str16 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "volumetric" + "'", str5, "volumetric");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "volumetric" + "'", str6, "volumetric");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "volumetric" + "'", str7, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "volumetric" + "'", str13, "volumetric");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "volumetric" + "'", str14, "volumetric");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "volumetric" + "'", str15, "volumetric");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "volumetric" + "'", str16, "volumetric");
  }

  @Test
  public void test0720() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0720");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) -1, namedDatabaseId13);
  }

  @Test
  public void test0721() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0721");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext15 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContext15.mode();
    java.lang.String str17 = securityContext15.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContext15.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo14, accessMode18,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo22 = defaultLoginContext21.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext23 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo22);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext24 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo22);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext26 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo22, "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext27 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo22);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext28 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo22);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = defaultLoginContext28.authorize(
        idLookup29, "localhost", abstractSecurityLog31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(securityContext15);
    org.junit.Assert.assertTrue("'" + accessMode16 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode16.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(clientConnectionInfo22);
    org.junit.Assert.assertNotNull(loginContext23);
    org.junit.Assert.assertNotNull(loginContext24);
    org.junit.Assert.assertNotNull(securityContext26);
    org.junit.Assert.assertNotNull(loginContext27);
    org.junit.Assert.assertNotNull(defaultLoginContext28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
  }

  @Test
  public void test0722() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0722");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor7, propertyCursor8, relationTypeSchemaDescriptor9,
          tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test0723() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0723");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl0.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode11 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext12 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo13 = defaultLoginContext12.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject14 = defaultLoginContext12.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext16 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = securityContext16.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext18 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet19 = defaultLoginContext18.roeSet();
    java.util.Set<java.lang.String> strSet21 = defaultLoginContext18.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode11, authSubject14, clientConnectionInfo15, accessMode17, strSet21,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup25 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl24.authorize(
        idLookup25, "neo4j", abstractSecurityLog27);
    java.lang.String str29 = securityContextEnterpriseImpl28.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl28.withMode(
        accessMode30);
    java.lang.String str32 = securityContextEnterpriseImpl28.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject33 = securityContextEnterpriseImpl28.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl28.withMode(
        adminAccessMode34);
    boolean boolean37 = securityContextEnterpriseImpl35.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl35.withMode(
        adminAccessMode38);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo40 = securityContextEnterpriseImpl35.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext42 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode17, clientConnectionInfo40, "localhost");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext44 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode10, clientConnectionInfo40,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup46 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl45.authorize(
        idLookup46, "neo4j", abstractSecurityLog48);
    java.lang.String str50 = securityContextEnterpriseImpl49.database();
    java.lang.String str51 = securityContextEnterpriseImpl49.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl49.withMode(
        adminAccessMode52);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo54 = securityContextEnterpriseImpl49.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext55 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode56 = securityContext55.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo54, accessMode56,
        "Property existence constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup60 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog62 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = securityContextEnterpriseImpl59.authorize(
        idLookup60, "neo4j", abstractSecurityLog62);
    java.lang.String str64 = securityContextEnterpriseImpl63.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode65 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = securityContextEnterpriseImpl63.withMode(
        accessMode65);
    java.lang.String str67 = securityContextEnterpriseImpl63.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject68 = securityContextEnterpriseImpl63.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode69 = securityContextEnterpriseImpl63.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject70 = securityContextEnterpriseImpl63.subject();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl71 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl71.start();
    securityProviderAuthDisabledImpl71.stop();
    org.neo4j.kernel.api.security.AuthManager authManager74 = securityProviderAuthDisabledImpl71.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager75 = securityProviderAuthDisabledImpl71.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager75.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl77);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl80 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup81 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog83 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl84 = securityContextEnterpriseImpl80.authorize(
        idLookup81, "neo4j", abstractSecurityLog83);
    authManager75.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl84);
    java.lang.String str86 = securityContextEnterpriseImpl84.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode87 = securityContextEnterpriseImpl84.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl88 = securityContextEnterpriseImpl63.withMode(
        accessMode87);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl90 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo54, accessMode87,
        "Property existence constraint requires Neo4j Enterprise Edition");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext92 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode10, clientConnectionInfo54, "");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext12);
    org.junit.Assert.assertNotNull(clientConnectionInfo13);
    org.junit.Assert.assertNotNull(authSubject14);
    org.junit.Assert.assertNotNull(securityContext16);
    org.junit.Assert.assertTrue("'" + accessMode17 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode17.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext18);
    org.junit.Assert.assertNotNull(strSet19);
    org.junit.Assert.assertNotNull(strSet21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNull(str29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AUTH_DISABLED with FULL" + "'", str32,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNotNull(clientConnectionInfo40);
    org.junit.Assert.assertNotNull(securityContext42);
    org.junit.Assert.assertNotNull(securityContext44);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNull(str50);
    org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AUTH_DISABLED with FULL" + "'", str51,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertNotNull(clientConnectionInfo54);
    org.junit.Assert.assertNotNull(securityContext55);
    org.junit.Assert.assertTrue("'" + accessMode56 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode56.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl63);
    org.junit.Assert.assertNull(str64);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AUTH_DISABLED with FULL" + "'", str67,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject68);
    org.junit.Assert.assertTrue("'" + accessMode69 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode69.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject70);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl71);
    org.junit.Assert.assertNotNull(authManager74);
    org.junit.Assert.assertNotNull(authManager75);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl80);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl84);
    org.junit.Assert.assertEquals("'" + str86 + "' != '" + "AUTH_DISABLED with FULL" + "'", str86,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode87 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode87.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl88);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl90);
    org.junit.Assert.assertNotNull(securityContext92);
  }

  @Test
  public void test0724() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0724");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (byte) 10, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (byte) 10, namedDatabaseId19);
  }

  @Test
  public void test0725() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0725");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor7 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor8 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor9 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor10 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup11 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor7, relationshipScanCursor8, propertyCursor9,
          relationTypeSchemaDescriptor10, tokenNameLookup11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test0726() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0726");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = securityContextEnterpriseImpl9.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl9.authorize(
        idLookup11, "localhost", abstractSecurityLog13);
    authManager7.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl14);
    java.util.Set<java.lang.String> strSet16 = securityContextEnterpriseImpl14.roles();
    java.lang.String str17 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl14.subject();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(authSubject10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(strSet16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject18);
  }

  @Test
  public void test0727() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0727");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test0728() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0728");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config2 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning4 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold6 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config2, systemNanoClock3, logPruning4, logProvider5);
    java.lang.String str7 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    java.lang.String str13 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "volumetric" + "'", str7, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "volumetric" + "'", str13, "volumetric");
  }

  @Test
  public void test0729() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0729");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager9);
    org.junit.Assert.assertNotNull(authManager10);
  }

  @Test
  public void test0730() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0730");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(0L, namedDatabaseId2);
  }

  @Test
  public void test0731() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0731");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(strSet3);
  }

  @Test
  public void test0732() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0732");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str5 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str6 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str8 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config9 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock10 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning11 = null;
    org.neo4j.logging.LogProvider logProvider12 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold13 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config9, systemNanoClock10, logPruning11, logProvider12);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "volumetric" + "'", str5, "volumetric");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "volumetric" + "'", str6, "volumetric");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "volumetric" + "'", str7, "volumetric");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "volumetric" + "'", str8, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold13);
  }

  @Test
  public void test0733() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0733");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext15 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContext15.mode();
    java.lang.String str17 = securityContext15.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContext15.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo14, accessMode18,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo22 = defaultLoginContext21.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext24 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo22, ".cacheprof");
    java.lang.Class<?> wildcardClass25 = clientConnectionInfo22.getClass();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(securityContext15);
    org.junit.Assert.assertTrue("'" + accessMode16 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode16.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(clientConnectionInfo22);
    org.junit.Assert.assertNotNull(securityContext24);
    org.junit.Assert.assertNotNull(wildcardClass25);
  }

  @Test
  public void test0734() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0734");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode6);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject8 = securityContextEnterpriseImpl7.subject();
    java.lang.String str9 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext11 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = securityContext11.mode();
    java.lang.String str13 = securityContext11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContext11.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContext11.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext16 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = defaultLoginContext16.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext18 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo17);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo17);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup21 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl20.authorize(
        idLookup21, "neo4j", abstractSecurityLog23);
    java.lang.String str25 = securityContextEnterpriseImpl24.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl24.withMode(
        accessMode26);
    java.lang.String str28 = securityContextEnterpriseImpl24.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject29 = securityContextEnterpriseImpl24.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = securityContextEnterpriseImpl24.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext31 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet33 = defaultLoginContext31.roeSet();
    java.util.Set<java.lang.String> strSet34 = defaultLoginContext31.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode10, authSubject15, clientConnectionInfo17, accessMode30, strSet34, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo17);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext38 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo39 = defaultLoginContext38.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext40 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo39);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup42 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog44 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = securityContextEnterpriseImpl41.authorize(
        idLookup42, "neo4j", abstractSecurityLog44);
    java.lang.String str46 = securityContextEnterpriseImpl45.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode47 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = securityContextEnterpriseImpl45.withMode(
        accessMode47);
    java.lang.String str49 = securityContextEnterpriseImpl45.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource50 = null;
    boolean boolean51 = securityContextEnterpriseImpl45.allowsAdminAction(adminActionOnResource50);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl45.withMode(
        adminAccessMode52);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = securityContextEnterpriseImpl45.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo39, accessMode54, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo17, accessMode54,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl7.withMode(
        accessMode54);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource60 = null;
    try {
      boolean boolean61 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource60);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(authSubject8);
    org.junit.Assert.assertNull(str9);
    org.junit.Assert.assertNotNull(securityContext11);
    org.junit.Assert.assertTrue("'" + accessMode12 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode12.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str13);
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(defaultLoginContext16);
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(defaultLoginContext18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNull(str25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AUTH_DISABLED with FULL" + "'", str28,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject29);
    org.junit.Assert.assertTrue("'" + accessMode30 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode30.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext31);
    org.junit.Assert.assertNotNull(strSet33);
    org.junit.Assert.assertNotNull(strSet34);
    org.junit.Assert.assertNotNull(defaultLoginContext37);
    org.junit.Assert.assertNotNull(defaultLoginContext38);
    org.junit.Assert.assertNotNull(clientConnectionInfo39);
    org.junit.Assert.assertNotNull(loginContext40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNull(str46);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertEquals("'" + str49 + "' != '" + "AUTH_DISABLED with FULL" + "'", str49,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertTrue("'" + accessMode54 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode54.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
  }

  @Test
  public void test0735() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0735");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl1 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl1.authorize(
        idLookup2, "neo4j", abstractSecurityLog4);
    java.lang.String str6 = securityContextEnterpriseImpl5.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl5.withMode(
        accessMode7);
    java.lang.String str9 = securityContextEnterpriseImpl5.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = securityContextEnterpriseImpl5.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    java.lang.String str16 = securityContextEnterpriseImpl15.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode17);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = securityContextEnterpriseImpl18.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup21 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl20.authorize(
        idLookup21, "neo4j", abstractSecurityLog23);
    java.lang.String str25 = securityContextEnterpriseImpl24.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl24.withMode(
        accessMode26);
    java.lang.String str28 = securityContextEnterpriseImpl24.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject29 = securityContextEnterpriseImpl24.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl24.withMode(
        adminAccessMode30);
    boolean boolean33 = securityContextEnterpriseImpl31.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl31.withMode(
        adminAccessMode34);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode36 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl35.withMode(
        adminAccessMode36);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo38 = securityContextEnterpriseImpl35.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl39 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl39.start();
    org.neo4j.kernel.api.security.AuthManager authManager41 = securityProviderAuthDisabledImpl39.loopbackAuthManager();
    securityProviderAuthDisabledImpl39.stop();
    org.neo4j.kernel.api.security.AuthManager authManager43 = securityProviderAuthDisabledImpl39.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager43.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl45);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup49 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog51 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl48.authorize(
        idLookup49, "neo4j", abstractSecurityLog51);
    java.lang.String str53 = securityContextEnterpriseImpl52.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = securityContextEnterpriseImpl52.withMode(
        accessMode54);
    java.lang.String str56 = securityContextEnterpriseImpl52.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource57 = null;
    boolean boolean58 = securityContextEnterpriseImpl52.allowsAdminAction(adminActionOnResource57);
    authManager43.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl52);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode60 = securityContextEnterpriseImpl52.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo38, accessMode60, "neo4j");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode63 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext64 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject65 = defaultLoginContext64.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo66 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode67 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext68 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo69 = defaultLoginContext68.connectionInfo();
    java.util.Set<java.lang.String> strSet70 = defaultLoginContext68.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl72 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode63, authSubject65, clientConnectionInfo66, accessMode67, strSet70,
        "volumetric");
    java.util.Set<java.lang.String> strSet73 = securityContextEnterpriseImpl72.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl75 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject10, clientConnectionInfo19, accessMode60, strSet73,
        "pagecachewarmer");
    java.lang.Class<?> wildcardClass76 = clientConnectionInfo19.getClass();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNull(str6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AUTH_DISABLED with FULL" + "'", str9,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNull(str25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AUTH_DISABLED with FULL" + "'", str28,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNotNull(clientConnectionInfo38);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl39);
    org.junit.Assert.assertNotNull(authManager41);
    org.junit.Assert.assertNotNull(authManager43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNull(str53);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AUTH_DISABLED with FULL" + "'", str56,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    org.junit.Assert.assertTrue("'" + accessMode60 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode60.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNotNull(defaultLoginContext64);
    org.junit.Assert.assertNotNull(authSubject65);
    org.junit.Assert.assertNotNull(defaultLoginContext68);
    org.junit.Assert.assertNotNull(clientConnectionInfo69);
    org.junit.Assert.assertNotNull(strSet70);
    org.junit.Assert.assertNotNull(strSet73);
    org.junit.Assert.assertNotNull(wildcardClass76);
  }

  @Test
  public void test0736() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0736");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor2 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor3 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor4 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor5 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup6 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor2, relationshipScanCursor3, propertyCursor4,
          relationTypeSchemaDescriptor5, tokenNameLookup6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
  }

  @Test
  public void test0737() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0737");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.logging.Log log10 = null;
    org.neo4j.configuration.Config config11 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors7, jobScheduler8, systemNanoClock9, log10, config11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
  }

  @Test
  public void test0738() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0738");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId17);
  }

  @Test
  public void test0739() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0739");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    java.util.function.Consumer<java.lang.String> strConsumer14 = null;
    try {
      boolean boolean15 = checkPointThresholdVolumetricPolicy8.isCheckPointingNeeded(10000L,
          (long) (short) 100, strConsumer14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test0740() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0740");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl1 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl1.start();
    securityProviderAuthDisabledImpl1.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl1.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl1.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl1.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl8.authorize(
        idLookup9, "neo4j", abstractSecurityLog11);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl8.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl8.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject16 = securityContextEnterpriseImpl8.subject();
    authManager6.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl8);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler18 = null;
    securityContextEnterpriseImpl8.assertCredentialsNotExpired(securityAuthorizationHandler18);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject20 = securityContextEnterpriseImpl8.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = securityContextEnterpriseImpl21.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl21.withMode(
        adminAccessMode23);
    java.lang.String str25 = securityContextEnterpriseImpl21.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = securityContextEnterpriseImpl21.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext27 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo26);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo30 = defaultLoginContext29.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext31 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo30);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext33 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode28, clientConnectionInfo30,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext34 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo30);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext35 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode36 = securityContext35.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo30, accessMode36, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode39 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext40 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode41 = securityContext40.mode();
    java.lang.String str42 = securityContext40.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode43 = securityContext40.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject44 = securityContext40.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext45 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo46 = defaultLoginContext45.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext47 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo46);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext48 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo46);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup50 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl49.authorize(
        idLookup50, "neo4j", abstractSecurityLog52);
    java.lang.String str54 = securityContextEnterpriseImpl53.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode55 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = securityContextEnterpriseImpl53.withMode(
        accessMode55);
    java.lang.String str57 = securityContextEnterpriseImpl53.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject58 = securityContextEnterpriseImpl53.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode59 = securityContextEnterpriseImpl53.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext60 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet62 = defaultLoginContext60.roeSet();
    java.util.Set<java.lang.String> strSet63 = defaultLoginContext60.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode39, authSubject44, clientConnectionInfo46, accessMode59, strSet63, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject20, clientConnectionInfo26, accessMode36, strSet63,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo68 = securityContextEnterpriseImpl67.connectionInfo();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl1);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(authSubject16);
    org.junit.Assert.assertNotNull(authSubject20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNull(str25);
    org.junit.Assert.assertNotNull(clientConnectionInfo26);
    org.junit.Assert.assertNotNull(loginContext27);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(clientConnectionInfo30);
    org.junit.Assert.assertNotNull(loginContext31);
    org.junit.Assert.assertNotNull(securityContext33);
    org.junit.Assert.assertNotNull(defaultLoginContext34);
    org.junit.Assert.assertNotNull(securityContext35);
    org.junit.Assert.assertTrue("'" + accessMode36 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode36.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(securityContext40);
    org.junit.Assert.assertTrue("'" + accessMode41 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode41.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str42);
    org.junit.Assert.assertTrue("'" + accessMode43 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode43.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject44);
    org.junit.Assert.assertNotNull(defaultLoginContext45);
    org.junit.Assert.assertNotNull(clientConnectionInfo46);
    org.junit.Assert.assertNotNull(defaultLoginContext47);
    org.junit.Assert.assertNotNull(defaultLoginContext48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertNull(str54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AUTH_DISABLED with FULL" + "'", str57,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject58);
    org.junit.Assert.assertTrue("'" + accessMode59 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode59.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext60);
    org.junit.Assert.assertNotNull(strSet62);
    org.junit.Assert.assertNotNull(strSet63);
    org.junit.Assert.assertNotNull(clientConnectionInfo68);
  }

  @Test
  public void test0741() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0741");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource4 = null;
    try {
      boolean boolean5 = securityContextEnterpriseImpl3.allowsAdminAction(adminActionOnResource4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
  }

  @Test
  public void test0742() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0742");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    defaultAuthManager0.stop();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList10 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(strMapList10);
  }

  @Test
  public void test0743() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0743");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.time.Clock clock6 = null;
    org.neo4j.lock.LockTracer lockTracer7 = enterpriseTracerFactory0.createLockTracer(clock6);
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler11 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    org.neo4j.logging.Log log13 = null;
    org.neo4j.configuration.Config config14 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors10, jobScheduler11, systemNanoClock12, log13, config14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertNotNull(lockTracer7);
    org.junit.Assert.assertNotNull(databaseTracer9);
  }

  @Test
  public void test0744() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0744");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 6362, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 0, namedDatabaseId11);
  }

  @Test
  public void test0745() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0745");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    java.lang.String str12 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.logging.Log log13 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl14 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl14.prlcpdForNa((long) (short) 1, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl14.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl14.wapclForNa((long) (byte) 100, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl14.wamsrdForNa(namedDatabaseId23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = null;
    pageCacheLoadingWatcherDefaultImpl14.wamsrdForNa(namedDatabaseId25);
    boolean boolean27 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl14);
    java.lang.String str28 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pagecachewarmer" + "'", str12,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pagecachewarmer" + "'", str28,
        "pagecachewarmer");
  }

  @Test
  public void test0746() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0746");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext2 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager0.log("", securityContext2);
    java.util.Map<java.lang.String, java.lang.Object> strMap4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl5.withMode(
        accessMode10);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl5.authorize(
        idLookup12, "", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "AUTH_DISABLED with FULL", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl15.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl22.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = securityContextEnterpriseImpl22.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup26 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl25.authorize(
        idLookup26, "neo4j", abstractSecurityLog28);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl25.withMode(
        accessMode30);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup32 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl25.authorize(
        idLookup32, "", abstractSecurityLog34);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup36 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl35.authorize(
        idLookup36, "AUTH_DISABLED with FULL", abstractSecurityLog38);
    java.lang.String str40 = securityContextEnterpriseImpl35.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode41 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = securityContextEnterpriseImpl35.withMode(
        adminAccessMode41);
    java.lang.String str43 = securityContextEnterpriseImpl42.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode44 = securityContextEnterpriseImpl42.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode45 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext46 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo47 = defaultLoginContext46.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext48 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo47);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext50 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode45, clientConnectionInfo47,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext51 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo47);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext53 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode44, clientConnectionInfo47, "neo4j");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext55 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode24, clientConnectionInfo47, "user '' with FULL");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext56 = defaultAuthManager0.login(
          strMap4, clientConnectionInfo47);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContext2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNull(str23);
    org.junit.Assert.assertTrue("'" + accessMode24 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode24.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AUTH_DISABLED with FULL" + "'", str40,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNull(str43);
    org.junit.Assert.assertTrue("'" + accessMode44 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode44.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext46);
    org.junit.Assert.assertNotNull(clientConnectionInfo47);
    org.junit.Assert.assertNotNull(loginContext48);
    org.junit.Assert.assertNotNull(securityContext50);
    org.junit.Assert.assertNotNull(defaultLoginContext51);
    org.junit.Assert.assertNotNull(securityContext53);
    org.junit.Assert.assertNotNull(securityContext55);
  }

  @Test
  public void test0747() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0747");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager8.start();
    authManager8.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test0748() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0748");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 10, constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test0749() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0749");
    }
    org.neo4j.internal.kernel.api.security.AccessMode accessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext3 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode0, clientConnectionInfo2,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject7 = defaultLoginContext6.subject();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(loginContext3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(authSubject7);
  }

  @Test
  public void test0750() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0750");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    java.lang.String str14 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl11.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
  }

  @Test
  public void test0751() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0751");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning6 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy7 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning6);
    long long8 = checkPointThresholdVolumetricPolicy7.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy7.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy7.initialize((long) '4');
    long long13 = checkPointThresholdVolumetricPolicy7.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy7.checkPointHappened(1L);
    boolean boolean16 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy7);
    java.lang.String str17 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pagecachewarmer" + "'", str17,
        "pagecachewarmer");
  }

  @Test
  public void test0752() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0752");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 0);
    checkPointThresholdVolumetricPolicy1.initialize(10000L);
    java.util.function.Consumer<java.lang.String> strConsumer13 = null;
    try {
      boolean boolean14 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(100L, (-1L),
          strConsumer13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
  }

  @Test
  public void test0753() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0753");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    java.util.Set<java.lang.String> strSet8 = defaultLoginContext6.roeSet();
    java.util.Set<java.lang.String> strSet9 = defaultLoginContext6.roeSet();
    java.util.Set<java.lang.String> strSet10 = defaultLoginContext6.roeSet();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(strSet8);
    org.junit.Assert.assertNotNull(strSet9);
    org.junit.Assert.assertNotNull(strSet10);
  }

  @Test
  public void test0754() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0754");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext8 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker9 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle10 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext8, componentsChecker9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
  }

  @Test
  public void test0755() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0755");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.init();
    securityProviderAuthDisabledImpl0.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test0756() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0756");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext11 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo12 = defaultLoginContext11.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext13 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo12);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext15 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode10, clientConnectionInfo12,
        "Node Key constraint requires Neo4j Enterprise Edition");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext16 = defaultAuthManager0.login(
          strMap9, clientConnectionInfo12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(defaultLoginContext11);
    org.junit.Assert.assertNotNull(clientConnectionInfo12);
    org.junit.Assert.assertNotNull(loginContext13);
    org.junit.Assert.assertNotNull(securityContext15);
  }

  @Test
  public void test0757() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0757");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId16);
  }

  @Test
  public void test0758() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0758");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config2 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning4 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold6 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config2, systemNanoClock3, logPruning4, logProvider5);
    java.lang.String str7 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str8 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str9 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config10 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning12 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold14 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config10, systemNanoClock11, logPruning12, logProvider13);
    org.neo4j.configuration.Config config15 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock16 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning17 = null;
    org.neo4j.logging.LogProvider logProvider18 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold19 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config15, systemNanoClock16, logPruning17, logProvider18);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "volumetric" + "'", str7, "volumetric");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "volumetric" + "'", str8, "volumetric");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "volumetric" + "'", str9, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold14);
    org.junit.Assert.assertNotNull(checkPointThreshold19);
  }

  @Test
  public void test0759() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0759");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test0760() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0760");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor5, propertyCursor6,
          labelSchemaDescriptor7, tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0761() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0761");
    }
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext0 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode1 = securityContext0.mode();
    java.lang.String str2 = securityContext0.database();
    java.lang.String str3 = securityContext0.database();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContext0;
    org.junit.Assert.assertNotNull(securityContext0);
    org.junit.Assert.assertTrue(
        "'" + accessMode1 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode1.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str2);
    org.junit.Assert.assertNull(str3);
  }

  @Test
  public void test0762() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0762");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) -1, namedDatabaseId16);
  }

  @Test
  public void test0763() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0763");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) '#', uniquenessConstraintDescriptor5, 0L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
  }

  @Test
  public void test0764() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0764");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor5 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor5, relationshipScanCursor6, propertyCursor7,
          relationTypeSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test0765() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0765");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 10, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 100, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '#', namedDatabaseId20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 100, namedDatabaseId23);
  }

  @Test
  public void test0766() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0766");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor6, propertyCursor7,
          labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0767() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0767");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.start();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    defaultAuthManager0.shutdown();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList4);
  }

  @Test
  public void test0768() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0768");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl23;
    java.lang.String str25 = securityContextEnterpriseImpl23.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AUTH_DISABLED with FULL" + "'", str25,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test0769() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0769");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long12 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    java.util.function.Consumer<java.lang.String> strConsumer15 = null;
    try {
      boolean boolean16 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(
          (long) (byte) 10, (long) (short) 10, strConsumer15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
  }

  @Test
  public void test0770() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0770");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor3 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor4 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
  }

  @Test
  public void test0771() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0771");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    java.util.function.Consumer<java.lang.String> strConsumer14 = null;
    try {
      boolean boolean15 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(
          (long) (byte) 100, 1L, strConsumer14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
  }

  @Test
  public void test0772() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0772");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    java.util.Set<java.lang.String> strSet6 = securityContextEnterpriseImpl5.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = securityContextEnterpriseImpl5.connectionInfo();
    boolean boolean9 = securityContextEnterpriseImpl5.allowExecuteAdminProcedure((int) '#');
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(strSet6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
  }

  @Test
  public void test0773() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0773");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource29 = null;
    boolean boolean30 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource29);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler31 = null;
    securityContextEnterpriseImpl19.assertCredentialsNotExpired(securityAuthorizationHandler31);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
  }

  @Test
  public void test0774() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0774");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) 10, namedDatabaseId14);
  }

  @Test
  public void test0775() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0775");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          1L, nodeKeyConstraintDescriptor5, (long) (-1));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0776() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0776");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl1 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl1.authorize(
        idLookup2, "neo4j", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl1.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl1.authorize(
        idLookup8, "", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl1.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext14 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = defaultLoginContext14.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext16 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo15);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext18 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode13, clientConnectionInfo15,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl19 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl19.start();
    securityProviderAuthDisabledImpl19.stop();
    org.neo4j.kernel.api.security.AuthManager authManager22 = securityProviderAuthDisabledImpl19.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager23 = securityProviderAuthDisabledImpl19.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager23.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl25);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl28.authorize(
        idLookup29, "neo4j", abstractSecurityLog31);
    authManager23.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl32);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo36 = defaultLoginContext35.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject37 = defaultLoginContext35.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo38 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext39 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = securityContext39.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext41 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet42 = defaultLoginContext41.roeSet();
    java.util.Set<java.lang.String> strSet44 = defaultLoginContext41.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode34, authSubject37, clientConnectionInfo38, accessMode40, strSet44,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl32.withMode(
        accessMode40);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup49 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog51 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl48.authorize(
        idLookup49, "neo4j", abstractSecurityLog51);
    java.lang.String str53 = securityContextEnterpriseImpl52.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = securityContextEnterpriseImpl52.withMode(
        accessMode54);
    java.lang.String str56 = securityContextEnterpriseImpl52.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource57 = null;
    boolean boolean58 = securityContextEnterpriseImpl52.allowsAdminAction(adminActionOnResource57);
    java.lang.String str59 = securityContextEnterpriseImpl52.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode60 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl61 = securityContextEnterpriseImpl52.withMode(
        adminAccessMode60);
    java.util.Set<java.lang.String> strSet62 = securityContextEnterpriseImpl61.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl64 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject12, clientConnectionInfo15, accessMode40, strSet62, "verbose");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext65 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertNotNull(defaultLoginContext14);
    org.junit.Assert.assertNotNull(clientConnectionInfo15);
    org.junit.Assert.assertNotNull(loginContext16);
    org.junit.Assert.assertNotNull(securityContext18);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl19);
    org.junit.Assert.assertNotNull(authManager22);
    org.junit.Assert.assertNotNull(authManager23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(defaultLoginContext35);
    org.junit.Assert.assertNotNull(clientConnectionInfo36);
    org.junit.Assert.assertNotNull(authSubject37);
    org.junit.Assert.assertNotNull(securityContext39);
    org.junit.Assert.assertTrue("'" + accessMode40 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode40.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext41);
    org.junit.Assert.assertNotNull(strSet42);
    org.junit.Assert.assertNotNull(strSet44);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNull(str53);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AUTH_DISABLED with FULL" + "'", str56,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AUTH_DISABLED with FULL" + "'", str59,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl61);
    org.junit.Assert.assertNotNull(strSet62);
    org.junit.Assert.assertNotNull(loginContext65);
  }

  @Test
  public void test0777() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0777");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo30 = null;
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext31 = defaultAuthManager0.login(
          strMap29, clientConnectionInfo30);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
  }

  @Test
  public void test0778() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0778");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext5 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker6 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle7 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext5, componentsChecker6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
  }

  @Test
  public void test0779() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0779");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.time.Clock clock6 = null;
    org.neo4j.lock.LockTracer lockTracer7 = enterpriseTracerFactory0.createLockTracer(clock6);
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    java.time.Clock clock10 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer11 = enterpriseTracerFactory0.createDatabaseTracer(
        clock10);
    java.time.Clock clock12 = null;
    org.neo4j.lock.LockTracer lockTracer13 = enterpriseTracerFactory0.createLockTracer(clock12);
    org.neo4j.monitoring.Monitors monitors14 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock16 = null;
    org.neo4j.logging.Log log17 = null;
    org.neo4j.configuration.Config config18 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors14, jobScheduler15, systemNanoClock16, log17, config18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertNotNull(lockTracer7);
    org.junit.Assert.assertNotNull(databaseTracer9);
    org.junit.Assert.assertNotNull(databaseTracer11);
    org.junit.Assert.assertNotNull(lockTracer13);
  }

  @Test
  public void test0780() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0780");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl7 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl7.start();
    securityProviderAuthDisabledImpl7.stop();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl7.authManager();
    authManager10.stop();
    authManager10.start();
    boolean boolean13 = cachePopulatorExtensionFactory0.equals((java.lang.Object) authManager10);
    boolean boolean15 = cachePopulatorExtensionFactory0.equals((java.lang.Object) "volumetric");
    java.lang.String str16 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl7);
    org.junit.Assert.assertNotNull(authManager10);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pagecachewarmer" + "'", str16,
        "pagecachewarmer");
  }

  @Test
  public void test0781() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0781");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet1 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet1);
    org.junit.Assert.assertNotNull(strSet2);
  }

  @Test
  public void test0782() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0782");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10L, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (-1), namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 10, namedDatabaseId20);
  }

  @Test
  public void test0783() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0783");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    authManager4.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str21 = securityContextEnterpriseImpl13.database();
    java.lang.String str22 = securityContextEnterpriseImpl13.description();
    java.util.Set<java.lang.String> strSet23 = securityContextEnterpriseImpl13.roles();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(strSet23);
  }

  @Test
  public void test0784() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0784");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.time.Clock clock8 = null;
    org.neo4j.lock.LockTracer lockTracer9 = enterpriseTracerFactory0.createLockTracer(clock8);
    java.time.Clock clock10 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer11 = enterpriseTracerFactory0.createDatabaseTracer(
        clock10);
    java.time.Clock clock12 = null;
    org.neo4j.lock.LockTracer lockTracer13 = enterpriseTracerFactory0.createLockTracer(clock12);
    java.time.Clock clock14 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer15 = enterpriseTracerFactory0.createDatabaseTracer(
        clock14);
    java.time.Clock clock16 = null;
    org.neo4j.lock.LockTracer lockTracer17 = enterpriseTracerFactory0.createLockTracer(clock16);
    org.neo4j.monitoring.Monitors monitors18 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler19 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock20 = null;
    org.neo4j.logging.Log log21 = null;
    org.neo4j.configuration.Config config22 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer23 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors18, jobScheduler19, systemNanoClock20, log21, config22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertNotNull(lockTracer9);
    org.junit.Assert.assertNotNull(databaseTracer11);
    org.junit.Assert.assertNotNull(lockTracer13);
    org.junit.Assert.assertNotNull(databaseTracer15);
    org.junit.Assert.assertNotNull(lockTracer17);
  }

  @Test
  public void test0785() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0785");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 0, namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    try {
      pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 10, namedDatabaseId12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0786() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0786");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler15 = null;
    securityContextEnterpriseImpl13.assertCredentialsNotExpired(securityAuthorizationHandler15);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource17 = null;
    boolean boolean18 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource17);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "neo4j", abstractSecurityLog22);
    java.lang.String str24 = securityContextEnterpriseImpl23.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup25 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl23.authorize(
        idLookup25, "localhost", abstractSecurityLog27);
    java.lang.String str29 = securityContextEnterpriseImpl23.description();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler30 = null;
    securityContextEnterpriseImpl23.assertCredentialsNotExpired(securityAuthorizationHandler30);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode32 = securityContextEnterpriseImpl23.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl13.withMode(
        accessMode32);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AUTH_DISABLED with FULL" + "'", str29,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode32 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode32.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
  }

  @Test
  public void test0787() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0787");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor4 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0788() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0788");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode11);
    boolean boolean14 = securityContextEnterpriseImpl4.allowExecuteAdminProcedure(0);
    java.lang.String str15 = securityContextEnterpriseImpl4.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test0789() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0789");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0790() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0790");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl4.authorize(
        idLookup6, "localhost", abstractSecurityLog8);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo10 = securityContextEnterpriseImpl4.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext11 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(clientConnectionInfo10);
    org.junit.Assert.assertNotNull(defaultLoginContext11);
  }

  @Test
  public void test0791() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0791");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog9);
    boolean boolean12 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure(
        (int) (short) 10);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo13 = securityContextEnterpriseImpl10.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode14);
    try {
      java.lang.String str16 = securityContextEnterpriseImpl10.description();
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
  }

  @Test
  public void test0792() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0792");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (byte) 10, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId19);
  }

  @Test
  public void test0793() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0793");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    java.util.Set<java.lang.String> strSet6 = securityContextEnterpriseImpl5.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = securityContextEnterpriseImpl5.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl8.authorize(
        idLookup9, "neo4j", abstractSecurityLog11);
    java.lang.String str13 = securityContextEnterpriseImpl12.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl12.withMode(
        accessMode14);
    java.lang.String str16 = securityContextEnterpriseImpl12.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource17 = null;
    boolean boolean18 = securityContextEnterpriseImpl12.allowsAdminAction(adminActionOnResource17);
    java.lang.String str19 = securityContextEnterpriseImpl12.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl12;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl12;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo22 = securityContextEnterpriseImpl12.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext23 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = securityContext23.mode();
    java.lang.String str25 = securityContext23.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode26 = securityContext23.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo22, accessMode26,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo30 = defaultLoginContext29.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext32 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode26, clientConnectionInfo30, ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo7, accessMode26, ".cacheprof");
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource35 = null;
    boolean boolean36 = securityContextEnterpriseImpl34.allowsAdminAction(adminActionOnResource35);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(strSet6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNull(str13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AUTH_DISABLED with FULL" + "'", str16,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AUTH_DISABLED with FULL" + "'", str19,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo22);
    org.junit.Assert.assertNotNull(securityContext23);
    org.junit.Assert.assertTrue("'" + accessMode24 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode24.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str25);
    org.junit.Assert.assertTrue("'" + accessMode26 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode26.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(clientConnectionInfo30);
    org.junit.Assert.assertNotNull(securityContext32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
  }

  @Test
  public void test0794() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0794");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject3 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo4 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = securityContext5.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet8 = defaultLoginContext7.roeSet();
    java.util.Set<java.lang.String> strSet10 = defaultLoginContext7.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject3, clientConnectionInfo4, accessMode6, strSet10, ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup14 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl13.authorize(
        idLookup14, "neo4j", abstractSecurityLog16);
    java.lang.String str18 = securityContextEnterpriseImpl17.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl17.withMode(
        accessMode19);
    java.lang.String str21 = securityContextEnterpriseImpl17.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = securityContextEnterpriseImpl17.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl17.withMode(
        adminAccessMode23);
    boolean boolean26 = securityContextEnterpriseImpl24.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl24.withMode(
        adminAccessMode27);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo29 = securityContextEnterpriseImpl24.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext31 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode6, clientConnectionInfo29, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup33 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl32.authorize(
        idLookup33, "neo4j", abstractSecurityLog35);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl32.withMode(
        accessMode37);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup39 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog41 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = securityContextEnterpriseImpl38.authorize(
        idLookup39, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog41);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject44 = securityContextEnterpriseImpl43.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup45 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog47 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = securityContextEnterpriseImpl43.authorize(
        idLookup45, "localhost", abstractSecurityLog47);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource49 = null;
    boolean boolean50 = securityContextEnterpriseImpl43.allowsAdminAction(adminActionOnResource49);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode51 = securityContextEnterpriseImpl43.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl42.withMode(
        accessMode51);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl54 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo29, accessMode51, ".cacheprof");
    boolean boolean56 = securityContextEnterpriseImpl54.allowExecuteAdminProcedure(
        (int) (byte) 100);
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(authSubject3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue(
        "'" + accessMode6 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode6.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(strSet8);
    org.junit.Assert.assertNotNull(strSet10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNull(str18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AUTH_DISABLED with FULL" + "'", str21,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(clientConnectionInfo29);
    org.junit.Assert.assertNotNull(securityContext31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertNotNull(authSubject44);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + accessMode51 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode51.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl54);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
  }

  @Test
  public void test0795() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0795");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor7,
          propertyCursor8, labelSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test0796() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0796");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
  }

  @Test
  public void test0797() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0797");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = defaultLoginContext0.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = defaultLoginContext0.authorize(
        idLookup3, "localhost", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl6.description();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AUTH_DISABLED with FULL" + "'", str7,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test0798() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0798");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor10 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (short) 0, uniquenessConstraintDescriptor8, (long) 6362);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test0799() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0799");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl1 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl1.authorize(
        idLookup2, "neo4j", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl1.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl1.authorize(
        idLookup8, "", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler12 = null;
    securityContextEnterpriseImpl1.assertCredentialsNotExpired(securityAuthorizationHandler12);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject14 = securityContextEnterpriseImpl1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl16.withMode(
        accessMode21);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup23 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl16.authorize(
        idLookup23, "", abstractSecurityLog25);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup27 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl26.authorize(
        idLookup27, "AUTH_DISABLED with FULL", abstractSecurityLog29);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = securityContextEnterpriseImpl30.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext32 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject33 = defaultLoginContext32.subject();
    java.util.Set<java.lang.String> strSet34 = defaultLoginContext32.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject14, clientConnectionInfo15, accessMode31, strSet34, "");
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject37 = securityContextEnterpriseImpl36.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + accessMode31 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode31.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext32);
    org.junit.Assert.assertNotNull(authSubject33);
    org.junit.Assert.assertNotNull(strSet34);
    org.junit.Assert.assertNotNull(authSubject37);
  }

  @Test
  public void test0800() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0800");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) 10, uniquenessConstraintDescriptor7, (long) (byte) -1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0801() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0801");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor7 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor8 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor9 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor10 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup11 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor7, nodeCursor8, propertyCursor9, labelSchemaDescriptor10,
          tokenNameLookup11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test0802() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0802");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor6, propertyCursor7, relationTypeSchemaDescriptor8,
          tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0803() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0803");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          10000L, uniquenessConstraintDescriptor7, 100L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0804() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0804");
    }
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo0 = null;
    org.neo4j.internal.kernel.api.security.LoginContext loginContext1 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo0);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = loginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = loginContext1.connectionInfo();
    org.junit.Assert.assertNotNull(loginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNull(clientConnectionInfo3);
  }

  @Test
  public void test0805() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0805");
    }
    io.github.onograph.kernel.srv.pagecache.DefaultIOControllerService defaultIOControllerService0 = new io.github.onograph.kernel.srv.pagecache.DefaultIOControllerService();
    int int1 = defaultIOControllerService0.getPriority();
    int int2 = defaultIOControllerService0.getPriority();
    int int3 = defaultIOControllerService0.getPriority();
    int int4 = defaultIOControllerService0.getPriority();
    int int5 = defaultIOControllerService0.getPriority();
    int int6 = defaultIOControllerService0.getPriority();
    int int7 = defaultIOControllerService0.getPriority();
    int int8 = defaultIOControllerService0.getPriority();
    int int9 = defaultIOControllerService0.getPriority();
    org.neo4j.configuration.Config config10 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    try {
      org.neo4j.io.pagecache.IOController iOController12 = defaultIOControllerService0.createIOController(
          config10, systemNanoClock11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 10 + "'", int1 == 10);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
  }

  @Test
  public void test0806() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0806");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl1 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl1.authorize(
        idLookup2, "neo4j", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl1.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl1.authorize(
        idLookup8, "", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl1.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext14 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = defaultLoginContext14.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext16 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo15);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext18 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode13, clientConnectionInfo15,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl19 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl19.start();
    securityProviderAuthDisabledImpl19.stop();
    org.neo4j.kernel.api.security.AuthManager authManager22 = securityProviderAuthDisabledImpl19.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager23 = securityProviderAuthDisabledImpl19.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager23.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl25);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl28.authorize(
        idLookup29, "neo4j", abstractSecurityLog31);
    authManager23.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl32);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo36 = defaultLoginContext35.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject37 = defaultLoginContext35.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo38 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext39 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = securityContext39.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext41 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet42 = defaultLoginContext41.roeSet();
    java.util.Set<java.lang.String> strSet44 = defaultLoginContext41.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode34, authSubject37, clientConnectionInfo38, accessMode40, strSet44,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl32.withMode(
        accessMode40);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup49 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog51 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl48.authorize(
        idLookup49, "neo4j", abstractSecurityLog51);
    java.lang.String str53 = securityContextEnterpriseImpl52.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = securityContextEnterpriseImpl52.withMode(
        accessMode54);
    java.lang.String str56 = securityContextEnterpriseImpl52.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource57 = null;
    boolean boolean58 = securityContextEnterpriseImpl52.allowsAdminAction(adminActionOnResource57);
    java.lang.String str59 = securityContextEnterpriseImpl52.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode60 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl61 = securityContextEnterpriseImpl52.withMode(
        adminAccessMode60);
    java.util.Set<java.lang.String> strSet62 = securityContextEnterpriseImpl61.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl64 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject12, clientConnectionInfo15, accessMode40, strSet62, "verbose");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext65 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo15);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext66 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertNotNull(defaultLoginContext14);
    org.junit.Assert.assertNotNull(clientConnectionInfo15);
    org.junit.Assert.assertNotNull(loginContext16);
    org.junit.Assert.assertNotNull(securityContext18);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl19);
    org.junit.Assert.assertNotNull(authManager22);
    org.junit.Assert.assertNotNull(authManager23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(defaultLoginContext35);
    org.junit.Assert.assertNotNull(clientConnectionInfo36);
    org.junit.Assert.assertNotNull(authSubject37);
    org.junit.Assert.assertNotNull(securityContext39);
    org.junit.Assert.assertTrue("'" + accessMode40 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode40.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext41);
    org.junit.Assert.assertNotNull(strSet42);
    org.junit.Assert.assertNotNull(strSet44);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNull(str53);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertEquals("'" + str56 + "' != '" + "AUTH_DISABLED with FULL" + "'", str56,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AUTH_DISABLED with FULL" + "'", str59,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl61);
    org.junit.Assert.assertNotNull(strSet62);
    org.junit.Assert.assertNotNull(defaultLoginContext65);
    org.junit.Assert.assertNotNull(loginContext66);
  }

  @Test
  public void test0807() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0807");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test0808() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0808");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.lock.LockTracer lockTracer5 = enterpriseTracerFactory0.createLockTracer(clock4);
    java.time.Clock clock6 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer7 = enterpriseTracerFactory0.createDatabaseTracer(
        clock6);
    java.time.Clock clock8 = null;
    org.neo4j.lock.LockTracer lockTracer9 = enterpriseTracerFactory0.createLockTracer(clock8);
    org.neo4j.monitoring.Monitors monitors10 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler11 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    org.neo4j.logging.Log log13 = null;
    org.neo4j.configuration.Config config14 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors10, jobScheduler11, systemNanoClock12, log13, config14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(lockTracer5);
    org.junit.Assert.assertNotNull(databaseTracer7);
    org.junit.Assert.assertNotNull(lockTracer9);
  }

  @Test
  public void test0809() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0809");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl0.authorize(
        idLookup5, "", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl8;
    java.lang.String str10 = securityContextEnterpriseImpl8.description();
    boolean boolean12 = securityContextEnterpriseImpl8.allowExecuteAdminProcedure(2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AUTH_DISABLED with FULL" + "'", str10,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
  }

  @Test
  public void test0810() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0810");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo11 = securityContextEnterpriseImpl6.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl6.authorize(
        idLookup12, "", abstractSecurityLog14);
    java.util.Set<java.lang.String> strSet16 = securityContextEnterpriseImpl6.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(clientConnectionInfo11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(strSet16);
  }

  @Test
  public void test0811() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0811");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl0.authorize(
        idLookup10, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog12);
    java.util.Set<java.lang.String> strSet14 = securityContextEnterpriseImpl0.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(strSet14);
  }

  @Test
  public void test0812() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0812");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor3 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor4 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
  }

  @Test
  public void test0813() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0813");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.authorize(
        idLookup10, "AUTH_DISABLED with FULL", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
  }

  @Test
  public void test0814() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0814");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    java.lang.Class<?> wildcardClass13 = securityContextEnterpriseImpl4.getClass();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(wildcardClass13);
  }

  @Test
  public void test0815() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0815");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer12 = enterpriseTracerFactory0.createDatabaseTracer(
        clock11);
    java.time.Clock clock13 = null;
    org.neo4j.lock.LockTracer lockTracer14 = enterpriseTracerFactory0.createLockTracer(clock13);
    java.time.Clock clock15 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer16 = enterpriseTracerFactory0.createDatabaseTracer(
        clock15);
    java.lang.String str17 = enterpriseTracerFactory0.getName();
    java.time.Clock clock18 = null;
    org.neo4j.lock.LockTracer lockTracer19 = enterpriseTracerFactory0.createLockTracer(clock18);
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(databaseTracer12);
    org.junit.Assert.assertNotNull(lockTracer14);
    org.junit.Assert.assertNotNull(databaseTracer16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "verbose" + "'", str17, "verbose");
    org.junit.Assert.assertNotNull(lockTracer19);
  }

  @Test
  public void test0816() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0816");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    java.util.Set<java.lang.String> strSet6 = securityContextEnterpriseImpl5.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = securityContextEnterpriseImpl5.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext8 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    java.util.Set<java.lang.String> strSet9 = defaultLoginContext8.roeSet();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(strSet6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(defaultLoginContext8);
    org.junit.Assert.assertNotNull(strSet9);
  }

  @Test
  public void test0817() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0817");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager8.start();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    java.lang.String str16 = securityContextEnterpriseImpl15.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl15.withMode(
        accessMode17);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler19 = null;
    securityContextEnterpriseImpl15.assertCredentialsNotExpired(securityAuthorizationHandler19);
    boolean boolean22 = securityContextEnterpriseImpl15.allowExecuteAdminProcedure((int) '4');
    java.lang.String str23 = securityContextEnterpriseImpl15.database();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler24 = null;
    securityContextEnterpriseImpl15.assertCredentialsNotExpired(securityAuthorizationHandler24);
    authManager8.log("verbose",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNull(str23);
  }

  @Test
  public void test0818() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0818");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.shutdown();
    java.util.Map<java.lang.String, java.lang.Object> strMap4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = defaultLoginContext5.connectionInfo();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = defaultLoginContext5.connectionInfo();
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext9 = defaultAuthManager0.login(
          strMap4, clientConnectionInfo8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
  }

  @Test
  public void test0819() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0819");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler1 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler1);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.authorize(
        idLookup3, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog5);
    java.util.Set<java.lang.String> strSet7 = securityContextEnterpriseImpl0.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContextEnterpriseImpl0.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext9 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertNotNull(loginContext9);
  }

  @Test
  public void test0820() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0820");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.claauch();
    defaultAuthManager0.init();
    defaultAuthManager0.clneac();
    defaultAuthManager0.start();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test0821() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0821");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test0822() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0822");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl0.database();
    java.lang.String str6 = securityContextEnterpriseImpl0.description();
    java.lang.String str7 = securityContextEnterpriseImpl0.description();
    java.lang.Class<?> wildcardClass8 = securityContextEnterpriseImpl0.getClass();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AUTH_DISABLED with FULL" + "'", str7,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test0823() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0823");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(0L, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId10);
  }

  @Test
  public void test0824() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0824");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (short) 10);
    java.util.function.Consumer<java.lang.String> strConsumer15 = null;
    try {
      boolean boolean16 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(
          (long) (byte) -1, (long) (short) 0, strConsumer15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test0825() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0825");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 6362, namedDatabaseId16);
  }

  @Test
  public void test0826() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0826");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.start();
    defaultAuthManager0.clneac();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList5 = defaultAuthManager0.gepiggatgcfList();
    java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler8 = null;
    securityContextEnterpriseImpl7.assertCredentialsNotExpired(securityAuthorizationHandler8);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.authorize(
        idLookup10, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog12);
    java.util.Set<java.lang.String> strSet14 = securityContextEnterpriseImpl7.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = securityContextEnterpriseImpl7.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext17 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = defaultLoginContext17.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "neo4j", abstractSecurityLog22);
    java.lang.String str24 = securityContextEnterpriseImpl23.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl23.withMode(
        accessMode25);
    java.lang.String str27 = securityContextEnterpriseImpl23.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource28 = null;
    boolean boolean29 = securityContextEnterpriseImpl23.allowsAdminAction(adminActionOnResource28);
    java.lang.String str30 = securityContextEnterpriseImpl23.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl23;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl23;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo33 = securityContextEnterpriseImpl23.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl34.authorize(
        idLookup35, "neo4j", abstractSecurityLog37);
    java.lang.String str39 = securityContextEnterpriseImpl34.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource40 = null;
    boolean boolean41 = securityContextEnterpriseImpl34.allowsAdminAction(adminActionOnResource40);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup42 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog44 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = securityContextEnterpriseImpl34.authorize(
        idLookup42, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog44);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = securityContextEnterpriseImpl45.mode();
    java.lang.String[] strArray59 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean61 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet60, strArray59);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode16, authSubject18, clientConnectionInfo33, accessMode46,
        (java.util.Set<java.lang.String>) strSet60, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo15, accessMode46, "AUTH_DISABLED with FULL");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext66 = defaultAuthManager0.login(
          strMap6, clientConnectionInfo15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(strSet14);
    org.junit.Assert.assertNotNull(clientConnectionInfo15);
    org.junit.Assert.assertNotNull(defaultLoginContext17);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AUTH_DISABLED with FULL" + "'", str27,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AUTH_DISABLED with FULL" + "'", str30,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNull(str39);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertTrue("'" + accessMode46 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode46.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray59);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
  }

  @Test
  public void test0827() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0827");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor4 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor5 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor6 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup7 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor4,
          propertyCursor5, labelSchemaDescriptor6, tokenNameLookup7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0828() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0828");
    }
    org.neo4j.internal.kernel.api.security.AccessMode accessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext3 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode0, clientConnectionInfo2,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = defaultLoginContext6.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler11 = null;
    securityContextEnterpriseImpl10.assertCredentialsNotExpired(securityAuthorizationHandler11);
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(loginContext3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
  }

  @Test
  public void test0829() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0829");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 0, constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0830() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0830");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext6 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker7 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle8 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext6, componentsChecker7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
  }

  @Test
  public void test0831() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0831");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
  }

  @Test
  public void test0832() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0832");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext6 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo5);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext7 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(loginContext6);
    org.junit.Assert.assertNotNull(loginContext7);
  }

  @Test
  public void test0833() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0833");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0834() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0834");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) ' ', namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId20);
  }

  @Test
  public void test0835() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0835");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    boolean boolean8 = securityContextEnterpriseImpl6.allowExecuteAdminProcedure(0);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo10 = securityContextEnterpriseImpl6.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl11.withMode(
        accessMode16);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl11.authorize(
        idLookup18, "", abstractSecurityLog20);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl21.authorize(
        idLookup22, "AUTH_DISABLED with FULL", abstractSecurityLog24);
    java.lang.String str26 = securityContextEnterpriseImpl21.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl21.withMode(
        adminAccessMode27);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = securityContextEnterpriseImpl28.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo10, accessMode29, "");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext32 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo10);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext33 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo10);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl34.authorize(
        idLookup35, "neo4j", abstractSecurityLog37);
    java.lang.String str39 = securityContextEnterpriseImpl38.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl38.withMode(
        adminAccessMode40);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject42 = securityContextEnterpriseImpl41.subject();
    java.lang.String str43 = securityContextEnterpriseImpl41.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode44 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext45 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = securityContext45.mode();
    java.lang.String str47 = securityContext45.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode48 = securityContext45.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject49 = securityContext45.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext50 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo51 = defaultLoginContext50.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext52 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo51);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext53 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo51);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl54 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup55 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog57 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = securityContextEnterpriseImpl54.authorize(
        idLookup55, "neo4j", abstractSecurityLog57);
    java.lang.String str59 = securityContextEnterpriseImpl58.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode60 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl61 = securityContextEnterpriseImpl58.withMode(
        accessMode60);
    java.lang.String str62 = securityContextEnterpriseImpl58.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject63 = securityContextEnterpriseImpl58.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode64 = securityContextEnterpriseImpl58.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext65 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet67 = defaultLoginContext65.roeSet();
    java.util.Set<java.lang.String> strSet68 = defaultLoginContext65.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl70 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode44, authSubject49, clientConnectionInfo51, accessMode64, strSet68, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext71 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo51);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext72 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo73 = defaultLoginContext72.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext74 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo73);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl75 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup76 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog78 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl79 = securityContextEnterpriseImpl75.authorize(
        idLookup76, "neo4j", abstractSecurityLog78);
    java.lang.String str80 = securityContextEnterpriseImpl79.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode81 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl82 = securityContextEnterpriseImpl79.withMode(
        accessMode81);
    java.lang.String str83 = securityContextEnterpriseImpl79.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource84 = null;
    boolean boolean85 = securityContextEnterpriseImpl79.allowsAdminAction(adminActionOnResource84);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode86 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl87 = securityContextEnterpriseImpl79.withMode(
        adminAccessMode86);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode88 = securityContextEnterpriseImpl79.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl90 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo73, accessMode88, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl92 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo51, accessMode88,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl93 = securityContextEnterpriseImpl41.withMode(
        accessMode88);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl95 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo10, accessMode88, "volumetric");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AUTH_DISABLED with FULL" + "'", str26,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + accessMode29 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode29.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(loginContext32);
    org.junit.Assert.assertNotNull(loginContext33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNull(str39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(authSubject42);
    org.junit.Assert.assertNull(str43);
    org.junit.Assert.assertNotNull(securityContext45);
    org.junit.Assert.assertTrue("'" + accessMode46 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode46.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str47);
    org.junit.Assert.assertTrue("'" + accessMode48 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode48.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject49);
    org.junit.Assert.assertNotNull(defaultLoginContext50);
    org.junit.Assert.assertNotNull(clientConnectionInfo51);
    org.junit.Assert.assertNotNull(defaultLoginContext52);
    org.junit.Assert.assertNotNull(defaultLoginContext53);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNull(str59);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl61);
    org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AUTH_DISABLED with FULL" + "'", str62,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject63);
    org.junit.Assert.assertTrue("'" + accessMode64 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode64.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext65);
    org.junit.Assert.assertNotNull(strSet67);
    org.junit.Assert.assertNotNull(strSet68);
    org.junit.Assert.assertNotNull(defaultLoginContext71);
    org.junit.Assert.assertNotNull(defaultLoginContext72);
    org.junit.Assert.assertNotNull(clientConnectionInfo73);
    org.junit.Assert.assertNotNull(loginContext74);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl75);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl79);
    org.junit.Assert.assertNull(str80);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl82);
    org.junit.Assert.assertEquals("'" + str83 + "' != '" + "AUTH_DISABLED with FULL" + "'", str83,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl87);
    org.junit.Assert.assertTrue("'" + accessMode88 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode88.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl90);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl92);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl93);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl95);
  }

  @Test
  public void test0836() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0836");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource15 = null;
    boolean boolean16 = securityContextEnterpriseImpl14.allowsAdminAction(adminActionOnResource15);
    java.util.Set<java.lang.String> strSet17 = securityContextEnterpriseImpl14.roles();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl14.withMode(
        adminAccessMode18);
    java.util.Set<java.lang.String> strSet20 = securityContextEnterpriseImpl19.roles();
    java.lang.String str21 = securityContextEnterpriseImpl19.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(strSet17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(strSet20);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "user '' with FULL" + "'", str21,
        "user '' with FULL");
  }

  @Test
  public void test0837() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0837");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) '4', constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0838() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0838");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList15 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(strMapList15);
  }

  @Test
  public void test0839() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0839");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long10 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize(0L);
    java.util.function.Consumer<java.lang.String> strConsumer15 = null;
    try {
      boolean boolean16 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(0L, 10L,
          strConsumer15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
  }

  @Test
  public void test0840() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0840");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor3 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor4 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor5 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup6 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor3, propertyCursor4, relationTypeSchemaDescriptor5,
          tokenNameLookup6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
  }

  @Test
  public void test0841() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0841");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(1L, namedDatabaseId16);
  }

  @Test
  public void test0842() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0842");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl0.authorize(
        idLookup10, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog12);
    java.util.Set<java.lang.String> strSet14 = securityContextEnterpriseImpl13.roles();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl13;
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(strSet14);
  }

  @Test
  public void test0843() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0843");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.lock.LockTracer lockTracer10 = enterpriseTracerFactory0.createLockTracer(clock9);
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler12 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    org.neo4j.logging.Log log14 = null;
    org.neo4j.configuration.Config config15 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors11, jobScheduler12, systemNanoClock13, log14, config15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(lockTracer10);
  }

  @Test
  public void test0844() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0844");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 10);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize((long) (byte) 100);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) 100);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
  }

  @Test
  public void test0845() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0845");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler9 = null;
    securityContextEnterpriseImpl7.assertCredentialsNotExpired(securityAuthorizationHandler9);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
  }

  @Test
  public void test0846() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0846");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    java.lang.String str10 = enterpriseTracerFactory0.getName();
    org.neo4j.monitoring.Monitors monitors11 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler12 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock13 = null;
    org.neo4j.logging.Log log14 = null;
    org.neo4j.configuration.Config config15 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer16 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors11, jobScheduler12, systemNanoClock13, log14, config15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "verbose" + "'", str10, "verbose");
  }

  @Test
  public void test0847() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0847");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.authorize(
        idLookup10, "AUTH_DISABLED with FULL", abstractSecurityLog12);
    java.lang.Class<?> wildcardClass14 = securityContextEnterpriseImpl13.getClass();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(wildcardClass14);
  }

  @Test
  public void test0848() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0848");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    authManager4.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str21 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode22);
    java.lang.String str24 = securityContextEnterpriseImpl13.description();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AUTH_DISABLED with FULL" + "'", str24,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test0849() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0849");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    java.util.function.Consumer<java.lang.String> strConsumer11 = null;
    try {
      boolean boolean12 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) 10,
          (long) (short) 0, strConsumer11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test0850() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0850");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test0851() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0851");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.stop();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource16 = null;
    boolean boolean17 = securityContextEnterpriseImpl11.allowsAdminAction(adminActionOnResource16);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "verbose", abstractSecurityLog22);
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup25 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl19.authorize(
        idLookup25, "", abstractSecurityLog27);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
  }

  @Test
  public void test0852() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0852");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler13 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler13);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource15 = null;
    boolean boolean16 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
  }

  @Test
  public void test0853() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0853");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNull(str8);
  }

  @Test
  public void test0854() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0854");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    authManager5.start();
    authManager5.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test0855() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0855");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl9.authorize(
        idLookup16, "", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    java.lang.String str24 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode25);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode27);
    authManager7.log("pagecachewarmer",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    boolean boolean31 = securityContextEnterpriseImpl19.allowExecuteAdminProcedure(2);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AUTH_DISABLED with FULL" + "'", str24,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
  }

  @Test
  public void test0856() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0856");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0857() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0857");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl5 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl5.start();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl5.inClusterAuthManager();
    boolean boolean8 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl5);
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl5.authManager();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl5);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(authManager9);
  }

  @Test
  public void test0858() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0858");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource15 = null;
    boolean boolean16 = securityContextEnterpriseImpl14.allowsAdminAction(adminActionOnResource15);
    java.util.Set<java.lang.String> strSet17 = securityContextEnterpriseImpl14.roles();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler18 = null;
    securityContextEnterpriseImpl14.assertCredentialsNotExpired(securityAuthorizationHandler18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(strSet17);
  }

  @Test
  public void test0859() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0859");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.clneac();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList7 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList7);
  }

  @Test
  public void test0860() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0860");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 0);
    checkPointThresholdVolumetricPolicy1.initialize(10000L);
    java.util.function.Consumer<java.lang.String> strConsumer13 = null;
    try {
      boolean boolean14 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(10000L,
          (long) (byte) -1, strConsumer13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
  }

  @Test
  public void test0861() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0861");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    java.time.Clock clock13 = null;
    org.neo4j.lock.LockTracer lockTracer14 = enterpriseTracerFactory0.createLockTracer(clock13);
    java.lang.String str15 = enterpriseTracerFactory0.getName();
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
    org.junit.Assert.assertNotNull(lockTracer14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "verbose" + "'", str15, "verbose");
  }

  @Test
  public void test0862() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0862");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor5,
          propertyCursor6, labelSchemaDescriptor7, tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test0863() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0863");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId10);
  }

  @Test
  public void test0864() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0864");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor6 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor6, relationshipScanCursor7, propertyCursor8,
          relationTypeSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0865() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0865");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.util.Set<java.lang.String> strSet15 = securityContextEnterpriseImpl10.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(strSet15);
  }

  @Test
  public void test0866() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0866");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    org.neo4j.kernel.api.security.AuthManager authManager1 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager1.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager1);
  }

  @Test
  public void test0867() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0867");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.clneac();
    defaultAuthManager0.clneac();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test0868() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0868");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    java.time.Clock clock13 = null;
    org.neo4j.lock.LockTracer lockTracer14 = enterpriseTracerFactory0.createLockTracer(clock13);
    org.neo4j.monitoring.Monitors monitors15 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler16 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock17 = null;
    org.neo4j.logging.Log log18 = null;
    org.neo4j.configuration.Config config19 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer20 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors15, jobScheduler16, systemNanoClock17, log18, config19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
    org.junit.Assert.assertNotNull(lockTracer14);
  }

  @Test
  public void test0869() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0869");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    long long7 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) ' ');
    checkPointThresholdVolumetricPolicy1.initialize((long) 100);
    long long12 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) '4');
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
  }

  @Test
  public void test0870() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0870");
    }
    org.neo4j.internal.kernel.api.security.AccessMode accessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext4 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode0, clientConnectionInfo2, "neo4j");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = securityContext5.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo2, accessMode6, "volumetric");
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl8.allowsAdminAction(adminActionOnResource9);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl8.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl8.withMode(
        adminAccessMode12);
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(securityContext4);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue(
        "'" + accessMode6 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode6.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
  }

  @Test
  public void test0871() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0871");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.claauch();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test0872() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0872");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 6362, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId19);
  }

  @Test
  public void test0873() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0873");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    defaultAuthManager0.clneac();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl8.authorize(
        idLookup9, "neo4j", abstractSecurityLog11);
    java.lang.String str13 = securityContextEnterpriseImpl12.database();
    java.lang.String str14 = securityContextEnterpriseImpl12.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl12.withMode(
        adminAccessMode15);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = securityContextEnterpriseImpl12.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext18 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = securityContext18.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo17, accessMode19,
        "Property existence constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext22 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo17);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup23 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = defaultLoginContext22.authorize(
        idLookup23, ".cacheprof", abstractSecurityLog25);
    defaultAuthManager0.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNull(str13);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AUTH_DISABLED with FULL" + "'", str14,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(securityContext18);
    org.junit.Assert.assertTrue("'" + accessMode19 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode19.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(defaultLoginContext22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
  }

  @Test
  public void test0874() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0874");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.start();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test0875() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0875");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor6, nodeCursor7, propertyCursor8, labelSchemaDescriptor9,
          tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0876() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0876");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    defaultAuthManager0.stop();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test0877() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0877");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
  }

  @Test
  public void test0878() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0878");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "continuous", abstractSecurityLog9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
  }

  @Test
  public void test0879() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0879");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning8 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy9 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning8);
    long long10 = checkPointThresholdVolumetricPolicy9.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy9.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy9.initialize((long) '4');
    checkPointThresholdVolumetricPolicy9.checkPointHappened((long) 'a');
    checkPointThresholdVolumetricPolicy9.initialize((long) (byte) -1);
    boolean boolean19 = cachePopulatorExtensionFactory0.equals((java.lang.Object) (byte) -1);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test0880() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0880");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test0881() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0881");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    java.util.Set<java.lang.String> strSet16 = securityContextEnterpriseImpl4.roles();
    boolean boolean18 = securityContextEnterpriseImpl4.allowExecuteAdminProcedure((int) (byte) 1);
    java.util.Set<java.lang.String> strSet19 = securityContextEnterpriseImpl4.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(strSet16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertNotNull(strSet19);
  }

  @Test
  public void test0882() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0882");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl0.database();
    java.lang.String str6 = securityContextEnterpriseImpl0.description();
    java.lang.String str7 = securityContextEnterpriseImpl0.description();
    boolean boolean9 = securityContextEnterpriseImpl0.allowExecuteAdminProcedure(1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "AUTH_DISABLED with FULL" + "'", str7,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
  }

  @Test
  public void test0883() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0883");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    java.lang.String str12 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.logging.Log log13 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl14 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl14.prlcpdForNa((long) (short) 1, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl14.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl14.wapclForNa((long) (byte) 100, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl14.wamsrdForNa(namedDatabaseId23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId25 = null;
    pageCacheLoadingWatcherDefaultImpl14.wamsrdForNa(namedDatabaseId25);
    boolean boolean27 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    pageCacheLoadingWatcherDefaultImpl14.wamsrdForNa(namedDatabaseId28);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pagecachewarmer" + "'", str12,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
  }

  @Test
  public void test0884() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0884");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject17 = securityContextEnterpriseImpl7.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl7.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = defaultLoginContext20.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = defaultLoginContext20.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext24 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = securityContext24.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext26 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet27 = defaultLoginContext26.roeSet();
    java.util.Set<java.lang.String> strSet29 = defaultLoginContext26.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode19, authSubject22, clientConnectionInfo23, accessMode25, strSet29,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup33 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl32.authorize(
        idLookup33, "neo4j", abstractSecurityLog35);
    java.lang.String str37 = securityContextEnterpriseImpl36.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl36.withMode(
        accessMode38);
    java.lang.String str40 = securityContextEnterpriseImpl36.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject41 = securityContextEnterpriseImpl36.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl36.withMode(
        adminAccessMode42);
    boolean boolean45 = securityContextEnterpriseImpl43.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl43.withMode(
        adminAccessMode46);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo48 = securityContextEnterpriseImpl43.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext50 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode25, clientConnectionInfo48, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode25, "pagecachewarmer");
    boolean boolean54 = securityContextEnterpriseImpl52.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo55 = securityContextEnterpriseImpl52.connectionInfo();
    java.lang.Class<?> wildcardClass56 = securityContextEnterpriseImpl52.getClass();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(authSubject17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(securityContext24);
    org.junit.Assert.assertTrue("'" + accessMode25 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode25.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext26);
    org.junit.Assert.assertNotNull(strSet27);
    org.junit.Assert.assertNotNull(strSet29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNull(str37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AUTH_DISABLED with FULL" + "'", str40,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(clientConnectionInfo48);
    org.junit.Assert.assertNotNull(securityContext50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo55);
    org.junit.Assert.assertNotNull(wildcardClass56);
  }

  @Test
  public void test0885() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0885");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    authManager4.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
  }

  @Test
  public void test0886() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0886");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId16);
  }

  @Test
  public void test0887() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0887");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId17);
  }

  @Test
  public void test0888() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0888");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl2.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl2.allowsAdminAction(adminActionOnResource8);
    boolean boolean10 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) adminActionOnResource8);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl11 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl11.start();
    securityProviderAuthDisabledImpl11.stop();
    securityProviderAuthDisabledImpl11.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl11.inClusterAuthManager();
    securityProviderAuthDisabledImpl11.start();
    org.neo4j.kernel.api.security.AuthManager authManager17 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager19 = securityProviderAuthDisabledImpl11.loopbackAuthManager();
    boolean boolean20 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl11);
    org.neo4j.logging.Log log21 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl22 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl22.prlcpdForNa((long) (short) 1, namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = null;
    pageCacheLoadingWatcherDefaultImpl22.wapclForNa((long) 6362, namedDatabaseId31);
    boolean boolean33 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl22);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl34 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl34.start();
    securityProviderAuthDisabledImpl34.stop();
    org.neo4j.kernel.api.security.AuthManager authManager37 = securityProviderAuthDisabledImpl34.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager38 = securityProviderAuthDisabledImpl34.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager39 = securityProviderAuthDisabledImpl34.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup42 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog44 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = securityContextEnterpriseImpl41.authorize(
        idLookup42, "neo4j", abstractSecurityLog44);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl41.withMode(
        accessMode46);
    java.lang.String str48 = securityContextEnterpriseImpl41.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject49 = securityContextEnterpriseImpl41.subject();
    authManager39.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl41);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler51 = null;
    securityContextEnterpriseImpl41.assertCredentialsNotExpired(securityAuthorizationHandler51);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject53 = securityContextEnterpriseImpl41.subject();
    boolean boolean54 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityContextEnterpriseImpl41);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext55 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo56 = defaultLoginContext55.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext57 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo56);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode58 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl60 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo56, accessMode58, "hi!");
    boolean boolean61 = cachePopulatorExtensionFactory0.equals((java.lang.Object) accessMode58);
    java.lang.String str62 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl11);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager17);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl34);
    org.junit.Assert.assertNotNull(authManager37);
    org.junit.Assert.assertNotNull(authManager38);
    org.junit.Assert.assertNotNull(authManager39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNull(str48);
    org.junit.Assert.assertNotNull(authSubject49);
    org.junit.Assert.assertNotNull(authSubject53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertNotNull(defaultLoginContext55);
    org.junit.Assert.assertNotNull(clientConnectionInfo56);
    org.junit.Assert.assertNotNull(loginContext57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl60);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertEquals("'" + str62 + "' != '" + "pagecachewarmer" + "'", str62,
        "pagecachewarmer");
  }

  @Test
  public void test0889() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0889");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
  }

  @Test
  public void test0890() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0890");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList2 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.stop();
    defaultAuthManager0.start();
    defaultAuthManager0.shutdown();
    java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource16 = null;
    boolean boolean17 = securityContextEnterpriseImpl11.allowsAdminAction(adminActionOnResource16);
    java.lang.String str18 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl11;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl11;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = securityContextEnterpriseImpl11.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext22 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = securityContext22.mode();
    java.lang.String str24 = securityContext22.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = securityContext22.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo21, accessMode25,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext28 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo29 = defaultLoginContext28.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext30 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo29);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext31 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo29);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext33 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode25, clientConnectionInfo29, "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext34 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo29);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo29);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = defaultAuthManager0.login(
          strMap6, clientConnectionInfo29);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertNotNull(securityContext22);
    org.junit.Assert.assertTrue("'" + accessMode23 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode23.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertTrue("'" + accessMode25 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode25.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(defaultLoginContext28);
    org.junit.Assert.assertNotNull(clientConnectionInfo29);
    org.junit.Assert.assertNotNull(loginContext30);
    org.junit.Assert.assertNotNull(loginContext31);
    org.junit.Assert.assertNotNull(securityContext33);
    org.junit.Assert.assertNotNull(loginContext34);
    org.junit.Assert.assertNotNull(defaultLoginContext35);
  }

  @Test
  public void test0891() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0891");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl4.subject();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl12 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl12.start();
    securityProviderAuthDisabledImpl12.stop();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl12.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager16 = securityProviderAuthDisabledImpl12.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager16.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl18);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl21.authorize(
        idLookup22, "neo4j", abstractSecurityLog24);
    authManager16.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl25);
    java.lang.String str27 = securityContextEnterpriseImpl25.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = securityContextEnterpriseImpl25.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl4.withMode(
        accessMode28);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject30 = securityContextEnterpriseImpl4.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl12);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AUTH_DISABLED with FULL" + "'", str27,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode28 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode28.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(authSubject30);
  }

  @Test
  public void test0892() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0892");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 10);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize((long) 0);
    long long13 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
  }

  @Test
  public void test0893() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0893");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str5 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config6 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning8 = null;
    org.neo4j.logging.LogProvider logProvider9 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold10 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config6, systemNanoClock7, logPruning8, logProvider9);
    org.neo4j.configuration.Config config11 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning13 = null;
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold15 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config11, systemNanoClock12, logPruning13, logProvider14);
    java.lang.String str16 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "volumetric" + "'", str5, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold10);
    org.junit.Assert.assertNotNull(checkPointThreshold15);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "volumetric" + "'", str16, "volumetric");
  }

  @Test
  public void test0894() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0894");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.lang.String str8 = enterpriseTracerFactory0.getName();
    java.time.Clock clock9 = null;
    org.neo4j.lock.LockTracer lockTracer10 = enterpriseTracerFactory0.createLockTracer(clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "verbose" + "'", str8, "verbose");
    org.junit.Assert.assertNotNull(lockTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
  }

  @Test
  public void test0895() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0895");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str8 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str9 = cachePopulatorExtensionFactory0.toString();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str8, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str9, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test0896() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0896");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor7, propertyCursor8, relationTypeSchemaDescriptor9,
          tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test0897() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0897");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test0898() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0898");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 0, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (byte) -1, namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) 0, namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId15);
  }

  @Test
  public void test0899() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0899");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl6.withMode(
        accessMode11);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl12.authorize(
        idLookup13, "neo4j", abstractSecurityLog15);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = securityContextEnterpriseImpl12.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext18 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo17);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = defaultAuthManager0.login(
          strMap5, clientConnectionInfo17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(loginContext18);
  }

  @Test
  public void test0900() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0900");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl2 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl2.start();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl2.inClusterAuthManager();
    securityProviderAuthDisabledImpl2.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl2.authManager();
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl2);
    securityProviderAuthDisabledImpl2.stop();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0901() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0901");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList14 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl17.authorize(
        idLookup18, "neo4j", abstractSecurityLog20);
    java.lang.String str22 = securityContextEnterpriseImpl21.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl21.withMode(
        accessMode23);
    java.lang.String str25 = securityContextEnterpriseImpl21.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject26 = securityContextEnterpriseImpl21.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl21.withMode(
        adminAccessMode27);
    boolean boolean30 = securityContextEnterpriseImpl28.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl28.withMode(
        adminAccessMode31);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl32.withMode(
        adminAccessMode33);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo35 = securityContextEnterpriseImpl32.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo35);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup37 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog39 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = defaultLoginContext36.authorize(
        idLookup37, "AUTH_DISABLED with FULL", abstractSecurityLog39);
    defaultAuthManager0.log("user '' with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl40);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(strMapList14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNull(str22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AUTH_DISABLED with FULL" + "'", str25,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(clientConnectionInfo35);
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
  }

  @Test
  public void test0902() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0902");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.storageengine.api.StorageReader storageReader5 = null;
    org.neo4j.internal.kernel.api.Read read6 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory7 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState8 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor9 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext10 = null;
    org.neo4j.memory.MemoryTracker memoryTracker11 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor12 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader5, read6, cursorFactory7, readableTransactionState8, txStateVisitor9,
          cursorContext10, memoryTracker11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test0903() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0903");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode1 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl2 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl2.start();
    securityProviderAuthDisabledImpl2.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl2.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl2.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl2.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    java.lang.String str16 = securityContextEnterpriseImpl9.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject17 = securityContextEnterpriseImpl9.subject();
    authManager7.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl9.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = defaultLoginContext20.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext22 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo21);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext23 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo21);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext25 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = defaultLoginContext25.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext27 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo26);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext29 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode24, clientConnectionInfo26,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext30 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo26);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext31 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode32 = securityContext31.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo26, accessMode32, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode35 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject37 = defaultLoginContext36.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo38 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext40 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo41 = defaultLoginContext40.connectionInfo();
    java.util.Set<java.lang.String> strSet42 = defaultLoginContext40.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode35, authSubject37, clientConnectionInfo38, accessMode39, strSet42,
        "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode1, authSubject19, clientConnectionInfo21, accessMode32, strSet42,
        "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.security.AccessMode accessMode47 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext48 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo49 = defaultLoginContext48.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext50 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo49);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext52 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode47, clientConnectionInfo49,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext53 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo49);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl54 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl54.start();
    org.neo4j.kernel.api.security.AuthManager authManager56 = securityProviderAuthDisabledImpl54.loopbackAuthManager();
    securityProviderAuthDisabledImpl54.stop();
    org.neo4j.kernel.api.security.AuthManager authManager58 = securityProviderAuthDisabledImpl54.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl60 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager58.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl60);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup64 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog66 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = securityContextEnterpriseImpl63.authorize(
        idLookup64, "neo4j", abstractSecurityLog66);
    java.lang.String str68 = securityContextEnterpriseImpl67.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode69 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl70 = securityContextEnterpriseImpl67.withMode(
        accessMode69);
    java.lang.String str71 = securityContextEnterpriseImpl67.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource72 = null;
    boolean boolean73 = securityContextEnterpriseImpl67.allowsAdminAction(adminActionOnResource72);
    authManager58.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl67);
    java.lang.String str75 = securityContextEnterpriseImpl67.database();
    java.lang.String str76 = securityContextEnterpriseImpl67.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode77 = securityContextEnterpriseImpl67.mode();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl78 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl78.start();
    securityProviderAuthDisabledImpl78.stop();
    org.neo4j.kernel.api.security.AuthManager authManager81 = securityProviderAuthDisabledImpl78.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager82 = securityProviderAuthDisabledImpl78.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl84 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager82.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl84);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl87 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup88 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog90 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl91 = securityContextEnterpriseImpl87.authorize(
        idLookup88, "neo4j", abstractSecurityLog90);
    authManager82.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl91);
    java.lang.String str93 = securityContextEnterpriseImpl91.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo94 = securityContextEnterpriseImpl91.connectionInfo();
    java.util.Set<java.lang.String> strSet95 = securityContextEnterpriseImpl91.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl97 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject19, clientConnectionInfo49, accessMode77, strSet95,
        "PageCacheProfileLoader");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl2);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertNotNull(authSubject17);
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertNotNull(defaultLoginContext22);
    org.junit.Assert.assertNotNull(loginContext23);
    org.junit.Assert.assertNotNull(defaultLoginContext25);
    org.junit.Assert.assertNotNull(clientConnectionInfo26);
    org.junit.Assert.assertNotNull(loginContext27);
    org.junit.Assert.assertNotNull(securityContext29);
    org.junit.Assert.assertNotNull(defaultLoginContext30);
    org.junit.Assert.assertNotNull(securityContext31);
    org.junit.Assert.assertTrue("'" + accessMode32 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode32.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(authSubject37);
    org.junit.Assert.assertNotNull(defaultLoginContext40);
    org.junit.Assert.assertNotNull(clientConnectionInfo41);
    org.junit.Assert.assertNotNull(strSet42);
    org.junit.Assert.assertNotNull(defaultLoginContext48);
    org.junit.Assert.assertNotNull(clientConnectionInfo49);
    org.junit.Assert.assertNotNull(loginContext50);
    org.junit.Assert.assertNotNull(securityContext52);
    org.junit.Assert.assertNotNull(defaultLoginContext53);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl54);
    org.junit.Assert.assertNotNull(authManager56);
    org.junit.Assert.assertNotNull(authManager58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl63);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl67);
    org.junit.Assert.assertNull(str68);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl70);
    org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AUTH_DISABLED with FULL" + "'", str71,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    org.junit.Assert.assertNull(str75);
    org.junit.Assert.assertEquals("'" + str76 + "' != '" + "AUTH_DISABLED with FULL" + "'", str76,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode77 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode77.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl78);
    org.junit.Assert.assertNotNull(authManager81);
    org.junit.Assert.assertNotNull(authManager82);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl84);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl87);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl91);
    org.junit.Assert.assertEquals("'" + str93 + "' != '" + "AUTH_DISABLED with FULL" + "'", str93,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo94);
    org.junit.Assert.assertNotNull(strSet95);
  }

  @Test
  public void test0904() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0904");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str8 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str9 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str10 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pagecachewarmer" + "'", str8,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pagecachewarmer" + "'", str10,
        "pagecachewarmer");
  }

  @Test
  public void test0905() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0905");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl0.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode11 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext12 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo13 = defaultLoginContext12.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject14 = defaultLoginContext12.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext16 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = securityContext16.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext18 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet19 = defaultLoginContext18.roeSet();
    java.util.Set<java.lang.String> strSet21 = defaultLoginContext18.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode11, authSubject14, clientConnectionInfo15, accessMode17, strSet21,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup25 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl24.authorize(
        idLookup25, "neo4j", abstractSecurityLog27);
    java.lang.String str29 = securityContextEnterpriseImpl28.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl28.withMode(
        accessMode30);
    java.lang.String str32 = securityContextEnterpriseImpl28.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject33 = securityContextEnterpriseImpl28.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl28.withMode(
        adminAccessMode34);
    boolean boolean37 = securityContextEnterpriseImpl35.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl35.withMode(
        adminAccessMode38);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo40 = securityContextEnterpriseImpl35.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext42 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode17, clientConnectionInfo40, "localhost");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext44 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode10, clientConnectionInfo40,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext45 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext12);
    org.junit.Assert.assertNotNull(clientConnectionInfo13);
    org.junit.Assert.assertNotNull(authSubject14);
    org.junit.Assert.assertNotNull(securityContext16);
    org.junit.Assert.assertTrue("'" + accessMode17 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode17.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext18);
    org.junit.Assert.assertNotNull(strSet19);
    org.junit.Assert.assertNotNull(strSet21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNull(str29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AUTH_DISABLED with FULL" + "'", str32,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNotNull(clientConnectionInfo40);
    org.junit.Assert.assertNotNull(securityContext42);
    org.junit.Assert.assertNotNull(securityContext44);
    org.junit.Assert.assertNotNull(loginContext45);
  }

  @Test
  public void test0906() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0906");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test0907() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0907");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (short) 0, namedDatabaseId10);
  }

  @Test
  public void test0908() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0908");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test0909() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0909");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl14.authorize(
        idLookup15, "neo4j", abstractSecurityLog17);
    java.lang.String str19 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl18.withMode(
        accessMode20);
    java.lang.String str22 = securityContextEnterpriseImpl18.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject23 = securityContextEnterpriseImpl18.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl18.withMode(
        adminAccessMode24);
    boolean boolean27 = securityContextEnterpriseImpl25.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl25.withMode(
        adminAccessMode28);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo30 = securityContextEnterpriseImpl25.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext31 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo30);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext32 = defaultAuthManager0.login(
          strMap13, clientConnectionInfo30);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNull(str19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(clientConnectionInfo30);
    org.junit.Assert.assertNotNull(defaultLoginContext31);
  }

  @Test
  public void test0910() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0910");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl0.authorize(
        idLookup5, "", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl8;
    java.lang.String str10 = securityContextEnterpriseImpl8.description();
    java.lang.String str11 = securityContextEnterpriseImpl8.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AUTH_DISABLED with FULL" + "'", str10,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str11);
  }

  @Test
  public void test0911() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0911");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl10;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode12);
    boolean boolean15 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure(
        (int) (short) 10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
  }

  @Test
  public void test0912() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0912");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.Object obj7 = null;
    boolean boolean8 = cachePopulatorExtensionFactory0.equals(obj7);
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory9 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock10 = null;
    org.neo4j.lock.LockTracer lockTracer11 = enterpriseTracerFactory9.createLockTracer(clock10);
    java.lang.String str12 = enterpriseTracerFactory9.getName();
    java.time.Clock clock13 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer14 = enterpriseTracerFactory9.createDatabaseTracer(
        clock13);
    java.time.Clock clock15 = null;
    org.neo4j.lock.LockTracer lockTracer16 = enterpriseTracerFactory9.createLockTracer(clock15);
    boolean boolean17 = cachePopulatorExtensionFactory0.equals((java.lang.Object) lockTracer16);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext18 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker19 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle20 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext18, componentsChecker19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(lockTracer11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "verbose" + "'", str12, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer14);
    org.junit.Assert.assertNotNull(lockTracer16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
  }

  @Test
  public void test0913() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0913");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl2 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl2.start();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl2.inClusterAuthManager();
    securityProviderAuthDisabledImpl2.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl2.authManager();
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl2);
    java.lang.String str8 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str9 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str8, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
  }

  @Test
  public void test0914() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0914");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.initialize((long) 1);
    long long13 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
  }

  @Test
  public void test0915() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0915");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor6, propertyCursor7, relationTypeSchemaDescriptor8,
          tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0916() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0916");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor7,
          propertyCursor8, labelSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test0917() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0917");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler10 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler10);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl0.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContextEnterpriseImpl0.mode();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + accessMode16 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode16.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test0918() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0918");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    securityProviderAuthDisabledImpl4.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl4.loopbackAuthManager();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(authManager13);
  }

  @Test
  public void test0919() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0919");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
  }

  @Test
  public void test0920() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0920");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test0921() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0921");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl2.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl2.allowsAdminAction(adminActionOnResource8);
    boolean boolean10 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) adminActionOnResource8);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl11 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl11.start();
    securityProviderAuthDisabledImpl11.stop();
    securityProviderAuthDisabledImpl11.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl11.inClusterAuthManager();
    securityProviderAuthDisabledImpl11.start();
    org.neo4j.kernel.api.security.AuthManager authManager17 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager19 = securityProviderAuthDisabledImpl11.loopbackAuthManager();
    boolean boolean20 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl11);
    org.neo4j.logging.Log log21 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl22 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl22.prlcpdForNa((long) (short) 1, namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = null;
    pageCacheLoadingWatcherDefaultImpl22.wapclForNa((long) 6362, namedDatabaseId31);
    boolean boolean33 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl22);
    java.lang.String str34 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting35 = io.github.onograph.config.Metrics.settingDaaeonbBoolean;
    boolean boolean36 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting35);
    java.lang.Class<?> wildcardClass37 = cachePopulatorExtensionFactory0.getClass();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl11);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager17);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str34, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(booleanSetting35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertNotNull(wildcardClass37);
  }

  @Test
  public void test0922() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0922");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl3.authorize(
        idLookup4, "neo4j", abstractSecurityLog6);
    java.lang.String str8 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl7.withMode(
        accessMode9);
    java.lang.String str11 = securityContextEnterpriseImpl7.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource12 = null;
    boolean boolean13 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource12);
    java.lang.String str14 = securityContextEnterpriseImpl7.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl7;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl7;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = securityContextEnterpriseImpl7.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl18.authorize(
        idLookup19, "neo4j", abstractSecurityLog21);
    java.lang.String str23 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl18.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup26 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl18.authorize(
        idLookup26, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog28);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = securityContextEnterpriseImpl29.mode();
    java.lang.String[] strArray43 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean45 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet44, strArray43);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo17, accessMode30,
        (java.util.Set<java.lang.String>) strSet44, "user '' with FULL");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext48 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo17);
    java.util.Set<java.lang.String> strSet49 = defaultLoginContext48.roeSet();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNull(str8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AUTH_DISABLED with FULL" + "'", str14,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNull(str23);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertTrue("'" + accessMode30 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode30.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(defaultLoginContext48);
    org.junit.Assert.assertNotNull(strSet49);
  }

  @Test
  public void test0923() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0923");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.logging.Log log10 = null;
    org.neo4j.configuration.Config config11 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors7, jobScheduler8, systemNanoClock9, log10, config11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
  }

  @Test
  public void test0924() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0924");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId14);
  }

  @Test
  public void test0925() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0925");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog9);
    boolean boolean12 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure(
        (int) (short) 10);
    java.lang.String str13 = securityContextEnterpriseImpl10.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertNull(str13);
  }

  @Test
  public void test0926() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0926");
    }
    org.neo4j.internal.kernel.api.security.AccessMode accessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = defaultLoginContext1.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext4 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo3);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext6 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode0, clientConnectionInfo3, "pagecachewarmer");
    org.neo4j.internal.kernel.api.security.AccessMode accessMode7 = securityContext6.mode();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo3);
    org.junit.Assert.assertNotNull(defaultLoginContext4);
    org.junit.Assert.assertNotNull(securityContext6);
    org.junit.Assert.assertNull(accessMode7);
  }

  @Test
  public void test0927() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0927");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config5 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock6 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold9 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config5, systemNanoClock6, logPruning7, logProvider8);
    org.neo4j.configuration.Config config10 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning12 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold14 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config10, systemNanoClock11, logPruning12, logProvider13);
    java.lang.String str15 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config16 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock17 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning18 = null;
    org.neo4j.logging.LogProvider logProvider19 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold20 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config16, systemNanoClock17, logPruning18, logProvider19);
    org.neo4j.configuration.Config config21 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock22 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning23 = null;
    org.neo4j.logging.LogProvider logProvider24 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold25 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config21, systemNanoClock22, logPruning23, logProvider24);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold9);
    org.junit.Assert.assertNotNull(checkPointThreshold14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "volumetric" + "'", str15, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold20);
    org.junit.Assert.assertNotNull(checkPointThreshold25);
  }

  @Test
  public void test0928() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0928");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.clneac();
    defaultAuthManager0.stop();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test0929() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0929");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = defaultLoginContext0.subject();
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject3 = defaultLoginContext0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = defaultLoginContext0.authorize(
        idLookup4, ".cacheprof", abstractSecurityLog6);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(authSubject3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
  }

  @Test
  public void test0930() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0930");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl10;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl10.authorize(
        idLookup12, "", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
  }

  @Test
  public void test0931() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0931");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    authManager7.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test0932() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0932");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor5, propertyCursor6,
          labelSchemaDescriptor7, tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0933() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0933");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) (short) 0, constraintDescriptor5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
  }

  @Test
  public void test0934() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0934");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 0, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (byte) 10, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(0L, namedDatabaseId11);
  }

  @Test
  public void test0935() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0935");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) 100, namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId11);
  }

  @Test
  public void test0936() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0936");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          0L, nodeKeyConstraintDescriptor6, (long) 6362);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test0937() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0937");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str8 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext9 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker10 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle11 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext9, componentsChecker10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str8, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test0938() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0938");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test0939() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0939");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor3 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor4 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor5 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor6 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup7 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor3, nodeCursor4, propertyCursor5, labelSchemaDescriptor6,
          tokenNameLookup7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
  }

  @Test
  public void test0940() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0940");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 'a', namedDatabaseId19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 100, namedDatabaseId22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId24);
  }

  @Test
  public void test0941() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0941");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 100, constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test0942() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0942");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    java.lang.String str7 = securityContextEnterpriseImpl0.database();
    java.lang.String str8 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl0.authorize(
        idLookup9, "continuous", abstractSecurityLog11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertNull(str8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
  }

  @Test
  public void test0943() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0943");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList14 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList16 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(strMapList14);
    org.junit.Assert.assertNotNull(strMapList16);
  }

  @Test
  public void test0944() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0944");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 6362, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 100, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 2, namedDatabaseId20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId22);
  }

  @Test
  public void test0945() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0945");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor4 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          0L, nodeKeyConstraintDescriptor4, (long) '4');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
  }

  @Test
  public void test0946() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0946");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor6, propertyCursor7, relationTypeSchemaDescriptor8,
          tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test0947() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0947");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test0948() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0948");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str5 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config6 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning8 = null;
    org.neo4j.logging.LogProvider logProvider9 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold10 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config6, systemNanoClock7, logPruning8, logProvider9);
    java.lang.String str11 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "volumetric" + "'", str5, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "volumetric" + "'", str11, "volumetric");
  }

  @Test
  public void test0949() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0949");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl17.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = securityContextEnterpriseImpl17.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup21 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl20.authorize(
        idLookup21, "neo4j", abstractSecurityLog23);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl20.withMode(
        accessMode25);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup27 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl20.authorize(
        idLookup27, "", abstractSecurityLog29);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup31 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl30.authorize(
        idLookup31, "AUTH_DISABLED with FULL", abstractSecurityLog33);
    java.lang.String str35 = securityContextEnterpriseImpl30.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode36 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl30.withMode(
        adminAccessMode36);
    java.lang.String str38 = securityContextEnterpriseImpl37.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContextEnterpriseImpl37.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext41 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo42 = defaultLoginContext41.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext43 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo42);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext45 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode40, clientConnectionInfo42,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext46 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo42);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext48 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode39, clientConnectionInfo42, "neo4j");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext50 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode19, clientConnectionInfo42, "user '' with FULL");
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo51 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext53 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode19, clientConnectionInfo51, "continuous");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNull(str18);
    org.junit.Assert.assertTrue("'" + accessMode19 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode19.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AUTH_DISABLED with FULL" + "'", str35,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNull(str38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext41);
    org.junit.Assert.assertNotNull(clientConnectionInfo42);
    org.junit.Assert.assertNotNull(loginContext43);
    org.junit.Assert.assertNotNull(securityContext45);
    org.junit.Assert.assertNotNull(defaultLoginContext46);
    org.junit.Assert.assertNotNull(securityContext48);
    org.junit.Assert.assertNotNull(securityContext50);
    org.junit.Assert.assertNotNull(securityContext53);
  }

  @Test
  public void test0950() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0950");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.lock.LockTracer lockTracer10 = enterpriseTracerFactory0.createLockTracer(clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(lockTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
  }

  @Test
  public void test0951() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0951");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet1 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = defaultLoginContext0.authorize(
        idLookup2, ".cacheprof", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext0.connectionInfo();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
  }

  @Test
  public void test0952() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0952");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet1 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet4 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "hi!", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = defaultLoginContext0.subject();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet1);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(strSet4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(authSubject9);
  }

  @Test
  public void test0953() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0953");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 100, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 10, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(1L, namedDatabaseId20);
  }

  @Test
  public void test0954() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0954");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    boolean boolean7 = cachePopulatorExtensionFactory0.equals((java.lang.Object) (byte) 0);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext8 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker9 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle10 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext8, componentsChecker9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
  }

  @Test
  public void test0955() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0955");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    authManager5.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test0956() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0956");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((-1L), namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '4', namedDatabaseId19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 100, namedDatabaseId22);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId24);
  }

  @Test
  public void test0957() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0957");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl8 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl8.start();
    securityProviderAuthDisabledImpl8.stop();
    securityProviderAuthDisabledImpl8.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl8.inClusterAuthManager();
    securityProviderAuthDisabledImpl8.start();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl8.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl8.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl17.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl17.authorize(
        idLookup19, "localhost", abstractSecurityLog21);
    authManager15.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    boolean boolean24 = cachePopulatorExtensionFactory0.equals((java.lang.Object) authManager15);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup27 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl26.authorize(
        idLookup27, "neo4j", abstractSecurityLog29);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl26.withMode(
        accessMode31);
    java.util.Set<java.lang.String> strSet33 = securityContextEnterpriseImpl26.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl34.authorize(
        idLookup35, "neo4j", abstractSecurityLog37);
    java.lang.String str39 = securityContextEnterpriseImpl38.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl38.withMode(
        adminAccessMode40);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject42 = securityContextEnterpriseImpl41.subject();
    java.lang.String str43 = securityContextEnterpriseImpl41.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode44 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext45 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = securityContext45.mode();
    java.lang.String str47 = securityContext45.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode48 = securityContext45.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject49 = securityContext45.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext50 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo51 = defaultLoginContext50.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext52 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo51);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext53 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo51);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl54 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup55 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog57 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = securityContextEnterpriseImpl54.authorize(
        idLookup55, "neo4j", abstractSecurityLog57);
    java.lang.String str59 = securityContextEnterpriseImpl58.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode60 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl61 = securityContextEnterpriseImpl58.withMode(
        accessMode60);
    java.lang.String str62 = securityContextEnterpriseImpl58.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject63 = securityContextEnterpriseImpl58.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode64 = securityContextEnterpriseImpl58.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext65 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet67 = defaultLoginContext65.roeSet();
    java.util.Set<java.lang.String> strSet68 = defaultLoginContext65.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl70 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode44, authSubject49, clientConnectionInfo51, accessMode64, strSet68, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext71 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo51);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext72 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo73 = defaultLoginContext72.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext74 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo73);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl75 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup76 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog78 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl79 = securityContextEnterpriseImpl75.authorize(
        idLookup76, "neo4j", abstractSecurityLog78);
    java.lang.String str80 = securityContextEnterpriseImpl79.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode81 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl82 = securityContextEnterpriseImpl79.withMode(
        accessMode81);
    java.lang.String str83 = securityContextEnterpriseImpl79.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource84 = null;
    boolean boolean85 = securityContextEnterpriseImpl79.allowsAdminAction(adminActionOnResource84);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode86 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl87 = securityContextEnterpriseImpl79.withMode(
        adminAccessMode86);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode88 = securityContextEnterpriseImpl79.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl90 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo73, accessMode88, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl92 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo51, accessMode88,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl93 = securityContextEnterpriseImpl41.withMode(
        accessMode88);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl94 = securityContextEnterpriseImpl26.withMode(
        accessMode88);
    authManager15.log("hi!",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl94);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl8);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(strSet33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNull(str39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(authSubject42);
    org.junit.Assert.assertNull(str43);
    org.junit.Assert.assertNotNull(securityContext45);
    org.junit.Assert.assertTrue("'" + accessMode46 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode46.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str47);
    org.junit.Assert.assertTrue("'" + accessMode48 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode48.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject49);
    org.junit.Assert.assertNotNull(defaultLoginContext50);
    org.junit.Assert.assertNotNull(clientConnectionInfo51);
    org.junit.Assert.assertNotNull(defaultLoginContext52);
    org.junit.Assert.assertNotNull(defaultLoginContext53);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNull(str59);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl61);
    org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AUTH_DISABLED with FULL" + "'", str62,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject63);
    org.junit.Assert.assertTrue("'" + accessMode64 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode64.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext65);
    org.junit.Assert.assertNotNull(strSet67);
    org.junit.Assert.assertNotNull(strSet68);
    org.junit.Assert.assertNotNull(defaultLoginContext71);
    org.junit.Assert.assertNotNull(defaultLoginContext72);
    org.junit.Assert.assertNotNull(clientConnectionInfo73);
    org.junit.Assert.assertNotNull(loginContext74);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl75);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl79);
    org.junit.Assert.assertNull(str80);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl82);
    org.junit.Assert.assertEquals("'" + str83 + "' != '" + "AUTH_DISABLED with FULL" + "'", str83,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl87);
    org.junit.Assert.assertTrue("'" + accessMode88 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode88.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl90);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl92);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl93);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl94);
  }

  @Test
  public void test0958() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0958");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        abstractSecurityLog4);
    boolean boolean7 = securityContextEnterpriseImpl5.allowExecuteAdminProcedure((int) (short) -1);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject8 = securityContextEnterpriseImpl5.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(authSubject8);
  }

  @Test
  public void test0959() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0959");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler16 = null;
    securityContextEnterpriseImpl15.assertCredentialsNotExpired(securityAuthorizationHandler16);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl15.authorize(
        idLookup18, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog20);
    java.util.Set<java.lang.String> strSet22 = securityContextEnterpriseImpl15.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = securityContextEnterpriseImpl15.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext25 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject26 = defaultLoginContext25.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup28 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl27.authorize(
        idLookup28, "neo4j", abstractSecurityLog30);
    java.lang.String str32 = securityContextEnterpriseImpl31.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl31.withMode(
        accessMode33);
    java.lang.String str35 = securityContextEnterpriseImpl31.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource36 = null;
    boolean boolean37 = securityContextEnterpriseImpl31.allowsAdminAction(adminActionOnResource36);
    java.lang.String str38 = securityContextEnterpriseImpl31.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl31;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl31;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo41 = securityContextEnterpriseImpl31.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup43 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog45 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = securityContextEnterpriseImpl42.authorize(
        idLookup43, "neo4j", abstractSecurityLog45);
    java.lang.String str47 = securityContextEnterpriseImpl42.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource48 = null;
    boolean boolean49 = securityContextEnterpriseImpl42.allowsAdminAction(adminActionOnResource48);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup50 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl42.authorize(
        idLookup50, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog52);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = securityContextEnterpriseImpl53.mode();
    java.lang.String[] strArray67 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet68 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean69 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet68, strArray67);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl71 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode24, authSubject26, clientConnectionInfo41, accessMode54,
        (java.util.Set<java.lang.String>) strSet68, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo23, accessMode54, "AUTH_DISABLED with FULL");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext74 = defaultAuthManager0.login(
          strMap14, clientConnectionInfo23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(strSet22);
    org.junit.Assert.assertNotNull(clientConnectionInfo23);
    org.junit.Assert.assertNotNull(defaultLoginContext25);
    org.junit.Assert.assertNotNull(authSubject26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNull(str32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AUTH_DISABLED with FULL" + "'", str35,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AUTH_DISABLED with FULL" + "'", str38,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNull(str47);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertTrue("'" + accessMode54 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode54.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray67);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
  }

  @Test
  public void test0960() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0960");
    }
    org.neo4j.kernel.api.security.AuthManager authManager0 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl6.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl6.withMode(
        accessMode8);
    java.lang.String str10 = securityContextEnterpriseImpl6.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource11 = null;
    boolean boolean12 = securityContextEnterpriseImpl6.allowsAdminAction(adminActionOnResource11);
    java.lang.String str13 = securityContextEnterpriseImpl6.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    authManager0.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    java.lang.String str17 = securityContextEnterpriseImpl6.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContextEnterpriseImpl6.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "neo4j", abstractSecurityLog22);
    java.lang.String str24 = securityContextEnterpriseImpl23.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl23.withMode(
        accessMode25);
    java.lang.String str27 = securityContextEnterpriseImpl23.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = securityContextEnterpriseImpl23.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext30 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo28, "volumetric");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext31 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo32 = defaultLoginContext31.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext34 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo32,
        "Property existence constraint requires Neo4j Enterprise Edition");
    org.junit.Assert.assertNotNull(authManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AUTH_DISABLED with FULL" + "'", str10,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AUTH_DISABLED with FULL" + "'", str13,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AUTH_DISABLED with FULL" + "'", str27,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo28);
    org.junit.Assert.assertNotNull(securityContext30);
    org.junit.Assert.assertNotNull(defaultLoginContext31);
    org.junit.Assert.assertNotNull(clientConnectionInfo32);
    org.junit.Assert.assertNotNull(securityContext34);
  }

  @Test
  public void test0961() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0961");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext10 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = securityContext10.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo9, accessMode11,
        "Property existence constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl14.authorize(
        idLookup15, "neo4j", abstractSecurityLog17);
    java.lang.String str19 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl18.withMode(
        accessMode20);
    java.lang.String str22 = securityContextEnterpriseImpl18.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject23 = securityContextEnterpriseImpl18.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = securityContextEnterpriseImpl18.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject25 = securityContextEnterpriseImpl18.subject();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl26 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl26.start();
    securityProviderAuthDisabledImpl26.stop();
    org.neo4j.kernel.api.security.AuthManager authManager29 = securityProviderAuthDisabledImpl26.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager30 = securityProviderAuthDisabledImpl26.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager30.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl32);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup36 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl35.authorize(
        idLookup36, "neo4j", abstractSecurityLog38);
    authManager30.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl39);
    java.lang.String str41 = securityContextEnterpriseImpl39.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode42 = securityContextEnterpriseImpl39.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl18.withMode(
        accessMode42);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo9, accessMode42,
        "Property existence constraint requires Neo4j Enterprise Edition");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext46 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(securityContext10);
    org.junit.Assert.assertTrue("'" + accessMode11 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode11.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNull(str19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject23);
    org.junit.Assert.assertTrue("'" + accessMode24 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode24.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject25);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl26);
    org.junit.Assert.assertNotNull(authManager29);
    org.junit.Assert.assertNotNull(authManager30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AUTH_DISABLED with FULL" + "'", str41,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode42 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode42.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNotNull(loginContext46);
  }

  @Test
  public void test0962() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0962");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    java.lang.String str10 = enterpriseTracerFactory0.getName();
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    java.lang.String str13 = enterpriseTracerFactory0.getName();
    org.neo4j.monitoring.Monitors monitors14 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock16 = null;
    org.neo4j.logging.Log log17 = null;
    org.neo4j.configuration.Config config18 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors14, jobScheduler15, systemNanoClock16, log17, config18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "verbose" + "'", str10, "verbose");
    org.junit.Assert.assertNotNull(lockTracer12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "verbose" + "'", str13, "verbose");
  }

  @Test
  public void test0963() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0963");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    java.lang.Class<?> wildcardClass8 = securityContextEnterpriseImpl0.getClass();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(wildcardClass8);
  }

  @Test
  public void test0964() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0964");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str15 = securityContextEnterpriseImpl13.description();
    boolean boolean17 = securityContextEnterpriseImpl13.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode18);
    java.util.Set<java.lang.String> strSet20 = securityContextEnterpriseImpl19.roles();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(strSet20);
  }

  @Test
  public void test0965() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0965");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.stop();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup14 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl7.authorize(
        idLookup14, "", abstractSecurityLog16);
    boolean boolean19 = securityContextEnterpriseImpl7.allowExecuteAdminProcedure((int) (short) 1);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl7.mode();
    defaultAuthManager0.log("enterpriseConstraints",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode23 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext24 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo25 = defaultLoginContext24.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject26 = defaultLoginContext24.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo27 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext28 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = securityContext28.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext30 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet31 = defaultLoginContext30.roeSet();
    java.util.Set<java.lang.String> strSet33 = defaultLoginContext30.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode23, authSubject26, clientConnectionInfo27, accessMode29, strSet33,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup37 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog39 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl36.authorize(
        idLookup37, "neo4j", abstractSecurityLog39);
    java.lang.String str41 = securityContextEnterpriseImpl40.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl40.withMode(
        accessMode42);
    java.lang.String str44 = securityContextEnterpriseImpl40.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject45 = securityContextEnterpriseImpl40.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl40.withMode(
        adminAccessMode46);
    boolean boolean49 = securityContextEnterpriseImpl47.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode50 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl51 = securityContextEnterpriseImpl47.withMode(
        adminAccessMode50);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo52 = securityContextEnterpriseImpl47.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext54 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode29, clientConnectionInfo52, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup56 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog58 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl55.authorize(
        idLookup56, "neo4j", abstractSecurityLog58);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode60 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl61 = securityContextEnterpriseImpl55.withMode(
        accessMode60);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup62 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog64 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = securityContextEnterpriseImpl61.authorize(
        idLookup62, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog64);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject67 = securityContextEnterpriseImpl66.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup68 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog70 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl71 = securityContextEnterpriseImpl66.authorize(
        idLookup68, "localhost", abstractSecurityLog70);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource72 = null;
    boolean boolean73 = securityContextEnterpriseImpl66.allowsAdminAction(adminActionOnResource72);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode74 = securityContextEnterpriseImpl66.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl75 = securityContextEnterpriseImpl65.withMode(
        accessMode74);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo52, accessMode74, ".cacheprof");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext78 = defaultAuthManager0.login(
          strMap22, clientConnectionInfo52);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext24);
    org.junit.Assert.assertNotNull(clientConnectionInfo25);
    org.junit.Assert.assertNotNull(authSubject26);
    org.junit.Assert.assertNotNull(securityContext28);
    org.junit.Assert.assertTrue("'" + accessMode29 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode29.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext30);
    org.junit.Assert.assertNotNull(strSet31);
    org.junit.Assert.assertNotNull(strSet33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNull(str41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "AUTH_DISABLED with FULL" + "'", str44,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl51);
    org.junit.Assert.assertNotNull(clientConnectionInfo52);
    org.junit.Assert.assertNotNull(securityContext54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl61);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertNotNull(authSubject67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl71);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    org.junit.Assert.assertTrue("'" + accessMode74 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode74.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl75);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
  }

  @Test
  public void test0966() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0966");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (byte) -1, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId18);
  }

  @Test
  public void test0967() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0967");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId18);
  }

  @Test
  public void test0968() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0968");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource11 = null;
    boolean boolean12 = securityContextEnterpriseImpl6.allowsAdminAction(adminActionOnResource11);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl6.authorize(
        idLookup13, "verbose", abstractSecurityLog15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
  }

  @Test
  public void test0969() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0969");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) 'a');
    checkPointThresholdVolumetricPolicy1.initialize((long) 100);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) 2);
    java.util.function.Consumer<java.lang.String> strConsumer15 = null;
    try {
      boolean boolean16 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((-1L), 0L,
          strConsumer15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
  }

  @Test
  public void test0970() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0970");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.util.Set<java.lang.String> strSet6 = securityContextEnterpriseImpl4.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(strSet6);
  }

  @Test
  public void test0971() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0971");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor6,
          nodeCursor7, propertyCursor8, labelSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0972() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0972");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 100, constraintDescriptor5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0973() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0973");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.init();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject7 = securityContextEnterpriseImpl6.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = securityContextEnterpriseImpl6.mode();
    defaultAuthManager0.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList10 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(authSubject7);
    org.junit.Assert.assertTrue(
        "'" + accessMode8 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode8.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strMapList10);
  }

  @Test
  public void test0974() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0974");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    authManager3.init();
    authManager3.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager3);
  }

  @Test
  public void test0975() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0975");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    org.neo4j.monitoring.Monitors monitors10 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler11 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    org.neo4j.logging.Log log13 = null;
    org.neo4j.configuration.Config config14 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer15 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors10, jobScheduler11, systemNanoClock12, log13, config14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
  }

  @Test
  public void test0976() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0976");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor4 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor4, nodeCursor5, propertyCursor6, labelSchemaDescriptor7,
          tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test0977() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0977");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 'a', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((-1L), namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 0, namedDatabaseId22);
  }

  @Test
  public void test0978() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0978");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(1L, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 10, namedDatabaseId20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) -1, namedDatabaseId23);
  }

  @Test
  public void test0979() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0979");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "user '' with FULL", abstractSecurityLog8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
  }

  @Test
  public void test0980() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0980");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 100);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (short) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) 1);
  }

  @Test
  public void test0981() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0981");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long10 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize(0L);
    java.util.function.Consumer<java.lang.String> strConsumer15 = null;
    try {
      boolean boolean16 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((-1L),
          (long) '#', strConsumer15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
  }

  @Test
  public void test0982() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0982");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = defaultLoginContext15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource20 = null;
    boolean boolean21 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
  }

  @Test
  public void test0983() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0983");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.Class<?> wildcardClass2 = cachePopulatorExtensionFactory0.getClass();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(wildcardClass2);
  }

  @Test
  public void test0984() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0984");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    java.lang.String str12 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext13 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = defaultLoginContext13.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext15 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo14);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo14, accessMode16, "hi!");
    boolean boolean19 = cachePopulatorExtensionFactory0.equals((java.lang.Object) accessMode16);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str12, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultLoginContext13);
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(loginContext15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test0985() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0985");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.start();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
  }

  @Test
  public void test0986() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0986");
    }
    org.neo4j.kernel.api.security.AuthManager authManager0 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl6.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl6.withMode(
        accessMode8);
    java.lang.String str10 = securityContextEnterpriseImpl6.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource11 = null;
    boolean boolean12 = securityContextEnterpriseImpl6.allowsAdminAction(adminActionOnResource11);
    java.lang.String str13 = securityContextEnterpriseImpl6.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    authManager0.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    java.lang.String str17 = securityContextEnterpriseImpl6.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContextEnterpriseImpl6.mode();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = securityContextEnterpriseImpl6.connectionInfo();
    org.junit.Assert.assertNotNull(authManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AUTH_DISABLED with FULL" + "'", str10,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AUTH_DISABLED with FULL" + "'", str13,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
  }

  @Test
  public void test0987() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0987");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl14.authorize(
        idLookup15, "neo4j", abstractSecurityLog17);
    java.lang.String str19 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl18.withMode(
        accessMode20);
    java.lang.String str22 = securityContextEnterpriseImpl18.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject23 = securityContextEnterpriseImpl18.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl18.withMode(
        adminAccessMode24);
    boolean boolean27 = securityContextEnterpriseImpl25.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl25.withMode(
        adminAccessMode28);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl29.withMode(
        adminAccessMode30);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo32 = securityContextEnterpriseImpl29.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl33 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl33.start();
    org.neo4j.kernel.api.security.AuthManager authManager35 = securityProviderAuthDisabledImpl33.loopbackAuthManager();
    securityProviderAuthDisabledImpl33.stop();
    org.neo4j.kernel.api.security.AuthManager authManager37 = securityProviderAuthDisabledImpl33.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager37.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl39);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup43 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog45 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = securityContextEnterpriseImpl42.authorize(
        idLookup43, "neo4j", abstractSecurityLog45);
    java.lang.String str47 = securityContextEnterpriseImpl46.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl46.withMode(
        accessMode48);
    java.lang.String str50 = securityContextEnterpriseImpl46.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource51 = null;
    boolean boolean52 = securityContextEnterpriseImpl46.allowsAdminAction(adminActionOnResource51);
    authManager37.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl46);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = securityContextEnterpriseImpl46.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo32, accessMode54, "neo4j");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl57 = securityContextEnterpriseImpl4.withMode(
        accessMode54);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl58 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl58.start();
    securityProviderAuthDisabledImpl58.stop();
    org.neo4j.kernel.api.security.AuthManager authManager61 = securityProviderAuthDisabledImpl58.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager62 = securityProviderAuthDisabledImpl58.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl64 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager62.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl64);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup68 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog70 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl71 = securityContextEnterpriseImpl67.authorize(
        idLookup68, "neo4j", abstractSecurityLog70);
    authManager62.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl71);
    java.lang.String str73 = securityContextEnterpriseImpl71.description();
    boolean boolean75 = securityContextEnterpriseImpl71.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode76 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = securityContextEnterpriseImpl71.withMode(
        adminAccessMode76);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext78 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo79 = defaultLoginContext78.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext80 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo79);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl81 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup82 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog84 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl85 = securityContextEnterpriseImpl81.authorize(
        idLookup82, "neo4j", abstractSecurityLog84);
    java.lang.String str86 = securityContextEnterpriseImpl85.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode87 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl88 = securityContextEnterpriseImpl85.withMode(
        accessMode87);
    java.lang.String str89 = securityContextEnterpriseImpl85.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource90 = null;
    boolean boolean91 = securityContextEnterpriseImpl85.allowsAdminAction(adminActionOnResource90);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode92 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl93 = securityContextEnterpriseImpl85.withMode(
        adminAccessMode92);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode94 = securityContextEnterpriseImpl85.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl96 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo79, accessMode94, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl97 = securityContextEnterpriseImpl77.withMode(
        accessMode94);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl98 = securityContextEnterpriseImpl57.withMode(
        accessMode94);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNull(str19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(clientConnectionInfo32);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl33);
    org.junit.Assert.assertNotNull(authManager35);
    org.junit.Assert.assertNotNull(authManager37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNull(str47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AUTH_DISABLED with FULL" + "'", str50,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertTrue("'" + accessMode54 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode54.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl57);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl58);
    org.junit.Assert.assertNotNull(authManager61);
    org.junit.Assert.assertNotNull(authManager62);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl64);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl71);
    org.junit.Assert.assertEquals("'" + str73 + "' != '" + "AUTH_DISABLED with FULL" + "'", str73,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertNotNull(defaultLoginContext78);
    org.junit.Assert.assertNotNull(clientConnectionInfo79);
    org.junit.Assert.assertNotNull(loginContext80);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl81);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl85);
    org.junit.Assert.assertNull(str86);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl88);
    org.junit.Assert.assertEquals("'" + str89 + "' != '" + "AUTH_DISABLED with FULL" + "'", str89,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl93);
    org.junit.Assert.assertTrue("'" + accessMode94 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode94.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl96);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl97);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl98);
  }

  @Test
  public void test0988() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0988");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.claauch();
    defaultAuthManager0.init();
    defaultAuthManager0.start();
    defaultAuthManager0.init();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test0989() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0989");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 100, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId16);
  }

  @Test
  public void test0990() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0990");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.authorize(
        idLookup10, "AUTH_DISABLED with FULL", abstractSecurityLog12);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource14 = null;
    boolean boolean15 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
  }

  @Test
  public void test0991() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0991");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    long long7 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(1L);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) -1);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
  }

  @Test
  public void test0992() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0992");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    authManager4.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str21 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode22);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl13;
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
  }

  @Test
  public void test0993() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0993");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '#', namedDatabaseId15);
  }

  @Test
  public void test0994() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0994");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = securityContextEnterpriseImpl10.mode();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNull(accessMode11);
  }

  @Test
  public void test0995() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0995");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    java.util.function.Consumer<java.lang.String> strConsumer9 = null;
    try {
      boolean boolean10 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) 2, 0L,
          strConsumer9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
  }

  @Test
  public void test0996() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0996");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (short) 100, uniquenessConstraintDescriptor7, (long) 'a');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test0997() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0997");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test0998() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0998");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize(0L);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 10);
    long long15 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
  }

  @Test
  public void test0999() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test0999");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor5, propertyCursor6,
          labelSchemaDescriptor7, tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1000() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest1.test1000");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    defaultAuthManager0.stop();
    defaultAuthManager0.start();
    defaultAuthManager0.shutdown();
    java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
    org.neo4j.kernel.api.security.AuthManager authManager33 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup36 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl35.authorize(
        idLookup36, "neo4j", abstractSecurityLog38);
    java.lang.String str40 = securityContextEnterpriseImpl39.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode41 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = securityContextEnterpriseImpl39.withMode(
        accessMode41);
    java.lang.String str43 = securityContextEnterpriseImpl39.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource44 = null;
    boolean boolean45 = securityContextEnterpriseImpl39.allowsAdminAction(adminActionOnResource44);
    java.lang.String str46 = securityContextEnterpriseImpl39.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl39;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl39;
    authManager33.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl39);
    java.lang.String str50 = securityContextEnterpriseImpl39.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode51 = securityContextEnterpriseImpl39.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup53 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog55 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = securityContextEnterpriseImpl52.authorize(
        idLookup53, "neo4j", abstractSecurityLog55);
    java.lang.String str57 = securityContextEnterpriseImpl56.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode58 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl56.withMode(
        accessMode58);
    java.lang.String str60 = securityContextEnterpriseImpl56.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo61 = securityContextEnterpriseImpl56.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext63 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode51, clientConnectionInfo61, "volumetric");
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl64 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl64.start();
    securityProviderAuthDisabledImpl64.stop();
    org.neo4j.kernel.api.security.AuthManager authManager67 = securityProviderAuthDisabledImpl64.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager68 = securityProviderAuthDisabledImpl64.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl70 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager68.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl70);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup74 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog76 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = securityContextEnterpriseImpl73.authorize(
        idLookup74, "neo4j", abstractSecurityLog76);
    authManager68.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl77);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode79 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext80 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo81 = defaultLoginContext80.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject82 = defaultLoginContext80.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo83 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext84 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode85 = securityContext84.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext86 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet87 = defaultLoginContext86.roeSet();
    java.util.Set<java.lang.String> strSet89 = defaultLoginContext86.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl91 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode79, authSubject82, clientConnectionInfo83, accessMode85, strSet89,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl92 = securityContextEnterpriseImpl77.withMode(
        accessMode85);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl94 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo61, accessMode85, "continuous");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext95 = defaultAuthManager0.login(
          strMap32, clientConnectionInfo61);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(authManager33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNull(str40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "AUTH_DISABLED with FULL" + "'", str43,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AUTH_DISABLED with FULL" + "'", str46,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str50);
    org.junit.Assert.assertTrue("'" + accessMode51 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode51.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNull(str57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AUTH_DISABLED with FULL" + "'", str60,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo61);
    org.junit.Assert.assertNotNull(securityContext63);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl64);
    org.junit.Assert.assertNotNull(authManager67);
    org.junit.Assert.assertNotNull(authManager68);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl70);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertNotNull(defaultLoginContext80);
    org.junit.Assert.assertNotNull(clientConnectionInfo81);
    org.junit.Assert.assertNotNull(authSubject82);
    org.junit.Assert.assertNotNull(securityContext84);
    org.junit.Assert.assertTrue("'" + accessMode85 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode85.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext86);
    org.junit.Assert.assertNotNull(strSet87);
    org.junit.Assert.assertNotNull(strSet89);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl92);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl94);
  }
}


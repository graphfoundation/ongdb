package io.github.onograph.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ModRegTest2 {

  public static boolean debug = false;

  @Test
  public void test1001() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1001");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl1 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl1.start();
    securityProviderAuthDisabledImpl1.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl1.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl1.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl1.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl8.authorize(
        idLookup9, "neo4j", abstractSecurityLog11);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl8.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl8.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject16 = securityContextEnterpriseImpl8.subject();
    authManager6.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl8);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl8.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo20 = defaultLoginContext19.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo20);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext22 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo20);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext24 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo25 = defaultLoginContext24.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext26 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo25);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext28 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode23, clientConnectionInfo25,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo25);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext30 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = securityContext30.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo25, accessMode31, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject36 = defaultLoginContext35.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo37 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode38 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext39 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo40 = defaultLoginContext39.connectionInfo();
    java.util.Set<java.lang.String> strSet41 = defaultLoginContext39.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode34, authSubject36, clientConnectionInfo37, accessMode38, strSet41,
        "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject18, clientConnectionInfo20, accessMode31, strSet41,
        "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup47 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog49 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl50 = securityContextEnterpriseImpl46.authorize(
        idLookup47, "neo4j", abstractSecurityLog49);
    java.lang.String str51 = securityContextEnterpriseImpl50.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl50.withMode(
        accessMode52);
    java.lang.String str54 = securityContextEnterpriseImpl50.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo55 = securityContextEnterpriseImpl50.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl56 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl56.start();
    securityProviderAuthDisabledImpl56.stop();
    org.neo4j.kernel.api.security.AuthManager authManager59 = securityProviderAuthDisabledImpl56.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager60 = securityProviderAuthDisabledImpl56.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager60.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl62);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup66 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog68 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = securityContextEnterpriseImpl65.authorize(
        idLookup66, "neo4j", abstractSecurityLog68);
    authManager60.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl69);
    java.lang.String str71 = securityContextEnterpriseImpl69.description();
    boolean boolean73 = securityContextEnterpriseImpl69.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode74 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl75 = securityContextEnterpriseImpl69.withMode(
        adminAccessMode74);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext76 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo77 = defaultLoginContext76.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext78 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo77);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl79 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup80 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog82 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl83 = securityContextEnterpriseImpl79.authorize(
        idLookup80, "neo4j", abstractSecurityLog82);
    java.lang.String str84 = securityContextEnterpriseImpl83.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode85 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl86 = securityContextEnterpriseImpl83.withMode(
        accessMode85);
    java.lang.String str87 = securityContextEnterpriseImpl83.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource88 = null;
    boolean boolean89 = securityContextEnterpriseImpl83.allowsAdminAction(adminActionOnResource88);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode90 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl91 = securityContextEnterpriseImpl83.withMode(
        adminAccessMode90);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode92 = securityContextEnterpriseImpl83.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl94 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo77, accessMode92, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl95 = securityContextEnterpriseImpl75.withMode(
        accessMode92);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl97 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo55, accessMode92, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl99 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo20, accessMode92, "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl1);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(authSubject16);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(clientConnectionInfo20);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(loginContext22);
    org.junit.Assert.assertNotNull(defaultLoginContext24);
    org.junit.Assert.assertNotNull(clientConnectionInfo25);
    org.junit.Assert.assertNotNull(loginContext26);
    org.junit.Assert.assertNotNull(securityContext28);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(securityContext30);
    org.junit.Assert.assertTrue("'" + accessMode31 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode31.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(defaultLoginContext35);
    org.junit.Assert.assertNotNull(authSubject36);
    org.junit.Assert.assertNotNull(defaultLoginContext39);
    org.junit.Assert.assertNotNull(clientConnectionInfo40);
    org.junit.Assert.assertNotNull(strSet41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl50);
    org.junit.Assert.assertNull(str51);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AUTH_DISABLED with FULL" + "'", str54,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo55);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl56);
    org.junit.Assert.assertNotNull(authManager59);
    org.junit.Assert.assertNotNull(authManager60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertEquals("'" + str71 + "' != '" + "AUTH_DISABLED with FULL" + "'", str71,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl75);
    org.junit.Assert.assertNotNull(defaultLoginContext76);
    org.junit.Assert.assertNotNull(clientConnectionInfo77);
    org.junit.Assert.assertNotNull(loginContext78);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl79);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl83);
    org.junit.Assert.assertNull(str84);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl86);
    org.junit.Assert.assertEquals("'" + str87 + "' != '" + "AUTH_DISABLED with FULL" + "'", str87,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl91);
    org.junit.Assert.assertTrue("'" + accessMode92 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode92.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl94);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl95);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl97);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl99);
  }

  @Test
  public void test1002() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1002");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(0L, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) 100, namedDatabaseId18);
  }

  @Test
  public void test1003() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1003");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) (short) 100, nodeKeyConstraintDescriptor5, (long) (short) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1004() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1004");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl1 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl1.start();
    securityProviderAuthDisabledImpl1.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl1.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl1.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl1.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl8.authorize(
        idLookup9, "neo4j", abstractSecurityLog11);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl8.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl8.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject16 = securityContextEnterpriseImpl8.subject();
    authManager6.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl8);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler18 = null;
    securityContextEnterpriseImpl8.assertCredentialsNotExpired(securityAuthorizationHandler18);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject20 = securityContextEnterpriseImpl8.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = securityContextEnterpriseImpl21.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl21.withMode(
        adminAccessMode23);
    java.lang.String str25 = securityContextEnterpriseImpl21.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = securityContextEnterpriseImpl21.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext27 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo26);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo30 = defaultLoginContext29.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext31 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo30);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext33 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode28, clientConnectionInfo30,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext34 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo30);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext35 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode36 = securityContext35.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo30, accessMode36, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode39 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext40 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode41 = securityContext40.mode();
    java.lang.String str42 = securityContext40.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode43 = securityContext40.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject44 = securityContext40.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext45 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo46 = defaultLoginContext45.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext47 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo46);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext48 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo46);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup50 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl49.authorize(
        idLookup50, "neo4j", abstractSecurityLog52);
    java.lang.String str54 = securityContextEnterpriseImpl53.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode55 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = securityContextEnterpriseImpl53.withMode(
        accessMode55);
    java.lang.String str57 = securityContextEnterpriseImpl53.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject58 = securityContextEnterpriseImpl53.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode59 = securityContextEnterpriseImpl53.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext60 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet62 = defaultLoginContext60.roeSet();
    java.util.Set<java.lang.String> strSet63 = defaultLoginContext60.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode39, authSubject44, clientConnectionInfo46, accessMode59, strSet63, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject20, clientConnectionInfo26, accessMode36, strSet63,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext68 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo26);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl1);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(authSubject16);
    org.junit.Assert.assertNotNull(authSubject20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNull(str25);
    org.junit.Assert.assertNotNull(clientConnectionInfo26);
    org.junit.Assert.assertNotNull(loginContext27);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(clientConnectionInfo30);
    org.junit.Assert.assertNotNull(loginContext31);
    org.junit.Assert.assertNotNull(securityContext33);
    org.junit.Assert.assertNotNull(defaultLoginContext34);
    org.junit.Assert.assertNotNull(securityContext35);
    org.junit.Assert.assertTrue("'" + accessMode36 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode36.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(securityContext40);
    org.junit.Assert.assertTrue("'" + accessMode41 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode41.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str42);
    org.junit.Assert.assertTrue("'" + accessMode43 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode43.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject44);
    org.junit.Assert.assertNotNull(defaultLoginContext45);
    org.junit.Assert.assertNotNull(clientConnectionInfo46);
    org.junit.Assert.assertNotNull(defaultLoginContext47);
    org.junit.Assert.assertNotNull(defaultLoginContext48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertNull(str54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertEquals("'" + str57 + "' != '" + "AUTH_DISABLED with FULL" + "'", str57,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject58);
    org.junit.Assert.assertTrue("'" + accessMode59 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode59.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext60);
    org.junit.Assert.assertNotNull(strSet62);
    org.junit.Assert.assertNotNull(strSet63);
    org.junit.Assert.assertNotNull(loginContext68);
  }

  @Test
  public void test1005() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1005");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long3 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long4 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
  }

  @Test
  public void test1006() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1006");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor10 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (byte) -1, uniquenessConstraintDescriptor8, 0L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1007() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1007");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 10, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) ' ', namedDatabaseId14);
  }

  @Test
  public void test1008() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1008");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl5 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl5.start();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl5.inClusterAuthManager();
    boolean boolean8 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl5);
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl5.inClusterAuthManager();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl5);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(authManager9);
  }

  @Test
  public void test1009() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1009");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config7 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock8 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning9 = null;
    org.neo4j.logging.LogProvider logProvider10 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold11 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config7, systemNanoClock8, logPruning9, logProvider10);
    java.lang.String str12 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock14 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning15 = null;
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold17 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config13, systemNanoClock14, logPruning15, logProvider16);
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "continuous" + "'", str6, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "continuous" + "'", str12, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold17);
  }

  @Test
  public void test1010() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1010");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 10, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId21);
    java.lang.Class<?> wildcardClass23 = pageCacheLoadingWatcherDefaultImpl1.getClass();
    org.junit.Assert.assertNotNull(wildcardClass23);
  }

  @Test
  public void test1011() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1011");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    boolean boolean12 = securityContextEnterpriseImpl0.allowExecuteAdminProcedure((int) (short) 1);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = securityContextEnterpriseImpl0.mode();
    java.lang.String str14 = securityContextEnterpriseImpl0.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + accessMode13 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode13.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AUTH_DISABLED with FULL" + "'", str14,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test1012() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1012");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor5 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor5,
          nodeCursor6, propertyCursor7, labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1013() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1013");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId14);
  }

  @Test
  public void test1014() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1014");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    long long12 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    long long13 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    java.util.function.Consumer<java.lang.String> strConsumer16 = null;
    try {
      boolean boolean17 = checkPointThresholdVolumetricPolicy8.isCheckPointingNeeded((long) '4',
          10000L, strConsumer16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
  }

  @Test
  public void test1015() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1015");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler10 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler10);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl0.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    java.util.Set<java.lang.String> strSet16 = securityContextEnterpriseImpl15.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(strSet16);
  }

  @Test
  public void test1016() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1016");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext5.connectionInfo();
    java.util.Set<java.lang.String> strSet7 = defaultLoginContext5.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo3, accessMode4, strSet7, "volumetric");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode10);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl9;
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
  }

  @Test
  public void test1017() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1017");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test1018() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1018");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor6,
          propertyCursor7, labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1019() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1019");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl0.authorize(
        idLookup8, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = securityContextEnterpriseImpl11.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode13 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext14 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = securityContext14.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler16 = null;
    securityContext14.assertCredentialsNotExpired(securityAuthorizationHandler16);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContext14.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "neo4j", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl19.withMode(
        accessMode24);
    boolean boolean27 = securityContextEnterpriseImpl25.allowExecuteAdminProcedure(0);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl25;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo29 = securityContextEnterpriseImpl25.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup31 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl30.authorize(
        idLookup31, "neo4j", abstractSecurityLog33);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode35 = securityContextEnterpriseImpl30.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode36 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject38 = defaultLoginContext37.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo39 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext41 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo42 = defaultLoginContext41.connectionInfo();
    java.util.Set<java.lang.String> strSet43 = defaultLoginContext41.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode36, authSubject38, clientConnectionInfo39, accessMode40, strSet43,
        "volumetric");
    java.util.Set<java.lang.String> strSet46 = securityContextEnterpriseImpl45.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode13, authSubject18, clientConnectionInfo29, accessMode35, strSet46,
        "pagecachewarmer");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext50 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode12, clientConnectionInfo29, "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext51 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + accessMode12 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode12.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContext14);
    org.junit.Assert.assertNotNull(clientConnectionInfo15);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertTrue("'" + accessMode35 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode35.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext37);
    org.junit.Assert.assertNotNull(authSubject38);
    org.junit.Assert.assertNotNull(defaultLoginContext41);
    org.junit.Assert.assertNotNull(clientConnectionInfo42);
    org.junit.Assert.assertNotNull(strSet43);
    org.junit.Assert.assertNotNull(strSet46);
    org.junit.Assert.assertNotNull(securityContext50);
    org.junit.Assert.assertNotNull(loginContext51);
  }

  @Test
  public void test1020() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1020");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    org.neo4j.kernel.api.security.AuthManager authManager1 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager1);
    org.junit.Assert.assertNotNull(authManager2);
  }

  @Test
  public void test1021() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1021");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor5 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor5, relationshipScanCursor6, propertyCursor7,
          relationTypeSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1022() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1022");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (-1), namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) -1, namedDatabaseId9);
  }

  @Test
  public void test1023() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1023");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config3 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock4 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning5 = null;
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold7 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config3, systemNanoClock4, logPruning5, logProvider6);
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock14 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning15 = null;
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold17 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config13, systemNanoClock14, logPruning15, logProvider16);
    org.neo4j.configuration.Config config18 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock19 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning20 = null;
    org.neo4j.logging.LogProvider logProvider21 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold22 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config18, systemNanoClock19, logPruning20, logProvider21);
    java.lang.String str23 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config24 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock25 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning26 = null;
    org.neo4j.logging.LogProvider logProvider27 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold28 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config24, systemNanoClock25, logPruning26, logProvider27);
    org.neo4j.configuration.Config config29 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock30 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning31 = null;
    org.neo4j.logging.LogProvider logProvider32 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold33 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config29, systemNanoClock30, logPruning31, logProvider32);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold7);
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertNotNull(checkPointThreshold17);
    org.junit.Assert.assertNotNull(checkPointThreshold22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "volumetric" + "'", str23, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold28);
    org.junit.Assert.assertNotNull(checkPointThreshold33);
  }

  @Test
  public void test1024() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1024");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1025() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1025");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog7);
    java.util.Set<java.lang.String> strSet9 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = defaultLoginContext0.authorize(
        idLookup10, "volumetric", abstractSecurityLog12);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(strSet9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
  }

  @Test
  public void test1026() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1026");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long10 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    java.util.function.Consumer<java.lang.String> strConsumer14 = null;
    try {
      boolean boolean15 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(0L,
          (long) 6362, strConsumer14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
  }

  @Test
  public void test1027() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1027");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test1028() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1028");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) 2, nodeKeyConstraintDescriptor7, (long) 2);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1029() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1029");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource17 = null;
    boolean boolean18 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource17);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl4.authorize(
        idLookup19, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
  }

  @Test
  public void test1030() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1030");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = securityContextEnterpriseImpl9.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl9.authorize(
        idLookup11, "localhost", abstractSecurityLog13);
    authManager7.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl14);
    authManager7.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(authSubject10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
  }

  @Test
  public void test1031() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1031");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    long long7 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) ' ');
    checkPointThresholdVolumetricPolicy1.initialize((long) 100);
    long long12 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
  }

  @Test
  public void test1032() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1032");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager9);
    org.junit.Assert.assertNotNull(authManager10);
    org.junit.Assert.assertNotNull(authManager12);
  }

  @Test
  public void test1033() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1033");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext3 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo4 = defaultLoginContext3.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext5 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo4);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext7 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode2, clientConnectionInfo4,
        "Node Key constraint requires Neo4j Enterprise Edition");
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContext7.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext10 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = securityContext10.mode();
    java.lang.String str12 = securityContext10.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = securityContext10.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject14 = securityContext10.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = defaultLoginContext15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext17 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext18 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "neo4j", abstractSecurityLog22);
    java.lang.String str24 = securityContextEnterpriseImpl23.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl23.withMode(
        accessMode25);
    java.lang.String str27 = securityContextEnterpriseImpl23.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject28 = securityContextEnterpriseImpl23.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = securityContextEnterpriseImpl23.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext30 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet32 = defaultLoginContext30.roeSet();
    java.util.Set<java.lang.String> strSet33 = defaultLoginContext30.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode9, authSubject14, clientConnectionInfo16, accessMode29, strSet33, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo38 = defaultLoginContext37.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext39 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo38);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup41 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl40.authorize(
        idLookup41, "neo4j", abstractSecurityLog43);
    java.lang.String str45 = securityContextEnterpriseImpl44.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl44.withMode(
        accessMode46);
    java.lang.String str48 = securityContextEnterpriseImpl44.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource49 = null;
    boolean boolean50 = securityContextEnterpriseImpl44.allowsAdminAction(adminActionOnResource49);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode51 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl44.withMode(
        adminAccessMode51);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode53 = securityContextEnterpriseImpl44.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo38, accessMode53, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl57 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo16, accessMode53,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup59 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog61 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = securityContextEnterpriseImpl58.authorize(
        idLookup59, "neo4j", abstractSecurityLog61);
    java.lang.String str63 = securityContextEnterpriseImpl62.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode64 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = securityContextEnterpriseImpl62.withMode(
        accessMode64);
    java.lang.String str66 = securityContextEnterpriseImpl62.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject67 = securityContextEnterpriseImpl62.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode68 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = securityContextEnterpriseImpl62.withMode(
        adminAccessMode68);
    boolean boolean71 = securityContextEnterpriseImpl69.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode72 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = securityContextEnterpriseImpl69.withMode(
        adminAccessMode72);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode74 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl75 = securityContextEnterpriseImpl73.withMode(
        adminAccessMode74);
    java.util.Set<java.lang.String> strSet76 = securityContextEnterpriseImpl73.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl78 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject1, clientConnectionInfo8, accessMode53, strSet76,
        "volumetric");
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource79 = null;
    try {
      boolean boolean80 = securityContextEnterpriseImpl78.allowsAdminAction(
          adminActionOnResource79);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultLoginContext3);
    org.junit.Assert.assertNotNull(clientConnectionInfo4);
    org.junit.Assert.assertNotNull(loginContext5);
    org.junit.Assert.assertNotNull(securityContext7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertNotNull(securityContext10);
    org.junit.Assert.assertTrue("'" + accessMode11 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode11.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertTrue("'" + accessMode13 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode13.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNotNull(defaultLoginContext17);
    org.junit.Assert.assertNotNull(defaultLoginContext18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AUTH_DISABLED with FULL" + "'", str27,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject28);
    org.junit.Assert.assertTrue("'" + accessMode29 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode29.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext30);
    org.junit.Assert.assertNotNull(strSet32);
    org.junit.Assert.assertNotNull(strSet33);
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(defaultLoginContext37);
    org.junit.Assert.assertNotNull(clientConnectionInfo38);
    org.junit.Assert.assertNotNull(loginContext39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertNull(str45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AUTH_DISABLED with FULL" + "'", str48,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertTrue("'" + accessMode53 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode53.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNull(str63);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
    org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AUTH_DISABLED with FULL" + "'", str66,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl75);
    org.junit.Assert.assertNotNull(strSet76);
  }

  @Test
  public void test1034() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1034");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    java.lang.String str11 = securityContextEnterpriseImpl0.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNull(str11);
  }

  @Test
  public void test1035() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1035");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 6362, constraintDescriptor7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1036() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1036");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.lang.String str8 = enterpriseTracerFactory0.getName();
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "verbose" + "'", str8, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
  }

  @Test
  public void test1037() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1037");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 0, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId11);
  }

  @Test
  public void test1038() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1038");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.lock.LockTracer lockTracer10 = enterpriseTracerFactory0.createLockTracer(clock9);
    java.lang.String str11 = enterpriseTracerFactory0.getName();
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(lockTracer10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "verbose" + "'", str11, "verbose");
  }

  @Test
  public void test1039() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1039");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    java.util.Set<java.lang.String> strSet24 = defaultLoginContext19.roeSet();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(strSet24);
  }

  @Test
  public void test1040() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1040");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl0.authorize(
        idLookup5, "", abstractSecurityLog7);
    java.lang.String str9 = securityContextEnterpriseImpl8.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AUTH_DISABLED with FULL" + "'", str9,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test1041() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1041");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.lock.LockTracer lockTracer6 = enterpriseTracerFactory0.createLockTracer(clock5);
    org.neo4j.monitoring.Monitors monitors7 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.logging.Log log10 = null;
    org.neo4j.configuration.Config config11 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer12 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors7, jobScheduler8, systemNanoClock9, log10, config11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(lockTracer6);
  }

  @Test
  public void test1042() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1042");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode7);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl8.authorize(
        idLookup9, "verbose", abstractSecurityLog11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
  }

  @Test
  public void test1043() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1043");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext3 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo4 = defaultLoginContext3.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext5 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo4);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext7 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode2, clientConnectionInfo4,
        "Node Key constraint requires Neo4j Enterprise Edition");
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContext7.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext10 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = securityContext10.mode();
    java.lang.String str12 = securityContext10.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = securityContext10.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject14 = securityContext10.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = defaultLoginContext15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext17 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext18 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "neo4j", abstractSecurityLog22);
    java.lang.String str24 = securityContextEnterpriseImpl23.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl23.withMode(
        accessMode25);
    java.lang.String str27 = securityContextEnterpriseImpl23.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject28 = securityContextEnterpriseImpl23.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = securityContextEnterpriseImpl23.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext30 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet32 = defaultLoginContext30.roeSet();
    java.util.Set<java.lang.String> strSet33 = defaultLoginContext30.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode9, authSubject14, clientConnectionInfo16, accessMode29, strSet33, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo38 = defaultLoginContext37.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext39 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo38);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup41 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl40.authorize(
        idLookup41, "neo4j", abstractSecurityLog43);
    java.lang.String str45 = securityContextEnterpriseImpl44.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl44.withMode(
        accessMode46);
    java.lang.String str48 = securityContextEnterpriseImpl44.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource49 = null;
    boolean boolean50 = securityContextEnterpriseImpl44.allowsAdminAction(adminActionOnResource49);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode51 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl44.withMode(
        adminAccessMode51);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode53 = securityContextEnterpriseImpl44.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo38, accessMode53, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl57 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo16, accessMode53,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup59 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog61 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = securityContextEnterpriseImpl58.authorize(
        idLookup59, "neo4j", abstractSecurityLog61);
    java.lang.String str63 = securityContextEnterpriseImpl62.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode64 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = securityContextEnterpriseImpl62.withMode(
        accessMode64);
    java.lang.String str66 = securityContextEnterpriseImpl62.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject67 = securityContextEnterpriseImpl62.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode68 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = securityContextEnterpriseImpl62.withMode(
        adminAccessMode68);
    boolean boolean71 = securityContextEnterpriseImpl69.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode72 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = securityContextEnterpriseImpl69.withMode(
        adminAccessMode72);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode74 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl75 = securityContextEnterpriseImpl73.withMode(
        adminAccessMode74);
    java.util.Set<java.lang.String> strSet76 = securityContextEnterpriseImpl73.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl78 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject1, clientConnectionInfo8, accessMode53, strSet76,
        "volumetric");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext79 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo8);
    org.junit.Assert.assertNotNull(defaultLoginContext3);
    org.junit.Assert.assertNotNull(clientConnectionInfo4);
    org.junit.Assert.assertNotNull(loginContext5);
    org.junit.Assert.assertNotNull(securityContext7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertNotNull(securityContext10);
    org.junit.Assert.assertTrue("'" + accessMode11 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode11.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertTrue("'" + accessMode13 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode13.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNotNull(defaultLoginContext17);
    org.junit.Assert.assertNotNull(defaultLoginContext18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AUTH_DISABLED with FULL" + "'", str27,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject28);
    org.junit.Assert.assertTrue("'" + accessMode29 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode29.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext30);
    org.junit.Assert.assertNotNull(strSet32);
    org.junit.Assert.assertNotNull(strSet33);
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(defaultLoginContext37);
    org.junit.Assert.assertNotNull(clientConnectionInfo38);
    org.junit.Assert.assertNotNull(loginContext39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertNull(str45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AUTH_DISABLED with FULL" + "'", str48,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertTrue("'" + accessMode53 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode53.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNull(str63);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
    org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AUTH_DISABLED with FULL" + "'", str66,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl75);
    org.junit.Assert.assertNotNull(strSet76);
    org.junit.Assert.assertNotNull(defaultLoginContext79);
  }

  @Test
  public void test1044() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1044");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl4.subject();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl12 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl12.start();
    securityProviderAuthDisabledImpl12.stop();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl12.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager16 = securityProviderAuthDisabledImpl12.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager16.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl18);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl21.authorize(
        idLookup22, "neo4j", abstractSecurityLog24);
    authManager16.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl25);
    java.lang.String str27 = securityContextEnterpriseImpl25.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = securityContextEnterpriseImpl25.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl4.withMode(
        accessMode28);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl12);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AUTH_DISABLED with FULL" + "'", str27,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode28 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode28.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertTrue("'" + accessMode30 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode30.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
  }

  @Test
  public void test1045() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1045");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl4.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = securityContextEnterpriseImpl4.connectionInfo();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(clientConnectionInfo15);
  }

  @Test
  public void test1046() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1046");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl1 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl1.authorize(
        idLookup2, "neo4j", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl1.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl1.authorize(
        idLookup8, "", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.authorize(
        idLookup12, "AUTH_DISABLED with FULL", abstractSecurityLog14);
    java.lang.String str16 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode17);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode19);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject21 = securityContextEnterpriseImpl20.subject();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext22 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = securityContext22.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext24 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo25 = defaultLoginContext24.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext26 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo25);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup28 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl27.authorize(
        idLookup28, "neo4j", abstractSecurityLog30);
    java.lang.String str32 = securityContextEnterpriseImpl31.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl31.withMode(
        accessMode33);
    java.lang.String str35 = securityContextEnterpriseImpl31.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource36 = null;
    boolean boolean37 = securityContextEnterpriseImpl31.allowsAdminAction(adminActionOnResource36);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl31.withMode(
        adminAccessMode38);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = securityContextEnterpriseImpl31.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo25, accessMode40, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl43 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl43.start();
    org.neo4j.kernel.api.security.AuthManager authManager45 = securityProviderAuthDisabledImpl43.loopbackAuthManager();
    securityProviderAuthDisabledImpl43.stop();
    org.neo4j.kernel.api.security.AuthManager authManager47 = securityProviderAuthDisabledImpl43.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager47.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl49);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup53 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog55 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = securityContextEnterpriseImpl52.authorize(
        idLookup53, "neo4j", abstractSecurityLog55);
    java.lang.String str57 = securityContextEnterpriseImpl56.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode58 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl56.withMode(
        accessMode58);
    java.lang.String str60 = securityContextEnterpriseImpl56.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource61 = null;
    boolean boolean62 = securityContextEnterpriseImpl56.allowsAdminAction(adminActionOnResource61);
    authManager47.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl56);
    java.lang.String str64 = securityContextEnterpriseImpl56.database();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext65 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode66 = securityContext65.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = securityContextEnterpriseImpl56.withMode(
        accessMode66);
    java.util.Set<java.lang.String> strSet68 = securityContextEnterpriseImpl67.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl70 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject21, clientConnectionInfo23, accessMode40, strSet68,
        "continuous");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AUTH_DISABLED with FULL" + "'", str16,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(authSubject21);
    org.junit.Assert.assertNotNull(securityContext22);
    org.junit.Assert.assertNotNull(clientConnectionInfo23);
    org.junit.Assert.assertNotNull(defaultLoginContext24);
    org.junit.Assert.assertNotNull(clientConnectionInfo25);
    org.junit.Assert.assertNotNull(loginContext26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNull(str32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AUTH_DISABLED with FULL" + "'", str35,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertTrue("'" + accessMode40 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode40.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl43);
    org.junit.Assert.assertNotNull(authManager45);
    org.junit.Assert.assertNotNull(authManager47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNull(str57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AUTH_DISABLED with FULL" + "'", str60,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    org.junit.Assert.assertNull(str64);
    org.junit.Assert.assertNotNull(securityContext65);
    org.junit.Assert.assertTrue("'" + accessMode66 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode66.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl67);
    org.junit.Assert.assertNotNull(strSet68);
  }

  @Test
  public void test1047() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1047");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.claauch();
    defaultAuthManager0.init();
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1048() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1048");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.Object obj7 = null;
    boolean boolean8 = cachePopulatorExtensionFactory0.equals(obj7);
    java.lang.String str9 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl10 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int11 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int12 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str13 = constraintSemanticsEnterpriseImpl10.getName();
    int int14 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int15 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str16 = constraintSemanticsEnterpriseImpl10.getName();
    boolean boolean17 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) constraintSemanticsEnterpriseImpl10);
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor18 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor19 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor20 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor21 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup22 = null;
    try {
      constraintSemanticsEnterpriseImpl10.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor18, relationshipScanCursor19, propertyCursor20,
          relationTypeSchemaDescriptor21, tokenNameLookup22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterpriseConstraints" + "'", str13,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "enterpriseConstraints" + "'", str16,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
  }

  @Test
  public void test1049() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1049");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
  }

  @Test
  public void test1050() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1050");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = securityContextEnterpriseImpl4.mode();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertTrue(
        "'" + accessMode5 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode5.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1051() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1051");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl14.authorize(
        idLookup15, "neo4j", abstractSecurityLog17);
    java.lang.String str19 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl18.withMode(
        accessMode20);
    java.lang.String str22 = securityContextEnterpriseImpl18.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject23 = securityContextEnterpriseImpl18.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl18.withMode(
        adminAccessMode24);
    boolean boolean27 = securityContextEnterpriseImpl25.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl25.withMode(
        adminAccessMode28);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl29.withMode(
        adminAccessMode30);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo32 = securityContextEnterpriseImpl29.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl33 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl33.start();
    org.neo4j.kernel.api.security.AuthManager authManager35 = securityProviderAuthDisabledImpl33.loopbackAuthManager();
    securityProviderAuthDisabledImpl33.stop();
    org.neo4j.kernel.api.security.AuthManager authManager37 = securityProviderAuthDisabledImpl33.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager37.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl39);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup43 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog45 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = securityContextEnterpriseImpl42.authorize(
        idLookup43, "neo4j", abstractSecurityLog45);
    java.lang.String str47 = securityContextEnterpriseImpl46.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl46.withMode(
        accessMode48);
    java.lang.String str50 = securityContextEnterpriseImpl46.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource51 = null;
    boolean boolean52 = securityContextEnterpriseImpl46.allowsAdminAction(adminActionOnResource51);
    authManager37.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl46);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = securityContextEnterpriseImpl46.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo32, accessMode54, "neo4j");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl57 = securityContextEnterpriseImpl4.withMode(
        accessMode54);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode58 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl57.withMode(
        accessMode58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNull(str19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(clientConnectionInfo32);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl33);
    org.junit.Assert.assertNotNull(authManager35);
    org.junit.Assert.assertNotNull(authManager37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNull(str47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AUTH_DISABLED with FULL" + "'", str50,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertTrue("'" + accessMode54 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode54.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
  }

  @Test
  public void test1052() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1052");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) ' ', namedDatabaseId14);
  }

  @Test
  public void test1053() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1053");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10L, namedDatabaseId4);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(0L, namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 10, namedDatabaseId10);
  }

  @Test
  public void test1054() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1054");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.Object obj6 = null;
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(obj6);
    java.lang.String str8 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str9 = cachePopulatorExtensionFactory0.getName();
    java.lang.Class<?> wildcardClass10 = cachePopulatorExtensionFactory0.getClass();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pagecachewarmer" + "'", str8,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(wildcardClass10);
  }

  @Test
  public void test1055() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1055");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) ' ', constraintDescriptor7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1056() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1056");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    java.lang.String str17 = securityContextEnterpriseImpl4.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNull(str17);
  }

  @Test
  public void test1057() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1057");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.start();
    defaultAuthManager0.stop();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl7 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl7.start();
    securityProviderAuthDisabledImpl7.start();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl7.inClusterAuthManager();
    securityProviderAuthDisabledImpl7.stop();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl7.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl7.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl7.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    java.lang.String str21 = securityContextEnterpriseImpl20.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl20.withMode(
        adminAccessMode22);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo24 = securityContextEnterpriseImpl23.connectionInfo();
    authManager14.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl23);
    defaultAuthManager0.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl23);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo27 = securityContextEnterpriseImpl23.connectionInfo();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl7);
    org.junit.Assert.assertNotNull(authManager10);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(clientConnectionInfo24);
    org.junit.Assert.assertNotNull(clientConnectionInfo27);
  }

  @Test
  public void test1058() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1058");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    authManager4.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str21 = securityContextEnterpriseImpl13.database();
    java.lang.String str22 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = securityContextEnterpriseImpl13.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode24);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup26 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl13.authorize(
        idLookup26, "", abstractSecurityLog28);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode23 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode23.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
  }

  @Test
  public void test1059() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1059");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl4.authorize(
        idLookup6, "localhost", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler11 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler11);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode13 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext14 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = securityContext14.mode();
    java.lang.String str16 = securityContext14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = securityContext14.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContext14.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo20 = defaultLoginContext19.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo20);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext22 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo20);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl23.authorize(
        idLookup24, "neo4j", abstractSecurityLog26);
    java.lang.String str28 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl27.withMode(
        accessMode29);
    java.lang.String str31 = securityContextEnterpriseImpl27.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject32 = securityContextEnterpriseImpl27.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode33 = securityContextEnterpriseImpl27.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext34 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet36 = defaultLoginContext34.roeSet();
    java.util.Set<java.lang.String> strSet37 = defaultLoginContext34.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode13, authSubject18, clientConnectionInfo20, accessMode33, strSet37, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl4.withMode(
        accessMode33);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl41 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl41.start();
    securityProviderAuthDisabledImpl41.stop();
    org.neo4j.kernel.api.security.AuthManager authManager44 = securityProviderAuthDisabledImpl41.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager45 = securityProviderAuthDisabledImpl41.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager45.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl47);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl50 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup51 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog53 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl54 = securityContextEnterpriseImpl50.authorize(
        idLookup51, "neo4j", abstractSecurityLog53);
    authManager45.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl54);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler56 = null;
    securityContextEnterpriseImpl54.assertCredentialsNotExpired(securityAuthorizationHandler56);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource58 = null;
    boolean boolean59 = securityContextEnterpriseImpl54.allowsAdminAction(adminActionOnResource58);
    boolean boolean61 = securityContextEnterpriseImpl54.allowExecuteAdminProcedure((int) (short) 1);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo62 = securityContextEnterpriseImpl54.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext64 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode33, clientConnectionInfo62, "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AUTH_DISABLED with FULL" + "'", str10,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContext14);
    org.junit.Assert.assertTrue("'" + accessMode15 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode15.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertTrue("'" + accessMode17 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode17.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(clientConnectionInfo20);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(defaultLoginContext22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNull(str28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AUTH_DISABLED with FULL" + "'", str31,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject32);
    org.junit.Assert.assertTrue("'" + accessMode33 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode33.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext34);
    org.junit.Assert.assertNotNull(strSet36);
    org.junit.Assert.assertNotNull(strSet37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl41);
    org.junit.Assert.assertNotNull(authManager44);
    org.junit.Assert.assertNotNull(authManager45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl54);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo62);
    org.junit.Assert.assertNotNull(securityContext64);
  }

  @Test
  public void test1060() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1060");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = defaultLoginContext0.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(strSet3);
  }

  @Test
  public void test1061() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1061");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 10, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId23);
  }

  @Test
  public void test1062() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1062");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
  }

  @Test
  public void test1063() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1063");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 10, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 'a', namedDatabaseId21);
  }

  @Test
  public void test1064() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1064");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = defaultLoginContext7.authorize(
        idLookup8, "user '' with FULL", abstractSecurityLog10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
  }

  @Test
  public void test1065() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1065");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((-1L), namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 0, namedDatabaseId21);
  }

  @Test
  public void test1066() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1066");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) ' ', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId13);
  }

  @Test
  public void test1067() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1067");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (byte) -1, namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (byte) 0, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId9);
  }

  @Test
  public void test1068() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1068");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl17.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = securityContextEnterpriseImpl17.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup21 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl20.authorize(
        idLookup21, "neo4j", abstractSecurityLog23);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl20.withMode(
        accessMode25);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup27 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl20.authorize(
        idLookup27, "", abstractSecurityLog29);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup31 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl30.authorize(
        idLookup31, "AUTH_DISABLED with FULL", abstractSecurityLog33);
    java.lang.String str35 = securityContextEnterpriseImpl30.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode36 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl30.withMode(
        adminAccessMode36);
    java.lang.String str38 = securityContextEnterpriseImpl37.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContextEnterpriseImpl37.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext41 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo42 = defaultLoginContext41.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext43 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo42);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext45 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode40, clientConnectionInfo42,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext46 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo42);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext48 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode39, clientConnectionInfo42, "neo4j");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext50 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode19, clientConnectionInfo42, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl51 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup52 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog54 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = securityContextEnterpriseImpl51.authorize(
        idLookup52, "neo4j", abstractSecurityLog54);
    java.lang.String str56 = securityContextEnterpriseImpl55.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode57 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = securityContextEnterpriseImpl55.withMode(
        accessMode57);
    java.lang.String str59 = securityContextEnterpriseImpl55.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject60 = securityContextEnterpriseImpl55.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode61 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = securityContextEnterpriseImpl55.withMode(
        adminAccessMode61);
    boolean boolean64 = securityContextEnterpriseImpl62.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode65 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = securityContextEnterpriseImpl62.withMode(
        adminAccessMode65);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo67 = securityContextEnterpriseImpl66.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext69 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode19, clientConnectionInfo67, "neo4j");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode70 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext71 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode72 = securityContext71.mode();
    java.lang.String str73 = securityContext71.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode74 = securityContext71.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject75 = securityContext71.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext76 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo77 = defaultLoginContext76.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext78 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo77);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext79 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo77);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl80 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup81 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog83 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl84 = securityContextEnterpriseImpl80.authorize(
        idLookup81, "neo4j", abstractSecurityLog83);
    java.lang.String str85 = securityContextEnterpriseImpl84.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode86 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl87 = securityContextEnterpriseImpl84.withMode(
        accessMode86);
    java.lang.String str88 = securityContextEnterpriseImpl84.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject89 = securityContextEnterpriseImpl84.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode90 = securityContextEnterpriseImpl84.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext91 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet93 = defaultLoginContext91.roeSet();
    java.util.Set<java.lang.String> strSet94 = defaultLoginContext91.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl96 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode70, authSubject75, clientConnectionInfo77, accessMode90, strSet94, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl98 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo67, accessMode90, "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNull(str18);
    org.junit.Assert.assertTrue("'" + accessMode19 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode19.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AUTH_DISABLED with FULL" + "'", str35,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNull(str38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext41);
    org.junit.Assert.assertNotNull(clientConnectionInfo42);
    org.junit.Assert.assertNotNull(loginContext43);
    org.junit.Assert.assertNotNull(securityContext45);
    org.junit.Assert.assertNotNull(defaultLoginContext46);
    org.junit.Assert.assertNotNull(securityContext48);
    org.junit.Assert.assertNotNull(securityContext50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl51);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertNull(str56);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AUTH_DISABLED with FULL" + "'", str59,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertNotNull(clientConnectionInfo67);
    org.junit.Assert.assertNotNull(securityContext69);
    org.junit.Assert.assertNotNull(securityContext71);
    org.junit.Assert.assertTrue("'" + accessMode72 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode72.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str73);
    org.junit.Assert.assertTrue("'" + accessMode74 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode74.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject75);
    org.junit.Assert.assertNotNull(defaultLoginContext76);
    org.junit.Assert.assertNotNull(clientConnectionInfo77);
    org.junit.Assert.assertNotNull(defaultLoginContext78);
    org.junit.Assert.assertNotNull(defaultLoginContext79);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl80);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl84);
    org.junit.Assert.assertNull(str85);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl87);
    org.junit.Assert.assertEquals("'" + str88 + "' != '" + "AUTH_DISABLED with FULL" + "'", str88,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject89);
    org.junit.Assert.assertTrue("'" + accessMode90 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode90.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext91);
    org.junit.Assert.assertNotNull(strSet93);
    org.junit.Assert.assertNotNull(strSet94);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl98);
  }

  @Test
  public void test1069() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1069");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager9);
    org.junit.Assert.assertNotNull(authManager10);
  }

  @Test
  public void test1070() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1070");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '4', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
  }

  @Test
  public void test1071() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1071");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 0, namedDatabaseId11);
    java.lang.Class<?> wildcardClass13 = pageCacheLoadingWatcherDefaultImpl1.getClass();
    org.junit.Assert.assertNotNull(wildcardClass13);
  }

  @Test
  public void test1072() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1072");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.lang.String str8 = enterpriseTracerFactory0.getName();
    java.time.Clock clock9 = null;
    org.neo4j.lock.LockTracer lockTracer10 = enterpriseTracerFactory0.createLockTracer(clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    java.time.Clock clock13 = null;
    org.neo4j.lock.LockTracer lockTracer14 = enterpriseTracerFactory0.createLockTracer(clock13);
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "verbose" + "'", str8, "verbose");
    org.junit.Assert.assertNotNull(lockTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
    org.junit.Assert.assertNotNull(lockTracer14);
  }

  @Test
  public void test1073() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1073");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) (short) 0, nodeKeyConstraintDescriptor7, (long) (short) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1074() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1074");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 'a', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(1L, namedDatabaseId17);
  }

  @Test
  public void test1075() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1075");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    java.time.Clock clock10 = null;
    org.neo4j.lock.LockTracer lockTracer11 = enterpriseTracerFactory0.createLockTracer(clock10);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer9);
    org.junit.Assert.assertNotNull(lockTracer11);
  }

  @Test
  public void test1076() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1076");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager3.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
  }

  @Test
  public void test1077() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1077");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(1L, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 10, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 0, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId14);
  }

  @Test
  public void test1078() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1078");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.storageengine.api.StorageReader storageReader4 = null;
    org.neo4j.internal.kernel.api.Read read5 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory6 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState7 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor8 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext9 = null;
    org.neo4j.memory.MemoryTracker memoryTracker10 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor11 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader4, read5, cursorFactory6, readableTransactionState7, txStateVisitor8,
          cursorContext9, memoryTracker10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1079() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1079");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = defaultLoginContext0.authorize(
        idLookup3, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog5);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
  }

  @Test
  public void test1080() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1080");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = defaultLoginContext7.authorize(
        idLookup8, ".cacheprof", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = securityContextEnterpriseImpl11.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject13 = securityContextEnterpriseImpl11.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + accessMode12 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode12.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject13);
  }

  @Test
  public void test1081() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1081");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (short) 100);
    long long10 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
  }

  @Test
  public void test1082() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1082");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContextEnterpriseImpl17.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject21 = defaultLoginContext20.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup23 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl22.authorize(
        idLookup23, "neo4j", abstractSecurityLog25);
    java.lang.String str27 = securityContextEnterpriseImpl26.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl26.withMode(
        accessMode28);
    java.lang.String str30 = securityContextEnterpriseImpl26.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource31 = null;
    boolean boolean32 = securityContextEnterpriseImpl26.allowsAdminAction(adminActionOnResource31);
    java.lang.String str33 = securityContextEnterpriseImpl26.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl26;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl26;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo36 = securityContextEnterpriseImpl26.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup38 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl37.authorize(
        idLookup38, "neo4j", abstractSecurityLog40);
    java.lang.String str42 = securityContextEnterpriseImpl37.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource43 = null;
    boolean boolean44 = securityContextEnterpriseImpl37.allowsAdminAction(adminActionOnResource43);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup45 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog47 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = securityContextEnterpriseImpl37.authorize(
        idLookup45, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog47);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode49 = securityContextEnterpriseImpl48.mode();
    java.lang.String[] strArray62 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet63 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean64 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet63, strArray62);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode19, authSubject21, clientConnectionInfo36, accessMode49,
        (java.util.Set<java.lang.String>) strSet63, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = securityContextEnterpriseImpl17.withMode(
        accessMode49);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup68 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog70 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl71 = securityContextEnterpriseImpl17.authorize(
        idLookup68, "hi!", abstractSecurityLog70);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(authSubject21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNull(str27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertEquals("'" + str30 + "' != '" + "AUTH_DISABLED with FULL" + "'", str30,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AUTH_DISABLED with FULL" + "'", str33,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNull(str42);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertTrue("'" + accessMode49 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode49.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray62);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl71);
  }

  @Test
  public void test1083() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1083");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) 'a');
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 10);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
  }

  @Test
  public void test1084() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1084");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode18);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler20 = null;
    securityContextEnterpriseImpl10.assertCredentialsNotExpired(securityAuthorizationHandler20);
    boolean boolean23 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure(
        (int) (short) -1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
  }

  @Test
  public void test1085() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1085");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId16);
  }

  @Test
  public void test1086() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1086");
    }
    org.neo4j.kernel.api.security.AuthManager authManager0 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    authManager0.start();
    org.junit.Assert.assertNotNull(authManager0);
  }

  @Test
  public void test1087() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1087");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) (short) 1, constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1088() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1088");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    java.util.Set<java.lang.String> strSet6 = securityContextEnterpriseImpl5.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = securityContextEnterpriseImpl5.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode8 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl9 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl9.start();
    securityProviderAuthDisabledImpl9.stop();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl9.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl9.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl9.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl16.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl16.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject24 = securityContextEnterpriseImpl16.subject();
    authManager14.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl16);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject26 = securityContextEnterpriseImpl16.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = defaultLoginContext27.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo28);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext30 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo28);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext32 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo33 = defaultLoginContext32.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext34 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo33);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext36 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode31, clientConnectionInfo33,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo33);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext38 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContext38.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo33, accessMode39, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext43 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject44 = defaultLoginContext43.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo45 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext47 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo48 = defaultLoginContext47.connectionInfo();
    java.util.Set<java.lang.String> strSet49 = defaultLoginContext47.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl51 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode42, authSubject44, clientConnectionInfo45, accessMode46, strSet49,
        "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode8, authSubject26, clientConnectionInfo28, accessMode39, strSet49,
        "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo7, accessMode39, "volumetric");
    boolean boolean57 = securityContextEnterpriseImpl55.allowExecuteAdminProcedure(
        (int) (short) 10);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler58 = null;
    securityContextEnterpriseImpl55.assertCredentialsNotExpired(securityAuthorizationHandler58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(strSet6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl9);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNull(str23);
    org.junit.Assert.assertNotNull(authSubject24);
    org.junit.Assert.assertNotNull(authSubject26);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(clientConnectionInfo28);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(loginContext30);
    org.junit.Assert.assertNotNull(defaultLoginContext32);
    org.junit.Assert.assertNotNull(clientConnectionInfo33);
    org.junit.Assert.assertNotNull(loginContext34);
    org.junit.Assert.assertNotNull(securityContext36);
    org.junit.Assert.assertNotNull(defaultLoginContext37);
    org.junit.Assert.assertNotNull(securityContext38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(defaultLoginContext43);
    org.junit.Assert.assertNotNull(authSubject44);
    org.junit.Assert.assertNotNull(defaultLoginContext47);
    org.junit.Assert.assertNotNull(clientConnectionInfo48);
    org.junit.Assert.assertNotNull(strSet49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
  }

  @Test
  public void test1089() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1089");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor8 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor9 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor10 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor11 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup12 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor8,
          nodeCursor9, propertyCursor10, labelSchemaDescriptor11, tokenNameLookup12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
  }

  @Test
  public void test1090() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1090");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject3 = defaultLoginContext0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = defaultLoginContext0.authorize(
        idLookup4, "localhost", abstractSecurityLog6);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(authSubject3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
  }

  @Test
  public void test1091() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1091");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl4.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl10 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl10.start();
    securityProviderAuthDisabledImpl10.stop();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl10.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl10.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager14.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl16);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "neo4j", abstractSecurityLog22);
    authManager14.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl23);
    java.lang.String str25 = securityContextEnterpriseImpl23.description();
    boolean boolean27 = securityContextEnterpriseImpl23.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl23.withMode(
        adminAccessMode28);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext30 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo31 = defaultLoginContext30.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext32 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo31);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup34 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog36 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl33.authorize(
        idLookup34, "neo4j", abstractSecurityLog36);
    java.lang.String str38 = securityContextEnterpriseImpl37.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl37.withMode(
        accessMode39);
    java.lang.String str41 = securityContextEnterpriseImpl37.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource42 = null;
    boolean boolean43 = securityContextEnterpriseImpl37.allowsAdminAction(adminActionOnResource42);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode44 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = securityContextEnterpriseImpl37.withMode(
        adminAccessMode44);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = securityContextEnterpriseImpl37.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo31, accessMode46, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl29.withMode(
        accessMode46);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl51 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo9, accessMode46, "");
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler52 = null;
    securityContextEnterpriseImpl51.assertCredentialsNotExpired(securityAuthorizationHandler52);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl10);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AUTH_DISABLED with FULL" + "'", str25,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(defaultLoginContext30);
    org.junit.Assert.assertNotNull(clientConnectionInfo31);
    org.junit.Assert.assertNotNull(loginContext32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNull(str38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AUTH_DISABLED with FULL" + "'", str41,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertTrue("'" + accessMode46 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode46.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl51);
  }

  @Test
  public void test1092() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1092");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor6,
          propertyCursor7, labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1093() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1093");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler17 = null;
    securityContextEnterpriseImpl7.assertCredentialsNotExpired(securityAuthorizationHandler17);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl7.subject();
    java.lang.Class<?> wildcardClass20 = authSubject19.getClass();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertNotNull(wildcardClass20);
  }

  @Test
  public void test1094() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1094");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl4.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl4.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl4.loopbackAuthManager();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
  }

  @Test
  public void test1095() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1095");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.storageengine.api.StorageReader storageReader5 = null;
    org.neo4j.internal.kernel.api.Read read6 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory7 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState8 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor9 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext10 = null;
    org.neo4j.memory.MemoryTracker memoryTracker11 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor12 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader5, read6, cursorFactory7, readableTransactionState8, txStateVisitor9,
          cursorContext10, memoryTracker11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1096() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1096");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    authManager4.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str21 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext22 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = securityContext22.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl13.withMode(
        accessMode23);
    java.util.Set<java.lang.String> strSet25 = securityContextEnterpriseImpl24.roles();
    java.lang.Class<?> wildcardClass26 = securityContextEnterpriseImpl24.getClass();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(securityContext22);
    org.junit.Assert.assertTrue("'" + accessMode23 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode23.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(strSet25);
    org.junit.Assert.assertNotNull(wildcardClass26);
  }

  @Test
  public void test1097() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1097");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) 100, namedDatabaseId14);
  }

  @Test
  public void test1098() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1098");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler1 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler1);
    java.lang.String str3 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject4 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl0.authorize(
        idLookup5, "enterpriseConstraints", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl8.withMode(
        adminAccessMode9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertNotNull(authSubject4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
  }

  @Test
  public void test1099() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1099");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.stop();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject8 = securityContextEnterpriseImpl7.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl7.withMode(
        adminAccessMode9);
    java.lang.String str11 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo12 = securityContextEnterpriseImpl7.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext13 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo12);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext14 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo12);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode15 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext16 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = defaultLoginContext16.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = defaultLoginContext16.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext20 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = securityContext20.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext22 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet23 = defaultLoginContext22.roeSet();
    java.util.Set<java.lang.String> strSet25 = defaultLoginContext22.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode15, authSubject18, clientConnectionInfo19, accessMode21, strSet25,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl28.authorize(
        idLookup29, "neo4j", abstractSecurityLog31);
    java.lang.String str33 = securityContextEnterpriseImpl32.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl32.withMode(
        accessMode34);
    java.lang.String str36 = securityContextEnterpriseImpl32.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject37 = securityContextEnterpriseImpl32.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl32.withMode(
        adminAccessMode38);
    boolean boolean41 = securityContextEnterpriseImpl39.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl39.withMode(
        adminAccessMode42);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo44 = securityContextEnterpriseImpl39.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext46 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode21, clientConnectionInfo44, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo12, accessMode21, "enterpriseConstraints");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext49 = defaultAuthManager0.login(
          strMap6, clientConnectionInfo12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(authSubject8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNull(str11);
    org.junit.Assert.assertNotNull(clientConnectionInfo12);
    org.junit.Assert.assertNotNull(defaultLoginContext13);
    org.junit.Assert.assertNotNull(defaultLoginContext14);
    org.junit.Assert.assertNotNull(defaultLoginContext16);
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContext20);
    org.junit.Assert.assertTrue("'" + accessMode21 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode21.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext22);
    org.junit.Assert.assertNotNull(strSet23);
    org.junit.Assert.assertNotNull(strSet25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AUTH_DISABLED with FULL" + "'", str36,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertNotNull(clientConnectionInfo44);
    org.junit.Assert.assertNotNull(securityContext46);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
  }

  @Test
  public void test1100() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1100");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(1L, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId18);
  }

  @Test
  public void test1101() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1101");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock14 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning15 = null;
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold17 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config13, systemNanoClock14, logPruning15, logProvider16);
    java.lang.String str18 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config19 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock20 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning21 = null;
    org.neo4j.logging.LogProvider logProvider22 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold23 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config19, systemNanoClock20, logPruning21, logProvider22);
    org.neo4j.configuration.Config config24 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock25 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning26 = null;
    org.neo4j.logging.LogProvider logProvider27 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold28 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config24, systemNanoClock25, logPruning26, logProvider27);
    java.lang.String str29 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config30 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock31 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning32 = null;
    org.neo4j.logging.LogProvider logProvider33 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold34 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config30, systemNanoClock31, logPruning32, logProvider33);
    java.lang.String str35 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str36 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str37 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "continuous" + "'", str6, "continuous");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "continuous" + "'", str7, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertNotNull(checkPointThreshold17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "continuous" + "'", str18, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold23);
    org.junit.Assert.assertNotNull(checkPointThreshold28);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "continuous" + "'", str29, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold34);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "continuous" + "'", str35, "continuous");
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "continuous" + "'", str36, "continuous");
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "continuous" + "'", str37, "continuous");
  }

  @Test
  public void test1102() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1102");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) 6362);
    long long10 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    java.util.function.Consumer<java.lang.String> strConsumer14 = null;
    try {
      boolean boolean15 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) (-1),
          (long) ' ', strConsumer14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
  }

  @Test
  public void test1103() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1103");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
  }

  @Test
  public void test1104() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1104");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    long long12 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy8.checkPointHappened((long) 6362);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
  }

  @Test
  public void test1105() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1105");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl9.authorize(
        idLookup16, "", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    java.lang.String str24 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode25);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode27);
    authManager7.log("pagecachewarmer",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup32 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl31.authorize(
        idLookup32, "neo4j", abstractSecurityLog34);
    java.lang.String str36 = securityContextEnterpriseImpl35.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl35.withMode(
        accessMode37);
    java.lang.String str39 = securityContextEnterpriseImpl35.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource40 = null;
    boolean boolean41 = securityContextEnterpriseImpl35.allowsAdminAction(adminActionOnResource40);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl35.withMode(
        adminAccessMode42);
    boolean boolean45 = securityContextEnterpriseImpl35.allowExecuteAdminProcedure(
        (int) (byte) 100);
    java.util.Set<java.lang.String> strSet46 = securityContextEnterpriseImpl35.roles();
    authManager7.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl35);
    authManager7.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AUTH_DISABLED with FULL" + "'", str24,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNull(str36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AUTH_DISABLED with FULL" + "'", str39,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(strSet46);
  }

  @Test
  public void test1106() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1106");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 10, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 100, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 100, namedDatabaseId20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId22 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId22);
  }

  @Test
  public void test1107() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1107");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.lang.String str2 = enterpriseTracerFactory0.getName();
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "verbose" + "'", str2, "verbose");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
  }

  @Test
  public void test1108() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1108");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) (byte) 100, nodeKeyConstraintDescriptor6, (long) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1109() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1109");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    authManager4.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
  }

  @Test
  public void test1110() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1110");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor5 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor5,
          nodeCursor6, propertyCursor7, labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1111() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1111");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = defaultLoginContext15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext15.authorize(
        idLookup20, "hi!", abstractSecurityLog22);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl24 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl24.start();
    securityProviderAuthDisabledImpl24.start();
    org.neo4j.kernel.api.security.AuthManager authManager27 = securityProviderAuthDisabledImpl24.inClusterAuthManager();
    securityProviderAuthDisabledImpl24.stop();
    org.neo4j.kernel.api.security.AuthManager authManager29 = securityProviderAuthDisabledImpl24.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager30 = securityProviderAuthDisabledImpl24.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager31 = securityProviderAuthDisabledImpl24.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup34 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog36 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl33.authorize(
        idLookup34, "neo4j", abstractSecurityLog36);
    java.lang.String str38 = securityContextEnterpriseImpl37.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl37.withMode(
        accessMode39);
    java.lang.String str41 = securityContextEnterpriseImpl37.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject42 = securityContextEnterpriseImpl37.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl37.withMode(
        adminAccessMode43);
    boolean boolean46 = securityContextEnterpriseImpl44.allowExecuteAdminProcedure((int) (byte) 1);
    authManager31.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl44);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup49 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog51 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl48.authorize(
        idLookup49, "neo4j", abstractSecurityLog51);
    java.lang.String str53 = securityContextEnterpriseImpl52.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode54 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = securityContextEnterpriseImpl52.withMode(
        adminAccessMode54);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject56 = securityContextEnterpriseImpl55.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode57 = securityContextEnterpriseImpl55.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = securityContextEnterpriseImpl44.withMode(
        accessMode57);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl23.withMode(
        accessMode57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl24);
    org.junit.Assert.assertNotNull(authManager27);
    org.junit.Assert.assertNotNull(authManager29);
    org.junit.Assert.assertNotNull(authManager30);
    org.junit.Assert.assertNotNull(authManager31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNull(str38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AUTH_DISABLED with FULL" + "'", str41,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNull(str53);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertNotNull(authSubject56);
    org.junit.Assert.assertTrue("'" + accessMode57 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode57.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
  }

  @Test
  public void test1112() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1112");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl0.authorize(
        idLookup5, "pagecachewarmer", abstractSecurityLog7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
  }

  @Test
  public void test1113() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1113");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext1 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = securityContext1.mode();
    java.lang.String str3 = securityContext1.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = securityContext1.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject5 = securityContext1.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = defaultLoginContext6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext8 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext9 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl14.withMode(
        accessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl14.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl14.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet23 = defaultLoginContext21.roeSet();
    java.util.Set<java.lang.String> strSet24 = defaultLoginContext21.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject5, clientConnectionInfo7, accessMode20, strSet24, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup28 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl27.authorize(
        idLookup28, "neo4j", abstractSecurityLog30);
    java.lang.String str32 = securityContextEnterpriseImpl31.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl31.withMode(
        accessMode33);
    java.lang.String str35 = securityContextEnterpriseImpl31.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource36 = null;
    boolean boolean37 = securityContextEnterpriseImpl31.allowsAdminAction(adminActionOnResource36);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource38 = null;
    boolean boolean39 = securityContextEnterpriseImpl31.allowsAdminAction(adminActionOnResource38);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo40 = securityContextEnterpriseImpl31.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext42 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode20, clientConnectionInfo40, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext43 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo40);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup44 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = defaultLoginContext43.authorize(
        idLookup44, "enterpriseConstraints", abstractSecurityLog46);
    java.util.Set<java.lang.String> strSet48 = defaultLoginContext43.roeSet();
    org.junit.Assert.assertNotNull(securityContext1);
    org.junit.Assert.assertTrue(
        "'" + accessMode2 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode2.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertTrue(
        "'" + accessMode4 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode4.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(defaultLoginContext8);
    org.junit.Assert.assertNotNull(defaultLoginContext9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(strSet23);
    org.junit.Assert.assertNotNull(strSet24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNull(str32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AUTH_DISABLED with FULL" + "'", str35,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo40);
    org.junit.Assert.assertNotNull(securityContext42);
    org.junit.Assert.assertNotNull(defaultLoginContext43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(strSet48);
  }

  @Test
  public void test1114() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1114");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(1L, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(0L, namedDatabaseId21);
  }

  @Test
  public void test1115() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1115");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager9);
  }

  @Test
  public void test1116() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1116");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.util.Set<java.lang.String> strSet8 = securityContextEnterpriseImpl7.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl7.connectionInfo();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(strSet8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
  }

  @Test
  public void test1117() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1117");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str15 = securityContextEnterpriseImpl13.description();
    boolean boolean17 = securityContextEnterpriseImpl13.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode18);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = defaultLoginContext20.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext22 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo21);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl23.authorize(
        idLookup24, "neo4j", abstractSecurityLog26);
    java.lang.String str28 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl27.withMode(
        accessMode29);
    java.lang.String str31 = securityContextEnterpriseImpl27.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource32 = null;
    boolean boolean33 = securityContextEnterpriseImpl27.allowsAdminAction(adminActionOnResource32);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl27.withMode(
        adminAccessMode34);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode36 = securityContextEnterpriseImpl27.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo21, accessMode36, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl19.withMode(
        accessMode36);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup40 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl39.authorize(
        idLookup40, "", abstractSecurityLog42);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertNotNull(loginContext22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNull(str28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AUTH_DISABLED with FULL" + "'", str31,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertTrue("'" + accessMode36 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode36.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
  }

  @Test
  public void test1118() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1118");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor7, propertyCursor8, relationTypeSchemaDescriptor9,
          tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test1119() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1119");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
  }

  @Test
  public void test1120() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1120");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    java.util.function.Consumer<java.lang.String> strConsumer13 = null;
    try {
      boolean boolean14 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(
          (long) (short) 1, (long) (short) 0, strConsumer13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
  }

  @Test
  public void test1121() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1121");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(100L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
  }

  @Test
  public void test1122() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1122");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    java.lang.String str20 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode21);
    defaultAuthManager3.log("PageCacheProfileLoader",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    boolean boolean25 = securityContextEnterpriseImpl22.allowExecuteAdminProcedure((int) (byte) -1);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
  }

  @Test
  public void test1123() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1123");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext3 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker4 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle5 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext3, componentsChecker4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
  }

  @Test
  public void test1124() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1124");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    authManager3.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
  }

  @Test
  public void test1125() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1125");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId11);
  }

  @Test
  public void test1126() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1126");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 'a', namedDatabaseId18);
  }

  @Test
  public void test1127() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1127");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext5.connectionInfo();
    java.util.Set<java.lang.String> strSet7 = defaultLoginContext5.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo3, accessMode4, strSet7, "volumetric");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode10);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject13 = securityContextEnterpriseImpl12.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl12.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl9.connectionInfo();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(authSubject13);
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNull(clientConnectionInfo16);
  }

  @Test
  public void test1128() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1128");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode1 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext2 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = defaultLoginContext2.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode1, clientConnectionInfo3, "neo4j");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext6 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode7 = securityContext6.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo3, accessMode7, "volumetric");
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource10 = null;
    boolean boolean11 = securityContextEnterpriseImpl9.allowsAdminAction(adminActionOnResource10);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl9.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext14 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = defaultLoginContext14.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext17 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode13, clientConnectionInfo15, "neo4j");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext18 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo15);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo15);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup21 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl20.authorize(
        idLookup21, "neo4j", abstractSecurityLog23);
    java.lang.String str25 = securityContextEnterpriseImpl24.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl24.withMode(
        adminAccessMode26);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject28 = securityContextEnterpriseImpl27.subject();
    java.lang.String str29 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext31 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode32 = securityContext31.mode();
    java.lang.String str33 = securityContext31.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode34 = securityContext31.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject35 = securityContext31.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo37 = defaultLoginContext36.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext38 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo37);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext39 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo37);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup41 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl40.authorize(
        idLookup41, "neo4j", abstractSecurityLog43);
    java.lang.String str45 = securityContextEnterpriseImpl44.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl44.withMode(
        accessMode46);
    java.lang.String str48 = securityContextEnterpriseImpl44.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject49 = securityContextEnterpriseImpl44.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode50 = securityContextEnterpriseImpl44.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext51 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet53 = defaultLoginContext51.roeSet();
    java.util.Set<java.lang.String> strSet54 = defaultLoginContext51.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode30, authSubject35, clientConnectionInfo37, accessMode50, strSet54, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext57 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo37);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext58 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo59 = defaultLoginContext58.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext60 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo59);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl61 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup62 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog64 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = securityContextEnterpriseImpl61.authorize(
        idLookup62, "neo4j", abstractSecurityLog64);
    java.lang.String str66 = securityContextEnterpriseImpl65.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode67 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl68 = securityContextEnterpriseImpl65.withMode(
        accessMode67);
    java.lang.String str69 = securityContextEnterpriseImpl65.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource70 = null;
    boolean boolean71 = securityContextEnterpriseImpl65.allowsAdminAction(adminActionOnResource70);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode72 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = securityContextEnterpriseImpl65.withMode(
        adminAccessMode72);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode74 = securityContextEnterpriseImpl65.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl76 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo59, accessMode74, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl78 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo37, accessMode74,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl79 = securityContextEnterpriseImpl27.withMode(
        accessMode74);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode80 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext81 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject82 = defaultLoginContext81.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo83 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode84 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext85 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo86 = defaultLoginContext85.connectionInfo();
    java.util.Set<java.lang.String> strSet87 = defaultLoginContext85.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl89 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode80, authSubject82, clientConnectionInfo83, accessMode84, strSet87,
        "volumetric");
    java.util.Set<java.lang.String> strSet90 = securityContextEnterpriseImpl89.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl92 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject12, clientConnectionInfo15, accessMode74, strSet90,
        "localhost");
    org.junit.Assert.assertNotNull(defaultLoginContext2);
    org.junit.Assert.assertNotNull(clientConnectionInfo3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertNotNull(securityContext6);
    org.junit.Assert.assertTrue(
        "'" + accessMode7 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode7.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertNotNull(defaultLoginContext14);
    org.junit.Assert.assertNotNull(clientConnectionInfo15);
    org.junit.Assert.assertNotNull(securityContext17);
    org.junit.Assert.assertNotNull(loginContext18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNull(str25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(authSubject28);
    org.junit.Assert.assertNull(str29);
    org.junit.Assert.assertNotNull(securityContext31);
    org.junit.Assert.assertTrue("'" + accessMode32 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode32.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertTrue("'" + accessMode34 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode34.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject35);
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(clientConnectionInfo37);
    org.junit.Assert.assertNotNull(defaultLoginContext38);
    org.junit.Assert.assertNotNull(defaultLoginContext39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertNull(str45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AUTH_DISABLED with FULL" + "'", str48,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject49);
    org.junit.Assert.assertTrue("'" + accessMode50 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode50.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext51);
    org.junit.Assert.assertNotNull(strSet53);
    org.junit.Assert.assertNotNull(strSet54);
    org.junit.Assert.assertNotNull(defaultLoginContext57);
    org.junit.Assert.assertNotNull(defaultLoginContext58);
    org.junit.Assert.assertNotNull(clientConnectionInfo59);
    org.junit.Assert.assertNotNull(loginContext60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl61);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
    org.junit.Assert.assertNull(str66);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl68);
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "AUTH_DISABLED with FULL" + "'", str69,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertTrue("'" + accessMode74 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode74.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl76);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl78);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl79);
    org.junit.Assert.assertNotNull(defaultLoginContext81);
    org.junit.Assert.assertNotNull(authSubject82);
    org.junit.Assert.assertNotNull(defaultLoginContext85);
    org.junit.Assert.assertNotNull(clientConnectionInfo86);
    org.junit.Assert.assertNotNull(strSet87);
    org.junit.Assert.assertNotNull(strSet90);
  }

  @Test
  public void test1129() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1129");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test1130() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1130");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 6362, constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1131() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1131");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.shutdown();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject7 = securityContextEnterpriseImpl6.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl6.authorize(
        idLookup8, "localhost", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource12 = null;
    boolean boolean13 = securityContextEnterpriseImpl6.allowsAdminAction(adminActionOnResource12);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource14 = null;
    boolean boolean15 = securityContextEnterpriseImpl6.allowsAdminAction(adminActionOnResource14);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContextEnterpriseImpl6.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode17 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext18 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = defaultLoginContext18.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject20 = defaultLoginContext18.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext22 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = securityContext22.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext24 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet25 = defaultLoginContext24.roeSet();
    java.util.Set<java.lang.String> strSet27 = defaultLoginContext24.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode17, authSubject20, clientConnectionInfo21, accessMode23, strSet27,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup31 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl30.authorize(
        idLookup31, "neo4j", abstractSecurityLog33);
    java.lang.String str35 = securityContextEnterpriseImpl34.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode36 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl34.withMode(
        accessMode36);
    java.lang.String str38 = securityContextEnterpriseImpl34.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject39 = securityContextEnterpriseImpl34.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl34.withMode(
        adminAccessMode40);
    boolean boolean43 = securityContextEnterpriseImpl41.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode44 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = securityContextEnterpriseImpl41.withMode(
        adminAccessMode44);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo46 = securityContextEnterpriseImpl41.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext48 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode23, clientConnectionInfo46, "localhost");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext50 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode16, clientConnectionInfo46,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext51 = defaultAuthManager0.login(
          strMap5, clientConnectionInfo46);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(authSubject7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertTrue("'" + accessMode16 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode16.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext18);
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
    org.junit.Assert.assertNotNull(authSubject20);
    org.junit.Assert.assertNotNull(securityContext22);
    org.junit.Assert.assertTrue("'" + accessMode23 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode23.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext24);
    org.junit.Assert.assertNotNull(strSet25);
    org.junit.Assert.assertNotNull(strSet27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNull(str35);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AUTH_DISABLED with FULL" + "'", str38,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNotNull(clientConnectionInfo46);
    org.junit.Assert.assertNotNull(securityContext48);
    org.junit.Assert.assertNotNull(securityContext50);
  }

  @Test
  public void test1132() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1132");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.Object obj6 = null;
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(obj6);
    java.lang.String str8 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str9 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy11 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning10);
    long long12 = checkPointThresholdVolumetricPolicy11.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy11.checkPointHappened((long) (byte) -1);
    long long15 = checkPointThresholdVolumetricPolicy11.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy11.initialize((long) 2);
    long long18 = checkPointThresholdVolumetricPolicy11.checkFrequencyMillis();
    long long19 = checkPointThresholdVolumetricPolicy11.checkFrequencyMillis();
    long long20 = checkPointThresholdVolumetricPolicy11.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy11.initialize(100L);
    checkPointThresholdVolumetricPolicy11.checkPointHappened((long) 2);
    long long25 = checkPointThresholdVolumetricPolicy11.checkFrequencyMillis();
    boolean boolean26 = cachePopulatorExtensionFactory0.equals((java.lang.Object) long25);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pagecachewarmer" + "'", str8,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
    org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
    org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
    org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test1133() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1133");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler8 = null;
    securityContextEnterpriseImpl6.assertCredentialsNotExpired(securityAuthorizationHandler8);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
  }

  @Test
  public void test1134() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1134");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config5 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock6 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold9 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config5, systemNanoClock6, logPruning7, logProvider8);
    java.lang.String str10 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config11 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning13 = null;
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold15 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config11, systemNanoClock12, logPruning13, logProvider14);
    org.neo4j.configuration.Config config16 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock17 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning18 = null;
    org.neo4j.logging.LogProvider logProvider19 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold20 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config16, systemNanoClock17, logPruning18, logProvider19);
    java.lang.String str21 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str22 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "volumetric" + "'", str10, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold15);
    org.junit.Assert.assertNotNull(checkPointThreshold20);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "volumetric" + "'", str21, "volumetric");
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "volumetric" + "'", str22, "volumetric");
  }

  @Test
  public void test1135() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1135");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode5);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource16 = null;
    boolean boolean17 = securityContextEnterpriseImpl11.allowsAdminAction(adminActionOnResource16);
    java.lang.String str18 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode19);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = securityContextEnterpriseImpl11.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl4.withMode(
        accessMode21);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl22.withMode(
        adminAccessMode23);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler25 = null;
    securityContextEnterpriseImpl22.assertCredentialsNotExpired(securityAuthorizationHandler25);
    java.lang.String str27 = securityContextEnterpriseImpl22.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + accessMode21 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode21.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNull(str27);
  }

  @Test
  public void test1136() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1136");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.start();
    defaultAuthManager0.init();
    java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject7 = securityContextEnterpriseImpl6.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl6.withMode(
        adminAccessMode8);
    java.lang.String str10 = securityContextEnterpriseImpl6.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo11 = securityContextEnterpriseImpl6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext12 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo11);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext13 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo11);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext14 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo11);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = defaultAuthManager0.login(
          strMap5, clientConnectionInfo11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(authSubject7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(clientConnectionInfo11);
    org.junit.Assert.assertNotNull(defaultLoginContext12);
    org.junit.Assert.assertNotNull(defaultLoginContext13);
    org.junit.Assert.assertNotNull(defaultLoginContext14);
  }

  @Test
  public void test1137() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1137");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl0.database();
    java.lang.String str6 = securityContextEnterpriseImpl0.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource7 = null;
    boolean boolean8 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl0.connectionInfo();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo10 = securityContextEnterpriseImpl0.connectionInfo();
    java.lang.Class<?> wildcardClass11 = securityContextEnterpriseImpl0.getClass();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(clientConnectionInfo10);
    org.junit.Assert.assertNotNull(wildcardClass11);
  }

  @Test
  public void test1138() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1138");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    long long7 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) ' ');
    checkPointThresholdVolumetricPolicy1.initialize((long) 100);
    long long12 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long13 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long14 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
  }

  @Test
  public void test1139() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1139");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource16 = null;
    boolean boolean17 = securityContextEnterpriseImpl11.allowsAdminAction(adminActionOnResource16);
    java.lang.String str18 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl11;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl11.mode();
    defaultAuthManager0.log("hi!",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1140() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1140");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl13.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode19);
    boolean boolean22 = securityContextEnterpriseImpl20.allowExecuteAdminProcedure((int) (byte) 1);
    authManager7.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl20);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl20.withMode(
        adminAccessMode24);
    java.util.Set<java.lang.String> strSet26 = securityContextEnterpriseImpl25.roles();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(strSet26);
  }

  @Test
  public void test1141() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1141");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.kernel.api.security.AuthManager authManager18 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup21 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl20.authorize(
        idLookup21, "neo4j", abstractSecurityLog23);
    java.lang.String str25 = securityContextEnterpriseImpl24.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl24.withMode(
        accessMode26);
    java.lang.String str28 = securityContextEnterpriseImpl24.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource29 = null;
    boolean boolean30 = securityContextEnterpriseImpl24.allowsAdminAction(adminActionOnResource29);
    java.lang.String str31 = securityContextEnterpriseImpl24.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl24;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl24;
    authManager18.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl24);
    authManager5.log("verbose",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource36 = null;
    boolean boolean37 = securityContextEnterpriseImpl24.allowsAdminAction(adminActionOnResource36);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNull(str25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AUTH_DISABLED with FULL" + "'", str28,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AUTH_DISABLED with FULL" + "'", str31,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
  }

  @Test
  public void test1142() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1142");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 0, constraintDescriptor8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1143() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1143");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.Object obj7 = null;
    boolean boolean8 = cachePopulatorExtensionFactory0.equals(obj7);
    java.lang.String str9 = cachePopulatorExtensionFactory0.toString();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals((java.lang.Object) (byte) 0);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext12 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker13 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle14 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext12, componentsChecker13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str9, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1144() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1144");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) ' ', namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 100, namedDatabaseId19);
  }

  @Test
  public void test1145() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1145");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode15);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = securityContextEnterpriseImpl16.connectionInfo();
    authManager7.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = securityContextEnterpriseImpl16.connectionInfo();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl16.mode();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1146() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1146");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager9 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager9.stop();
    defaultAuthManager9.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager9.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList13 = defaultAuthManager9.gepiggatgcfList();
    defaultAuthManager9.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager9.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl16);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl16.authorize(
        idLookup18, "", abstractSecurityLog20);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode22 = securityContextEnterpriseImpl16.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl7.withMode(
        accessMode22);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext25 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = defaultLoginContext25.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject27 = defaultLoginContext25.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext29 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = securityContext29.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext31 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet32 = defaultLoginContext31.roeSet();
    java.util.Set<java.lang.String> strSet34 = defaultLoginContext31.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode24, authSubject27, clientConnectionInfo28, accessMode30, strSet34,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl23.withMode(
        accessMode30);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(defaultAuthManager9);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(strMapList13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertTrue("'" + accessMode22 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode22.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(defaultLoginContext25);
    org.junit.Assert.assertNotNull(clientConnectionInfo26);
    org.junit.Assert.assertNotNull(authSubject27);
    org.junit.Assert.assertNotNull(securityContext29);
    org.junit.Assert.assertTrue("'" + accessMode30 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode30.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext31);
    org.junit.Assert.assertNotNull(strSet32);
    org.junit.Assert.assertNotNull(strSet34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
  }

  @Test
  public void test1147() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1147");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor3 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          0L, nodeKeyConstraintDescriptor3, (long) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
  }

  @Test
  public void test1148() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1148");
    }
    org.neo4j.internal.kernel.api.security.AccessMode accessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext3 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode0, clientConnectionInfo2,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext7 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = securityContext7.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo2, accessMode8, "hi!");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext11 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo2);
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(loginContext3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(securityContext7);
    org.junit.Assert.assertTrue(
        "'" + accessMode8 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode8.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(loginContext11);
  }

  @Test
  public void test1149() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1149");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor3 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor4 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor5 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor6 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup7 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor3,
          nodeCursor4, propertyCursor5, labelSchemaDescriptor6, tokenNameLookup7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
  }

  @Test
  public void test1150() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1150");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor7 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor8 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor9 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor10 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup11 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor7, relationshipScanCursor8, propertyCursor9,
          relationTypeSchemaDescriptor10, tokenNameLookup11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test1151() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1151");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler15 = null;
    securityContextEnterpriseImpl11.assertCredentialsNotExpired(securityAuthorizationHandler15);
    authManager5.log("pagecachewarmer",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl11);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler18 = null;
    securityContextEnterpriseImpl11.assertCredentialsNotExpired(securityAuthorizationHandler18);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl11.mode();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource21 = null;
    boolean boolean22 = securityContextEnterpriseImpl11.allowsAdminAction(adminActionOnResource21);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
  }

  @Test
  public void test1152() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1152");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.Object obj7 = null;
    boolean boolean8 = cachePopulatorExtensionFactory0.equals(obj7);
    java.lang.String str9 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl10 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int11 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int12 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str13 = constraintSemanticsEnterpriseImpl10.getName();
    int int14 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int15 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str16 = constraintSemanticsEnterpriseImpl10.getName();
    boolean boolean17 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) constraintSemanticsEnterpriseImpl10);
    java.lang.String str18 = constraintSemanticsEnterpriseImpl10.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor19 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor20 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor21 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup22 = null;
    try {
      constraintSemanticsEnterpriseImpl10.validateNodePropertyExistenceConstraint(nodeCursor19,
          propertyCursor20, labelSchemaDescriptor21, tokenNameLookup22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterpriseConstraints" + "'", str13,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "enterpriseConstraints" + "'", str16,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "enterpriseConstraints" + "'", str18,
        "enterpriseConstraints");
  }

  @Test
  public void test1153() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1153");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.storageengine.api.StorageReader storageReader6 = null;
    org.neo4j.internal.kernel.api.Read read7 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory8 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState9 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor10 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext11 = null;
    org.neo4j.memory.MemoryTracker memoryTracker12 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor13 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader6, read7, cursorFactory8, readableTransactionState9, txStateVisitor10,
          cursorContext11, memoryTracker12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1154() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1154");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId11);
  }

  @Test
  public void test1155() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1155");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 10, namedDatabaseId17);
  }

  @Test
  public void test1156() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1156");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode2 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = securityContextEnterpriseImpl0.withMode(
        adminAccessMode2);
    java.lang.String str4 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = defaultLoginContext6.authorize(
        idLookup7, "hi!", abstractSecurityLog9);
    java.lang.Class<?> wildcardClass11 = defaultLoginContext6.getClass();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(wildcardClass11);
  }

  @Test
  public void test1157() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1157");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl12 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl12.start();
    securityProviderAuthDisabledImpl12.stop();
    securityProviderAuthDisabledImpl12.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager16 = securityProviderAuthDisabledImpl12.inClusterAuthManager();
    securityProviderAuthDisabledImpl12.start();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl12.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager19 = securityProviderAuthDisabledImpl12.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager20 = securityProviderAuthDisabledImpl12.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager21 = securityProviderAuthDisabledImpl12.loopbackAuthManager();
    boolean boolean22 = cachePopulatorExtensionFactory0.equals((java.lang.Object) authManager21);
    java.lang.String str23 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext24 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker25 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle26 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext24, componentsChecker25);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl12);
    org.junit.Assert.assertNotNull(authManager16);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertNotNull(authManager20);
    org.junit.Assert.assertNotNull(authManager21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pagecachewarmer" + "'", str23,
        "pagecachewarmer");
  }

  @Test
  public void test1158() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1158");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 10, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) -1, namedDatabaseId24);
  }

  @Test
  public void test1159() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1159");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 0, namedDatabaseId4);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (byte) 100, namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId12);
  }

  @Test
  public void test1160() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1160");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    boolean boolean16 = securityContextEnterpriseImpl13.allowExecuteAdminProcedure(10);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
  }

  @Test
  public void test1161() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1161");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl11.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext17 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext18 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNotNull(defaultLoginContext17);
    org.junit.Assert.assertNotNull(defaultLoginContext18);
  }

  @Test
  public void test1162() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1162");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
  }

  @Test
  public void test1163() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1163");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor7, propertyCursor8,
          labelSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test1164() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1164");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject17 = securityContextEnterpriseImpl7.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl7.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl7;
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(authSubject17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
  }

  @Test
  public void test1165() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1165");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext5.connectionInfo();
    java.util.Set<java.lang.String> strSet7 = defaultLoginContext5.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo3, accessMode4, strSet7, "volumetric");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode10);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject13 = securityContextEnterpriseImpl12.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl12.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl16 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl16.start();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl16.loopbackAuthManager();
    securityProviderAuthDisabledImpl16.stop();
    org.neo4j.kernel.api.security.AuthManager authManager20 = securityProviderAuthDisabledImpl16.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager20.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup26 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl25.authorize(
        idLookup26, "neo4j", abstractSecurityLog28);
    java.lang.String str30 = securityContextEnterpriseImpl29.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl29.withMode(
        accessMode31);
    java.lang.String str33 = securityContextEnterpriseImpl29.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource34 = null;
    boolean boolean35 = securityContextEnterpriseImpl29.allowsAdminAction(adminActionOnResource34);
    authManager20.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl29);
    java.lang.String str37 = securityContextEnterpriseImpl29.database();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext38 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContext38.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl29.withMode(
        accessMode39);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl9.withMode(
        accessMode39);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler42 = null;
    securityContextEnterpriseImpl41.assertCredentialsNotExpired(securityAuthorizationHandler42);
    java.lang.String str44 = securityContextEnterpriseImpl41.description();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(authSubject13);
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl16);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNull(str30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AUTH_DISABLED with FULL" + "'", str33,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNull(str37);
    org.junit.Assert.assertNotNull(securityContext38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "user '' with FULL" + "'", str44,
        "user '' with FULL");
  }

  @Test
  public void test1166() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1166");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(1L, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 0, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId23);
  }

  @Test
  public void test1167() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1167");
    }
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext0 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = securityContext0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext2 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo1);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = defaultLoginContext2.authorize(
        idLookup4, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog6);
    org.junit.Assert.assertNotNull(securityContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(defaultLoginContext2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
  }

  @Test
  public void test1168() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1168");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList2 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList2);
    org.junit.Assert.assertNotNull(strMapList3);
  }

  @Test
  public void test1169() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1169");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl10 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl10.start();
    securityProviderAuthDisabledImpl10.start();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl10.inClusterAuthManager();
    securityProviderAuthDisabledImpl10.stop();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl10.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager16 = securityProviderAuthDisabledImpl10.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager17 = securityProviderAuthDisabledImpl10.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "neo4j", abstractSecurityLog22);
    java.lang.String str24 = securityContextEnterpriseImpl23.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl23.withMode(
        accessMode25);
    java.lang.String str27 = securityContextEnterpriseImpl23.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject28 = securityContextEnterpriseImpl23.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl23.withMode(
        adminAccessMode29);
    boolean boolean32 = securityContextEnterpriseImpl30.allowExecuteAdminProcedure((int) (byte) 1);
    authManager17.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl30);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl30.withMode(
        adminAccessMode34);
    authManager8.log("Property existence constraint requires Neo4j Enterprise Edition",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl35);
    java.lang.String str37 = securityContextEnterpriseImpl35.description();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl10);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager16);
    org.junit.Assert.assertNotNull(authManager17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AUTH_DISABLED with FULL" + "'", str27,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "user '' with FULL" + "'", str37,
        "user '' with FULL");
  }

  @Test
  public void test1170() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1170");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl1 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl1.start();
    securityProviderAuthDisabledImpl1.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl1.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl1.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager5.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    authManager5.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl14);
    java.lang.String str16 = securityContextEnterpriseImpl14.description();
    boolean boolean18 = securityContextEnterpriseImpl14.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl14.withMode(
        adminAccessMode19);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject21 = securityContextEnterpriseImpl14.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup23 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl22.authorize(
        idLookup23, "neo4j", abstractSecurityLog25);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl22.withMode(
        accessMode27);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl22.authorize(
        idLookup29, "", abstractSecurityLog31);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup33 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl32.authorize(
        idLookup33, "AUTH_DISABLED with FULL", abstractSecurityLog35);
    java.lang.String str37 = securityContextEnterpriseImpl32.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl32.withMode(
        adminAccessMode38);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl32.withMode(
        adminAccessMode40);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo42 = securityContextEnterpriseImpl41.connectionInfo();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject45 = securityContextEnterpriseImpl44.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl44.withMode(
        adminAccessMode46);
    java.lang.String str48 = securityContextEnterpriseImpl44.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo49 = securityContextEnterpriseImpl44.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext50 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo49);
    java.util.Set<java.lang.String> strSet52 = defaultLoginContext50.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl54 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject21, clientConnectionInfo42, accessMode43, strSet52,
        "PageCacheProfileLoader");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup56 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog58 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl55.authorize(
        idLookup56, "neo4j", abstractSecurityLog58);
    java.lang.String str60 = securityContextEnterpriseImpl59.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode61 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = securityContextEnterpriseImpl59.withMode(
        accessMode61);
    java.lang.String str63 = securityContextEnterpriseImpl59.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource64 = null;
    boolean boolean65 = securityContextEnterpriseImpl59.allowsAdminAction(adminActionOnResource64);
    java.lang.String str66 = securityContextEnterpriseImpl59.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl59;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl59;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo69 = securityContextEnterpriseImpl59.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext70 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode71 = securityContext70.mode();
    java.lang.String str72 = securityContext70.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode73 = securityContext70.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl75 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo69, accessMode73,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext76 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo77 = defaultLoginContext76.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext79 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode73, clientConnectionInfo77, ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl81 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo42, accessMode73, "");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext82 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo42);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl1);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AUTH_DISABLED with FULL" + "'", str16,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(authSubject21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AUTH_DISABLED with FULL" + "'", str37,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(clientConnectionInfo42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertNotNull(authSubject45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNull(str48);
    org.junit.Assert.assertNotNull(clientConnectionInfo49);
    org.junit.Assert.assertNotNull(defaultLoginContext50);
    org.junit.Assert.assertNotNull(strSet52);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNull(str60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertEquals("'" + str63 + "' != '" + "AUTH_DISABLED with FULL" + "'", str63,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AUTH_DISABLED with FULL" + "'", str66,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo69);
    org.junit.Assert.assertNotNull(securityContext70);
    org.junit.Assert.assertTrue("'" + accessMode71 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode71.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str72);
    org.junit.Assert.assertTrue("'" + accessMode73 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode73.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl75);
    org.junit.Assert.assertNotNull(defaultLoginContext76);
    org.junit.Assert.assertNotNull(clientConnectionInfo77);
    org.junit.Assert.assertNotNull(securityContext79);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl81);
    org.junit.Assert.assertNotNull(loginContext82);
  }

  @Test
  public void test1171() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1171");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    authManager4.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    authManager4.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
  }

  @Test
  public void test1172() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1172");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor6 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor6, nodeCursor7, propertyCursor8, labelSchemaDescriptor9,
          tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1173() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1173");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    authManager8.stop();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl12 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl12.start();
    securityProviderAuthDisabledImpl12.stop();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl12.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager16 = securityProviderAuthDisabledImpl12.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager17 = securityProviderAuthDisabledImpl12.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "neo4j", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl19.withMode(
        accessMode24);
    java.lang.String str26 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject27 = securityContextEnterpriseImpl19.subject();
    authManager17.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler29 = null;
    securityContextEnterpriseImpl19.assertCredentialsNotExpired(securityAuthorizationHandler29);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject31 = securityContextEnterpriseImpl19.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject33 = securityContextEnterpriseImpl32.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl32.withMode(
        adminAccessMode34);
    java.lang.String str36 = securityContextEnterpriseImpl32.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo37 = securityContextEnterpriseImpl32.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext38 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo37);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext40 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo41 = defaultLoginContext40.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext42 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo41);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext44 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode39, clientConnectionInfo41,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext45 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo41);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext46 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode47 = securityContext46.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo41, accessMode47, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode50 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext51 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode52 = securityContext51.mode();
    java.lang.String str53 = securityContext51.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = securityContext51.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject55 = securityContext51.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext56 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo57 = defaultLoginContext56.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext58 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo57);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext59 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo57);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl60 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup61 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog63 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl64 = securityContextEnterpriseImpl60.authorize(
        idLookup61, "neo4j", abstractSecurityLog63);
    java.lang.String str65 = securityContextEnterpriseImpl64.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode66 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = securityContextEnterpriseImpl64.withMode(
        accessMode66);
    java.lang.String str68 = securityContextEnterpriseImpl64.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject69 = securityContextEnterpriseImpl64.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode70 = securityContextEnterpriseImpl64.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext71 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet73 = defaultLoginContext71.roeSet();
    java.util.Set<java.lang.String> strSet74 = defaultLoginContext71.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl76 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode50, authSubject55, clientConnectionInfo57, accessMode70, strSet74, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl78 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode11, authSubject31, clientConnectionInfo37, accessMode47, strSet74,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    authManager8.log("enterpriseConstraints",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl78);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl12);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager16);
    org.junit.Assert.assertNotNull(authManager17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNull(str26);
    org.junit.Assert.assertNotNull(authSubject27);
    org.junit.Assert.assertNotNull(authSubject31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(authSubject33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNull(str36);
    org.junit.Assert.assertNotNull(clientConnectionInfo37);
    org.junit.Assert.assertNotNull(loginContext38);
    org.junit.Assert.assertNotNull(defaultLoginContext40);
    org.junit.Assert.assertNotNull(clientConnectionInfo41);
    org.junit.Assert.assertNotNull(loginContext42);
    org.junit.Assert.assertNotNull(securityContext44);
    org.junit.Assert.assertNotNull(defaultLoginContext45);
    org.junit.Assert.assertNotNull(securityContext46);
    org.junit.Assert.assertTrue("'" + accessMode47 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode47.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(securityContext51);
    org.junit.Assert.assertTrue("'" + accessMode52 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode52.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str53);
    org.junit.Assert.assertTrue("'" + accessMode54 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode54.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject55);
    org.junit.Assert.assertNotNull(defaultLoginContext56);
    org.junit.Assert.assertNotNull(clientConnectionInfo57);
    org.junit.Assert.assertNotNull(defaultLoginContext58);
    org.junit.Assert.assertNotNull(defaultLoginContext59);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl64);
    org.junit.Assert.assertNull(str65);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl67);
    org.junit.Assert.assertEquals("'" + str68 + "' != '" + "AUTH_DISABLED with FULL" + "'", str68,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject69);
    org.junit.Assert.assertTrue("'" + accessMode70 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode70.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext71);
    org.junit.Assert.assertNotNull(strSet73);
    org.junit.Assert.assertNotNull(strSet74);
  }

  @Test
  public void test1174() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1174");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId1 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId1);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10L, namedDatabaseId4);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(0L, namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (byte) 10, namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 10, namedDatabaseId13);
  }

  @Test
  public void test1175() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1175");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) (byte) 1, constraintDescriptor7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1176() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1176");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) ' ', namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId19);
  }

  @Test
  public void test1177() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1177");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(1L, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId11);
  }

  @Test
  public void test1178() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1178");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext1.roeSet();
    java.util.Set<java.lang.String> strSet4 = defaultLoginContext1.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext1;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = defaultLoginContext1.authorize(
        idLookup6, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog8);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = securityContextEnterpriseImpl9.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl11.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl11.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext17 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo16);
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager18 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager18.stop();
    defaultAuthManager18.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList21 = defaultAuthManager18.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList22 = defaultAuthManager18.gepiggatgcfList();
    defaultAuthManager18.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager18.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl25);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup27 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl25.authorize(
        idLookup27, "", abstractSecurityLog29);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = securityContextEnterpriseImpl25.mode();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext32 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo33 = securityContext32.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext34 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo33);
    java.util.Set<java.lang.String> strSet35 = defaultLoginContext34.roeSet();
    java.util.Set<java.lang.String> strSet36 = defaultLoginContext34.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject10, clientConnectionInfo16, accessMode31, strSet36, "neo4j");
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource39 = null;
    try {
      boolean boolean40 = securityContextEnterpriseImpl38.allowsAdminAction(
          adminActionOnResource39);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(strSet4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(authSubject10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNotNull(loginContext17);
    org.junit.Assert.assertNotNull(defaultAuthManager18);
    org.junit.Assert.assertNotNull(strMapList21);
    org.junit.Assert.assertNotNull(strMapList22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + accessMode31 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode31.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContext32);
    org.junit.Assert.assertNotNull(clientConnectionInfo33);
    org.junit.Assert.assertNotNull(defaultLoginContext34);
    org.junit.Assert.assertNotNull(strSet35);
    org.junit.Assert.assertNotNull(strSet36);
  }

  @Test
  public void test1179() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1179");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler8 = null;
    securityContextEnterpriseImpl4.assertCredentialsNotExpired(securityAuthorizationHandler8);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl10 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl10.start();
    securityProviderAuthDisabledImpl10.stop();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl10.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl10.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl10.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl17.authorize(
        idLookup18, "neo4j", abstractSecurityLog20);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl17.withMode(
        accessMode22);
    java.lang.String str24 = securityContextEnterpriseImpl17.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject25 = securityContextEnterpriseImpl17.subject();
    authManager15.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl17);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject27 = securityContextEnterpriseImpl17.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = securityContextEnterpriseImpl17.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode29 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext30 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo31 = defaultLoginContext30.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject32 = defaultLoginContext30.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo33 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext34 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode35 = securityContext34.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet37 = defaultLoginContext36.roeSet();
    java.util.Set<java.lang.String> strSet39 = defaultLoginContext36.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode29, authSubject32, clientConnectionInfo33, accessMode35, strSet39,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup43 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog45 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = securityContextEnterpriseImpl42.authorize(
        idLookup43, "neo4j", abstractSecurityLog45);
    java.lang.String str47 = securityContextEnterpriseImpl46.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl46.withMode(
        accessMode48);
    java.lang.String str50 = securityContextEnterpriseImpl46.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject51 = securityContextEnterpriseImpl46.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl46.withMode(
        adminAccessMode52);
    boolean boolean55 = securityContextEnterpriseImpl53.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode56 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl57 = securityContextEnterpriseImpl53.withMode(
        adminAccessMode56);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo58 = securityContextEnterpriseImpl53.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext60 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode35, clientConnectionInfo58, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo28, accessMode35, "pagecachewarmer");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = securityContextEnterpriseImpl4.withMode(
        accessMode35);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo64 = securityContextEnterpriseImpl63.connectionInfo();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl10);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertNotNull(authSubject25);
    org.junit.Assert.assertNotNull(authSubject27);
    org.junit.Assert.assertNotNull(clientConnectionInfo28);
    org.junit.Assert.assertNotNull(defaultLoginContext30);
    org.junit.Assert.assertNotNull(clientConnectionInfo31);
    org.junit.Assert.assertNotNull(authSubject32);
    org.junit.Assert.assertNotNull(securityContext34);
    org.junit.Assert.assertTrue("'" + accessMode35 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode35.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(strSet37);
    org.junit.Assert.assertNotNull(strSet39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNull(str47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AUTH_DISABLED with FULL" + "'", str50,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject51);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl57);
    org.junit.Assert.assertNotNull(clientConnectionInfo58);
    org.junit.Assert.assertNotNull(securityContext60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl63);
    org.junit.Assert.assertNotNull(clientConnectionInfo64);
  }

  @Test
  public void test1180() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1180");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          1L, nodeKeyConstraintDescriptor5, (-1L));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1181() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1181");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    defaultAuthManager0.start();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList30 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(strMapList30);
  }

  @Test
  public void test1182() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1182");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor4 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor5 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor6 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup7 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor4,
          propertyCursor5, labelSchemaDescriptor6, tokenNameLookup7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1183() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1183");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    java.lang.String str21 = securityContextEnterpriseImpl20.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl20.withMode(
        accessMode22);
    java.lang.String str24 = securityContextEnterpriseImpl20.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject25 = securityContextEnterpriseImpl20.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl20.withMode(
        adminAccessMode26);
    boolean boolean29 = securityContextEnterpriseImpl27.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl27.withMode(
        adminAccessMode30);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl31.withMode(
        adminAccessMode32);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo34 = securityContextEnterpriseImpl31.connectionInfo();
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = defaultAuthManager0.login(
          strMap15, clientConnectionInfo34);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AUTH_DISABLED with FULL" + "'", str24,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(clientConnectionInfo34);
  }

  @Test
  public void test1184() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1184");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) ' ', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(10L, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 'a', namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId27 = null;
    basePageCacheLoadingWatcher0.wapclForNa(100L, namedDatabaseId27);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId30 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '#', namedDatabaseId30);
  }

  @Test
  public void test1185() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1185");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor4 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) 100, uniquenessConstraintDescriptor4, (-1L));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
  }

  @Test
  public void test1186() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1186");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 1, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId18);
  }

  @Test
  public void test1187() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1187");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          10L, nodeKeyConstraintDescriptor6, (long) '#');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1188() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1188");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    boolean boolean18 = securityContextEnterpriseImpl7.allowExecuteAdminProcedure((int) (short) 10);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl7.withMode(
        adminAccessMode19);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
  }

  @Test
  public void test1189() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1189");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    java.lang.String str13 = enterpriseTracerFactory0.getName();
    org.neo4j.monitoring.Monitors monitors14 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler15 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock16 = null;
    org.neo4j.logging.Log log17 = null;
    org.neo4j.configuration.Config config18 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer19 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors14, jobScheduler15, systemNanoClock16, log17, config18);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(lockTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "verbose" + "'", str13, "verbose");
  }

  @Test
  public void test1190() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1190");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test1191() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1191");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 100);
    long long4 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 10);
    java.util.function.Consumer<java.lang.String> strConsumer9 = null;
    try {
      boolean boolean10 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) 2,
          (long) (short) -1, strConsumer9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
  }

  @Test
  public void test1192() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1192");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) 100, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId18);
  }

  @Test
  public void test1193() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1193");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "pagecachewarmer", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl8;
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
  }

  @Test
  public void test1194() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1194");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    long long12 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    long long13 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    long long14 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 0);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
  }

  @Test
  public void test1195() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1195");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.lang.String str8 = enterpriseTracerFactory0.getName();
    org.neo4j.monitoring.Monitors monitors9 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler10 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    org.neo4j.logging.Log log12 = null;
    org.neo4j.configuration.Config config13 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer14 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors9, jobScheduler10, systemNanoClock11, log12, config13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "verbose" + "'", str8, "verbose");
  }

  @Test
  public void test1196() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1196");
    }
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext0 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode1 = securityContext0.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = securityContext0.mode();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler3 = null;
    securityContext0.assertCredentialsNotExpired(securityAuthorizationHandler3);
    org.junit.Assert.assertNotNull(securityContext0);
    org.junit.Assert.assertTrue(
        "'" + accessMode1 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode1.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue(
        "'" + accessMode2 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode2.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1197() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1197");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl0.database();
    java.lang.String str6 = securityContextEnterpriseImpl0.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource7 = null;
    boolean boolean8 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl14.withMode(
        accessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource19 = null;
    boolean boolean20 = securityContextEnterpriseImpl14.allowsAdminAction(adminActionOnResource19);
    java.lang.String str21 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl14;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl14;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo24 = securityContextEnterpriseImpl14.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext25 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode26 = securityContext25.mode();
    java.lang.String str27 = securityContext25.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = securityContext25.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo24, accessMode28,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext31 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo32 = defaultLoginContext31.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext33 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo32);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext34 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo32);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext36 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode28, clientConnectionInfo32, "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo9, accessMode28, "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AUTH_DISABLED with FULL" + "'", str21,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo24);
    org.junit.Assert.assertNotNull(securityContext25);
    org.junit.Assert.assertTrue("'" + accessMode26 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode26.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str27);
    org.junit.Assert.assertTrue("'" + accessMode28 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode28.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(defaultLoginContext31);
    org.junit.Assert.assertNotNull(clientConnectionInfo32);
    org.junit.Assert.assertNotNull(loginContext33);
    org.junit.Assert.assertNotNull(loginContext34);
    org.junit.Assert.assertNotNull(securityContext36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
  }

  @Test
  public void test1198() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1198");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.claauch();
    defaultAuthManager0.stop();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList5 = defaultAuthManager0.gepiggatgcfList();
    java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl8 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl8.start();
    securityProviderAuthDisabledImpl8.stop();
    securityProviderAuthDisabledImpl8.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl8.inClusterAuthManager();
    securityProviderAuthDisabledImpl8.start();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl8.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl8.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl17.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl17.authorize(
        idLookup19, "localhost", abstractSecurityLog21);
    authManager15.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject24 = securityContextEnterpriseImpl22.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext26 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo27 = defaultLoginContext26.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext28 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo27);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext30 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode25, clientConnectionInfo27,
        "Node Key constraint requires Neo4j Enterprise Edition");
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo31 = securityContext30.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup33 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl32.authorize(
        idLookup33, "neo4j", abstractSecurityLog35);
    java.lang.String str37 = securityContextEnterpriseImpl36.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl36.withMode(
        adminAccessMode38);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject40 = securityContextEnterpriseImpl39.subject();
    java.lang.String str41 = securityContextEnterpriseImpl39.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext43 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode44 = securityContext43.mode();
    java.lang.String str45 = securityContext43.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = securityContext43.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject47 = securityContext43.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext48 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo49 = defaultLoginContext48.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext50 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo49);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext51 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo49);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup53 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog55 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = securityContextEnterpriseImpl52.authorize(
        idLookup53, "neo4j", abstractSecurityLog55);
    java.lang.String str57 = securityContextEnterpriseImpl56.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode58 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl56.withMode(
        accessMode58);
    java.lang.String str60 = securityContextEnterpriseImpl56.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject61 = securityContextEnterpriseImpl56.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode62 = securityContextEnterpriseImpl56.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext63 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet65 = defaultLoginContext63.roeSet();
    java.util.Set<java.lang.String> strSet66 = defaultLoginContext63.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl68 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode42, authSubject47, clientConnectionInfo49, accessMode62, strSet66, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext69 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo49);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext70 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo71 = defaultLoginContext70.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext72 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo71);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup74 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog76 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = securityContextEnterpriseImpl73.authorize(
        idLookup74, "neo4j", abstractSecurityLog76);
    java.lang.String str78 = securityContextEnterpriseImpl77.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode79 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl80 = securityContextEnterpriseImpl77.withMode(
        accessMode79);
    java.lang.String str81 = securityContextEnterpriseImpl77.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource82 = null;
    boolean boolean83 = securityContextEnterpriseImpl77.allowsAdminAction(adminActionOnResource82);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode84 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl85 = securityContextEnterpriseImpl77.withMode(
        adminAccessMode84);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode86 = securityContextEnterpriseImpl77.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl88 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo71, accessMode86, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl90 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo49, accessMode86,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl91 = securityContextEnterpriseImpl39.withMode(
        accessMode86);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext92 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet93 = defaultLoginContext92.roeSet();
    java.util.Set<java.lang.String> strSet95 = defaultLoginContext92.roeSet();
    java.util.Set<java.lang.String> strSet96 = defaultLoginContext92.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl98 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode7, authSubject24, clientConnectionInfo31, accessMode86, strSet96,
        "localhost");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext99 = defaultAuthManager0.login(
          strMap6, clientConnectionInfo31);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList5);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl8);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(authSubject24);
    org.junit.Assert.assertNotNull(defaultLoginContext26);
    org.junit.Assert.assertNotNull(clientConnectionInfo27);
    org.junit.Assert.assertNotNull(loginContext28);
    org.junit.Assert.assertNotNull(securityContext30);
    org.junit.Assert.assertNotNull(clientConnectionInfo31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNull(str37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertNotNull(authSubject40);
    org.junit.Assert.assertNull(str41);
    org.junit.Assert.assertNotNull(securityContext43);
    org.junit.Assert.assertTrue("'" + accessMode44 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode44.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str45);
    org.junit.Assert.assertTrue("'" + accessMode46 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode46.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject47);
    org.junit.Assert.assertNotNull(defaultLoginContext48);
    org.junit.Assert.assertNotNull(clientConnectionInfo49);
    org.junit.Assert.assertNotNull(defaultLoginContext50);
    org.junit.Assert.assertNotNull(defaultLoginContext51);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNull(str57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertEquals("'" + str60 + "' != '" + "AUTH_DISABLED with FULL" + "'", str60,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject61);
    org.junit.Assert.assertTrue("'" + accessMode62 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode62.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext63);
    org.junit.Assert.assertNotNull(strSet65);
    org.junit.Assert.assertNotNull(strSet66);
    org.junit.Assert.assertNotNull(defaultLoginContext69);
    org.junit.Assert.assertNotNull(defaultLoginContext70);
    org.junit.Assert.assertNotNull(clientConnectionInfo71);
    org.junit.Assert.assertNotNull(loginContext72);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertNull(str78);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl80);
    org.junit.Assert.assertEquals("'" + str81 + "' != '" + "AUTH_DISABLED with FULL" + "'", str81,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl85);
    org.junit.Assert.assertTrue("'" + accessMode86 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode86.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl88);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl90);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl91);
    org.junit.Assert.assertNotNull(defaultLoginContext92);
    org.junit.Assert.assertNotNull(strSet93);
    org.junit.Assert.assertNotNull(strSet95);
    org.junit.Assert.assertNotNull(strSet96);
  }

  @Test
  public void test1199() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1199");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    boolean boolean8 = securityContextEnterpriseImpl6.allowExecuteAdminProcedure(0);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl6.mode();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    org.junit.Assert.assertNull(accessMode10);
  }

  @Test
  public void test1200() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1200");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    defaultAuthManager0.stop();
    defaultAuthManager0.start();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
  }

  @Test
  public void test1201() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1201");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor5,
          propertyCursor6, labelSchemaDescriptor7, tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1202() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1202");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (short) -1, uniquenessConstraintDescriptor6, 0L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1203() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1203");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode18);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler20 = null;
    securityContextEnterpriseImpl19.assertCredentialsNotExpired(securityAuthorizationHandler20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
  }

  @Test
  public void test1204() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1204");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1205() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1205");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 100);
    checkPointThresholdVolumetricPolicy1.initialize((long) 10);
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    java.util.function.Consumer<java.lang.String> strConsumer19 = null;
    try {
      boolean boolean20 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(
          (long) (short) 0, (long) 1, strConsumer19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test1206() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1206");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1207() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1207");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    long long7 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) ' ');
    checkPointThresholdVolumetricPolicy1.initialize((long) 100);
    long long12 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long13 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    java.util.function.Consumer<java.lang.String> strConsumer16 = null;
    try {
      boolean boolean17 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) 0,
          (long) (-1), strConsumer16);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
  }

  @Test
  public void test1208() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1208");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) '4', nodeKeyConstraintDescriptor7, (long) '#');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1209() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1209");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl11.connectionInfo();
    java.util.Set<java.lang.String> strSet17 = securityContextEnterpriseImpl11.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNotNull(strSet17);
  }

  @Test
  public void test1210() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1210");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor4 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor5 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor6 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup7 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor4,
          propertyCursor5, labelSchemaDescriptor6, tokenNameLookup7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
  }

  @Test
  public void test1211() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1211");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test1212() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1212");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize(1L);
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) ' ');
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) 10);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
  }

  @Test
  public void test1213() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1213");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    defaultAuthManager3.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl10.withMode(
        accessMode15);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl20;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl20.authorize(
        idLookup22, "", abstractSecurityLog24);
    defaultAuthManager3.log("localhost",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl20);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode28 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo30 = defaultLoginContext29.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext32 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode28, clientConnectionInfo30, "neo4j");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext33 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode34 = securityContext33.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo30, accessMode34, "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup38 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl37.authorize(
        idLookup38, "neo4j", abstractSecurityLog40);
    java.lang.String str42 = securityContextEnterpriseImpl41.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl41.withMode(
        accessMode43);
    java.lang.String str45 = securityContextEnterpriseImpl41.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource46 = null;
    boolean boolean47 = securityContextEnterpriseImpl41.allowsAdminAction(adminActionOnResource46);
    java.lang.String str48 = securityContextEnterpriseImpl41.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl41;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl41;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl51 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup52 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog54 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = securityContextEnterpriseImpl51.authorize(
        idLookup52, "neo4j", abstractSecurityLog54);
    java.lang.String str56 = securityContextEnterpriseImpl55.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode57 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = securityContextEnterpriseImpl55.withMode(
        accessMode57);
    java.lang.String str59 = securityContextEnterpriseImpl55.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject60 = securityContextEnterpriseImpl55.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode61 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = securityContextEnterpriseImpl55.withMode(
        adminAccessMode61);
    boolean boolean64 = securityContextEnterpriseImpl62.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode65 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = securityContextEnterpriseImpl62.withMode(
        adminAccessMode65);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode67 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl68 = securityContextEnterpriseImpl66.withMode(
        adminAccessMode67);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo69 = securityContextEnterpriseImpl66.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl70 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl70.start();
    org.neo4j.kernel.api.security.AuthManager authManager72 = securityProviderAuthDisabledImpl70.loopbackAuthManager();
    securityProviderAuthDisabledImpl70.stop();
    org.neo4j.kernel.api.security.AuthManager authManager74 = securityProviderAuthDisabledImpl70.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl76 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager74.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl76);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl79 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup80 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog82 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl83 = securityContextEnterpriseImpl79.authorize(
        idLookup80, "neo4j", abstractSecurityLog82);
    java.lang.String str84 = securityContextEnterpriseImpl83.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode85 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl86 = securityContextEnterpriseImpl83.withMode(
        accessMode85);
    java.lang.String str87 = securityContextEnterpriseImpl83.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource88 = null;
    boolean boolean89 = securityContextEnterpriseImpl83.allowsAdminAction(adminActionOnResource88);
    authManager74.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl83);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode91 = securityContextEnterpriseImpl83.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl93 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo69, accessMode91, "neo4j");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl94 = securityContextEnterpriseImpl41.withMode(
        accessMode91);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl96 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo30, accessMode91,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    defaultAuthManager3.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl96);
    java.lang.String str98 = securityContextEnterpriseImpl96.database();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(clientConnectionInfo30);
    org.junit.Assert.assertNotNull(securityContext32);
    org.junit.Assert.assertNotNull(securityContext33);
    org.junit.Assert.assertTrue("'" + accessMode34 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode34.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNull(str42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "AUTH_DISABLED with FULL" + "'", str45,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AUTH_DISABLED with FULL" + "'", str48,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl51);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertNull(str56);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AUTH_DISABLED with FULL" + "'", str59,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl68);
    org.junit.Assert.assertNotNull(clientConnectionInfo69);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl70);
    org.junit.Assert.assertNotNull(authManager72);
    org.junit.Assert.assertNotNull(authManager74);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl76);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl79);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl83);
    org.junit.Assert.assertNull(str84);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl86);
    org.junit.Assert.assertEquals("'" + str87 + "' != '" + "AUTH_DISABLED with FULL" + "'", str87,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    org.junit.Assert.assertTrue("'" + accessMode91 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode91.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl93);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl94);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl96);
    org.junit.Assert.assertEquals(
        "'" + str98 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str98, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test1214() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1214");
    }
    org.neo4j.kernel.api.security.AuthManager authManager0 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl6.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl6.withMode(
        accessMode8);
    java.lang.String str10 = securityContextEnterpriseImpl6.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource11 = null;
    boolean boolean12 = securityContextEnterpriseImpl6.allowsAdminAction(adminActionOnResource11);
    java.lang.String str13 = securityContextEnterpriseImpl6.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    authManager0.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    java.lang.String str17 = securityContextEnterpriseImpl6.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContextEnterpriseImpl6.mode();
    org.neo4j.kernel.api.security.AuthManager authManager19 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl21.authorize(
        idLookup22, "neo4j", abstractSecurityLog24);
    java.lang.String str26 = securityContextEnterpriseImpl25.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl25.withMode(
        accessMode27);
    java.lang.String str29 = securityContextEnterpriseImpl25.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource30 = null;
    boolean boolean31 = securityContextEnterpriseImpl25.allowsAdminAction(adminActionOnResource30);
    java.lang.String str32 = securityContextEnterpriseImpl25.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl25;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl25;
    authManager19.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl25);
    java.lang.String str36 = securityContextEnterpriseImpl25.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = securityContextEnterpriseImpl25.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup39 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog41 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = securityContextEnterpriseImpl38.authorize(
        idLookup39, "neo4j", abstractSecurityLog41);
    java.lang.String str43 = securityContextEnterpriseImpl42.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode44 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = securityContextEnterpriseImpl42.withMode(
        accessMode44);
    java.lang.String str46 = securityContextEnterpriseImpl42.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo47 = securityContextEnterpriseImpl42.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext49 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode37, clientConnectionInfo47, "volumetric");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext51 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo47, "localhost");
    org.neo4j.internal.kernel.api.security.AccessMode accessMode52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl54 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo47, accessMode52, "hi!");
    org.junit.Assert.assertNotNull(authManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AUTH_DISABLED with FULL" + "'", str10,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AUTH_DISABLED with FULL" + "'", str13,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNull(str26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AUTH_DISABLED with FULL" + "'", str29,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AUTH_DISABLED with FULL" + "'", str32,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str36);
    org.junit.Assert.assertTrue("'" + accessMode37 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode37.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNull(str43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "AUTH_DISABLED with FULL" + "'", str46,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo47);
    org.junit.Assert.assertNotNull(securityContext49);
    org.junit.Assert.assertNotNull(securityContext51);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl54);
  }

  @Test
  public void test1215() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1215");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext1 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = securityContext1.mode();
    java.lang.String str3 = securityContext1.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = securityContext1.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject5 = securityContext1.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo7 = defaultLoginContext6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext8 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext9 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl14.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl14.withMode(
        accessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl14.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = securityContextEnterpriseImpl14.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet23 = defaultLoginContext21.roeSet();
    java.util.Set<java.lang.String> strSet24 = defaultLoginContext21.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject5, clientConnectionInfo7, accessMode20, strSet24, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext28 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo29 = defaultLoginContext28.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext30 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo29);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup32 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl31.authorize(
        idLookup32, "neo4j", abstractSecurityLog34);
    java.lang.String str36 = securityContextEnterpriseImpl35.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl35.withMode(
        accessMode37);
    java.lang.String str39 = securityContextEnterpriseImpl35.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource40 = null;
    boolean boolean41 = securityContextEnterpriseImpl35.allowsAdminAction(adminActionOnResource40);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl35.withMode(
        adminAccessMode42);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode44 = securityContextEnterpriseImpl35.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo29, accessMode44, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl48 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo7, accessMode44,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext49 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo7);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext50 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl51 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject52 = securityContextEnterpriseImpl51.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup53 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog55 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = securityContextEnterpriseImpl51.authorize(
        idLookup53, "localhost", abstractSecurityLog55);
    java.util.Set<java.lang.String> strSet57 = securityContextEnterpriseImpl56.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo58 = securityContextEnterpriseImpl56.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup60 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog62 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = securityContextEnterpriseImpl59.authorize(
        idLookup60, "neo4j", abstractSecurityLog62);
    java.lang.String str64 = securityContextEnterpriseImpl63.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode65 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = securityContextEnterpriseImpl63.withMode(
        accessMode65);
    java.lang.String str67 = securityContextEnterpriseImpl63.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource68 = null;
    boolean boolean69 = securityContextEnterpriseImpl63.allowsAdminAction(adminActionOnResource68);
    java.lang.String str70 = securityContextEnterpriseImpl63.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl63;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl63;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo73 = securityContextEnterpriseImpl63.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext74 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode75 = securityContext74.mode();
    java.lang.String str76 = securityContext74.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode77 = securityContext74.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl79 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo73, accessMode77,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext80 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo81 = defaultLoginContext80.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext83 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode77, clientConnectionInfo81, ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl85 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo58, accessMode77, ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl87 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo7, accessMode77, "volumetric");
    org.junit.Assert.assertNotNull(securityContext1);
    org.junit.Assert.assertTrue(
        "'" + accessMode2 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode2.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str3);
    org.junit.Assert.assertTrue(
        "'" + accessMode4 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode4.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(clientConnectionInfo7);
    org.junit.Assert.assertNotNull(defaultLoginContext8);
    org.junit.Assert.assertNotNull(defaultLoginContext9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AUTH_DISABLED with FULL" + "'", str18,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertTrue("'" + accessMode20 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode20.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(strSet23);
    org.junit.Assert.assertNotNull(strSet24);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(defaultLoginContext28);
    org.junit.Assert.assertNotNull(clientConnectionInfo29);
    org.junit.Assert.assertNotNull(loginContext30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNull(str36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AUTH_DISABLED with FULL" + "'", str39,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + accessMode44 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode44.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl48);
    org.junit.Assert.assertNotNull(defaultLoginContext49);
    org.junit.Assert.assertNotNull(loginContext50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl51);
    org.junit.Assert.assertNotNull(authSubject52);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(strSet57);
    org.junit.Assert.assertNotNull(clientConnectionInfo58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl63);
    org.junit.Assert.assertNull(str64);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertEquals("'" + str67 + "' != '" + "AUTH_DISABLED with FULL" + "'", str67,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    org.junit.Assert.assertEquals("'" + str70 + "' != '" + "AUTH_DISABLED with FULL" + "'", str70,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo73);
    org.junit.Assert.assertNotNull(securityContext74);
    org.junit.Assert.assertTrue("'" + accessMode75 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode75.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str76);
    org.junit.Assert.assertTrue("'" + accessMode77 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode77.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl79);
    org.junit.Assert.assertNotNull(defaultLoginContext80);
    org.junit.Assert.assertNotNull(clientConnectionInfo81);
    org.junit.Assert.assertNotNull(securityContext83);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl85);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl87);
  }

  @Test
  public void test1216() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1216");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode18);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler20 = null;
    securityContextEnterpriseImpl10.assertCredentialsNotExpired(securityAuthorizationHandler20);
    java.lang.String str22 = securityContextEnterpriseImpl10.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str22);
  }

  @Test
  public void test1217() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1217");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.Object obj7 = null;
    boolean boolean8 = cachePopulatorExtensionFactory0.equals(obj7);
    java.lang.String str9 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl10 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int11 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int12 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str13 = constraintSemanticsEnterpriseImpl10.getName();
    int int14 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int15 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str16 = constraintSemanticsEnterpriseImpl10.getName();
    boolean boolean17 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) constraintSemanticsEnterpriseImpl10);
    java.lang.String str18 = constraintSemanticsEnterpriseImpl10.getName();
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor19 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor20 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor21 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup22 = null;
    try {
      constraintSemanticsEnterpriseImpl10.validateRelationshipPropertyExistenceConstraint(
          relationshipScanCursor19, propertyCursor20, relationTypeSchemaDescriptor21,
          tokenNameLookup22);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterpriseConstraints" + "'", str13,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "enterpriseConstraints" + "'", str16,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "enterpriseConstraints" + "'", str18,
        "enterpriseConstraints");
  }

  @Test
  public void test1218() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1218");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher6 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher6.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher6.prlcpdForNa((long) 6362, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher6.wapclForNa((long) 6362, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    basePageCacheLoadingWatcher6.prlcpdForNa((long) 0, namedDatabaseId17);
    boolean boolean19 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) basePageCacheLoadingWatcher6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    basePageCacheLoadingWatcher6.wapclForNa((long) 6362, namedDatabaseId21);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test1219() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1219");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    boolean boolean6 = cachePopulatorExtensionFactory0.equals((java.lang.Object) 10.0d);
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext8 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker9 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle10 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext8, componentsChecker9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
  }

  @Test
  public void test1220() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1220");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    java.lang.String str10 = enterpriseTracerFactory0.getName();
    java.time.Clock clock11 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer12 = enterpriseTracerFactory0.createDatabaseTracer(
        clock11);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "verbose" + "'", str10, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer12);
  }

  @Test
  public void test1221() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1221");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
  }

  @Test
  public void test1222() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1222");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.start();
    defaultAuthManager0.clneac();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList5 = defaultAuthManager0.gepiggatgcfList();
    java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
    org.neo4j.kernel.api.security.AuthManager authManager7 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    java.lang.String str20 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl13;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl13;
    authManager7.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str24 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = securityContextEnterpriseImpl13.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext26 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet28 = defaultLoginContext26.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = defaultLoginContext26.authorize(
        idLookup29, "PageCacheProfileLoader", abstractSecurityLog31);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo33 = securityContextEnterpriseImpl32.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext35 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode25, clientConnectionInfo33, "enterpriseConstraints");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext36 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo33);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = defaultAuthManager0.login(
          strMap6, clientConnectionInfo33);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList5);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertTrue("'" + accessMode25 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode25.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext26);
    org.junit.Assert.assertNotNull(strSet28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(clientConnectionInfo33);
    org.junit.Assert.assertNotNull(securityContext35);
    org.junit.Assert.assertNotNull(loginContext36);
  }

  @Test
  public void test1223() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1223");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl10;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode12);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
  }

  @Test
  public void test1224() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1224");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = defaultLoginContext0.authorize(
        idLookup4, "", abstractSecurityLog6);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
  }

  @Test
  public void test1225() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1225");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
  }

  @Test
  public void test1226() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1226");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = defaultLoginContext0.subject();
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject3 = defaultLoginContext0.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo5 = defaultLoginContext0.connectionInfo();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(authSubject3);
    org.junit.Assert.assertNotNull(clientConnectionInfo5);
  }

  @Test
  public void test1227() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1227");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 10, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(0L, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId19);
  }

  @Test
  public void test1228() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1228");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.clneac();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1229() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1229");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(1L, namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 100, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId23);
  }

  @Test
  public void test1230() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1230");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl7 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl7.start();
    securityProviderAuthDisabledImpl7.stop();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl7.authManager();
    authManager10.stop();
    authManager10.start();
    boolean boolean13 = cachePopulatorExtensionFactory0.equals((java.lang.Object) authManager10);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject24 = securityContextEnterpriseImpl19.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode25);
    boolean boolean28 = securityContextEnterpriseImpl26.allowExecuteAdminProcedure((int) (byte) 1);
    authManager10.log("verbose",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl7);
    org.junit.Assert.assertNotNull(authManager10);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
  }

  @Test
  public void test1231() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1231");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.storageengine.api.StorageReader storageReader6 = null;
    org.neo4j.internal.kernel.api.Read read7 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory8 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState9 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor10 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext11 = null;
    org.neo4j.memory.MemoryTracker memoryTracker12 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor13 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader6, read7, cursorFactory8, readableTransactionState9, txStateVisitor10,
          cursorContext11, memoryTracker12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1232() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1232");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = securityContextEnterpriseImpl9.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl9.authorize(
        idLookup11, "localhost", abstractSecurityLog13);
    authManager7.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl14);
    java.util.Set<java.lang.String> strSet16 = securityContextEnterpriseImpl14.roles();
    java.lang.String str17 = securityContextEnterpriseImpl14.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo20 = defaultLoginContext19.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject21 = defaultLoginContext19.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo22 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext23 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = securityContext23.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext25 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet26 = defaultLoginContext25.roeSet();
    java.util.Set<java.lang.String> strSet28 = defaultLoginContext25.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode18, authSubject21, clientConnectionInfo22, accessMode24, strSet28,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl14.withMode(
        accessMode24);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl31.withMode(
        adminAccessMode32);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(authSubject10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(strSet16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(clientConnectionInfo20);
    org.junit.Assert.assertNotNull(authSubject21);
    org.junit.Assert.assertNotNull(securityContext23);
    org.junit.Assert.assertTrue("'" + accessMode24 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode24.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext25);
    org.junit.Assert.assertNotNull(strSet26);
    org.junit.Assert.assertNotNull(strSet28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
  }

  @Test
  public void test1233() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1233");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    java.lang.String str10 = enterpriseTracerFactory0.getName();
    java.time.Clock clock11 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer12 = enterpriseTracerFactory0.createDatabaseTracer(
        clock11);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(lockTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "verbose" + "'", str10, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer12);
  }

  @Test
  public void test1234() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1234");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long10 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize(100L);
    java.util.function.Consumer<java.lang.String> strConsumer15 = null;
    try {
      boolean boolean16 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(1L,
          (long) (short) 100, strConsumer15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
  }

  @Test
  public void test1235() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1235");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl7 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl7.start();
    securityProviderAuthDisabledImpl7.stop();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl7.authManager();
    authManager10.stop();
    authManager10.start();
    boolean boolean13 = cachePopulatorExtensionFactory0.equals((java.lang.Object) authManager10);
    boolean boolean15 = cachePopulatorExtensionFactory0.equals((java.lang.Object) "volumetric");
    java.lang.String str16 = cachePopulatorExtensionFactory0.toString();
    java.lang.Class<?> wildcardClass17 = cachePopulatorExtensionFactory0.getClass();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl7);
    org.junit.Assert.assertNotNull(authManager10);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertEquals(
        "'" + str16 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str16, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(wildcardClass17);
  }

  @Test
  public void test1236() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1236");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor4 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor4, relationshipScanCursor5, propertyCursor6,
          relationTypeSchemaDescriptor7, tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1237() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1237");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.lock.LockTracer lockTracer10 = enterpriseTracerFactory0.createLockTracer(clock9);
    java.time.Clock clock11 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer12 = enterpriseTracerFactory0.createDatabaseTracer(
        clock11);
    java.lang.String str13 = enterpriseTracerFactory0.getName();
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(lockTracer10);
    org.junit.Assert.assertNotNull(databaseTracer12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "verbose" + "'", str13, "verbose");
  }

  @Test
  public void test1238() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1238");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor3 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor4 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 10, constraintDescriptor3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
  }

  @Test
  public void test1239() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1239");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList2 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList2);
    org.junit.Assert.assertNotNull(strMapList4);
  }

  @Test
  public void test1240() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1240");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor7,
          propertyCursor8, labelSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1241() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1241");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl2.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl2.allowsAdminAction(adminActionOnResource8);
    boolean boolean10 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) adminActionOnResource8);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl11 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl11.start();
    securityProviderAuthDisabledImpl11.stop();
    securityProviderAuthDisabledImpl11.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl11.inClusterAuthManager();
    securityProviderAuthDisabledImpl11.start();
    org.neo4j.kernel.api.security.AuthManager authManager17 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager19 = securityProviderAuthDisabledImpl11.loopbackAuthManager();
    boolean boolean20 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl11);
    org.neo4j.logging.Log log21 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl22 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl22.prlcpdForNa((long) (short) 1, namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = null;
    pageCacheLoadingWatcherDefaultImpl22.wapclForNa((long) 6362, namedDatabaseId31);
    boolean boolean33 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl22);
    java.lang.String str34 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.logging.Log log35 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl36 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId38 = null;
    pageCacheLoadingWatcherDefaultImpl36.prlcpdForNa((long) (short) 1, namedDatabaseId38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    pageCacheLoadingWatcherDefaultImpl36.wamsrdForNa(namedDatabaseId40);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId43 = null;
    pageCacheLoadingWatcherDefaultImpl36.wapclForNa((long) (byte) 100, namedDatabaseId43);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId46 = null;
    pageCacheLoadingWatcherDefaultImpl36.wapclForNa((long) (-1), namedDatabaseId46);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId49 = null;
    pageCacheLoadingWatcherDefaultImpl36.wapclForNa((long) (short) -1, namedDatabaseId49);
    boolean boolean51 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl36);
    java.lang.String str52 = cachePopulatorExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl11);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager17);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str34, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertEquals(
        "'" + str52 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str52, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test1242() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1242");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (byte) -1, namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId4 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId4);
  }

  @Test
  public void test1243() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1243");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext10 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = securityContext10.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo9, accessMode11,
        "Property existence constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl14.authorize(
        idLookup15, "neo4j", abstractSecurityLog17);
    java.lang.String str19 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl18.withMode(
        accessMode20);
    java.lang.String str22 = securityContextEnterpriseImpl18.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject23 = securityContextEnterpriseImpl18.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = securityContextEnterpriseImpl18.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject25 = securityContextEnterpriseImpl18.subject();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl26 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl26.start();
    securityProviderAuthDisabledImpl26.stop();
    org.neo4j.kernel.api.security.AuthManager authManager29 = securityProviderAuthDisabledImpl26.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager30 = securityProviderAuthDisabledImpl26.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager30.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl32);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup36 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl35.authorize(
        idLookup36, "neo4j", abstractSecurityLog38);
    authManager30.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl39);
    java.lang.String str41 = securityContextEnterpriseImpl39.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode42 = securityContextEnterpriseImpl39.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl18.withMode(
        accessMode42);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo9, accessMode42,
        "Property existence constraint requires Neo4j Enterprise Edition");
    java.lang.String str46 = securityContextEnterpriseImpl45.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(securityContext10);
    org.junit.Assert.assertTrue("'" + accessMode11 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode11.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNull(str19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject23);
    org.junit.Assert.assertTrue("'" + accessMode24 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode24.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject25);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl26);
    org.junit.Assert.assertNotNull(authManager29);
    org.junit.Assert.assertNotNull(authManager30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AUTH_DISABLED with FULL" + "'", str41,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode42 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode42.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertEquals(
        "'" + str46 + "' != '" + "Property existence constraint requires Neo4j Enterprise Edition"
            + "'", str46, "Property existence constraint requires Neo4j Enterprise Edition");
  }

  @Test
  public void test1244() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1244");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList6 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList6);
  }

  @Test
  public void test1245() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1245");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = defaultLoginContext7.connectionInfo();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo10 = defaultLoginContext7.connectionInfo();
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext11 = defaultAuthManager0.login(
          strMap6, clientConnectionInfo10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(clientConnectionInfo10);
  }

  @Test
  public void test1246() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1246");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    authManager4.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
  }

  @Test
  public void test1247() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1247");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str8 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str9 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str10 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str11 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str12 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "continuous" + "'", str6, "continuous");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "continuous" + "'", str7, "continuous");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "continuous" + "'", str8, "continuous");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "continuous" + "'", str9, "continuous");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "continuous" + "'", str10, "continuous");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "continuous" + "'", str11, "continuous");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "continuous" + "'", str12, "continuous");
  }

  @Test
  public void test1248() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1248");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 10, constraintDescriptor5);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1249() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1249");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory8 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory8.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer12 = enterpriseTracerFactory8.createDatabaseTracer(
        clock11);
    java.time.Clock clock13 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer14 = enterpriseTracerFactory8.createDatabaseTracer(
        clock13);
    java.lang.String str15 = enterpriseTracerFactory8.getName();
    java.time.Clock clock16 = null;
    org.neo4j.lock.LockTracer lockTracer17 = enterpriseTracerFactory8.createLockTracer(clock16);
    java.time.Clock clock18 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer19 = enterpriseTracerFactory8.createDatabaseTracer(
        clock18);
    java.time.Clock clock20 = null;
    org.neo4j.lock.LockTracer lockTracer21 = enterpriseTracerFactory8.createLockTracer(clock20);
    java.time.Clock clock22 = null;
    org.neo4j.lock.LockTracer lockTracer23 = enterpriseTracerFactory8.createLockTracer(clock22);
    boolean boolean24 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) enterpriseTracerFactory8);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(databaseTracer12);
    org.junit.Assert.assertNotNull(databaseTracer14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "verbose" + "'", str15, "verbose");
    org.junit.Assert.assertNotNull(lockTracer17);
    org.junit.Assert.assertNotNull(databaseTracer19);
    org.junit.Assert.assertNotNull(lockTracer21);
    org.junit.Assert.assertNotNull(lockTracer23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test1250() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1250");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode12);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl13;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl13;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl13;
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
  }

  @Test
  public void test1251() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1251");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = defaultLoginContext15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext15.authorize(
        idLookup20, "hi!", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = defaultLoginContext15.authorize(
        idLookup24, "neo4j", abstractSecurityLog26);
    java.lang.Class<?> wildcardClass28 = defaultLoginContext15.getClass();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(wildcardClass28);
  }

  @Test
  public void test1252() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1252");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str5 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config6 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning8 = null;
    org.neo4j.logging.LogProvider logProvider9 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold10 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config6, systemNanoClock7, logPruning8, logProvider9);
    org.neo4j.configuration.Config config11 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning13 = null;
    org.neo4j.logging.LogProvider logProvider14 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold15 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config11, systemNanoClock12, logPruning13, logProvider14);
    org.neo4j.configuration.Config config16 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock17 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning18 = null;
    org.neo4j.logging.LogProvider logProvider19 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold20 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config16, systemNanoClock17, logPruning18, logProvider19);
    java.lang.String str21 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str22 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "volumetric" + "'", str5, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold10);
    org.junit.Assert.assertNotNull(checkPointThreshold15);
    org.junit.Assert.assertNotNull(checkPointThreshold20);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "volumetric" + "'", str21, "volumetric");
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "volumetric" + "'", str22, "volumetric");
  }

  @Test
  public void test1253() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1253");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.checkPointHappened(10000L);
    checkPointThresholdVolumetricPolicy1.initialize((long) (byte) 10);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
  }

  @Test
  public void test1254() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1254");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor8 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor9 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor10 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor11 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup12 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor8, relationshipScanCursor9, propertyCursor10,
          relationTypeSchemaDescriptor11, tokenNameLookup12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
  }

  @Test
  public void test1255() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1255");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 'a', namedDatabaseId19);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId21);
  }

  @Test
  public void test1256() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1256");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject24 = securityContextEnterpriseImpl23.subject();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler25 = null;
    securityContextEnterpriseImpl23.assertCredentialsNotExpired(securityAuthorizationHandler25);
    boolean boolean28 = securityContextEnterpriseImpl23.allowExecuteAdminProcedure(
        (int) (short) -1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(authSubject24);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
  }

  @Test
  public void test1257() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1257");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
  }

  @Test
  public void test1258() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1258");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode11);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertTrue("'" + accessMode13 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode13.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
  }

  @Test
  public void test1259() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1259");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler1 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler1);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.authorize(
        idLookup3, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog5);
    java.util.Set<java.lang.String> strSet7 = securityContextEnterpriseImpl0.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContextEnterpriseImpl0.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext10 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = defaultLoginContext10.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl12.authorize(
        idLookup13, "neo4j", abstractSecurityLog15);
    java.lang.String str17 = securityContextEnterpriseImpl16.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl16.withMode(
        accessMode18);
    java.lang.String str20 = securityContextEnterpriseImpl16.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource21 = null;
    boolean boolean22 = securityContextEnterpriseImpl16.allowsAdminAction(adminActionOnResource21);
    java.lang.String str23 = securityContextEnterpriseImpl16.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl16;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl16;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = securityContextEnterpriseImpl16.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup28 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl27.authorize(
        idLookup28, "neo4j", abstractSecurityLog30);
    java.lang.String str32 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource33 = null;
    boolean boolean34 = securityContextEnterpriseImpl27.allowsAdminAction(adminActionOnResource33);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl27.authorize(
        idLookup35, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog37);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContextEnterpriseImpl38.mode();
    java.lang.String[] strArray52 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean54 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet53, strArray52);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode9, authSubject11, clientConnectionInfo26, accessMode39,
        (java.util.Set<java.lang.String>) strSet53, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo8, accessMode39, "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext59 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo8);
    java.util.Set<java.lang.String> strSet60 = defaultLoginContext59.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup61 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog63 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl64 = defaultLoginContext59.authorize(
        idLookup61, "", abstractSecurityLog63);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertNotNull(defaultLoginContext10);
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNull(str32);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray52);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(defaultLoginContext59);
    org.junit.Assert.assertNotNull(strSet60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl64);
  }

  @Test
  public void test1260() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1260");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
  }

  @Test
  public void test1261() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1261");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.time.Clock clock8 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer9 = enterpriseTracerFactory0.createDatabaseTracer(
        clock8);
    java.lang.String str10 = enterpriseTracerFactory0.getName();
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "verbose" + "'", str10, "verbose");
  }

  @Test
  public void test1262() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1262");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource15 = null;
    boolean boolean16 = securityContextEnterpriseImpl14.allowsAdminAction(adminActionOnResource15);
    boolean boolean18 = securityContextEnterpriseImpl14.allowExecuteAdminProcedure(1);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource19 = null;
    boolean boolean20 = securityContextEnterpriseImpl14.allowsAdminAction(adminActionOnResource19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
  }

  @Test
  public void test1263() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1263");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor8 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor9 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor10 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup11 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor8, propertyCursor9,
          labelSchemaDescriptor10, tokenNameLookup11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
  }

  @Test
  public void test1264() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1264");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 10, namedDatabaseId11);
  }

  @Test
  public void test1265() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1265");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet1 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet4 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "hi!", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = defaultLoginContext0.authorize(
        idLookup9, "AUTH_DISABLED with FULL", abstractSecurityLog11);
    java.util.Set<java.lang.String> strSet13 = securityContextEnterpriseImpl12.roles();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet1);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(strSet4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(strSet13);
  }

  @Test
  public void test1266() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1266");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(1L, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId9);
  }

  @Test
  public void test1267() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1267");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode8);
    boolean boolean11 = securityContextEnterpriseImpl9.allowExecuteAdminProcedure(0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
  }

  @Test
  public void test1268() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1268");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config3 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock4 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning5 = null;
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold7 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config3, systemNanoClock4, logPruning5, logProvider6);
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    java.lang.String str13 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config14 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock15 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning16 = null;
    org.neo4j.logging.LogProvider logProvider17 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold18 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config14, systemNanoClock15, logPruning16, logProvider17);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold7);
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "volumetric" + "'", str13, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold18);
  }

  @Test
  public void test1269() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1269");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor5,
          propertyCursor6, labelSchemaDescriptor7, tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1270() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1270");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode15 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext16 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = defaultLoginContext16.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = defaultLoginContext16.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext20 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = securityContext20.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext22 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet23 = defaultLoginContext22.roeSet();
    java.util.Set<java.lang.String> strSet25 = defaultLoginContext22.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode15, authSubject18, clientConnectionInfo19, accessMode21, strSet25,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl13.withMode(
        accessMode21);
    java.lang.String str29 = securityContextEnterpriseImpl28.database();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(defaultLoginContext16);
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContext20);
    org.junit.Assert.assertTrue("'" + accessMode21 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode21.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext22);
    org.junit.Assert.assertNotNull(strSet23);
    org.junit.Assert.assertNotNull(strSet25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNull(str29);
  }

  @Test
  public void test1271() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1271");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    authManager4.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str15 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl13.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext17 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNotNull(defaultLoginContext17);
  }

  @Test
  public void test1272() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1272");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(nodeCursor5,
          propertyCursor6, labelSchemaDescriptor7, tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1273() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1273");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.start();
    defaultAuthManager0.claauch();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList7 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(strMapList7);
  }

  @Test
  public void test1274() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1274");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext3 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo4 = defaultLoginContext3.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext5 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo4);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext7 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode2, clientConnectionInfo4,
        "Node Key constraint requires Neo4j Enterprise Edition");
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContext7.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext10 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = securityContext10.mode();
    java.lang.String str12 = securityContext10.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = securityContext10.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject14 = securityContext10.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = defaultLoginContext15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext17 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext18 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "neo4j", abstractSecurityLog22);
    java.lang.String str24 = securityContextEnterpriseImpl23.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl23.withMode(
        accessMode25);
    java.lang.String str27 = securityContextEnterpriseImpl23.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject28 = securityContextEnterpriseImpl23.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = securityContextEnterpriseImpl23.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext30 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet32 = defaultLoginContext30.roeSet();
    java.util.Set<java.lang.String> strSet33 = defaultLoginContext30.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode9, authSubject14, clientConnectionInfo16, accessMode29, strSet33, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext37 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo38 = defaultLoginContext37.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext39 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo38);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup41 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl40.authorize(
        idLookup41, "neo4j", abstractSecurityLog43);
    java.lang.String str45 = securityContextEnterpriseImpl44.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl44.withMode(
        accessMode46);
    java.lang.String str48 = securityContextEnterpriseImpl44.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource49 = null;
    boolean boolean50 = securityContextEnterpriseImpl44.allowsAdminAction(adminActionOnResource49);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode51 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = securityContextEnterpriseImpl44.withMode(
        adminAccessMode51);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode53 = securityContextEnterpriseImpl44.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo38, accessMode53, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl57 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo16, accessMode53,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup59 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog61 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = securityContextEnterpriseImpl58.authorize(
        idLookup59, "neo4j", abstractSecurityLog61);
    java.lang.String str63 = securityContextEnterpriseImpl62.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode64 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = securityContextEnterpriseImpl62.withMode(
        accessMode64);
    java.lang.String str66 = securityContextEnterpriseImpl62.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject67 = securityContextEnterpriseImpl62.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode68 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = securityContextEnterpriseImpl62.withMode(
        adminAccessMode68);
    boolean boolean71 = securityContextEnterpriseImpl69.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode72 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = securityContextEnterpriseImpl69.withMode(
        adminAccessMode72);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode74 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl75 = securityContextEnterpriseImpl73.withMode(
        adminAccessMode74);
    java.util.Set<java.lang.String> strSet76 = securityContextEnterpriseImpl73.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl78 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject1, clientConnectionInfo8, accessMode53, strSet76,
        "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl79 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject80 = securityContextEnterpriseImpl79.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup81 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog83 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl84 = securityContextEnterpriseImpl79.authorize(
        idLookup81, "localhost", abstractSecurityLog83);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource85 = null;
    boolean boolean86 = securityContextEnterpriseImpl79.allowsAdminAction(adminActionOnResource85);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode87 = securityContextEnterpriseImpl79.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl89 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo8, accessMode87, "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(defaultLoginContext3);
    org.junit.Assert.assertNotNull(clientConnectionInfo4);
    org.junit.Assert.assertNotNull(loginContext5);
    org.junit.Assert.assertNotNull(securityContext7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertNotNull(securityContext10);
    org.junit.Assert.assertTrue("'" + accessMode11 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode11.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertTrue("'" + accessMode13 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode13.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNotNull(defaultLoginContext17);
    org.junit.Assert.assertNotNull(defaultLoginContext18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNull(str24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "AUTH_DISABLED with FULL" + "'", str27,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject28);
    org.junit.Assert.assertTrue("'" + accessMode29 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode29.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext30);
    org.junit.Assert.assertNotNull(strSet32);
    org.junit.Assert.assertNotNull(strSet33);
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(defaultLoginContext37);
    org.junit.Assert.assertNotNull(clientConnectionInfo38);
    org.junit.Assert.assertNotNull(loginContext39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertNull(str45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AUTH_DISABLED with FULL" + "'", str48,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertTrue("'" + accessMode53 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode53.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNull(str63);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
    org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AUTH_DISABLED with FULL" + "'", str66,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl75);
    org.junit.Assert.assertNotNull(strSet76);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl79);
    org.junit.Assert.assertNotNull(authSubject80);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl84);
    org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    org.junit.Assert.assertTrue("'" + accessMode87 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode87.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl89);
  }

  @Test
  public void test1275() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1275");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor5 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor5, nodeCursor6, propertyCursor7, labelSchemaDescriptor8,
          tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1276() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1276");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl17.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = securityContextEnterpriseImpl17.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup21 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl20.authorize(
        idLookup21, "neo4j", abstractSecurityLog23);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl20.withMode(
        accessMode25);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup27 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl20.authorize(
        idLookup27, "", abstractSecurityLog29);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup31 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl30.authorize(
        idLookup31, "AUTH_DISABLED with FULL", abstractSecurityLog33);
    java.lang.String str35 = securityContextEnterpriseImpl30.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode36 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl37 = securityContextEnterpriseImpl30.withMode(
        adminAccessMode36);
    java.lang.String str38 = securityContextEnterpriseImpl37.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContextEnterpriseImpl37.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext41 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo42 = defaultLoginContext41.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext43 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo42);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext45 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode40, clientConnectionInfo42,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext46 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo42);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext48 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode39, clientConnectionInfo42, "neo4j");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext50 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode19, clientConnectionInfo42, "user '' with FULL");
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler51 = null;
    securityContext50.assertCredentialsNotExpired(securityAuthorizationHandler51);
    java.lang.String str53 = securityContext50.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNull(str18);
    org.junit.Assert.assertTrue("'" + accessMode19 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode19.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AUTH_DISABLED with FULL" + "'", str35,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl37);
    org.junit.Assert.assertNull(str38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext41);
    org.junit.Assert.assertNotNull(clientConnectionInfo42);
    org.junit.Assert.assertNotNull(loginContext43);
    org.junit.Assert.assertNotNull(securityContext45);
    org.junit.Assert.assertNotNull(defaultLoginContext46);
    org.junit.Assert.assertNotNull(securityContext48);
    org.junit.Assert.assertNotNull(securityContext50);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "AUTH_DISABLED with FULL" + "'", str53,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test1277() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1277");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(100L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) -1, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 10, namedDatabaseId17);
  }

  @Test
  public void test1278() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1278");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl0.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl0.authorize(
        idLookup8, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = securityContextEnterpriseImpl0.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup14 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl13.authorize(
        idLookup14, "neo4j", abstractSecurityLog16);
    java.lang.String str18 = securityContextEnterpriseImpl17.database();
    java.lang.String str19 = securityContextEnterpriseImpl17.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl17.withMode(
        adminAccessMode20);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo22 = securityContextEnterpriseImpl17.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext23 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode24 = securityContext23.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo22, accessMode24,
        "Property existence constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo22);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl28.authorize(
        idLookup29, "neo4j", abstractSecurityLog31);
    java.lang.String str33 = securityContextEnterpriseImpl32.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl32.withMode(
        accessMode34);
    java.lang.String str36 = securityContextEnterpriseImpl32.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource37 = null;
    boolean boolean38 = securityContextEnterpriseImpl32.allowsAdminAction(adminActionOnResource37);
    java.lang.String str39 = securityContextEnterpriseImpl32.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl32.withMode(
        adminAccessMode40);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode42 = securityContextEnterpriseImpl32.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode43 = securityContextEnterpriseImpl32.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo22, accessMode43, "PageCacheProfileLoader");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext47 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode12, clientConnectionInfo22, "continuous");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + accessMode12 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode12.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNull(str18);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AUTH_DISABLED with FULL" + "'", str19,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(clientConnectionInfo22);
    org.junit.Assert.assertNotNull(securityContext23);
    org.junit.Assert.assertTrue("'" + accessMode24 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode24.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AUTH_DISABLED with FULL" + "'", str36,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AUTH_DISABLED with FULL" + "'", str39,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertTrue("'" + accessMode42 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode42.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue("'" + accessMode43 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode43.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNotNull(securityContext47);
  }

  @Test
  public void test1279() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1279");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl2.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl2.allowsAdminAction(adminActionOnResource8);
    boolean boolean10 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) adminActionOnResource8);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl11 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl11.start();
    securityProviderAuthDisabledImpl11.stop();
    securityProviderAuthDisabledImpl11.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl11.inClusterAuthManager();
    securityProviderAuthDisabledImpl11.start();
    org.neo4j.kernel.api.security.AuthManager authManager17 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager19 = securityProviderAuthDisabledImpl11.loopbackAuthManager();
    boolean boolean20 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl11);
    org.neo4j.logging.Log log21 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl22 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl22.prlcpdForNa((long) (short) 1, namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = null;
    pageCacheLoadingWatcherDefaultImpl22.wapclForNa((long) 6362, namedDatabaseId31);
    boolean boolean33 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl22);
    java.lang.String str34 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting35 = io.github.onograph.config.Metrics.settingDaaeonbBoolean;
    boolean boolean36 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting35);
    java.lang.String str37 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl11);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager17);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str34, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(booleanSetting35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "pagecachewarmer" + "'", str37,
        "pagecachewarmer");
  }

  @Test
  public void test1280() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1280");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.init();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
  }

  @Test
  public void test1281() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1281");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(authManager9);
  }

  @Test
  public void test1282() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1282");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.lock.LockTracer lockTracer5 = enterpriseTracerFactory0.createLockTracer(clock4);
    java.time.Clock clock6 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer7 = enterpriseTracerFactory0.createDatabaseTracer(
        clock6);
    java.time.Clock clock8 = null;
    org.neo4j.lock.LockTracer lockTracer9 = enterpriseTracerFactory0.createLockTracer(clock8);
    java.lang.String str10 = enterpriseTracerFactory0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(lockTracer5);
    org.junit.Assert.assertNotNull(databaseTracer7);
    org.junit.Assert.assertNotNull(lockTracer9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "verbose" + "'", str10, "verbose");
  }

  @Test
  public void test1283() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1283");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.lock.LockTracer lockTracer6 = enterpriseTracerFactory0.createLockTracer(clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory0.createDatabaseTracer(
        clock7);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(lockTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
  }

  @Test
  public void test1284() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1284");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str8 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = securityContextEnterpriseImpl9.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode11);
    java.lang.String str13 = securityContextEnterpriseImpl9.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl9.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext16 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = defaultLoginContext16.authorize(
        idLookup17, ".cacheprof", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = defaultLoginContext16.connectionInfo();
    boolean boolean22 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultLoginContext16);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup23 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = defaultLoginContext16.authorize(
        idLookup23, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        abstractSecurityLog25);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str8, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(authSubject10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNull(str13);
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(defaultLoginContext16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
  }

  @Test
  public void test1285() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1285");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl13.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode19);
    boolean boolean22 = securityContextEnterpriseImpl20.allowExecuteAdminProcedure((int) (byte) 1);
    authManager7.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl20);
    authManager7.stop();
    java.lang.Class<?> wildcardClass25 = authManager7.getClass();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(wildcardClass25);
  }

  @Test
  public void test1286() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1286");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1287() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1287");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor10 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          10L, uniquenessConstraintDescriptor8, (long) (byte) 10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1288() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1288");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor5 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeLabelIndexCursor5,
          nodeCursor6, propertyCursor7, labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1289() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1289");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.time.Clock clock6 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer7 = enterpriseTracerFactory0.createDatabaseTracer(
        clock6);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertNotNull(databaseTracer7);
  }

  @Test
  public void test1290() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1290");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor4 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor4, relationshipScanCursor5, propertyCursor6,
          relationTypeSchemaDescriptor7, tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1291() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1291");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.logging.Log log6 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl7 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl7.prlcpdForNa((long) (short) 1, namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl7.wamsrdForNa(namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl7.wapclForNa((long) (byte) 100, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl7.wapclForNa((long) (-1), namedDatabaseId17);
    boolean boolean19 = cachePopulatorExtensionFactory0.equals((java.lang.Object) (-1));
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo20 = null;
    org.neo4j.internal.kernel.api.security.LoginContext loginContext21 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo20);
    boolean boolean22 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) clientConnectionInfo20);
    java.lang.String str23 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext24 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker25 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle26 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext24, componentsChecker25);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertNotNull(loginContext21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pagecachewarmer" + "'", str23,
        "pagecachewarmer");
  }

  @Test
  public void test1292() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1292");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    boolean boolean6 = cachePopulatorExtensionFactory0.equals((java.lang.Object) 10.0d);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl11.authorize(
        idLookup13, "localhost", abstractSecurityLog15);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = securityContextEnterpriseImpl11.connectionInfo();
    boolean boolean18 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) clientConnectionInfo17);
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext19 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker20 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle21 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext19, componentsChecker20);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
  }

  @Test
  public void test1293() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1293");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor7 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor8 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor9 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor10 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup11 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor7, nodeCursor8, propertyCursor9, labelSchemaDescriptor10,
          tokenNameLookup11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1294() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1294");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1295() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1295");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor10 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) 1, uniquenessConstraintDescriptor8, (long) 'a');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test1296() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1296");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    try {
      pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1297() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1297");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config3 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock4 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning5 = null;
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold7 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config3, systemNanoClock4, logPruning5, logProvider6);
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock14 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning15 = null;
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold17 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config13, systemNanoClock14, logPruning15, logProvider16);
    org.neo4j.configuration.Config config18 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock19 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning20 = null;
    org.neo4j.logging.LogProvider logProvider21 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold22 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config18, systemNanoClock19, logPruning20, logProvider21);
    org.neo4j.configuration.Config config23 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock24 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning25 = null;
    org.neo4j.logging.LogProvider logProvider26 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold27 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config23, systemNanoClock24, logPruning25, logProvider26);
    java.lang.String str28 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold7);
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertNotNull(checkPointThreshold17);
    org.junit.Assert.assertNotNull(checkPointThreshold22);
    org.junit.Assert.assertNotNull(checkPointThreshold27);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "volumetric" + "'", str28, "volumetric");
  }

  @Test
  public void test1298() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1298");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl23;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl25 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl25.start();
    securityProviderAuthDisabledImpl25.start();
    org.neo4j.kernel.api.security.AuthManager authManager28 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    securityProviderAuthDisabledImpl25.stop();
    org.neo4j.kernel.api.security.AuthManager authManager30 = securityProviderAuthDisabledImpl25.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager31 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager32 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl34.authorize(
        idLookup35, "neo4j", abstractSecurityLog37);
    java.lang.String str39 = securityContextEnterpriseImpl38.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl38.withMode(
        accessMode40);
    java.lang.String str42 = securityContextEnterpriseImpl38.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject43 = securityContextEnterpriseImpl38.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode44 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = securityContextEnterpriseImpl38.withMode(
        adminAccessMode44);
    boolean boolean47 = securityContextEnterpriseImpl45.allowExecuteAdminProcedure((int) (byte) 1);
    authManager32.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl45);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup50 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog52 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl49.authorize(
        idLookup50, "neo4j", abstractSecurityLog52);
    java.lang.String str54 = securityContextEnterpriseImpl53.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode55 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = securityContextEnterpriseImpl53.withMode(
        adminAccessMode55);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject57 = securityContextEnterpriseImpl56.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode58 = securityContextEnterpriseImpl56.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl45.withMode(
        accessMode58);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl60 = securityContextEnterpriseImpl23.withMode(
        accessMode58);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl61 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject62 = securityContextEnterpriseImpl61.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode63 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl64 = securityContextEnterpriseImpl61.withMode(
        adminAccessMode63);
    java.lang.String str65 = securityContextEnterpriseImpl61.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo66 = securityContextEnterpriseImpl61.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext67 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo66);
    org.neo4j.kernel.api.security.AuthManager authManager68 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl70 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup71 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog73 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl74 = securityContextEnterpriseImpl70.authorize(
        idLookup71, "neo4j", abstractSecurityLog73);
    java.lang.String str75 = securityContextEnterpriseImpl74.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode76 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = securityContextEnterpriseImpl74.withMode(
        accessMode76);
    java.lang.String str78 = securityContextEnterpriseImpl74.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource79 = null;
    boolean boolean80 = securityContextEnterpriseImpl74.allowsAdminAction(adminActionOnResource79);
    java.lang.String str81 = securityContextEnterpriseImpl74.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl74;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl74;
    authManager68.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl74);
    java.lang.String str85 = securityContextEnterpriseImpl74.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode86 = securityContextEnterpriseImpl74.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl88 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo66, accessMode86, "enterpriseConstraints");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext90 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode58, clientConnectionInfo66, "user '' with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl25);
    org.junit.Assert.assertNotNull(authManager28);
    org.junit.Assert.assertNotNull(authManager30);
    org.junit.Assert.assertNotNull(authManager31);
    org.junit.Assert.assertNotNull(authManager32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNull(str39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AUTH_DISABLED with FULL" + "'", str42,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject43);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertNull(str54);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(authSubject57);
    org.junit.Assert.assertTrue("'" + accessMode58 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode58.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl61);
    org.junit.Assert.assertNotNull(authSubject62);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl64);
    org.junit.Assert.assertNull(str65);
    org.junit.Assert.assertNotNull(clientConnectionInfo66);
    org.junit.Assert.assertNotNull(defaultLoginContext67);
    org.junit.Assert.assertNotNull(authManager68);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl70);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl74);
    org.junit.Assert.assertNull(str75);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertEquals("'" + str78 + "' != '" + "AUTH_DISABLED with FULL" + "'", str78,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    org.junit.Assert.assertEquals("'" + str81 + "' != '" + "AUTH_DISABLED with FULL" + "'", str81,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str85);
    org.junit.Assert.assertTrue("'" + accessMode86 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode86.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl88);
    org.junit.Assert.assertNotNull(securityContext90);
  }

  @Test
  public void test1299() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1299");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler12 = null;
    securityContextEnterpriseImpl11.assertCredentialsNotExpired(securityAuthorizationHandler12);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup14 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl11.authorize(
        idLookup14, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog16);
    java.util.Set<java.lang.String> strSet18 = securityContextEnterpriseImpl11.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = securityContextEnterpriseImpl11.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode20 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = defaultLoginContext21.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = securityContextEnterpriseImpl23.authorize(
        idLookup24, "neo4j", abstractSecurityLog26);
    java.lang.String str28 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl27.withMode(
        accessMode29);
    java.lang.String str31 = securityContextEnterpriseImpl27.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource32 = null;
    boolean boolean33 = securityContextEnterpriseImpl27.allowsAdminAction(adminActionOnResource32);
    java.lang.String str34 = securityContextEnterpriseImpl27.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl27;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl27;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo37 = securityContextEnterpriseImpl27.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup39 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog41 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = securityContextEnterpriseImpl38.authorize(
        idLookup39, "neo4j", abstractSecurityLog41);
    java.lang.String str43 = securityContextEnterpriseImpl38.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource44 = null;
    boolean boolean45 = securityContextEnterpriseImpl38.allowsAdminAction(adminActionOnResource44);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup46 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl38.authorize(
        idLookup46, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog48);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode50 = securityContextEnterpriseImpl49.mode();
    java.lang.String[] strArray63 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet64 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean65 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet64, strArray63);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode20, authSubject22, clientConnectionInfo37, accessMode50,
        (java.util.Set<java.lang.String>) strSet64, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo19, accessMode50, "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo70 = securityContextEnterpriseImpl69.connectionInfo();
    authManager9.log("user '' with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl69);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode72 = securityContextEnterpriseImpl69.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup74 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog76 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = securityContextEnterpriseImpl73.authorize(
        idLookup74, "neo4j", abstractSecurityLog76);
    java.lang.String str78 = securityContextEnterpriseImpl77.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode79 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl80 = securityContextEnterpriseImpl77.withMode(
        accessMode79);
    java.lang.String str81 = securityContextEnterpriseImpl77.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo82 = securityContextEnterpriseImpl77.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext83 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo82);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext85 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode72, clientConnectionInfo82, "neo4j");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(strSet18);
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNull(str28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AUTH_DISABLED with FULL" + "'", str31,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AUTH_DISABLED with FULL" + "'", str34,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNull(str43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertTrue("'" + accessMode50 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode50.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray63);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertNotNull(clientConnectionInfo70);
    org.junit.Assert.assertTrue("'" + accessMode72 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode72.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertNull(str78);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl80);
    org.junit.Assert.assertEquals("'" + str81 + "' != '" + "AUTH_DISABLED with FULL" + "'", str81,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo82);
    org.junit.Assert.assertNotNull(loginContext83);
    org.junit.Assert.assertNotNull(securityContext85);
  }

  @Test
  public void test1300() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1300");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1301() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1301");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode7 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNull(str6);
    org.junit.Assert.assertTrue(
        "'" + accessMode7 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode7.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1302() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1302");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler8 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
  }

  @Test
  public void test1303() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1303");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    authManager7.shutdown();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext10 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet11 = defaultLoginContext10.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = defaultLoginContext10.authorize(
        idLookup12, ".cacheprof", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = defaultLoginContext10.authorize(
        idLookup16, "", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject20 = securityContextEnterpriseImpl19.subject();
    authManager7.log("pagecachewarmer",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(defaultLoginContext10);
    org.junit.Assert.assertNotNull(strSet11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(authSubject20);
  }

  @Test
  public void test1304() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1304");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl3.authorize(
        idLookup4, "neo4j", abstractSecurityLog6);
    java.lang.String str8 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl7.withMode(
        accessMode9);
    java.lang.String str11 = securityContextEnterpriseImpl7.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource12 = null;
    boolean boolean13 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource12);
    java.lang.String str14 = securityContextEnterpriseImpl7.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl7;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl7;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = securityContextEnterpriseImpl7.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl18.authorize(
        idLookup19, "neo4j", abstractSecurityLog21);
    java.lang.String str23 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl18.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup26 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl18.authorize(
        idLookup26, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog28);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = securityContextEnterpriseImpl29.mode();
    java.lang.String[] strArray43 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean45 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet44, strArray43);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo17, accessMode30,
        (java.util.Set<java.lang.String>) strSet44, "user '' with FULL");
    java.lang.String str48 = securityContextEnterpriseImpl47.description();
    java.util.Set<java.lang.String> strSet49 = securityContextEnterpriseImpl47.roles();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNull(str8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AUTH_DISABLED with FULL" + "'", str14,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNull(str23);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertTrue("'" + accessMode30 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode30.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "user '' with FULL" + "'", str48,
        "user '' with FULL");
    org.junit.Assert.assertNotNull(strSet49);
  }

  @Test
  public void test1305() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1305");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode6);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContextEnterpriseImpl7.connectionInfo();
    java.lang.String str9 = securityContextEnterpriseImpl7.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "user '' with FULL" + "'", str9,
        "user '' with FULL");
  }

  @Test
  public void test1306() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1306");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 100);
    long long4 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 10);
    checkPointThresholdVolumetricPolicy1.initialize((long) (byte) 10);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
  }

  @Test
  public void test1307() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1307");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject17 = securityContextEnterpriseImpl7.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl7.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = defaultLoginContext20.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = defaultLoginContext20.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext24 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = securityContext24.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext26 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet27 = defaultLoginContext26.roeSet();
    java.util.Set<java.lang.String> strSet29 = defaultLoginContext26.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode19, authSubject22, clientConnectionInfo23, accessMode25, strSet29,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup33 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl32.authorize(
        idLookup33, "neo4j", abstractSecurityLog35);
    java.lang.String str37 = securityContextEnterpriseImpl36.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl36.withMode(
        accessMode38);
    java.lang.String str40 = securityContextEnterpriseImpl36.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject41 = securityContextEnterpriseImpl36.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl36.withMode(
        adminAccessMode42);
    boolean boolean45 = securityContextEnterpriseImpl43.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl43.withMode(
        adminAccessMode46);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo48 = securityContextEnterpriseImpl43.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext50 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode25, clientConnectionInfo48, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode25, "pagecachewarmer");
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl53 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl53.start();
    securityProviderAuthDisabledImpl53.start();
    org.neo4j.kernel.api.security.AuthManager authManager56 = securityProviderAuthDisabledImpl53.inClusterAuthManager();
    securityProviderAuthDisabledImpl53.stop();
    org.neo4j.kernel.api.security.AuthManager authManager58 = securityProviderAuthDisabledImpl53.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager59 = securityProviderAuthDisabledImpl53.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager60 = securityProviderAuthDisabledImpl53.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup63 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog65 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = securityContextEnterpriseImpl62.authorize(
        idLookup63, "neo4j", abstractSecurityLog65);
    java.lang.String str67 = securityContextEnterpriseImpl66.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode68 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = securityContextEnterpriseImpl66.withMode(
        accessMode68);
    java.lang.String str70 = securityContextEnterpriseImpl66.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject71 = securityContextEnterpriseImpl66.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode72 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = securityContextEnterpriseImpl66.withMode(
        adminAccessMode72);
    boolean boolean75 = securityContextEnterpriseImpl73.allowExecuteAdminProcedure((int) (byte) 1);
    authManager60.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl73);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup78 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog80 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl81 = securityContextEnterpriseImpl77.authorize(
        idLookup78, "neo4j", abstractSecurityLog80);
    java.lang.String str82 = securityContextEnterpriseImpl81.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode83 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl84 = securityContextEnterpriseImpl81.withMode(
        adminAccessMode83);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject85 = securityContextEnterpriseImpl84.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode86 = securityContextEnterpriseImpl84.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl87 = securityContextEnterpriseImpl73.withMode(
        accessMode86);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl89 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode86, "pagecachewarmer");
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo90 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext92 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode86, clientConnectionInfo90, "localhost");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(authSubject17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(securityContext24);
    org.junit.Assert.assertTrue("'" + accessMode25 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode25.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext26);
    org.junit.Assert.assertNotNull(strSet27);
    org.junit.Assert.assertNotNull(strSet29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNull(str37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AUTH_DISABLED with FULL" + "'", str40,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(clientConnectionInfo48);
    org.junit.Assert.assertNotNull(securityContext50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl53);
    org.junit.Assert.assertNotNull(authManager56);
    org.junit.Assert.assertNotNull(authManager58);
    org.junit.Assert.assertNotNull(authManager59);
    org.junit.Assert.assertNotNull(authManager60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertNull(str67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertEquals("'" + str70 + "' != '" + "AUTH_DISABLED with FULL" + "'", str70,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject71);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl81);
    org.junit.Assert.assertNull(str82);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl84);
    org.junit.Assert.assertNotNull(authSubject85);
    org.junit.Assert.assertTrue("'" + accessMode86 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode86.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl87);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl89);
    org.junit.Assert.assertNotNull(securityContext92);
  }

  @Test
  public void test1308() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1308");
    }
    org.neo4j.internal.kernel.api.security.AccessMode accessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext3 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode0, clientConnectionInfo2,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext6 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext7 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = securityContext7.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo2, accessMode8, "hi!");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    java.lang.String str16 = securityContextEnterpriseImpl15.database();
    java.lang.String str17 = securityContextEnterpriseImpl15.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode18);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo20 = securityContextEnterpriseImpl15.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext21 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode22 = securityContext21.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo20, accessMode22,
        "Property existence constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext25 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo20);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext26 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo20);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext27 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo20);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext29 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode8, clientConnectionInfo20, "enterpriseConstraints");
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(loginContext3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertNotNull(defaultLoginContext6);
    org.junit.Assert.assertNotNull(securityContext7);
    org.junit.Assert.assertTrue(
        "'" + accessMode8 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode8.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(clientConnectionInfo20);
    org.junit.Assert.assertNotNull(securityContext21);
    org.junit.Assert.assertTrue("'" + accessMode22 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode22.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(defaultLoginContext25);
    org.junit.Assert.assertNotNull(loginContext26);
    org.junit.Assert.assertNotNull(defaultLoginContext27);
    org.junit.Assert.assertNotNull(securityContext29);
  }

  @Test
  public void test1309() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1309");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject17 = securityContextEnterpriseImpl7.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl7.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode19 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = defaultLoginContext20.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = defaultLoginContext20.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext24 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode25 = securityContext24.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext26 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet27 = defaultLoginContext26.roeSet();
    java.util.Set<java.lang.String> strSet29 = defaultLoginContext26.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode19, authSubject22, clientConnectionInfo23, accessMode25, strSet29,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup33 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl32.authorize(
        idLookup33, "neo4j", abstractSecurityLog35);
    java.lang.String str37 = securityContextEnterpriseImpl36.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl36.withMode(
        accessMode38);
    java.lang.String str40 = securityContextEnterpriseImpl36.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject41 = securityContextEnterpriseImpl36.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode42 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = securityContextEnterpriseImpl36.withMode(
        adminAccessMode42);
    boolean boolean45 = securityContextEnterpriseImpl43.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl43.withMode(
        adminAccessMode46);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo48 = securityContextEnterpriseImpl43.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext50 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode25, clientConnectionInfo48, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode25, "pagecachewarmer");
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl53 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl53.start();
    securityProviderAuthDisabledImpl53.start();
    org.neo4j.kernel.api.security.AuthManager authManager56 = securityProviderAuthDisabledImpl53.inClusterAuthManager();
    securityProviderAuthDisabledImpl53.stop();
    org.neo4j.kernel.api.security.AuthManager authManager58 = securityProviderAuthDisabledImpl53.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager59 = securityProviderAuthDisabledImpl53.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager60 = securityProviderAuthDisabledImpl53.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup63 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog65 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = securityContextEnterpriseImpl62.authorize(
        idLookup63, "neo4j", abstractSecurityLog65);
    java.lang.String str67 = securityContextEnterpriseImpl66.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode68 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl69 = securityContextEnterpriseImpl66.withMode(
        accessMode68);
    java.lang.String str70 = securityContextEnterpriseImpl66.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject71 = securityContextEnterpriseImpl66.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode72 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = securityContextEnterpriseImpl66.withMode(
        adminAccessMode72);
    boolean boolean75 = securityContextEnterpriseImpl73.allowExecuteAdminProcedure((int) (byte) 1);
    authManager60.log(".cacheprof",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl73);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup78 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog80 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl81 = securityContextEnterpriseImpl77.authorize(
        idLookup78, "neo4j", abstractSecurityLog80);
    java.lang.String str82 = securityContextEnterpriseImpl81.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode83 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl84 = securityContextEnterpriseImpl81.withMode(
        adminAccessMode83);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject85 = securityContextEnterpriseImpl84.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode86 = securityContextEnterpriseImpl84.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl87 = securityContextEnterpriseImpl73.withMode(
        accessMode86);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl89 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo18, accessMode86, "pagecachewarmer");
    java.util.Set<java.lang.String> strSet90 = securityContextEnterpriseImpl89.roles();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(authSubject17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(securityContext24);
    org.junit.Assert.assertTrue("'" + accessMode25 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode25.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext26);
    org.junit.Assert.assertNotNull(strSet27);
    org.junit.Assert.assertNotNull(strSet29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNull(str37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AUTH_DISABLED with FULL" + "'", str40,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(clientConnectionInfo48);
    org.junit.Assert.assertNotNull(securityContext50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl53);
    org.junit.Assert.assertNotNull(authManager56);
    org.junit.Assert.assertNotNull(authManager58);
    org.junit.Assert.assertNotNull(authManager59);
    org.junit.Assert.assertNotNull(authManager60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertNull(str67);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl69);
    org.junit.Assert.assertEquals("'" + str70 + "' != '" + "AUTH_DISABLED with FULL" + "'", str70,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject71);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl81);
    org.junit.Assert.assertNull(str82);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl84);
    org.junit.Assert.assertNotNull(authSubject85);
    org.junit.Assert.assertTrue("'" + accessMode86 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode86.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl87);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl89);
    org.junit.Assert.assertNotNull(strSet90);
  }

  @Test
  public void test1310() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1310");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.start();
    defaultAuthManager0.clneac();
    java.lang.Class<?> wildcardClass5 = defaultAuthManager0.getClass();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(wildcardClass5);
  }

  @Test
  public void test1311() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1311");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1312() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1312");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (short) 100);
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
  }

  @Test
  public void test1313() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1313");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = defaultLoginContext0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = defaultLoginContext0.authorize(
        idLookup2, "verbose", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl5.allowsAdminAction(adminActionOnResource6);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
  }

  @Test
  public void test1314() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1314");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext5.connectionInfo();
    java.util.Set<java.lang.String> strSet7 = defaultLoginContext5.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo3, accessMode4, strSet7, "volumetric");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode10);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject13 = securityContextEnterpriseImpl12.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl12.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl16 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl16.start();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl16.loopbackAuthManager();
    securityProviderAuthDisabledImpl16.stop();
    org.neo4j.kernel.api.security.AuthManager authManager20 = securityProviderAuthDisabledImpl16.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager20.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup26 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl25.authorize(
        idLookup26, "neo4j", abstractSecurityLog28);
    java.lang.String str30 = securityContextEnterpriseImpl29.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl29.withMode(
        accessMode31);
    java.lang.String str33 = securityContextEnterpriseImpl29.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource34 = null;
    boolean boolean35 = securityContextEnterpriseImpl29.allowsAdminAction(adminActionOnResource34);
    authManager20.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl29);
    java.lang.String str37 = securityContextEnterpriseImpl29.database();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext38 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContext38.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl29.withMode(
        accessMode39);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = securityContextEnterpriseImpl9.withMode(
        accessMode39);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler42 = null;
    securityContextEnterpriseImpl41.assertCredentialsNotExpired(securityAuthorizationHandler42);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject44 = securityContextEnterpriseImpl41.subject();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(authSubject13);
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl16);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNull(str30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AUTH_DISABLED with FULL" + "'", str33,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNull(str37);
    org.junit.Assert.assertNotNull(securityContext38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(authSubject44);
  }

  @Test
  public void test1315() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1315");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str8 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = securityContextEnterpriseImpl9.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode11);
    java.lang.String str13 = securityContextEnterpriseImpl9.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl9.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext16 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = defaultLoginContext16.authorize(
        idLookup17, ".cacheprof", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = defaultLoginContext16.connectionInfo();
    boolean boolean22 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultLoginContext16);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str8, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(authSubject10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNull(str13);
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(defaultLoginContext16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
  }

  @Test
  public void test1316() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1316");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo11 = securityContextEnterpriseImpl6.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext12 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo11);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = defaultLoginContext12.authorize(
        idLookup13, "AUTH_DISABLED with FULL", abstractSecurityLog15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(clientConnectionInfo11);
    org.junit.Assert.assertNotNull(defaultLoginContext12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
  }

  @Test
  public void test1317() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1317");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId11);
  }

  @Test
  public void test1318() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1318");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory4 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory4.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory4.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory4.createDatabaseTracer(
        clock9);
    java.lang.String str11 = enterpriseTracerFactory4.getName();
    java.time.Clock clock12 = null;
    org.neo4j.lock.LockTracer lockTracer13 = enterpriseTracerFactory4.createLockTracer(clock12);
    java.time.Clock clock14 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer15 = enterpriseTracerFactory4.createDatabaseTracer(
        clock14);
    java.time.Clock clock16 = null;
    org.neo4j.lock.LockTracer lockTracer17 = enterpriseTracerFactory4.createLockTracer(clock16);
    boolean boolean18 = cachePopulatorExtensionFactory0.equals((java.lang.Object) lockTracer17);
    java.lang.String str19 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str20 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str21 = cachePopulatorExtensionFactory0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "verbose" + "'", str11, "verbose");
    org.junit.Assert.assertNotNull(lockTracer13);
    org.junit.Assert.assertNotNull(databaseTracer15);
    org.junit.Assert.assertNotNull(lockTracer17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pagecachewarmer" + "'", str19,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pagecachewarmer" + "'", str20,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pagecachewarmer" + "'", str21,
        "pagecachewarmer");
  }

  @Test
  public void test1319() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1319");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor6 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor6, relationshipScanCursor7, propertyCursor8,
          relationTypeSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1320() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1320");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened(10L);
    checkPointThresholdVolumetricPolicy1.initialize((long) (byte) 10);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
  }

  @Test
  public void test1321() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1321");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 6362, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 100, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 2, namedDatabaseId20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 1, namedDatabaseId23);
  }

  @Test
  public void test1322() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1322");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.init();
    java.lang.Class<?> wildcardClass9 = securityProviderAuthDisabledImpl0.getClass();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(wildcardClass9);
  }

  @Test
  public void test1323() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1323");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "neo4j", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl10;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode12);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource14 = null;
    try {
      boolean boolean15 = securityContextEnterpriseImpl13.allowsAdminAction(
          adminActionOnResource14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
  }

  @Test
  public void test1324() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1324");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl9.authorize(
        idLookup16, "", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    java.lang.String str24 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode25);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode27);
    authManager7.log("pagecachewarmer",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    authManager7.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AUTH_DISABLED with FULL" + "'", str24,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
  }

  @Test
  public void test1325() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1325");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config4 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock5 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning6 = null;
    org.neo4j.logging.LogProvider logProvider7 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold8 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config4, systemNanoClock5, logPruning6, logProvider7);
    org.neo4j.configuration.Config config9 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock10 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning11 = null;
    org.neo4j.logging.LogProvider logProvider12 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold13 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config9, systemNanoClock10, logPruning11, logProvider12);
    java.lang.String str14 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str15 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold8);
    org.junit.Assert.assertNotNull(checkPointThreshold13);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "volumetric" + "'", str14, "volumetric");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "volumetric" + "'", str15, "volumetric");
  }

  @Test
  public void test1326() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1326");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    int int8 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.storageengine.api.StorageReader storageReader9 = null;
    org.neo4j.internal.kernel.api.Read read10 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory11 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState12 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor13 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext14 = null;
    org.neo4j.memory.MemoryTracker memoryTracker15 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor16 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader9, read10, cursorFactory11, readableTransactionState12, txStateVisitor13,
          cursorContext14, memoryTracker15);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
  }

  @Test
  public void test1327() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1327");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory4 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory4.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory4.createDatabaseTracer(
        clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory4.createDatabaseTracer(
        clock9);
    java.lang.String str11 = enterpriseTracerFactory4.getName();
    java.time.Clock clock12 = null;
    org.neo4j.lock.LockTracer lockTracer13 = enterpriseTracerFactory4.createLockTracer(clock12);
    java.time.Clock clock14 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer15 = enterpriseTracerFactory4.createDatabaseTracer(
        clock14);
    java.time.Clock clock16 = null;
    org.neo4j.lock.LockTracer lockTracer17 = enterpriseTracerFactory4.createLockTracer(clock16);
    boolean boolean18 = cachePopulatorExtensionFactory0.equals((java.lang.Object) lockTracer17);
    java.lang.String str19 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str20 = cachePopulatorExtensionFactory0.getName();
    java.lang.Object obj21 = null;
    boolean boolean22 = cachePopulatorExtensionFactory0.equals(obj21);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "verbose" + "'", str11, "verbose");
    org.junit.Assert.assertNotNull(lockTracer13);
    org.junit.Assert.assertNotNull(databaseTracer15);
    org.junit.Assert.assertNotNull(lockTracer17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pagecachewarmer" + "'", str19,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pagecachewarmer" + "'", str20,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
  }

  @Test
  public void test1328() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1328");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(authManager9);
  }

  @Test
  public void test1329() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1329");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext10 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode11 = securityContext10.mode();
    java.lang.String str12 = securityContext10.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = securityContext10.mode();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler14 = null;
    securityContext10.assertCredentialsNotExpired(securityAuthorizationHandler14);
    authManager8.log("volumetric", securityContext10);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(securityContext10);
    org.junit.Assert.assertTrue("'" + accessMode11 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode11.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertTrue("'" + accessMode13 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode13.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
  }

  @Test
  public void test1330() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1330");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    java.lang.String str20 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode21);
    defaultAuthManager3.log("PageCacheProfileLoader",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    defaultAuthManager3.init();
    defaultAuthManager3.clneac();
    defaultAuthManager3.init();
    defaultAuthManager3.stop();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
  }

  @Test
  public void test1331() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1331");
    }
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext0 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = securityContext0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext2 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo1);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = defaultLoginContext2.authorize(
        idLookup4, "", abstractSecurityLog6);
    java.lang.String str8 = securityContextEnterpriseImpl7.database();
    org.junit.Assert.assertNotNull(securityContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(defaultLoginContext2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
  }

  @Test
  public void test1332() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1332");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    java.lang.String str18 = securityContextEnterpriseImpl15.description();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl15.authorize(
        idLookup19, "PageCacheProfileLoader", abstractSecurityLog21);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl22.withMode(
        adminAccessMode23);
    java.lang.String str25 = securityContextEnterpriseImpl22.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "user '' with FULL" + "'", str18,
        "user '' with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNull(str25);
  }

  @Test
  public void test1333() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1333");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode6);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContextEnterpriseImpl7.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    try {
      boolean boolean10 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
  }

  @Test
  public void test1334() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1334");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy8 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning7);
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 100);
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThresholdVolumetricPolicy8);
    long long12 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    long long13 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy8.initialize((long) (short) 1);
    checkPointThresholdVolumetricPolicy8.checkPointHappened((long) (short) 0);
    long long18 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    long long19 = checkPointThresholdVolumetricPolicy8.checkFrequencyMillis();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
    org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
  }

  @Test
  public void test1335() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1335");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 100, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 10, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId19);
  }

  @Test
  public void test1336() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1336");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.start();
    defaultAuthManager0.claauch();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList7 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(strMapList7);
  }

  @Test
  public void test1337() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1337");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    java.util.function.Consumer<java.lang.String> strConsumer14 = null;
    try {
      boolean boolean15 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) 6362,
          0L, strConsumer14);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
  }

  @Test
  public void test1338() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1338");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    boolean boolean16 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure(1);
    boolean boolean18 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure((int) ' ');
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
  }

  @Test
  public void test1339() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1339");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    java.lang.String str12 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str13 = cachePopulatorExtensionFactory0.toString();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pagecachewarmer" + "'", str12,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str13, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test1340() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1340");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
  }

  @Test
  public void test1341() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1341");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl7.withMode(
        accessMode12);
    java.lang.String str14 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject15 = securityContextEnterpriseImpl7.subject();
    authManager5.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl17.authorize(
        idLookup18, "neo4j", abstractSecurityLog20);
    java.lang.String str22 = securityContextEnterpriseImpl21.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl21.withMode(
        accessMode23);
    java.lang.String str25 = securityContextEnterpriseImpl21.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl21.allowsAdminAction(adminActionOnResource26);
    java.lang.String str28 = securityContextEnterpriseImpl21.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl21.withMode(
        adminAccessMode29);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = securityContextEnterpriseImpl21.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl7.withMode(
        accessMode31);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl7;
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(authSubject15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNull(str22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AUTH_DISABLED with FULL" + "'", str25,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AUTH_DISABLED with FULL" + "'", str28,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + accessMode31 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode31.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
  }

  @Test
  public void test1342() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1342");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 100);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (short) 0);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (short) 100);
  }

  @Test
  public void test1343() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1343");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    java.lang.String str16 = securityContextEnterpriseImpl10.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AUTH_DISABLED with FULL" + "'", str16,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test1344() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1344");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.storageengine.api.StorageReader storageReader7 = null;
    org.neo4j.internal.kernel.api.Read read8 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory9 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState10 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor11 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext12 = null;
    org.neo4j.memory.MemoryTracker memoryTracker13 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor14 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader7, read8, cursorFactory9, readableTransactionState10, txStateVisitor11,
          cursorContext12, memoryTracker13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }

  @Test
  public void test1345() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1345");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    authManager7.start();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
  }

  @Test
  public void test1346() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1346");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor4 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor4, nodeCursor5, propertyCursor6, labelSchemaDescriptor7,
          tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
  }

  @Test
  public void test1347() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1347");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long10 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) -1);
    long long14 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
  }

  @Test
  public void test1348() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1348");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    securityProviderAuthDisabledImpl0.shutdown();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test1349() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1349");
    }
    io.github.onograph.kernel.srv.pagecache.DefaultIOControllerService defaultIOControllerService0 = new io.github.onograph.kernel.srv.pagecache.DefaultIOControllerService();
    int int1 = defaultIOControllerService0.getPriority();
    int int2 = defaultIOControllerService0.getPriority();
    int int3 = defaultIOControllerService0.getPriority();
    int int4 = defaultIOControllerService0.getPriority();
    int int5 = defaultIOControllerService0.getPriority();
    int int6 = defaultIOControllerService0.getPriority();
    int int7 = defaultIOControllerService0.getPriority();
    int int8 = defaultIOControllerService0.getPriority();
    int int9 = defaultIOControllerService0.getPriority();
    int int10 = defaultIOControllerService0.getPriority();
    org.neo4j.configuration.Config config11 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock12 = null;
    try {
      org.neo4j.io.pagecache.IOController iOController13 = defaultIOControllerService0.createIOController(
          config11, systemNanoClock12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 10 + "'", int1 == 10);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 10 + "'", int2 == 10);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
  }

  @Test
  public void test1350() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1350");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl1 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl1.authorize(
        idLookup2, "neo4j", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl1.withMode(
        accessMode6);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl1.authorize(
        idLookup8, "", abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler12 = null;
    securityContextEnterpriseImpl1.assertCredentialsNotExpired(securityAuthorizationHandler12);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject14 = securityContextEnterpriseImpl1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl16.authorize(
        idLookup17, "neo4j", abstractSecurityLog19);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl16.withMode(
        accessMode21);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup23 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl16.authorize(
        idLookup23, "", abstractSecurityLog25);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup27 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl26.authorize(
        idLookup27, "AUTH_DISABLED with FULL", abstractSecurityLog29);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = securityContextEnterpriseImpl30.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext32 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject33 = defaultLoginContext32.subject();
    java.util.Set<java.lang.String> strSet34 = defaultLoginContext32.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject14, clientConnectionInfo15, accessMode31, strSet34, "");
    java.util.Set<java.lang.String> strSet37 = securityContextEnterpriseImpl36.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertTrue("'" + accessMode31 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode31.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext32);
    org.junit.Assert.assertNotNull(authSubject33);
    org.junit.Assert.assertNotNull(strSet34);
    org.junit.Assert.assertNotNull(strSet37);
  }

  @Test
  public void test1351() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1351");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.initialize((long) '4');
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) 'a');
    checkPointThresholdVolumetricPolicy1.initialize((long) (byte) -1);
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long12 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
  }

  @Test
  public void test1352() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1352");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler1 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler1);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.authorize(
        idLookup3, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog5);
    java.util.Set<java.lang.String> strSet7 = securityContextEnterpriseImpl0.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContextEnterpriseImpl0.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext10 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = defaultLoginContext10.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl12.authorize(
        idLookup13, "neo4j", abstractSecurityLog15);
    java.lang.String str17 = securityContextEnterpriseImpl16.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl16.withMode(
        accessMode18);
    java.lang.String str20 = securityContextEnterpriseImpl16.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource21 = null;
    boolean boolean22 = securityContextEnterpriseImpl16.allowsAdminAction(adminActionOnResource21);
    java.lang.String str23 = securityContextEnterpriseImpl16.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl16;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl16;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = securityContextEnterpriseImpl16.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup28 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl27.authorize(
        idLookup28, "neo4j", abstractSecurityLog30);
    java.lang.String str32 = securityContextEnterpriseImpl27.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource33 = null;
    boolean boolean34 = securityContextEnterpriseImpl27.allowsAdminAction(adminActionOnResource33);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl27.authorize(
        idLookup35, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog37);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContextEnterpriseImpl38.mode();
    java.lang.String[] strArray52 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean54 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet53, strArray52);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode9, authSubject11, clientConnectionInfo26, accessMode39,
        (java.util.Set<java.lang.String>) strSet53, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo8, accessMode39, "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject60 = securityContextEnterpriseImpl59.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode61 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = securityContextEnterpriseImpl59.withMode(
        adminAccessMode61);
    java.lang.String str63 = securityContextEnterpriseImpl59.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo64 = securityContextEnterpriseImpl59.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext65 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo64);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext66 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo64);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext68 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode39, clientConnectionInfo64, "user '' with FULL");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext69 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo64);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertNotNull(defaultLoginContext10);
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNull(str32);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray52);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNotNull(authSubject60);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl62);
    org.junit.Assert.assertNull(str63);
    org.junit.Assert.assertNotNull(clientConnectionInfo64);
    org.junit.Assert.assertNotNull(defaultLoginContext65);
    org.junit.Assert.assertNotNull(defaultLoginContext66);
    org.junit.Assert.assertNotNull(securityContext68);
    org.junit.Assert.assertNotNull(defaultLoginContext69);
  }

  @Test
  public void test1353() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1353");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str7 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl8 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str9 = constraintSemanticsEnterpriseImpl8.getName();
    int int10 = constraintSemanticsEnterpriseImpl8.getPriority();
    int int11 = constraintSemanticsEnterpriseImpl8.getPriority();
    boolean boolean12 = cachePopulatorExtensionFactory0.equals((java.lang.Object) int11);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str7, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "enterpriseConstraints" + "'", str9,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test1354() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1354");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.lock.LockTracer lockTracer12 = enterpriseTracerFactory0.createLockTracer(clock11);
    java.time.Clock clock13 = null;
    org.neo4j.lock.LockTracer lockTracer14 = enterpriseTracerFactory0.createLockTracer(clock13);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(lockTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(lockTracer12);
    org.junit.Assert.assertNotNull(lockTracer14);
  }

  @Test
  public void test1355() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1355");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    defaultAuthManager0.start();
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
  }

  @Test
  public void test1356() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1356");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 100, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 0, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 0, namedDatabaseId16);
  }

  @Test
  public void test1357() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1357");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor4 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor5 = constraintSemanticsEnterpriseImpl0.readConstraint(
          constraintDescriptor4);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
  }

  @Test
  public void test1358() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1358");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl8 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl8.start();
    securityProviderAuthDisabledImpl8.stop();
    securityProviderAuthDisabledImpl8.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl8.inClusterAuthManager();
    securityProviderAuthDisabledImpl8.start();
    org.neo4j.kernel.api.security.AuthManager authManager14 = securityProviderAuthDisabledImpl8.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl8.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl17.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl17.authorize(
        idLookup19, "localhost", abstractSecurityLog21);
    authManager15.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl22);
    boolean boolean24 = cachePopulatorExtensionFactory0.equals((java.lang.Object) authManager15);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup26 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog28 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = securityContextEnterpriseImpl25.authorize(
        idLookup26, "neo4j", abstractSecurityLog28);
    java.lang.String str30 = securityContextEnterpriseImpl29.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl29.withMode(
        accessMode31);
    java.lang.String str33 = securityContextEnterpriseImpl29.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource34 = null;
    boolean boolean35 = securityContextEnterpriseImpl29.allowsAdminAction(adminActionOnResource34);
    java.lang.String str36 = securityContextEnterpriseImpl29.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject37 = securityContextEnterpriseImpl29.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl29;
    boolean boolean39 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityContextEnterpriseImpl29);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl8);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager14);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNull(str30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "AUTH_DISABLED with FULL" + "'", str33,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AUTH_DISABLED with FULL" + "'", str36,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject37);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
  }

  @Test
  public void test1359() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1359");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = defaultLoginContext15.authorize(
        idLookup16, "hi!", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject20 = defaultLoginContext15.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(authSubject20);
  }

  @Test
  public void test1360() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1360");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.stop();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource16 = null;
    boolean boolean17 = securityContextEnterpriseImpl11.allowsAdminAction(adminActionOnResource16);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = securityContextEnterpriseImpl19.authorize(
        idLookup20, "verbose", abstractSecurityLog22);
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    java.lang.Class<?> wildcardClass25 = defaultAuthManager0.getClass();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(wildcardClass25);
  }

  @Test
  public void test1361() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1361");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.lang.String str1 = enterpriseTracerFactory0.getName();
    java.time.Clock clock2 = null;
    org.neo4j.lock.LockTracer lockTracer3 = enterpriseTracerFactory0.createLockTracer(clock2);
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    java.time.Clock clock10 = null;
    org.neo4j.lock.LockTracer lockTracer11 = enterpriseTracerFactory0.createLockTracer(clock10);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "verbose" + "'", str1, "verbose");
    org.junit.Assert.assertNotNull(lockTracer3);
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertNotNull(lockTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
    org.junit.Assert.assertNotNull(lockTracer11);
  }

  @Test
  public void test1362() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1362");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    org.neo4j.io.pagecache.IOController iOController3 = org.neo4j.io.pagecache.IOController.DISABLED;
    boolean boolean4 = cachePopulatorExtensionFactory0.equals((java.lang.Object) iOController3);
    java.lang.String str5 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.Object obj7 = null;
    boolean boolean8 = cachePopulatorExtensionFactory0.equals(obj7);
    java.lang.String str9 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl10 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int11 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int12 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str13 = constraintSemanticsEnterpriseImpl10.getName();
    int int14 = constraintSemanticsEnterpriseImpl10.getPriority();
    int int15 = constraintSemanticsEnterpriseImpl10.getPriority();
    java.lang.String str16 = constraintSemanticsEnterpriseImpl10.getName();
    boolean boolean17 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) constraintSemanticsEnterpriseImpl10);
    org.neo4j.storageengine.api.StorageReader storageReader18 = null;
    org.neo4j.internal.kernel.api.Read read19 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory20 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState21 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor22 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext23 = null;
    org.neo4j.memory.MemoryTracker memoryTracker24 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor25 = constraintSemanticsEnterpriseImpl10.decorateTxStateVisitor(
          storageReader18, read19, cursorFactory20, readableTransactionState21, txStateVisitor22,
          cursorContext23, memoryTracker24);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(iOController3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pagecachewarmer" + "'", str5,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "enterpriseConstraints" + "'", str13,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "enterpriseConstraints" + "'", str16,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
  }

  @Test
  public void test1363() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1363");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1364() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1364");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager3 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext5 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager3.log("", securityContext5);
    boolean boolean7 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) defaultAuthManager3);
    defaultAuthManager3.init();
    java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.database();
    java.lang.String str16 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource17 = null;
    boolean boolean18 = securityContextEnterpriseImpl10.allowsAdminAction(adminActionOnResource17);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo19 = securityContextEnterpriseImpl10.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext20 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo19);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = defaultAuthManager3.login(
          strMap9, clientConnectionInfo19);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager3);
    org.junit.Assert.assertNotNull(securityContext5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AUTH_DISABLED with FULL" + "'", str16,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo19);
    org.junit.Assert.assertNotNull(defaultLoginContext20);
  }

  @Test
  public void test1365() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1365");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    org.neo4j.kernel.api.security.AuthManager authManager1 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    java.lang.Class<?> wildcardClass2 = securityProviderAuthDisabledImpl0.getClass();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager1);
    org.junit.Assert.assertNotNull(wildcardClass2);
  }

  @Test
  public void test1366() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1366");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) -1, namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((-1L), namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId14);
  }

  @Test
  public void test1367() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1367");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor5 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor5, nodeCursor6, propertyCursor7, labelSchemaDescriptor8,
          tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1368() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1368");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str4 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl5 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config6 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock7 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning8 = null;
    org.neo4j.logging.LogProvider logProvider9 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold10 = checkPointThresholdPolicyContinuousImpl5.createThreshold(
        config6, systemNanoClock7, logPruning8, logProvider9);
    java.lang.String str11 = checkPointThresholdPolicyContinuousImpl5.getName();
    java.lang.String str12 = checkPointThresholdPolicyContinuousImpl5.getName();
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock14 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning15 = null;
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold17 = checkPointThresholdPolicyContinuousImpl5.createThreshold(
        config13, systemNanoClock14, logPruning15, logProvider16);
    org.neo4j.configuration.Config config18 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock19 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning20 = null;
    org.neo4j.logging.LogProvider logProvider21 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold22 = checkPointThresholdPolicyContinuousImpl5.createThreshold(
        config18, systemNanoClock19, logPruning20, logProvider21);
    java.lang.String str23 = checkPointThresholdPolicyContinuousImpl5.getName();
    org.neo4j.configuration.Config config24 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock25 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning26 = null;
    org.neo4j.logging.LogProvider logProvider27 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold28 = checkPointThresholdPolicyContinuousImpl5.createThreshold(
        config24, systemNanoClock25, logPruning26, logProvider27);
    org.neo4j.configuration.Config config29 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock30 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning31 = null;
    org.neo4j.logging.LogProvider logProvider32 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold33 = checkPointThresholdPolicyContinuousImpl5.createThreshold(
        config29, systemNanoClock30, logPruning31, logProvider32);
    java.lang.String str34 = checkPointThresholdPolicyContinuousImpl5.getName();
    org.neo4j.configuration.Config config35 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock36 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning37 = null;
    org.neo4j.logging.LogProvider logProvider38 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold39 = checkPointThresholdPolicyContinuousImpl5.createThreshold(
        config35, systemNanoClock36, logPruning37, logProvider38);
    java.lang.String str40 = checkPointThresholdPolicyContinuousImpl5.getName();
    org.neo4j.configuration.Config config41 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock42 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning43 = null;
    org.neo4j.logging.LogProvider logProvider44 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold45 = checkPointThresholdPolicyContinuousImpl5.createThreshold(
        config41, systemNanoClock42, logPruning43, logProvider44);
    boolean boolean46 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) checkPointThreshold45);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pagecachewarmer" + "'", str4,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(checkPointThreshold10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "continuous" + "'", str11, "continuous");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "continuous" + "'", str12, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold17);
    org.junit.Assert.assertNotNull(checkPointThreshold22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "continuous" + "'", str23, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold28);
    org.junit.Assert.assertNotNull(checkPointThreshold33);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "continuous" + "'", str34, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold39);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "continuous" + "'", str40, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold45);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
  }

  @Test
  public void test1369() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1369");
    }
    org.neo4j.internal.kernel.api.security.AccessMode accessMode0 = null;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode1 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext2 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode3 = securityContext2.mode();
    java.lang.String str4 = securityContext2.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = securityContext2.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject6 = securityContext2.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext7 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = defaultLoginContext7.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext9 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo8);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext10 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo8);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    java.lang.String str16 = securityContextEnterpriseImpl15.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl15.withMode(
        accessMode17);
    java.lang.String str19 = securityContextEnterpriseImpl15.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject20 = securityContextEnterpriseImpl15.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = securityContextEnterpriseImpl15.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext22 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet24 = defaultLoginContext22.roeSet();
    java.util.Set<java.lang.String> strSet25 = defaultLoginContext22.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode1, authSubject6, clientConnectionInfo8, accessMode21, strSet25, "");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext28 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo8);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo30 = defaultLoginContext29.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext31 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo30);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup33 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog35 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl36 = securityContextEnterpriseImpl32.authorize(
        idLookup33, "neo4j", abstractSecurityLog35);
    java.lang.String str37 = securityContextEnterpriseImpl36.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode38 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl39 = securityContextEnterpriseImpl36.withMode(
        accessMode38);
    java.lang.String str40 = securityContextEnterpriseImpl36.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource41 = null;
    boolean boolean42 = securityContextEnterpriseImpl36.allowsAdminAction(adminActionOnResource41);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl36.withMode(
        adminAccessMode43);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode45 = securityContextEnterpriseImpl36.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo30, accessMode45, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo8, accessMode45,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext50 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo8);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext51 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo8);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo52 = loginContext51.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext54 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode0, clientConnectionInfo52, "neo4j");
    org.junit.Assert.assertNotNull(securityContext2);
    org.junit.Assert.assertTrue(
        "'" + accessMode3 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode3.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertTrue(
        "'" + accessMode5 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode5.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject6);
    org.junit.Assert.assertNotNull(defaultLoginContext7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertNotNull(defaultLoginContext9);
    org.junit.Assert.assertNotNull(defaultLoginContext10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AUTH_DISABLED with FULL" + "'", str19,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject20);
    org.junit.Assert.assertTrue("'" + accessMode21 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode21.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext22);
    org.junit.Assert.assertNotNull(strSet24);
    org.junit.Assert.assertNotNull(strSet25);
    org.junit.Assert.assertNotNull(defaultLoginContext28);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(clientConnectionInfo30);
    org.junit.Assert.assertNotNull(loginContext31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl36);
    org.junit.Assert.assertNull(str37);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl39);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "AUTH_DISABLED with FULL" + "'", str40,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertTrue("'" + accessMode45 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode45.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertNotNull(defaultLoginContext50);
    org.junit.Assert.assertNotNull(loginContext51);
    org.junit.Assert.assertNotNull(clientConnectionInfo52);
    org.junit.Assert.assertNotNull(securityContext54);
  }

  @Test
  public void test1370() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1370");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext1 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = securityContext1.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler3 = null;
    securityContext1.assertCredentialsNotExpired(securityAuthorizationHandler3);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject5 = securityContext1.subject();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl6 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl6.start();
    securityProviderAuthDisabledImpl6.stop();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl6.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager10 = securityProviderAuthDisabledImpl6.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager11 = securityProviderAuthDisabledImpl6.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup14 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl13.authorize(
        idLookup14, "neo4j", abstractSecurityLog16);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl13.withMode(
        accessMode18);
    java.lang.String str20 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject21 = securityContextEnterpriseImpl13.subject();
    authManager11.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject23 = securityContextEnterpriseImpl13.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo24 = securityContextEnterpriseImpl13.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler26 = null;
    securityContextEnterpriseImpl25.assertCredentialsNotExpired(securityAuthorizationHandler26);
    java.lang.String str28 = securityContextEnterpriseImpl25.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode29 = securityContextEnterpriseImpl25.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject31 = securityContextEnterpriseImpl30.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl30.withMode(
        adminAccessMode32);
    java.lang.String str34 = securityContextEnterpriseImpl30.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo35 = securityContextEnterpriseImpl30.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo35);
    java.util.Set<java.lang.String> strSet38 = defaultLoginContext36.roeSet();
    java.util.Set<java.lang.String> strSet39 = defaultLoginContext36.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject5, clientConnectionInfo24, accessMode29, strSet39,
        "PageCacheProfileLoader");
    org.neo4j.internal.kernel.api.security.LoginContext loginContext42 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo24);
    org.junit.Assert.assertNotNull(securityContext1);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(authSubject5);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl6);
    org.junit.Assert.assertNotNull(authManager9);
    org.junit.Assert.assertNotNull(authManager10);
    org.junit.Assert.assertNotNull(authManager11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(authSubject21);
    org.junit.Assert.assertNotNull(authSubject23);
    org.junit.Assert.assertNotNull(clientConnectionInfo24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNull(str28);
    org.junit.Assert.assertTrue("'" + accessMode29 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode29.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(authSubject31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNull(str34);
    org.junit.Assert.assertNotNull(clientConnectionInfo35);
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(strSet38);
    org.junit.Assert.assertNotNull(strSet39);
    org.junit.Assert.assertNotNull(loginContext42);
  }

  @Test
  public void test1371() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1371");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl1 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl1.start();
    securityProviderAuthDisabledImpl1.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl1.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl1.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl1.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl8.authorize(
        idLookup9, "neo4j", abstractSecurityLog11);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl8.withMode(
        accessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl8.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject16 = securityContextEnterpriseImpl8.subject();
    authManager6.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl8);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl8.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo20 = defaultLoginContext19.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo20);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext22 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo20);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext24 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo25 = defaultLoginContext24.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext26 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo25);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext28 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode23, clientConnectionInfo25,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo25);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext30 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode31 = securityContext30.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo25, accessMode31, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject36 = defaultLoginContext35.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo37 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode38 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext39 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo40 = defaultLoginContext39.connectionInfo();
    java.util.Set<java.lang.String> strSet41 = defaultLoginContext39.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl43 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode34, authSubject36, clientConnectionInfo37, accessMode38, strSet41,
        "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject18, clientConnectionInfo20, accessMode31, strSet41,
        "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode46 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext47 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode48 = securityContext47.mode();
    java.lang.String str49 = securityContext47.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode50 = securityContext47.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject51 = securityContext47.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext52 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo53 = defaultLoginContext52.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext54 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo53);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext55 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo53);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup57 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog59 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl60 = securityContextEnterpriseImpl56.authorize(
        idLookup57, "neo4j", abstractSecurityLog59);
    java.lang.String str61 = securityContextEnterpriseImpl60.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode62 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = securityContextEnterpriseImpl60.withMode(
        accessMode62);
    java.lang.String str64 = securityContextEnterpriseImpl60.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject65 = securityContextEnterpriseImpl60.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode66 = securityContextEnterpriseImpl60.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext67 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet69 = defaultLoginContext67.roeSet();
    java.util.Set<java.lang.String> strSet70 = defaultLoginContext67.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl72 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode46, authSubject51, clientConnectionInfo53, accessMode66, strSet70, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup74 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog76 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = securityContextEnterpriseImpl73.authorize(
        idLookup74, "neo4j", abstractSecurityLog76);
    java.lang.String str78 = securityContextEnterpriseImpl77.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode79 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl80 = securityContextEnterpriseImpl77.withMode(
        accessMode79);
    java.lang.String str81 = securityContextEnterpriseImpl77.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource82 = null;
    boolean boolean83 = securityContextEnterpriseImpl77.allowsAdminAction(adminActionOnResource82);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource84 = null;
    boolean boolean85 = securityContextEnterpriseImpl77.allowsAdminAction(adminActionOnResource84);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo86 = securityContextEnterpriseImpl77.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext88 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode66, clientConnectionInfo86, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl90 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo20, accessMode66,
        "Property existence constraint requires Neo4j Enterprise Edition");
    boolean boolean92 = securityContextEnterpriseImpl90.allowExecuteAdminProcedure((int) (byte) 10);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl1);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(authSubject16);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(clientConnectionInfo20);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(loginContext22);
    org.junit.Assert.assertNotNull(defaultLoginContext24);
    org.junit.Assert.assertNotNull(clientConnectionInfo25);
    org.junit.Assert.assertNotNull(loginContext26);
    org.junit.Assert.assertNotNull(securityContext28);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(securityContext30);
    org.junit.Assert.assertTrue("'" + accessMode31 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode31.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(defaultLoginContext35);
    org.junit.Assert.assertNotNull(authSubject36);
    org.junit.Assert.assertNotNull(defaultLoginContext39);
    org.junit.Assert.assertNotNull(clientConnectionInfo40);
    org.junit.Assert.assertNotNull(strSet41);
    org.junit.Assert.assertNotNull(securityContext47);
    org.junit.Assert.assertTrue("'" + accessMode48 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode48.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str49);
    org.junit.Assert.assertTrue("'" + accessMode50 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode50.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject51);
    org.junit.Assert.assertNotNull(defaultLoginContext52);
    org.junit.Assert.assertNotNull(clientConnectionInfo53);
    org.junit.Assert.assertNotNull(defaultLoginContext54);
    org.junit.Assert.assertNotNull(defaultLoginContext55);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl60);
    org.junit.Assert.assertNull(str61);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl63);
    org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AUTH_DISABLED with FULL" + "'", str64,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject65);
    org.junit.Assert.assertTrue("'" + accessMode66 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode66.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext67);
    org.junit.Assert.assertNotNull(strSet69);
    org.junit.Assert.assertNotNull(strSet70);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertNull(str78);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl80);
    org.junit.Assert.assertEquals("'" + str81 + "' != '" + "AUTH_DISABLED with FULL" + "'", str81,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo86);
    org.junit.Assert.assertNotNull(securityContext88);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl90);
    org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
  }

  @Test
  public void test1372() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1372");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = defaultLoginContext1.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = null;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext5.connectionInfo();
    java.util.Set<java.lang.String> strSet7 = defaultLoginContext5.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject2, clientConnectionInfo3, accessMode4, strSet7, "volumetric");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode10);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject13 = securityContextEnterpriseImpl12.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl12.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl9.withMode(
        accessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode16);
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(authSubject13);
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
  }

  @Test
  public void test1373() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1373");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 6362, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId8);
  }

  @Test
  public void test1374() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1374");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    java.lang.String str9 = enterpriseTracerFactory0.getName();
    java.time.Clock clock10 = null;
    org.neo4j.lock.LockTracer lockTracer11 = enterpriseTracerFactory0.createLockTracer(clock10);
    java.time.Clock clock12 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer13 = enterpriseTracerFactory0.createDatabaseTracer(
        clock12);
    java.time.Clock clock14 = null;
    org.neo4j.lock.LockTracer lockTracer15 = enterpriseTracerFactory0.createLockTracer(clock14);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(lockTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
    org.junit.Assert.assertNotNull(lockTracer11);
    org.junit.Assert.assertNotNull(databaseTracer13);
    org.junit.Assert.assertNotNull(lockTracer15);
  }

  @Test
  public void test1375() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1375");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 0, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) 10, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10000L, namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId26);
  }

  @Test
  public void test1376() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1376");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "neo4j", abstractSecurityLog13);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl10.withMode(
        accessMode15);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup17 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl10.authorize(
        idLookup17, "", abstractSecurityLog19);
    boolean boolean22 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure(
        (int) (short) 10);
    boolean boolean24 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure(6362);
    authManager8.log("Node Key constraint requires Neo4j Enterprise Edition",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
  }

  @Test
  public void test1377() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1377");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    defaultAuthManager0.init();
    defaultAuthManager0.clneac();
    defaultAuthManager0.start();
    java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup9 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = securityContextEnterpriseImpl8.authorize(
        idLookup9, "neo4j", abstractSecurityLog11);
    java.lang.String str13 = securityContextEnterpriseImpl12.database();
    java.lang.String str14 = securityContextEnterpriseImpl12.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl12.withMode(
        adminAccessMode15);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo17 = securityContextEnterpriseImpl12.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext18 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = securityContext18.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo17, accessMode19,
        "Property existence constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext22 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo17);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext23 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo17);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext24 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo17);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext25 = defaultAuthManager0.login(
          strMap7, clientConnectionInfo17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNull(str13);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AUTH_DISABLED with FULL" + "'", str14,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(clientConnectionInfo17);
    org.junit.Assert.assertNotNull(securityContext18);
    org.junit.Assert.assertTrue("'" + accessMode19 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode19.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(defaultLoginContext22);
    org.junit.Assert.assertNotNull(loginContext23);
    org.junit.Assert.assertNotNull(defaultLoginContext24);
  }

  @Test
  public void test1378() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1378");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) -1, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (byte) 1, namedDatabaseId19);
  }

  @Test
  public void test1379() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1379");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl7.authorize(
        idLookup8, "neo4j", abstractSecurityLog10);
    java.lang.String str12 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        accessMode13);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler15 = null;
    securityContextEnterpriseImpl11.assertCredentialsNotExpired(securityAuthorizationHandler15);
    authManager5.log("pagecachewarmer",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl11);
    boolean boolean19 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure(
        (int) (short) -1);
    java.lang.String str20 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler21 = null;
    securityContextEnterpriseImpl11.assertCredentialsNotExpired(securityAuthorizationHandler21);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode23);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNull(str12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
  }

  @Test
  public void test1380() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1380");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor6 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor7 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor8 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor9 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup10 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor6, relationshipScanCursor7, propertyCursor8,
          relationTypeSchemaDescriptor9, tokenNameLookup10);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1381() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1381");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer2 = enterpriseTracerFactory0.createDatabaseTracer(
        clock1);
    java.time.Clock clock3 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer4 = enterpriseTracerFactory0.createDatabaseTracer(
        clock3);
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.lang.String str7 = enterpriseTracerFactory0.getName();
    java.time.Clock clock8 = null;
    org.neo4j.lock.LockTracer lockTracer9 = enterpriseTracerFactory0.createLockTracer(clock8);
    java.time.Clock clock10 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer11 = enterpriseTracerFactory0.createDatabaseTracer(
        clock10);
    java.time.Clock clock12 = null;
    org.neo4j.lock.LockTracer lockTracer13 = enterpriseTracerFactory0.createLockTracer(clock12);
    java.time.Clock clock14 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer15 = enterpriseTracerFactory0.createDatabaseTracer(
        clock14);
    java.time.Clock clock16 = null;
    org.neo4j.lock.LockTracer lockTracer17 = enterpriseTracerFactory0.createLockTracer(clock16);
    java.time.Clock clock18 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer19 = enterpriseTracerFactory0.createDatabaseTracer(
        clock18);
    org.junit.Assert.assertNotNull(databaseTracer2);
    org.junit.Assert.assertNotNull(databaseTracer4);
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "verbose" + "'", str7, "verbose");
    org.junit.Assert.assertNotNull(lockTracer9);
    org.junit.Assert.assertNotNull(databaseTracer11);
    org.junit.Assert.assertNotNull(lockTracer13);
    org.junit.Assert.assertNotNull(databaseTracer15);
    org.junit.Assert.assertNotNull(lockTracer17);
    org.junit.Assert.assertNotNull(databaseTracer19);
  }

  @Test
  public void test1382() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1382");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodeKeyConstraint(nodeCursor6, propertyCursor7,
          labelSchemaDescriptor8, tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1383() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1383");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config2 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock3 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning4 = null;
    org.neo4j.logging.LogProvider logProvider5 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold6 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config2, systemNanoClock3, logPruning4, logProvider5);
    java.lang.String str7 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str8 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str9 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config10 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning12 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold14 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config10, systemNanoClock11, logPruning12, logProvider13);
    java.lang.String str15 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold6);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "volumetric" + "'", str7, "volumetric");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "volumetric" + "'", str8, "volumetric");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "volumetric" + "'", str9, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "volumetric" + "'", str15, "volumetric");
  }

  @Test
  public void test1384() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1384");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    long long3 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) (byte) 0);
    long long6 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
  }

  @Test
  public void test1385() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1385");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog9);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl11.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl11.authorize(
        idLookup13, "localhost", abstractSecurityLog15);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource17 = null;
    boolean boolean18 = securityContextEnterpriseImpl11.allowsAdminAction(adminActionOnResource17);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = securityContextEnterpriseImpl11.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl10.withMode(
        accessMode19);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl21.authorize(
        idLookup22, "neo4j", abstractSecurityLog24);
    java.lang.String str26 = securityContextEnterpriseImpl25.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl25.withMode(
        accessMode27);
    java.lang.String str29 = securityContextEnterpriseImpl25.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource30 = null;
    boolean boolean31 = securityContextEnterpriseImpl25.allowsAdminAction(adminActionOnResource30);
    java.lang.String str32 = securityContextEnterpriseImpl25.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl25;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl25;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo35 = securityContextEnterpriseImpl25.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext36 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = securityContext36.mode();
    java.lang.String str38 = securityContext36.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode39 = securityContext36.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo35, accessMode39,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = securityContextEnterpriseImpl10.withMode(
        accessMode39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertTrue("'" + accessMode19 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode19.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNull(str26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AUTH_DISABLED with FULL" + "'", str29,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AUTH_DISABLED with FULL" + "'", str32,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo35);
    org.junit.Assert.assertNotNull(securityContext36);
    org.junit.Assert.assertTrue("'" + accessMode37 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode37.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str38);
    org.junit.Assert.assertTrue("'" + accessMode39 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode39.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
  }

  @Test
  public void test1386() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1386");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor3 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor4 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) (short) -1, constraintDescriptor3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
  }

  @Test
  public void test1387() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1387");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          1L, constraintDescriptor8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test1388() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1388");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    int int8 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor10 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor12 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          0L, uniquenessConstraintDescriptor10, (long) (byte) 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
  }

  @Test
  public void test1389() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1389");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str4 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config5 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock6 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning7 = null;
    org.neo4j.logging.LogProvider logProvider8 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold9 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config5, systemNanoClock6, logPruning7, logProvider8);
    org.neo4j.configuration.Config config10 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning12 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold14 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config10, systemNanoClock11, logPruning12, logProvider13);
    java.lang.String str15 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str16 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config17 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock18 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning19 = null;
    org.neo4j.logging.LogProvider logProvider20 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold21 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config17, systemNanoClock18, logPruning19, logProvider20);
    org.neo4j.configuration.Config config22 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock23 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning24 = null;
    org.neo4j.logging.LogProvider logProvider25 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold26 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config22, systemNanoClock23, logPruning24, logProvider25);
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "volumetric" + "'", str4, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold9);
    org.junit.Assert.assertNotNull(checkPointThreshold14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "volumetric" + "'", str15, "volumetric");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "volumetric" + "'", str16, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold21);
    org.junit.Assert.assertNotNull(checkPointThreshold26);
  }

  @Test
  public void test1390() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1390");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl2.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl2.allowsAdminAction(adminActionOnResource8);
    boolean boolean10 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) adminActionOnResource8);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl11 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl11.start();
    securityProviderAuthDisabledImpl11.stop();
    securityProviderAuthDisabledImpl11.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl11.inClusterAuthManager();
    securityProviderAuthDisabledImpl11.start();
    org.neo4j.kernel.api.security.AuthManager authManager17 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager19 = securityProviderAuthDisabledImpl11.loopbackAuthManager();
    boolean boolean20 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl11);
    org.neo4j.logging.Log log21 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl22 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl22.prlcpdForNa((long) (short) 1, namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = null;
    pageCacheLoadingWatcherDefaultImpl22.wapclForNa((long) 6362, namedDatabaseId31);
    boolean boolean33 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl22);
    java.lang.String str34 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext35 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker36 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle37 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext35, componentsChecker36);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl11);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager17);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str34, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test1391() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1391");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str7 = constraintSemanticsEnterpriseImpl0.getName();
    int int8 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.NodeKeyConstraintDescriptor nodeKeyConstraintDescriptor10 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor12 = constraintSemanticsEnterpriseImpl0.createNodeKeyConstraintRule(
          (long) 'a', nodeKeyConstraintDescriptor10, (long) '4');
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "enterpriseConstraints" + "'", str7,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
  }

  @Test
  public void test1392() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1392");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.start();
    defaultAuthManager0.stop();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList6 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList6);
  }

  @Test
  public void test1393() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1393");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl15.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext17 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNotNull(loginContext17);
  }

  @Test
  public void test1394() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1394");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory3 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock4 = null;
    org.neo4j.lock.LockTracer lockTracer5 = enterpriseTracerFactory3.createLockTracer(clock4);
    java.lang.String str6 = enterpriseTracerFactory3.getName();
    java.time.Clock clock7 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer8 = enterpriseTracerFactory3.createDatabaseTracer(
        clock7);
    java.lang.String str9 = enterpriseTracerFactory3.getName();
    java.lang.String str10 = enterpriseTracerFactory3.getName();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals((java.lang.Object) str10);
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertNotNull(lockTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "verbose" + "'", str9, "verbose");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "verbose" + "'", str10, "verbose");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
  }

  @Test
  public void test1395() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1395");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl0.authorize(
        idLookup7, "", abstractSecurityLog9);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl10.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl10.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl10.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContextEnterpriseImpl17.mode();
    java.lang.String str19 = securityContextEnterpriseImpl17.description();
    java.lang.String str20 = securityContextEnterpriseImpl17.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "user '' with FULL" + "'", str19,
        "user '' with FULL");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "user '' with FULL" + "'", str20,
        "user '' with FULL");
  }

  @Test
  public void test1396() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1396");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup7 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl6.authorize(
        idLookup7, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog9);
    boolean boolean12 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure(
        (int) (short) 10);
    boolean boolean14 = securityContextEnterpriseImpl10.allowExecuteAdminProcedure(
        (int) (byte) 100);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
  }

  @Test
  public void test1397() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1397");
    }
    org.neo4j.internal.kernel.api.security.AccessMode accessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl1 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject2 = securityContextEnterpriseImpl1.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl1.authorize(
        idLookup3, "localhost", abstractSecurityLog5);
    java.util.Set<java.lang.String> strSet7 = securityContextEnterpriseImpl6.roles();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo8 = securityContextEnterpriseImpl6.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext10 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode0, clientConnectionInfo8, "enterpriseConstraints");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl1);
    org.junit.Assert.assertNotNull(authSubject2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(clientConnectionInfo8);
    org.junit.Assert.assertNotNull(securityContext10);
  }

  @Test
  public void test1398() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1398");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) -1, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 6362, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 100, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 2, namedDatabaseId20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId23);
  }

  @Test
  public void test1399() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1399");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl8.subject();
    java.lang.String str10 = securityContextEnterpriseImpl8.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource11 = null;
    boolean boolean12 = securityContextEnterpriseImpl8.allowsAdminAction(adminActionOnResource11);
    java.lang.String str13 = securityContextEnterpriseImpl8.database();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Node Key constraint requires Neo4j Enterprise Edition" + "'",
        str10, "Node Key constraint requires Neo4j Enterprise Edition");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertEquals(
        "'" + str13 + "' != '" + "Node Key constraint requires Neo4j Enterprise Edition" + "'",
        str13, "Node Key constraint requires Neo4j Enterprise Edition");
  }

  @Test
  public void test1400() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1400");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 100, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId17);
  }

  @Test
  public void test1401() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1401");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) ' ', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(10L, namedDatabaseId21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 2, namedDatabaseId24);
  }

  @Test
  public void test1402() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1402");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode11 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject13 = securityContextEnterpriseImpl12.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode14 = securityContextEnterpriseImpl12.mode();
    java.lang.String str15 = securityContextEnterpriseImpl12.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl12;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject17 = securityContextEnterpriseImpl12.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl18.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl18.withMode(
        adminAccessMode20);
    java.lang.String str22 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = securityContextEnterpriseImpl18.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext24 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo23);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext25 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo23);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup27 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl26.authorize(
        idLookup27, "neo4j", abstractSecurityLog29);
    java.lang.String str31 = securityContextEnterpriseImpl30.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl30.withMode(
        accessMode32);
    java.lang.String str34 = securityContextEnterpriseImpl30.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource35 = null;
    boolean boolean36 = securityContextEnterpriseImpl30.allowsAdminAction(adminActionOnResource35);
    java.lang.String str37 = securityContextEnterpriseImpl30.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl30;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl30;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo40 = securityContextEnterpriseImpl30.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext41 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode42 = securityContext41.mode();
    java.lang.String str43 = securityContext41.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode44 = securityContext41.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo40, accessMode44,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext47 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo48 = defaultLoginContext47.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext49 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo48);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext50 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo48);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext52 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode44, clientConnectionInfo48, "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler54 = null;
    securityContextEnterpriseImpl53.assertCredentialsNotExpired(securityAuthorizationHandler54);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup56 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog58 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl53.authorize(
        idLookup56, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog58);
    java.util.Set<java.lang.String> strSet60 = securityContextEnterpriseImpl53.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl62 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode11, authSubject17, clientConnectionInfo23, accessMode44, strSet60,
        "volumetric");
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext64 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode10, clientConnectionInfo23, "neo4j");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(authSubject13);
    org.junit.Assert.assertTrue("'" + accessMode14 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode14.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(authSubject19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNull(str22);
    org.junit.Assert.assertNotNull(clientConnectionInfo23);
    org.junit.Assert.assertNotNull(defaultLoginContext24);
    org.junit.Assert.assertNotNull(loginContext25);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNull(str31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "AUTH_DISABLED with FULL" + "'", str34,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "AUTH_DISABLED with FULL" + "'", str37,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo40);
    org.junit.Assert.assertNotNull(securityContext41);
    org.junit.Assert.assertTrue("'" + accessMode42 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode42.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str43);
    org.junit.Assert.assertTrue("'" + accessMode44 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode44.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNotNull(defaultLoginContext47);
    org.junit.Assert.assertNotNull(clientConnectionInfo48);
    org.junit.Assert.assertNotNull(loginContext49);
    org.junit.Assert.assertNotNull(loginContext50);
    org.junit.Assert.assertNotNull(securityContext52);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNotNull(strSet60);
    org.junit.Assert.assertNotNull(securityContext64);
  }

  @Test
  public void test1403() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1403");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl2.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl2.allowsAdminAction(adminActionOnResource8);
    boolean boolean10 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) adminActionOnResource8);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl11 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl11.start();
    securityProviderAuthDisabledImpl11.stop();
    securityProviderAuthDisabledImpl11.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager15 = securityProviderAuthDisabledImpl11.inClusterAuthManager();
    securityProviderAuthDisabledImpl11.start();
    org.neo4j.kernel.api.security.AuthManager authManager17 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager18 = securityProviderAuthDisabledImpl11.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager19 = securityProviderAuthDisabledImpl11.loopbackAuthManager();
    boolean boolean20 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl11);
    org.neo4j.logging.Log log21 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl22 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log21);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId24 = null;
    pageCacheLoadingWatcherDefaultImpl22.prlcpdForNa((long) (short) 1, namedDatabaseId24);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId26);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId28 = null;
    pageCacheLoadingWatcherDefaultImpl22.wamsrdForNa(namedDatabaseId28);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId31 = null;
    pageCacheLoadingWatcherDefaultImpl22.wapclForNa((long) 6362, namedDatabaseId31);
    boolean boolean33 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl22);
    java.lang.String str34 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.logging.Log log35 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl36 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log35);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId38 = null;
    pageCacheLoadingWatcherDefaultImpl36.prlcpdForNa((long) (short) 1, namedDatabaseId38);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId40 = null;
    pageCacheLoadingWatcherDefaultImpl36.wamsrdForNa(namedDatabaseId40);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId43 = null;
    pageCacheLoadingWatcherDefaultImpl36.wapclForNa((long) (byte) 100, namedDatabaseId43);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId46 = null;
    pageCacheLoadingWatcherDefaultImpl36.wapclForNa((long) (-1), namedDatabaseId46);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId49 = null;
    pageCacheLoadingWatcherDefaultImpl36.wapclForNa((long) (short) -1, namedDatabaseId49);
    boolean boolean51 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) pageCacheLoadingWatcherDefaultImpl36);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId53 = null;
    pageCacheLoadingWatcherDefaultImpl36.wapclForNa((long) 10, namedDatabaseId53);
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl11);
    org.junit.Assert.assertNotNull(authManager15);
    org.junit.Assert.assertNotNull(authManager17);
    org.junit.Assert.assertNotNull(authManager18);
    org.junit.Assert.assertNotNull(authManager19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str34, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
  }

  @Test
  public void test1404() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1404");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 100);
    java.util.function.Consumer<java.lang.String> strConsumer6 = null;
    try {
      boolean boolean7 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded(0L, (long) '4',
          strConsumer6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1405() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1405");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 10, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 100, namedDatabaseId17);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId20 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 100, namedDatabaseId20);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId23 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 10, namedDatabaseId23);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId26 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 10, namedDatabaseId26);
  }

  @Test
  public void test1406() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1406");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor9 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) 6362, uniquenessConstraintDescriptor7, (long) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test1407() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1407");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) (byte) 10, namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) 0, namedDatabaseId19);
  }

  @Test
  public void test1408() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1408");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode13 = securityContextEnterpriseImpl4.mode();
    java.util.Set<java.lang.String> strSet14 = securityContextEnterpriseImpl4.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode13 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode13.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strSet14);
  }

  @Test
  public void test1409() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1409");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = defaultLoginContext0.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext2 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo1);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl3 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl3.authorize(
        idLookup4, "neo4j", abstractSecurityLog6);
    java.lang.String str8 = securityContextEnterpriseImpl7.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl7.withMode(
        accessMode9);
    java.lang.String str11 = securityContextEnterpriseImpl7.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource12 = null;
    boolean boolean13 = securityContextEnterpriseImpl7.allowsAdminAction(adminActionOnResource12);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl7.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContextEnterpriseImpl7.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo1, accessMode16, "enterpriseConstraints");
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject19 = securityContextEnterpriseImpl18.subject();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo1);
    org.junit.Assert.assertNotNull(loginContext2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNull(str8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertTrue("'" + accessMode16 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode16.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(authSubject19);
  }

  @Test
  public void test1410() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1410");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.clneac();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList4);
  }

  @Test
  public void test1411() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1411");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    authManager6.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
  }

  @Test
  public void test1412() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1412");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler10 = null;
    securityContextEnterpriseImpl0.assertCredentialsNotExpired(securityAuthorizationHandler10);
    boolean boolean13 = securityContextEnterpriseImpl0.allowExecuteAdminProcedure((int) (byte) 100);
    java.util.Set<java.lang.String> strSet14 = securityContextEnterpriseImpl0.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(strSet14);
  }

  @Test
  public void test1413() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1413");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext0.authorize(
        idLookup5, "pagecachewarmer", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = defaultLoginContext0.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = defaultLoginContext0.subject();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(authSubject10);
  }

  @Test
  public void test1414() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1414");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext15 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = securityContext15.mode();
    java.lang.String str17 = securityContext15.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContext15.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo14, accessMode18,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext21 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo22 = defaultLoginContext21.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext23 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo22);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext24 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo22);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext26 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo22, "AUTH_DISABLED with FULL");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup29 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl28.authorize(
        idLookup29, "neo4j", abstractSecurityLog31);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode33 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl34 = securityContextEnterpriseImpl28.withMode(
        accessMode33);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup35 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl28.authorize(
        idLookup35, "", abstractSecurityLog37);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject39 = securityContextEnterpriseImpl28.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode40 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext41 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo42 = defaultLoginContext41.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext43 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo42);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext45 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode40, clientConnectionInfo42,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl46 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl46.start();
    securityProviderAuthDisabledImpl46.stop();
    org.neo4j.kernel.api.security.AuthManager authManager49 = securityProviderAuthDisabledImpl46.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager50 = securityProviderAuthDisabledImpl46.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl52 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager50.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl52);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl55 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup56 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog58 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl59 = securityContextEnterpriseImpl55.authorize(
        idLookup56, "neo4j", abstractSecurityLog58);
    authManager50.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl59);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode61 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext62 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo63 = defaultLoginContext62.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject64 = defaultLoginContext62.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo65 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext66 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode67 = securityContext66.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext68 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet69 = defaultLoginContext68.roeSet();
    java.util.Set<java.lang.String> strSet71 = defaultLoginContext68.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode61, authSubject64, clientConnectionInfo65, accessMode67, strSet71,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl74 = securityContextEnterpriseImpl59.withMode(
        accessMode67);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl75 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup76 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog78 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl79 = securityContextEnterpriseImpl75.authorize(
        idLookup76, "neo4j", abstractSecurityLog78);
    java.lang.String str80 = securityContextEnterpriseImpl79.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode81 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl82 = securityContextEnterpriseImpl79.withMode(
        accessMode81);
    java.lang.String str83 = securityContextEnterpriseImpl79.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource84 = null;
    boolean boolean85 = securityContextEnterpriseImpl79.allowsAdminAction(adminActionOnResource84);
    java.lang.String str86 = securityContextEnterpriseImpl79.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode87 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl88 = securityContextEnterpriseImpl79.withMode(
        adminAccessMode87);
    java.util.Set<java.lang.String> strSet89 = securityContextEnterpriseImpl88.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl91 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode27, authSubject39, clientConnectionInfo42, accessMode67, strSet89,
        "verbose");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext92 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo42);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext94 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo42, "verbose");
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject95 = securityContext94.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(securityContext15);
    org.junit.Assert.assertTrue("'" + accessMode16 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode16.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertNotNull(defaultLoginContext21);
    org.junit.Assert.assertNotNull(clientConnectionInfo22);
    org.junit.Assert.assertNotNull(loginContext23);
    org.junit.Assert.assertNotNull(loginContext24);
    org.junit.Assert.assertNotNull(securityContext26);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl34);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertNotNull(authSubject39);
    org.junit.Assert.assertNotNull(defaultLoginContext41);
    org.junit.Assert.assertNotNull(clientConnectionInfo42);
    org.junit.Assert.assertNotNull(loginContext43);
    org.junit.Assert.assertNotNull(securityContext45);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl46);
    org.junit.Assert.assertNotNull(authManager49);
    org.junit.Assert.assertNotNull(authManager50);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl52);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl55);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl59);
    org.junit.Assert.assertNotNull(defaultLoginContext62);
    org.junit.Assert.assertNotNull(clientConnectionInfo63);
    org.junit.Assert.assertNotNull(authSubject64);
    org.junit.Assert.assertNotNull(securityContext66);
    org.junit.Assert.assertTrue("'" + accessMode67 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode67.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext68);
    org.junit.Assert.assertNotNull(strSet69);
    org.junit.Assert.assertNotNull(strSet71);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl74);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl75);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl79);
    org.junit.Assert.assertNull(str80);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl82);
    org.junit.Assert.assertEquals("'" + str83 + "' != '" + "AUTH_DISABLED with FULL" + "'", str83,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    org.junit.Assert.assertEquals("'" + str86 + "' != '" + "AUTH_DISABLED with FULL" + "'", str86,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl88);
    org.junit.Assert.assertNotNull(strSet89);
    org.junit.Assert.assertNotNull(defaultLoginContext92);
    org.junit.Assert.assertNotNull(securityContext94);
    org.junit.Assert.assertNotNull(authSubject95);
  }

  @Test
  public void test1415() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1415");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) '#', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId14);
  }

  @Test
  public void test1416() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1416");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl0.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext11 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet13 = defaultLoginContext11.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup14 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = defaultLoginContext11.authorize(
        idLookup14, "PageCacheProfileLoader", abstractSecurityLog16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl17.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext20 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode10, clientConnectionInfo18, "user '' with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext11);
    org.junit.Assert.assertNotNull(strSet13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(securityContext20);
  }

  @Test
  public void test1417() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1417");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl2.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl2.allowsAdminAction(adminActionOnResource8);
    boolean boolean10 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) adminActionOnResource8);
    java.lang.String str11 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl12.authorize(
        idLookup13, "neo4j", abstractSecurityLog15);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl12.withMode(
        accessMode17);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl18.authorize(
        idLookup19, "neo4j", abstractSecurityLog21);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = securityContextEnterpriseImpl18.connectionInfo();
    boolean boolean24 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) clientConnectionInfo23);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl25 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl25.start();
    securityProviderAuthDisabledImpl25.stop();
    org.neo4j.kernel.api.security.AuthManager authManager28 = securityProviderAuthDisabledImpl25.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager29 = securityProviderAuthDisabledImpl25.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager30 = securityProviderAuthDisabledImpl25.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager31 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager32 = securityProviderAuthDisabledImpl25.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager33 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    boolean boolean34 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl25);
    java.lang.String str35 = cachePopulatorExtensionFactory0.getName();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext36 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker37 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle38 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext36, componentsChecker37);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pagecachewarmer" + "'", str11,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(clientConnectionInfo23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl25);
    org.junit.Assert.assertNotNull(authManager28);
    org.junit.Assert.assertNotNull(authManager29);
    org.junit.Assert.assertNotNull(authManager30);
    org.junit.Assert.assertNotNull(authManager31);
    org.junit.Assert.assertNotNull(authManager32);
    org.junit.Assert.assertNotNull(authManager33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "pagecachewarmer" + "'", str35,
        "pagecachewarmer");
  }

  @Test
  public void test1418() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1418");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl2.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl2.allowsAdminAction(adminActionOnResource8);
    boolean boolean10 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) adminActionOnResource8);
    java.lang.String str11 = cachePopulatorExtensionFactory0.getName();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl12 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup13 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl12.authorize(
        idLookup13, "neo4j", abstractSecurityLog15);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl12.withMode(
        accessMode17);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl18.authorize(
        idLookup19, "neo4j", abstractSecurityLog21);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = securityContextEnterpriseImpl18.connectionInfo();
    boolean boolean24 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) clientConnectionInfo23);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl25 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl25.start();
    securityProviderAuthDisabledImpl25.stop();
    org.neo4j.kernel.api.security.AuthManager authManager28 = securityProviderAuthDisabledImpl25.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager29 = securityProviderAuthDisabledImpl25.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager30 = securityProviderAuthDisabledImpl25.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager31 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager32 = securityProviderAuthDisabledImpl25.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager33 = securityProviderAuthDisabledImpl25.inClusterAuthManager();
    boolean boolean34 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl25);
    java.lang.String str35 = cachePopulatorExtensionFactory0.toString();
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pagecachewarmer" + "'", str11,
        "pagecachewarmer");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(clientConnectionInfo23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl25);
    org.junit.Assert.assertNotNull(authManager28);
    org.junit.Assert.assertNotNull(authManager29);
    org.junit.Assert.assertNotNull(authManager30);
    org.junit.Assert.assertNotNull(authManager31);
    org.junit.Assert.assertNotNull(authManager32);
    org.junit.Assert.assertNotNull(authManager33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertEquals(
        "'" + str35 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str35, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test1419() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1419");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 100);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (short) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (short) 1);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test1420() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1420");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode7);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler9 = null;
    securityContextEnterpriseImpl8.assertCredentialsNotExpired(securityAuthorizationHandler9);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource11 = null;
    try {
      boolean boolean12 = securityContextEnterpriseImpl8.allowsAdminAction(adminActionOnResource11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
  }

  @Test
  public void test1421() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1421");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager4);
  }

  @Test
  public void test1422() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1422");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.init();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1423() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1423");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
  }

  @Test
  public void test1424() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1424");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    securityProviderAuthDisabledImpl0.init();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.authManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager9);
  }

  @Test
  public void test1425() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1425");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (byte) 100, namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    try {
      pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10L, namedDatabaseId12);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test1426() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1426");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor4 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor5 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor6 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor7 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup8 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor4, nodeCursor5, propertyCursor6, labelSchemaDescriptor7,
          tokenNameLookup8);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1427() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1427");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.claauch();
    defaultAuthManager0.init();
    defaultAuthManager0.start();
    java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl8 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl8.start();
    securityProviderAuthDisabledImpl8.stop();
    org.neo4j.kernel.api.security.AuthManager authManager11 = securityProviderAuthDisabledImpl8.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl8.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl8.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl15.withMode(
        accessMode20);
    java.lang.String str22 = securityContextEnterpriseImpl15.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject23 = securityContextEnterpriseImpl15.subject();
    authManager13.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl15);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler25 = null;
    securityContextEnterpriseImpl15.assertCredentialsNotExpired(securityAuthorizationHandler25);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject27 = securityContextEnterpriseImpl15.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject29 = securityContextEnterpriseImpl28.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl28.withMode(
        adminAccessMode30);
    java.lang.String str32 = securityContextEnterpriseImpl28.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo33 = securityContextEnterpriseImpl28.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext34 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo33);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode35 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo37 = defaultLoginContext36.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext38 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo37);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext40 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode35, clientConnectionInfo37,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext41 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo37);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext42 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode43 = securityContext42.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo37, accessMode43, "hi!");
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode46 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext47 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode48 = securityContext47.mode();
    java.lang.String str49 = securityContext47.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode50 = securityContext47.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject51 = securityContext47.subject();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext52 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo53 = defaultLoginContext52.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext54 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo53);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext55 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo53);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl56 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup57 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog59 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl60 = securityContextEnterpriseImpl56.authorize(
        idLookup57, "neo4j", abstractSecurityLog59);
    java.lang.String str61 = securityContextEnterpriseImpl60.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode62 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl63 = securityContextEnterpriseImpl60.withMode(
        accessMode62);
    java.lang.String str64 = securityContextEnterpriseImpl60.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject65 = securityContextEnterpriseImpl60.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode66 = securityContextEnterpriseImpl60.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext67 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet69 = defaultLoginContext67.roeSet();
    java.util.Set<java.lang.String> strSet70 = defaultLoginContext67.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl72 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode46, authSubject51, clientConnectionInfo53, accessMode66, strSet70, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl74 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode7, authSubject27, clientConnectionInfo33, accessMode43, strSet70,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext75 = defaultAuthManager0.login(
          strMap6, clientConnectionInfo33);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl8);
    org.junit.Assert.assertNotNull(authManager11);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNull(str22);
    org.junit.Assert.assertNotNull(authSubject23);
    org.junit.Assert.assertNotNull(authSubject27);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(authSubject29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNull(str32);
    org.junit.Assert.assertNotNull(clientConnectionInfo33);
    org.junit.Assert.assertNotNull(loginContext34);
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(clientConnectionInfo37);
    org.junit.Assert.assertNotNull(loginContext38);
    org.junit.Assert.assertNotNull(securityContext40);
    org.junit.Assert.assertNotNull(defaultLoginContext41);
    org.junit.Assert.assertNotNull(securityContext42);
    org.junit.Assert.assertTrue("'" + accessMode43 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode43.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNotNull(securityContext47);
    org.junit.Assert.assertTrue("'" + accessMode48 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode48.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str49);
    org.junit.Assert.assertTrue("'" + accessMode50 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode50.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject51);
    org.junit.Assert.assertNotNull(defaultLoginContext52);
    org.junit.Assert.assertNotNull(clientConnectionInfo53);
    org.junit.Assert.assertNotNull(defaultLoginContext54);
    org.junit.Assert.assertNotNull(defaultLoginContext55);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl56);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl60);
    org.junit.Assert.assertNull(str61);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl63);
    org.junit.Assert.assertEquals("'" + str64 + "' != '" + "AUTH_DISABLED with FULL" + "'", str64,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject65);
    org.junit.Assert.assertTrue("'" + accessMode66 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode66.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext67);
    org.junit.Assert.assertNotNull(strSet69);
    org.junit.Assert.assertNotNull(strSet70);
  }

  @Test
  public void test1428() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1428");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "localhost", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource6 = null;
    boolean boolean7 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource6);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource8 = null;
    boolean boolean9 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource8);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl0.authorize(
        idLookup10, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog12);
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler14 = null;
    securityContextEnterpriseImpl13.assertCredentialsNotExpired(securityAuthorizationHandler14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = securityContextEnterpriseImpl17.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = securityContextEnterpriseImpl17.mode();
    java.lang.String str20 = securityContextEnterpriseImpl17.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl17;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = securityContextEnterpriseImpl17.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject24 = securityContextEnterpriseImpl23.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode25 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl26 = securityContextEnterpriseImpl23.withMode(
        adminAccessMode25);
    java.lang.String str27 = securityContextEnterpriseImpl23.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = securityContextEnterpriseImpl23.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo28);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext30 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo28);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup32 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl31.authorize(
        idLookup32, "neo4j", abstractSecurityLog34);
    java.lang.String str36 = securityContextEnterpriseImpl35.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode37 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl38 = securityContextEnterpriseImpl35.withMode(
        accessMode37);
    java.lang.String str39 = securityContextEnterpriseImpl35.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource40 = null;
    boolean boolean41 = securityContextEnterpriseImpl35.allowsAdminAction(adminActionOnResource40);
    java.lang.String str42 = securityContextEnterpriseImpl35.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl35;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl35;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo45 = securityContextEnterpriseImpl35.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext46 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode47 = securityContext46.mode();
    java.lang.String str48 = securityContext46.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode49 = securityContext46.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl51 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo45, accessMode49,
        "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext52 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo53 = defaultLoginContext52.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext54 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo53);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext55 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo53);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext57 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode49, clientConnectionInfo53, "AUTH_DISABLED with FULL");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler59 = null;
    securityContextEnterpriseImpl58.assertCredentialsNotExpired(securityAuthorizationHandler59);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup61 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog63 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl64 = securityContextEnterpriseImpl58.authorize(
        idLookup61, "Node Key constraint requires Neo4j Enterprise Edition", abstractSecurityLog63);
    java.util.Set<java.lang.String> strSet65 = securityContextEnterpriseImpl58.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl67 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode16, authSubject22, clientConnectionInfo28, accessMode49, strSet65,
        "volumetric");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl68 = securityContextEnterpriseImpl13.withMode(
        accessMode49);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(authSubject18);
    org.junit.Assert.assertTrue("'" + accessMode19 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode19.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(authSubject24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl26);
    org.junit.Assert.assertNull(str27);
    org.junit.Assert.assertNotNull(clientConnectionInfo28);
    org.junit.Assert.assertNotNull(defaultLoginContext29);
    org.junit.Assert.assertNotNull(loginContext30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNull(str36);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl38);
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AUTH_DISABLED with FULL" + "'", str39,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertEquals("'" + str42 + "' != '" + "AUTH_DISABLED with FULL" + "'", str42,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo45);
    org.junit.Assert.assertNotNull(securityContext46);
    org.junit.Assert.assertTrue("'" + accessMode47 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode47.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str48);
    org.junit.Assert.assertTrue("'" + accessMode49 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode49.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl51);
    org.junit.Assert.assertNotNull(defaultLoginContext52);
    org.junit.Assert.assertNotNull(clientConnectionInfo53);
    org.junit.Assert.assertNotNull(loginContext54);
    org.junit.Assert.assertNotNull(loginContext55);
    org.junit.Assert.assertNotNull(securityContext57);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl58);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl64);
    org.junit.Assert.assertNotNull(strSet65);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl68);
  }

  @Test
  public void test1429() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1429");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager8.init();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
  }

  @Test
  public void test1430() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1430");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    authManager4.init();
    authManager4.init();
    authManager4.stop();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
  }

  @Test
  public void test1431() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1431");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl checkPointThresholdPolicyContinuousImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyContinuousImpl();
    org.neo4j.configuration.Config config1 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock2 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning3 = null;
    org.neo4j.logging.LogProvider logProvider4 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold5 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config1, systemNanoClock2, logPruning3, logProvider4);
    java.lang.String str6 = checkPointThresholdPolicyContinuousImpl0.getName();
    java.lang.String str7 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    org.neo4j.configuration.Config config13 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock14 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning15 = null;
    org.neo4j.logging.LogProvider logProvider16 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold17 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config13, systemNanoClock14, logPruning15, logProvider16);
    java.lang.String str18 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.neo4j.configuration.Config config19 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock20 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning21 = null;
    org.neo4j.logging.LogProvider logProvider22 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold23 = checkPointThresholdPolicyContinuousImpl0.createThreshold(
        config19, systemNanoClock20, logPruning21, logProvider22);
    java.lang.String str24 = checkPointThresholdPolicyContinuousImpl0.getName();
    org.junit.Assert.assertNotNull(checkPointThreshold5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "continuous" + "'", str6, "continuous");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "continuous" + "'", str7, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertNotNull(checkPointThreshold17);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "continuous" + "'", str18, "continuous");
    org.junit.Assert.assertNotNull(checkPointThreshold23);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "continuous" + "'", str24, "continuous");
  }

  @Test
  public void test1432() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1432");
    }
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo0);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = defaultLoginContext1.authorize(
        idLookup2, "enterpriseConstraints", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject6 = defaultLoginContext1.subject();
    java.util.Set<java.lang.String> strSet7 = defaultLoginContext1.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup8 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = defaultLoginContext1.authorize(
        idLookup8, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog10);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext1;
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(authSubject6);
    org.junit.Assert.assertNotNull(strSet7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
  }

  @Test
  public void test1433() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1433");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl4.loopbackAuthManager();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.start();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(authManager12);
  }

  @Test
  public void test1434() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1434");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.storageengine.api.StorageReader storageReader5 = null;
    org.neo4j.internal.kernel.api.Read read6 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory7 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState8 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor9 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext10 = null;
    org.neo4j.memory.MemoryTracker memoryTracker11 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor12 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader5, read6, cursorFactory7, readableTransactionState8, txStateVisitor9,
          cursorContext10, memoryTracker11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1435() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1435");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager2 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager4.log("",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup10 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog12 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = securityContextEnterpriseImpl9.authorize(
        idLookup10, "neo4j", abstractSecurityLog12);
    java.lang.String str14 = securityContextEnterpriseImpl13.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = securityContextEnterpriseImpl13.withMode(
        accessMode15);
    java.lang.String str17 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource18 = null;
    boolean boolean19 = securityContextEnterpriseImpl13.allowsAdminAction(adminActionOnResource18);
    authManager4.log("Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl13);
    java.lang.String str21 = securityContextEnterpriseImpl13.database();
    java.lang.String str22 = securityContextEnterpriseImpl13.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode23 = securityContextEnterpriseImpl13.mode();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = securityContextEnterpriseImpl13.withMode(
        adminAccessMode24);
    boolean boolean27 = securityContextEnterpriseImpl13.allowExecuteAdminProcedure(
        (int) (short) 100);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager2);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode23 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode23.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
  }

  @Test
  public void test1436() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1436");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    long long5 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 2);
    long long8 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened(0L);
    checkPointThresholdVolumetricPolicy1.initialize((long) '#');
    checkPointThresholdVolumetricPolicy1.initialize(10000L);
    java.util.function.Consumer<java.lang.String> strConsumer17 = null;
    try {
      boolean boolean18 = checkPointThresholdVolumetricPolicy1.isCheckPointingNeeded((long) 10,
          (long) (byte) 100, strConsumer17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
  }

  @Test
  public void test1437() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1437");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup11 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl4.authorize(
        idLookup11, "AUTH_DISABLED with FULL", abstractSecurityLog13);
    java.lang.String str15 = securityContextEnterpriseImpl14.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AUTH_DISABLED with FULL" + "'", str15,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test1438() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1438");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet1 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = defaultLoginContext0.authorize(
        idLookup2, "pagecachewarmer", abstractSecurityLog4);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject6 = defaultLoginContext0.subject();
    java.lang.Class<?> wildcardClass7 = defaultLoginContext0.getClass();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(authSubject6);
    org.junit.Assert.assertNotNull(wildcardClass7);
  }

  @Test
  public void test1439() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1439");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode10 = securityContextEnterpriseImpl4.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject11 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl4.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    java.lang.String str17 = securityContextEnterpriseImpl4.description();
    boolean boolean19 = securityContextEnterpriseImpl4.allowExecuteAdminProcedure(1);
    java.lang.String str20 = securityContextEnterpriseImpl4.description();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertTrue("'" + accessMode10 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode10.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AUTH_DISABLED with FULL" + "'", str17,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AUTH_DISABLED with FULL" + "'", str20,
        "AUTH_DISABLED with FULL");
  }

  @Test
  public void test1440() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1440");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) 6362, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) (short) -1, namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) ' ', namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId19 = null;
    basePageCacheLoadingWatcher0.wapclForNa(10000L, namedDatabaseId19);
  }

  @Test
  public void test1441() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1441");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo1 = null;
    org.neo4j.internal.kernel.api.security.LoginContext loginContext2 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo1);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject3 = loginContext2.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode4 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext5 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo6 = defaultLoginContext5.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext7 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo6);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext9 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode4, clientConnectionInfo6,
        "Node Key constraint requires Neo4j Enterprise Edition");
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext10 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo6);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode11 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext12 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject13 = defaultLoginContext12.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup15 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog17 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl18 = securityContextEnterpriseImpl14.authorize(
        idLookup15, "neo4j", abstractSecurityLog17);
    java.lang.String str19 = securityContextEnterpriseImpl18.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl18.withMode(
        accessMode20);
    java.lang.String str22 = securityContextEnterpriseImpl18.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource23 = null;
    boolean boolean24 = securityContextEnterpriseImpl18.allowsAdminAction(adminActionOnResource23);
    java.lang.String str25 = securityContextEnterpriseImpl18.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl18;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl18;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = securityContextEnterpriseImpl18.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup30 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog32 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl29.authorize(
        idLookup30, "neo4j", abstractSecurityLog32);
    java.lang.String str34 = securityContextEnterpriseImpl29.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource35 = null;
    boolean boolean36 = securityContextEnterpriseImpl29.allowsAdminAction(adminActionOnResource35);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup37 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog39 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = securityContextEnterpriseImpl29.authorize(
        idLookup37, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog39);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode41 = securityContextEnterpriseImpl40.mode();
    java.lang.String[] strArray54 = new java.lang.String[]{"enterpriseConstraints",
        "Node Key constraint requires Neo4j Enterprise Edition", "enterpriseConstraints",
        "pagecachewarmer", "PageCacheProfileLoader", "verbose",
        "Property existence constraint requires Neo4j Enterprise Edition",
        "Property existence constraint requires Neo4j Enterprise Edition", "PageCacheProfileLoader",
        "user '' with FULL", "AUTH_DISABLED with FULL", "user '' with FULL"};
    java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
    boolean boolean56 = java.util.Collections.addAll(
        (java.util.Collection<java.lang.String>) strSet55, strArray54);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl58 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode11, authSubject13, clientConnectionInfo28, accessMode41,
        (java.util.Set<java.lang.String>) strSet55, "user '' with FULL");
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl59 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl59.start();
    securityProviderAuthDisabledImpl59.stop();
    org.neo4j.kernel.api.security.AuthManager authManager62 = securityProviderAuthDisabledImpl59.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager63 = securityProviderAuthDisabledImpl59.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager63.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl65);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl68 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup69 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog71 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl72 = securityContextEnterpriseImpl68.authorize(
        idLookup69, "neo4j", abstractSecurityLog71);
    authManager63.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl72);
    java.lang.String str74 = securityContextEnterpriseImpl72.description();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo75 = securityContextEnterpriseImpl72.connectionInfo();
    java.util.Set<java.lang.String> strSet76 = securityContextEnterpriseImpl72.roles();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl78 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject3, clientConnectionInfo6, accessMode41, strSet76, "hi!");
    org.junit.Assert.assertNotNull(loginContext2);
    org.junit.Assert.assertNotNull(authSubject3);
    org.junit.Assert.assertNotNull(defaultLoginContext5);
    org.junit.Assert.assertNotNull(clientConnectionInfo6);
    org.junit.Assert.assertNotNull(loginContext7);
    org.junit.Assert.assertNotNull(securityContext9);
    org.junit.Assert.assertNotNull(defaultLoginContext10);
    org.junit.Assert.assertNotNull(defaultLoginContext12);
    org.junit.Assert.assertNotNull(authSubject13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl18);
    org.junit.Assert.assertNull(str19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AUTH_DISABLED with FULL" + "'", str22,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AUTH_DISABLED with FULL" + "'", str25,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNull(str34);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertTrue("'" + accessMode41 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode41.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(strArray54);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl59);
    org.junit.Assert.assertNotNull(authManager62);
    org.junit.Assert.assertNotNull(authManager63);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl65);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl68);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl72);
    org.junit.Assert.assertEquals("'" + str74 + "' != '" + "AUTH_DISABLED with FULL" + "'", str74,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo75);
    org.junit.Assert.assertNotNull(strSet76);
  }

  @Test
  public void test1442() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1442");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str4 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.kernel.api.NodeLabelIndexCursor nodeLabelIndexCursor5 = null;
    org.neo4j.internal.kernel.api.NodeCursor nodeCursor6 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor7 = null;
    org.neo4j.internal.schema.LabelSchemaDescriptor labelSchemaDescriptor8 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup9 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateNodePropertyExistenceConstraint(
          nodeLabelIndexCursor5, nodeCursor6, propertyCursor7, labelSchemaDescriptor8,
          tokenNameLookup9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "enterpriseConstraints" + "'", str4,
        "enterpriseConstraints");
  }

  @Test
  public void test1443() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1443");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.lang.String str4 = enterpriseTracerFactory0.getName();
    java.time.Clock clock5 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer6 = enterpriseTracerFactory0.createDatabaseTracer(
        clock5);
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    java.time.Clock clock9 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer10 = enterpriseTracerFactory0.createDatabaseTracer(
        clock9);
    java.time.Clock clock11 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer12 = enterpriseTracerFactory0.createDatabaseTracer(
        clock11);
    org.neo4j.monitoring.Monitors monitors13 = null;
    org.neo4j.scheduler.JobScheduler jobScheduler14 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock15 = null;
    org.neo4j.logging.Log log16 = null;
    org.neo4j.configuration.Config config17 = null;
    try {
      org.neo4j.io.pagecache.tracing.PageCacheTracer pageCacheTracer18 = enterpriseTracerFactory0.createPageCacheTracer(
          monitors13, jobScheduler14, systemNanoClock15, log16, config17);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "verbose" + "'", str4, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer6);
    org.junit.Assert.assertNotNull(lockTracer8);
    org.junit.Assert.assertNotNull(databaseTracer10);
    org.junit.Assert.assertNotNull(databaseTracer12);
  }

  @Test
  public void test1444() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1444");
    }
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo0 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext1 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo0);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = defaultLoginContext1.authorize(
        idLookup2, "enterpriseConstraints", abstractSecurityLog4);
    java.util.Set<java.lang.String> strSet6 = defaultLoginContext1.roeSet();
    java.lang.Class<?> wildcardClass7 = strSet6.getClass();
    org.junit.Assert.assertNotNull(defaultLoginContext1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(strSet6);
    org.junit.Assert.assertNotNull(wildcardClass7);
  }

  @Test
  public void test1445() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1445");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl4.authManager();
    securityProviderAuthDisabledImpl4.shutdown();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(authManager12);
  }

  @Test
  public void test1446() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1446");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    defaultAuthManager0.claauch();
    defaultAuthManager0.start();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
  }

  @Test
  public void test1447() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1447");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl0.database();
    java.lang.String str6 = securityContextEnterpriseImpl0.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource7 = null;
    boolean boolean8 = securityContextEnterpriseImpl0.allowsAdminAction(adminActionOnResource7);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo9 = securityContextEnterpriseImpl0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext10 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo9);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo11 = defaultLoginContext10.connectionInfo();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo9);
    org.junit.Assert.assertNotNull(defaultLoginContext10);
    org.junit.Assert.assertNotNull(clientConnectionInfo11);
  }

  @Test
  public void test1448() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1448");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    defaultAuthManager0.start();
    defaultAuthManager0.clneac();
    defaultAuthManager0.claauch();
    defaultAuthManager0.shutdown();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList33 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(strMapList33);
  }

  @Test
  public void test1449() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1449");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.storageengine.api.StorageReader storageReader5 = null;
    org.neo4j.internal.kernel.api.Read read6 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory7 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState8 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor9 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext10 = null;
    org.neo4j.memory.MemoryTracker memoryTracker11 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor12 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader5, read6, cursorFactory7, readableTransactionState8, txStateVisitor9,
          cursorContext10, memoryTracker11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
  }

  @Test
  public void test1450() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1450");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) ' ', namedDatabaseId13);
  }

  @Test
  public void test1451() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1451");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    defaultAuthManager0.clneac();
    java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl16 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject17 = securityContextEnterpriseImpl16.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl16.withMode(
        adminAccessMode18);
    java.lang.String str20 = securityContextEnterpriseImpl16.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo21 = securityContextEnterpriseImpl16.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext22 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo21);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext23 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo21);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = defaultLoginContext23.authorize(
        idLookup24, ".cacheprof", abstractSecurityLog26);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo28 = defaultLoginContext23.connectionInfo();
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext29 = defaultAuthManager0.login(
          strMap15, clientConnectionInfo28);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl16);
    org.junit.Assert.assertNotNull(authSubject17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(clientConnectionInfo21);
    org.junit.Assert.assertNotNull(defaultLoginContext22);
    org.junit.Assert.assertNotNull(defaultLoginContext23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(clientConnectionInfo28);
  }

  @Test
  public void test1452() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1452");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) -1, namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 1, namedDatabaseId16);
  }

  @Test
  public void test1453() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1453");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.start();
    org.neo4j.kernel.api.security.AuthManager authManager3 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    securityProviderAuthDisabledImpl0.stop();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.authManager();
    authManager8.stop();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup12 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.authorize(
        idLookup12, "neo4j", abstractSecurityLog14);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl11.withMode(
        accessMode16);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup18 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog20 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl21 = securityContextEnterpriseImpl11.authorize(
        idLookup18, "", abstractSecurityLog20);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = securityContextEnterpriseImpl11.subject();
    authManager8.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager3);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl21);
    org.junit.Assert.assertNotNull(authSubject22);
  }

  @Test
  public void test1454() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1454");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    java.lang.String str1 = constraintSemanticsEnterpriseImpl0.getName();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor4 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor6 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (byte) 1, uniquenessConstraintDescriptor4, 0L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "enterpriseConstraints" + "'", str1,
        "enterpriseConstraints");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
  }

  @Test
  public void test1455() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1455");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext3 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject4 = defaultLoginContext3.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = defaultLoginContext3.authorize(
        idLookup5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        abstractSecurityLog7);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(defaultLoginContext3);
    org.junit.Assert.assertNotNull(authSubject4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
  }

  @Test
  public void test1456() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1456");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    defaultAuthManager0.claauch();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList10 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup14 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl13.authorize(
        idLookup14, "neo4j", abstractSecurityLog16);
    java.lang.String str18 = securityContextEnterpriseImpl17.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode19 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl20 = securityContextEnterpriseImpl17.withMode(
        accessMode19);
    java.lang.String str21 = securityContextEnterpriseImpl17.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject22 = securityContextEnterpriseImpl17.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode23 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = securityContextEnterpriseImpl17.withMode(
        adminAccessMode23);
    boolean boolean26 = securityContextEnterpriseImpl24.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl24.withMode(
        adminAccessMode27);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl28.withMode(
        adminAccessMode29);
    java.util.Set<java.lang.String> strSet31 = securityContextEnterpriseImpl28.roles();
    defaultAuthManager0.log("pagecachewarmer",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl28);
    boolean boolean34 = securityContextEnterpriseImpl28.allowExecuteAdminProcedure(1);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(strMapList10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNull(str18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl20);
    org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AUTH_DISABLED with FULL" + "'", str21,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject22);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(strSet31);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
  }

  @Test
  public void test1457() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1457");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode14 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode14);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl15.withMode(
        adminAccessMode16);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo18 = securityContextEnterpriseImpl15.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo18);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup20 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog22 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl23 = defaultLoginContext19.authorize(
        idLookup20, "AUTH_DISABLED with FULL", abstractSecurityLog22);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup24 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog26 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl27 = defaultLoginContext19.authorize(
        idLookup24, "Property existence constraint requires Neo4j Enterprise Edition",
        abstractSecurityLog26);
    java.util.Set<java.lang.String> strSet28 = defaultLoginContext19.roeSet();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNotNull(clientConnectionInfo18);
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl27);
    org.junit.Assert.assertNotNull(strSet28);
  }

  @Test
  public void test1458() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1458");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          100L, uniquenessConstraintDescriptor5, (long) (byte) 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1459() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1459");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    defaultAuthManager0.start();
    defaultAuthManager0.stop();
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory32 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str33 = cachePopulatorExtensionFactory32.getName();
    java.lang.String str34 = cachePopulatorExtensionFactory32.toString();
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager35 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext37 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    defaultAuthManager35.log("", securityContext37);
    boolean boolean39 = cachePopulatorExtensionFactory32.equals(
        (java.lang.Object) defaultAuthManager35);
    defaultAuthManager35.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup43 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog45 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl46 = securityContextEnterpriseImpl42.authorize(
        idLookup43, "neo4j", abstractSecurityLog45);
    java.lang.String str47 = securityContextEnterpriseImpl42.database();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource48 = null;
    boolean boolean49 = securityContextEnterpriseImpl42.allowsAdminAction(adminActionOnResource48);
    defaultAuthManager35.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl42);
    defaultAuthManager0.log("localhost",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pagecachewarmer" + "'", str33,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str34 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str34, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(defaultAuthManager35);
    org.junit.Assert.assertNotNull(securityContext37);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl46);
    org.junit.Assert.assertNull(str47);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
  }

  @Test
  public void test1460() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1460");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str6 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.storageengine.api.StorageReader storageReader7 = null;
    org.neo4j.internal.kernel.api.Read read8 = null;
    org.neo4j.internal.kernel.api.CursorFactory cursorFactory9 = null;
    org.neo4j.storageengine.api.txstate.ReadableTransactionState readableTransactionState10 = null;
    org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor11 = null;
    org.neo4j.io.pagecache.context.CursorContext cursorContext12 = null;
    org.neo4j.memory.MemoryTracker memoryTracker13 = null;
    try {
      org.neo4j.storageengine.api.txstate.TxStateVisitor txStateVisitor14 = constraintSemanticsEnterpriseImpl0.decorateTxStateVisitor(
          storageReader7, read8, cursorFactory9, readableTransactionState10, txStateVisitor11,
          cursorContext12, memoryTracker13);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "enterpriseConstraints" + "'", str6,
        "enterpriseConstraints");
  }

  @Test
  public void test1461() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1461");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList3 = defaultAuthManager0.gepiggatgcfList();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList4 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl7);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList9 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.clneac();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList3);
    org.junit.Assert.assertNotNull(strMapList4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertNotNull(strMapList9);
  }

  @Test
  public void test1462() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1462");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '#', namedDatabaseId13);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId17);
  }

  @Test
  public void test1463() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1463");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize((long) (short) 0);
    long long9 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
  }

  @Test
  public void test1464() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1464");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource13 = null;
    boolean boolean14 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
  }

  @Test
  public void test1465() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1465");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.stop();
    defaultAuthManager0.claauch();
    java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory6 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str7 = cachePopulatorExtensionFactory6.getName();
    java.lang.String str8 = cachePopulatorExtensionFactory6.toString();
    java.lang.String str9 = cachePopulatorExtensionFactory6.getName();
    java.lang.String str10 = cachePopulatorExtensionFactory6.toString();
    boolean boolean12 = cachePopulatorExtensionFactory6.equals((java.lang.Object) 10.0d);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl13 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup14 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog16 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl17 = securityContextEnterpriseImpl13.authorize(
        idLookup14, "neo4j", abstractSecurityLog16);
    java.lang.String str18 = securityContextEnterpriseImpl17.database();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl17.authorize(
        idLookup19, "localhost", abstractSecurityLog21);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = securityContextEnterpriseImpl17.connectionInfo();
    boolean boolean24 = cachePopulatorExtensionFactory6.equals(
        (java.lang.Object) clientConnectionInfo23);
    try {
      io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext25 = defaultAuthManager0.login(
          strMap5, clientConnectionInfo23);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str8, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pagecachewarmer" + "'", str9,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str10 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str10, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl13);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl17);
    org.junit.Assert.assertNull(str18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(clientConnectionInfo23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test1466() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1466");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode29 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl30 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode29);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl19.withMode(
        adminAccessMode31);
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
  }

  @Test
  public void test1467() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1467");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    boolean boolean10 = securityContextEnterpriseImpl4.allowsAdminAction(adminActionOnResource9);
    java.lang.String str11 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl4;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo14 = securityContextEnterpriseImpl4.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext15 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo14);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject18 = defaultLoginContext15.subject();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "AUTH_DISABLED with FULL" + "'", str11,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo14);
    org.junit.Assert.assertNotNull(defaultLoginContext15);
    org.junit.Assert.assertNotNull(authSubject18);
  }

  @Test
  public void test1468() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1468");
    }
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl0 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl0.start();
    securityProviderAuthDisabledImpl0.stop();
    securityProviderAuthDisabledImpl0.shutdown();
    org.neo4j.kernel.api.security.AuthManager authManager4 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager5 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager6 = securityProviderAuthDisabledImpl0.inClusterAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager7 = securityProviderAuthDisabledImpl0.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager8 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.neo4j.kernel.api.security.AuthManager authManager9 = securityProviderAuthDisabledImpl0.loopbackAuthManager();
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl0);
    org.junit.Assert.assertNotNull(authManager4);
    org.junit.Assert.assertNotNull(authManager5);
    org.junit.Assert.assertNotNull(authManager6);
    org.junit.Assert.assertNotNull(authManager7);
    org.junit.Assert.assertNotNull(authManager8);
    org.junit.Assert.assertNotNull(authManager9);
  }

  @Test
  public void test1469() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1469");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext0.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext3 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo2);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.authorize(
        idLookup5, "neo4j", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode9 = securityContextEnterpriseImpl4.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo2, accessMode9, "enterpriseConstraints");
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(loginContext3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertTrue(
        "'" + accessMode9 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode9.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
  }

  @Test
  public void test1470() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1470");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList5 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.init();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList7 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList5);
    org.junit.Assert.assertNotNull(strMapList7);
  }

  @Test
  public void test1471() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1471");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str7 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str8 = cachePopulatorExtensionFactory0.toString();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pagecachewarmer" + "'", str6,
        "pagecachewarmer");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pagecachewarmer" + "'", str7,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str8 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str8, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test1472() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1472");
    }
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext0 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode1 = securityContext0.mode();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode2 = securityContext0.mode();
    java.lang.String str3 = securityContext0.database();
    org.junit.Assert.assertNotNull(securityContext0);
    org.junit.Assert.assertTrue(
        "'" + accessMode1 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode1.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertTrue(
        "'" + accessMode2 + "' != '" + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL
            + "'",
        accessMode2.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNull(str3);
  }

  @Test
  public void test1473() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1473");
    }
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode0 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl1 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl1.authorize(
        idLookup2, "neo4j", abstractSecurityLog4);
    java.lang.String str6 = securityContextEnterpriseImpl5.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl5.withMode(
        accessMode7);
    java.lang.String str9 = securityContextEnterpriseImpl5.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject10 = securityContextEnterpriseImpl5.subject();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject12 = securityContextEnterpriseImpl11.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode13 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl14 = securityContextEnterpriseImpl11.withMode(
        adminAccessMode13);
    java.lang.String str15 = securityContextEnterpriseImpl11.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo16 = securityContextEnterpriseImpl11.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext17 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext18 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo16);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup19 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = defaultLoginContext18.authorize(
        idLookup19, ".cacheprof", abstractSecurityLog21);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo23 = defaultLoginContext18.connectionInfo();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl24 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup25 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog27 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl28 = securityContextEnterpriseImpl24.authorize(
        idLookup25, "neo4j", abstractSecurityLog27);
    java.lang.String str29 = securityContextEnterpriseImpl28.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode30 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl31 = securityContextEnterpriseImpl28.withMode(
        accessMode30);
    java.lang.String str32 = securityContextEnterpriseImpl28.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject33 = securityContextEnterpriseImpl28.subject();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode34 = securityContextEnterpriseImpl28.mode();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject35 = securityContextEnterpriseImpl28.subject();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl36 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl36.start();
    securityProviderAuthDisabledImpl36.stop();
    org.neo4j.kernel.api.security.AuthManager authManager39 = securityProviderAuthDisabledImpl36.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager40 = securityProviderAuthDisabledImpl36.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl42 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    authManager40.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl42);
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup46 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog48 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl49 = securityContextEnterpriseImpl45.authorize(
        idLookup46, "neo4j", abstractSecurityLog48);
    authManager40.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl49);
    java.lang.String str51 = securityContextEnterpriseImpl49.description();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode52 = securityContextEnterpriseImpl49.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl53 = securityContextEnterpriseImpl28.withMode(
        accessMode52);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode54 = securityContextEnterpriseImpl28.mode();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext55 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo56 = securityContext55.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext57 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo56);
    java.util.Set<java.lang.String> strSet58 = defaultLoginContext57.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl60 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode0, authSubject10, clientConnectionInfo23, accessMode54, strSet58, "neo4j");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNull(str6);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "AUTH_DISABLED with FULL" + "'", str9,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject10);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertNotNull(authSubject12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNotNull(clientConnectionInfo16);
    org.junit.Assert.assertNotNull(defaultLoginContext17);
    org.junit.Assert.assertNotNull(defaultLoginContext18);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertNotNull(clientConnectionInfo23);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl24);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl28);
    org.junit.Assert.assertNull(str29);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl31);
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "AUTH_DISABLED with FULL" + "'", str32,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject33);
    org.junit.Assert.assertTrue("'" + accessMode34 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode34.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(authSubject35);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl36);
    org.junit.Assert.assertNotNull(authManager39);
    org.junit.Assert.assertNotNull(authManager40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl42);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl49);
    org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AUTH_DISABLED with FULL" + "'", str51,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + accessMode52 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode52.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl53);
    org.junit.Assert.assertTrue("'" + accessMode54 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode54.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContext55);
    org.junit.Assert.assertNotNull(clientConnectionInfo56);
    org.junit.Assert.assertNotNull(defaultLoginContext57);
    org.junit.Assert.assertNotNull(strSet58);
  }

  @Test
  public void test1474() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1474");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource29 = null;
    boolean boolean30 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource29);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext31 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode32 = securityContext31.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl19.withMode(
        accessMode32);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode34 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl35 = securityContextEnterpriseImpl33.withMode(
        adminAccessMode34);
    java.lang.String str36 = securityContextEnterpriseImpl35.database();
    boolean boolean38 = securityContextEnterpriseImpl35.allowExecuteAdminProcedure((int) ' ');
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(securityContext31);
    org.junit.Assert.assertTrue("'" + accessMode32 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode32.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl35);
    org.junit.Assert.assertNull(str36);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
  }

  @Test
  public void test1475() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1475");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext0.connectionInfo();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo3 = defaultLoginContext0.connectionInfo();
    java.util.Set<java.lang.String> strSet4 = defaultLoginContext0.roeSet();
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(clientConnectionInfo3);
    org.junit.Assert.assertNotNull(strSet4);
  }

  @Test
  public void test1476() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1476");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo2 = defaultLoginContext0.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext3 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo2);
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup4 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = defaultLoginContext3.authorize(
        idLookup4, ".cacheprof", abstractSecurityLog6);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(clientConnectionInfo2);
    org.junit.Assert.assertNotNull(defaultLoginContext3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
  }

  @Test
  public void test1477() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1477");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.claauch();
    defaultAuthManager0.claauch();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup5 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.authorize(
        idLookup5, "neo4j", abstractSecurityLog7);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode9 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl10 = securityContextEnterpriseImpl8.withMode(
        adminAccessMode9);
    defaultAuthManager0.log("hi!",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl8);
    defaultAuthManager0.init();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl10);
  }

  @Test
  public void test1478() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1478");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.init();
    defaultAuthManager0.init();
    defaultAuthManager0.start();
    defaultAuthManager0.clneac();
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList7 = defaultAuthManager0.gepiggatgcfList();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(strMapList7);
  }

  @Test
  public void test1479() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1479");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.toString();
    org.neo4j.kernel.extension.context.ExtensionContext extensionContext2 = null;
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory.ComponentsChecker componentsChecker3 = null;
    try {
      org.neo4j.kernel.lifecycle.Lifecycle lifecycle4 = cachePopulatorExtensionFactory0.newInstance(
          extensionContext2, componentsChecker3);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertEquals(
        "'" + str1 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str1, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test1480() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1480");
    }
    org.neo4j.kernel.api.security.AuthManager authManager0 = org.neo4j.kernel.api.security.AuthManager.NO_AUTH;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl2 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup3 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl2.authorize(
        idLookup3, "neo4j", abstractSecurityLog5);
    java.lang.String str7 = securityContextEnterpriseImpl6.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl6.withMode(
        accessMode8);
    java.lang.String str10 = securityContextEnterpriseImpl6.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource11 = null;
    boolean boolean12 = securityContextEnterpriseImpl6.allowsAdminAction(adminActionOnResource11);
    java.lang.String str13 = securityContextEnterpriseImpl6.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl6;
    authManager0.log("AUTH_DISABLED with FULL",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl6);
    java.lang.String str17 = securityContextEnterpriseImpl6.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode18 = securityContextEnterpriseImpl6.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext19 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet21 = defaultLoginContext19.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup22 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog24 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl25 = defaultLoginContext19.authorize(
        idLookup22, "PageCacheProfileLoader", abstractSecurityLog24);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo26 = securityContextEnterpriseImpl25.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext28 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo26, "enterpriseConstraints");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl29 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject30 = securityContextEnterpriseImpl29.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode31 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl32 = securityContextEnterpriseImpl29.withMode(
        adminAccessMode31);
    java.lang.String str33 = securityContextEnterpriseImpl29.database();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo34 = securityContextEnterpriseImpl29.connectionInfo();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext35 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo34);
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext36 = io.github.onograph.kernel.api.security.DefaultLoginContext.fulacsDefaultLoginContext(
        clientConnectionInfo34);
    org.neo4j.internal.kernel.api.security.LoginContext loginContext37 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo34);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext39 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo34, "");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl40 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup41 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog43 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl44 = securityContextEnterpriseImpl40.authorize(
        idLookup41, "neo4j", abstractSecurityLog43);
    java.lang.String str45 = securityContextEnterpriseImpl44.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl44.withMode(
        accessMode46);
    java.lang.String str48 = securityContextEnterpriseImpl44.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource49 = null;
    boolean boolean50 = securityContextEnterpriseImpl44.allowsAdminAction(adminActionOnResource49);
    java.lang.String str51 = securityContextEnterpriseImpl44.description();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl44;
    org.neo4j.internal.kernel.api.security.SecurityAuthorizationHandler securityAuthorizationHandler53 = null;
    securityContextEnterpriseImpl44.assertCredentialsNotExpired(securityAuthorizationHandler53);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo55 = securityContextEnterpriseImpl44.connectionInfo();
    org.neo4j.internal.kernel.api.security.LoginContext loginContext56 = org.neo4j.internal.kernel.api.security.LoginContext.fullAccess(
        clientConnectionInfo55);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext58 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode18, clientConnectionInfo55, ".cacheprof");
    org.junit.Assert.assertNotNull(authManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl2);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "AUTH_DISABLED with FULL" + "'", str10,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AUTH_DISABLED with FULL" + "'", str13,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNull(str17);
    org.junit.Assert.assertTrue("'" + accessMode18 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode18.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext19);
    org.junit.Assert.assertNotNull(strSet21);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl25);
    org.junit.Assert.assertNotNull(clientConnectionInfo26);
    org.junit.Assert.assertNotNull(securityContext28);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl29);
    org.junit.Assert.assertNotNull(authSubject30);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl32);
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertNotNull(clientConnectionInfo34);
    org.junit.Assert.assertNotNull(defaultLoginContext35);
    org.junit.Assert.assertNotNull(defaultLoginContext36);
    org.junit.Assert.assertNotNull(loginContext37);
    org.junit.Assert.assertNotNull(securityContext39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl40);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl44);
    org.junit.Assert.assertNull(str45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "AUTH_DISABLED with FULL" + "'", str48,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertEquals("'" + str51 + "' != '" + "AUTH_DISABLED with FULL" + "'", str51,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(clientConnectionInfo55);
    org.junit.Assert.assertNotNull(loginContext56);
    org.junit.Assert.assertNotNull(securityContext58);
  }

  @Test
  public void test1481() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1481");
    }
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext0 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet2 = defaultLoginContext0.roeSet();
    java.util.Set<java.lang.String> strSet3 = defaultLoginContext0.roeSet();
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = defaultLoginContext0;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = defaultLoginContext0.authorize(
        idLookup6, "pagecachewarmer", abstractSecurityLog8);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl9.withMode(
        adminAccessMode10);
    org.junit.Assert.assertNotNull(defaultLoginContext0);
    org.junit.Assert.assertNotNull(strSet2);
    org.junit.Assert.assertNotNull(strSet3);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
  }

  @Test
  public void test1482() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1482");
    }
    io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher basePageCacheLoadingWatcher0 = new io.github.onograph.kernel.srv.pagecache.BasePageCacheLoadingWatcher();
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) '4', namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa(10L, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId7 = null;
    basePageCacheLoadingWatcher0.wamsrdForNa(namedDatabaseId7);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId10 = null;
    basePageCacheLoadingWatcher0.wapclForNa((long) 6362, namedDatabaseId10);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId13 = null;
    basePageCacheLoadingWatcher0.prlcpdForNa((long) ' ', namedDatabaseId13);
  }

  @Test
  public void test1483() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1483");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (-1), namedDatabaseId8);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId11 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) '4', namedDatabaseId11);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId14 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) (short) 10, namedDatabaseId14);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId16 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId16);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId18 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId18);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId21 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa((long) 10, namedDatabaseId21);
  }

  @Test
  public void test1484() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1484");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject1 = securityContextEnterpriseImpl0.subject();
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup2 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog4 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = securityContextEnterpriseImpl0.authorize(
        idLookup2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]",
        abstractSecurityLog4);
    boolean boolean7 = securityContextEnterpriseImpl5.allowExecuteAdminProcedure((int) (short) -1);
    org.neo4j.internal.kernel.api.security.LoginContext.AUTH_DISABLED = securityContextEnterpriseImpl5;
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(authSubject1);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
  }

  @Test
  public void test1485() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1485");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    org.neo4j.graphdb.config.Setting<java.lang.Boolean> booleanSetting1 = io.github.onograph.config.MainSettings.settingShodaBoolean;
    boolean boolean2 = cachePopulatorExtensionFactory0.equals((java.lang.Object) booleanSetting1);
    java.lang.String str3 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str4 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str5 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str6 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str7 = cachePopulatorExtensionFactory0.toString();
    org.junit.Assert.assertNotNull(booleanSetting1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pagecachewarmer" + "'", str3,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str4 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str4, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str5 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str5, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str6 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str6, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str7 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str7, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
  }

  @Test
  public void test1486() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1486");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId2 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId2);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId5 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(1L, namedDatabaseId5);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId8 = null;
    pageCacheLoadingWatcherDefaultImpl1.wapclForNa(10000L, namedDatabaseId8);
  }

  @Test
  public void test1487() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1487");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str3 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config4 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock5 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning6 = null;
    org.neo4j.logging.LogProvider logProvider7 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold8 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config4, systemNanoClock5, logPruning6, logProvider7);
    java.lang.String str9 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config10 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock11 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning12 = null;
    org.neo4j.logging.LogProvider logProvider13 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold14 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config10, systemNanoClock11, logPruning12, logProvider13);
    java.lang.String str15 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "volumetric" + "'", str3, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold8);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "volumetric" + "'", str9, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "volumetric" + "'", str15, "volumetric");
  }

  @Test
  public void test1488() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1488");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str5 = constraintSemanticsEnterpriseImpl0.getName();
    org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor8 = constraintSemanticsEnterpriseImpl0.createExistenceConstraint(
          (long) 0, constraintDescriptor7);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "enterpriseConstraints" + "'", str5,
        "enterpriseConstraints");
  }

  @Test
  public void test1489() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1489");
    }
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning0 = null;
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy checkPointThresholdVolumetricPolicy1 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdVolumetricPolicy(
        logPruning0);
    long long2 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) (byte) -1);
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.checkPointHappened((-1L));
    checkPointThresholdVolumetricPolicy1.initialize(1L);
    long long11 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.checkPointHappened((long) ' ');
    long long14 = checkPointThresholdVolumetricPolicy1.checkFrequencyMillis();
    checkPointThresholdVolumetricPolicy1.initialize((long) 0);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
  }

  @Test
  public void test1490() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1490");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.shutdown();
    defaultAuthManager0.clneac();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl5 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup6 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog8 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl9 = securityContextEnterpriseImpl5.authorize(
        idLookup6, "neo4j", abstractSecurityLog8);
    java.lang.String str10 = securityContextEnterpriseImpl9.database();
    defaultAuthManager0.log("continuous",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl9);
    java.util.List<java.util.Map<java.lang.String, java.lang.String>> strMapList12 = defaultAuthManager0.gepiggatgcfList();
    defaultAuthManager0.shutdown();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl15 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup16 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog18 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl19 = securityContextEnterpriseImpl15.authorize(
        idLookup16, "neo4j", abstractSecurityLog18);
    java.lang.String str20 = securityContextEnterpriseImpl19.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode21 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl22 = securityContextEnterpriseImpl19.withMode(
        accessMode21);
    java.lang.String str23 = securityContextEnterpriseImpl19.description();
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource24 = null;
    boolean boolean25 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource24);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource26 = null;
    boolean boolean27 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource26);
    defaultAuthManager0.log("volumetric",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl19);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource29 = null;
    boolean boolean30 = securityContextEnterpriseImpl19.allowsAdminAction(adminActionOnResource29);
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext31 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode32 = securityContext31.mode();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl33 = securityContextEnterpriseImpl19.withMode(
        accessMode32);
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl34 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl34.start();
    securityProviderAuthDisabledImpl34.stop();
    org.neo4j.kernel.api.security.AuthManager authManager37 = securityProviderAuthDisabledImpl34.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager38 = securityProviderAuthDisabledImpl34.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager39 = securityProviderAuthDisabledImpl34.authManager();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl41 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup42 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog44 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl45 = securityContextEnterpriseImpl41.authorize(
        idLookup42, "neo4j", abstractSecurityLog44);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode46 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl47 = securityContextEnterpriseImpl41.withMode(
        accessMode46);
    java.lang.String str48 = securityContextEnterpriseImpl41.database();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject49 = securityContextEnterpriseImpl41.subject();
    authManager39.log("neo4j",
        (org.neo4j.internal.kernel.api.security.SecurityContext) securityContextEnterpriseImpl41);
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject51 = securityContextEnterpriseImpl41.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo52 = securityContextEnterpriseImpl41.connectionInfo();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode53 = null;
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext54 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo55 = defaultLoginContext54.connectionInfo();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject56 = defaultLoginContext54.subject();
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo57 = null;
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext58 = org.neo4j.internal.kernel.api.security.SecurityContext.AUTH_DISABLED;
    org.neo4j.internal.kernel.api.security.AccessMode accessMode59 = securityContext58.mode();
    io.github.onograph.kernel.api.security.DefaultLoginContext defaultLoginContext60 = io.github.onograph.kernel.api.security.DefaultLoginContext.AUHSL_DEFAULT_LOGIN_CONTEXT;
    java.util.Set<java.lang.String> strSet61 = defaultLoginContext60.roeSet();
    java.util.Set<java.lang.String> strSet63 = defaultLoginContext60.roeSet();
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl65 = new io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl(
        adminAccessMode53, authSubject56, clientConnectionInfo57, accessMode59, strSet63,
        ".cacheprof");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl66 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup67 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog69 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl70 = securityContextEnterpriseImpl66.authorize(
        idLookup67, "neo4j", abstractSecurityLog69);
    java.lang.String str71 = securityContextEnterpriseImpl70.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode72 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl73 = securityContextEnterpriseImpl70.withMode(
        accessMode72);
    java.lang.String str74 = securityContextEnterpriseImpl70.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject75 = securityContextEnterpriseImpl70.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode76 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl77 = securityContextEnterpriseImpl70.withMode(
        adminAccessMode76);
    boolean boolean79 = securityContextEnterpriseImpl77.allowExecuteAdminProcedure((int) (byte) 1);
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode80 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl81 = securityContextEnterpriseImpl77.withMode(
        adminAccessMode80);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo82 = securityContextEnterpriseImpl77.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext84 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode59, clientConnectionInfo82, "localhost");
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl86 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.auhdslSecurityContextEnterpriseImpl(
        clientConnectionInfo52, accessMode59, "pagecachewarmer");
    boolean boolean88 = securityContextEnterpriseImpl86.allowExecuteAdminProcedure((int) (byte) -1);
    org.neo4j.internal.kernel.api.connectioninfo.ClientConnectionInfo clientConnectionInfo89 = securityContextEnterpriseImpl86.connectionInfo();
    org.neo4j.internal.kernel.api.security.SecurityContext securityContext91 = org.neo4j.internal.kernel.api.security.SecurityContext.authDisabled(
        accessMode32, clientConnectionInfo89, "hi!");
    org.junit.Assert.assertNotNull(defaultAuthManager0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl9);
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(strMapList12);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl15);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl19);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl22);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AUTH_DISABLED with FULL" + "'", str23,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(securityContext31);
    org.junit.Assert.assertTrue("'" + accessMode32 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode32.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl33);
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl34);
    org.junit.Assert.assertNotNull(authManager37);
    org.junit.Assert.assertNotNull(authManager38);
    org.junit.Assert.assertNotNull(authManager39);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl41);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl45);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl47);
    org.junit.Assert.assertNull(str48);
    org.junit.Assert.assertNotNull(authSubject49);
    org.junit.Assert.assertNotNull(authSubject51);
    org.junit.Assert.assertNotNull(clientConnectionInfo52);
    org.junit.Assert.assertNotNull(defaultLoginContext54);
    org.junit.Assert.assertNotNull(clientConnectionInfo55);
    org.junit.Assert.assertNotNull(authSubject56);
    org.junit.Assert.assertNotNull(securityContext58);
    org.junit.Assert.assertTrue("'" + accessMode59 + "' != '"
            + org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL + "'",
        accessMode59.equals(org.neo4j.internal.kernel.api.security.AccessMode.Static.FULL));
    org.junit.Assert.assertNotNull(defaultLoginContext60);
    org.junit.Assert.assertNotNull(strSet61);
    org.junit.Assert.assertNotNull(strSet63);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl66);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl70);
    org.junit.Assert.assertNull(str71);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl73);
    org.junit.Assert.assertEquals("'" + str74 + "' != '" + "AUTH_DISABLED with FULL" + "'", str74,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject75);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl77);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl81);
    org.junit.Assert.assertNotNull(clientConnectionInfo82);
    org.junit.Assert.assertNotNull(securityContext84);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl86);
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    org.junit.Assert.assertNotNull(clientConnectionInfo89);
    org.junit.Assert.assertNotNull(securityContext91);
  }

  @Test
  public void test1491() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1491");
    }
    io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory cachePopulatorExtensionFactory0 = new io.github.onograph.kernel.srv.pagecache.CachePopulatorExtensionFactory();
    java.lang.String str1 = cachePopulatorExtensionFactory0.getName();
    java.lang.String str2 = cachePopulatorExtensionFactory0.toString();
    java.lang.String str3 = cachePopulatorExtensionFactory0.toString();
    io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl securityProviderAuthDisabledImpl4 = io.github.onograph.kernel.api.security.SecurityProviderAuthDisabledImpl.IT;
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.stop();
    securityProviderAuthDisabledImpl4.shutdown();
    securityProviderAuthDisabledImpl4.init();
    securityProviderAuthDisabledImpl4.start();
    securityProviderAuthDisabledImpl4.shutdown();
    boolean boolean11 = cachePopulatorExtensionFactory0.equals(
        (java.lang.Object) securityProviderAuthDisabledImpl4);
    org.neo4j.kernel.api.security.AuthManager authManager12 = securityProviderAuthDisabledImpl4.authManager();
    org.neo4j.kernel.api.security.AuthManager authManager13 = securityProviderAuthDisabledImpl4.loopbackAuthManager();
    authManager13.start();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "pagecachewarmer" + "'", str1,
        "pagecachewarmer");
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str2, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertEquals(
        "'" + str3 + "' != '" + "Extension:CachePopulatorExtensionFactory[pagecachewarmer]" + "'",
        str3, "Extension:CachePopulatorExtensionFactory[pagecachewarmer]");
    org.junit.Assert.assertNotNull(securityProviderAuthDisabledImpl4);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(authManager12);
    org.junit.Assert.assertNotNull(authManager13);
  }

  @Test
  public void test1492() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1492");
    }
    io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl checkPointThresholdPolicyVolumetricImpl0 = new io.github.onograph.kernel.srv.transaction.log.checkpoint.CheckPointThresholdPolicyVolumetricImpl();
    java.lang.String str1 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str2 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.neo4j.configuration.Config config3 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock4 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning5 = null;
    org.neo4j.logging.LogProvider logProvider6 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold7 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config3, systemNanoClock4, logPruning5, logProvider6);
    org.neo4j.configuration.Config config8 = null;
    org.neo4j.time.SystemNanoClock systemNanoClock9 = null;
    org.neo4j.kernel.impl.transaction.log.pruning.LogPruning logPruning10 = null;
    org.neo4j.logging.LogProvider logProvider11 = null;
    org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThreshold checkPointThreshold12 = checkPointThresholdPolicyVolumetricImpl0.createThreshold(
        config8, systemNanoClock9, logPruning10, logProvider11);
    java.lang.String str13 = checkPointThresholdPolicyVolumetricImpl0.getName();
    java.lang.String str14 = checkPointThresholdPolicyVolumetricImpl0.getName();
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "volumetric" + "'", str1, "volumetric");
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "volumetric" + "'", str2, "volumetric");
    org.junit.Assert.assertNotNull(checkPointThreshold7);
    org.junit.Assert.assertNotNull(checkPointThreshold12);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "volumetric" + "'", str13, "volumetric");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "volumetric" + "'", str14, "volumetric");
  }

  @Test
  public void test1493() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1493");
    }
    io.github.onograph.kernel.trace.EnterpriseTracerFactory enterpriseTracerFactory0 = new io.github.onograph.kernel.trace.EnterpriseTracerFactory();
    java.time.Clock clock1 = null;
    org.neo4j.lock.LockTracer lockTracer2 = enterpriseTracerFactory0.createLockTracer(clock1);
    java.lang.String str3 = enterpriseTracerFactory0.getName();
    java.time.Clock clock4 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer5 = enterpriseTracerFactory0.createDatabaseTracer(
        clock4);
    java.lang.String str6 = enterpriseTracerFactory0.getName();
    java.time.Clock clock7 = null;
    org.neo4j.lock.LockTracer lockTracer8 = enterpriseTracerFactory0.createLockTracer(clock7);
    java.time.Clock clock9 = null;
    org.neo4j.lock.LockTracer lockTracer10 = enterpriseTracerFactory0.createLockTracer(clock9);
    java.time.Clock clock11 = null;
    org.neo4j.kernel.impl.transaction.tracing.DatabaseTracer databaseTracer12 = enterpriseTracerFactory0.createDatabaseTracer(
        clock11);
    org.junit.Assert.assertNotNull(lockTracer2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "verbose" + "'", str3, "verbose");
    org.junit.Assert.assertNotNull(databaseTracer5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "verbose" + "'", str6, "verbose");
    org.junit.Assert.assertNotNull(lockTracer8);
    org.junit.Assert.assertNotNull(lockTracer10);
    org.junit.Assert.assertNotNull(databaseTracer12);
  }

  @Test
  public void test1494() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1494");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    org.neo4j.internal.kernel.api.security.AccessMode accessMode6 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl7 = securityContextEnterpriseImpl4.withMode(
        accessMode6);
    java.lang.String str8 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AuthSubject authSubject9 = securityContextEnterpriseImpl4.subject();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode10 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl11 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode10);
    boolean boolean13 = securityContextEnterpriseImpl11.allowExecuteAdminProcedure((int) (byte) 1);
    java.lang.String str14 = securityContextEnterpriseImpl11.database();
    java.lang.String str15 = securityContextEnterpriseImpl11.database();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl7);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AUTH_DISABLED with FULL" + "'", str8,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(authSubject9);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNull(str15);
  }

  @Test
  public void test1495() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1495");
    }
    org.neo4j.logging.Log log0 = null;
    io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl pageCacheLoadingWatcherDefaultImpl1 = new io.github.onograph.kernel.srv.pagecache.PageCacheLoadingWatcherDefaultImpl(
        log0);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId3 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId3);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId6 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa(10000L, namedDatabaseId6);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId9 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) -1, namedDatabaseId9);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId12 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) 0, namedDatabaseId12);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId15 = null;
    pageCacheLoadingWatcherDefaultImpl1.prlcpdForNa((long) (short) 1, namedDatabaseId15);
    org.neo4j.kernel.database.NamedDatabaseId namedDatabaseId17 = null;
    pageCacheLoadingWatcherDefaultImpl1.wamsrdForNa(namedDatabaseId17);
  }

  @Test
  public void test1496() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1496");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str2 = constraintSemanticsEnterpriseImpl0.getName();
    int int3 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.schema.constraints.UniquenessConstraintDescriptor uniquenessConstraintDescriptor5 = null;
    try {
      org.neo4j.internal.schema.ConstraintDescriptor constraintDescriptor7 = constraintSemanticsEnterpriseImpl0.createUniquenessConstraintRule(
          (long) (short) 10, uniquenessConstraintDescriptor5, 0L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "enterpriseConstraints" + "'", str2,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
  }

  @Test
  public void test1497() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1497");
    }
    io.github.onograph.kernel.api.security.DefaultAuthManager defaultAuthManager0 = io.github.onograph.kernel.api.security.DefaultAuthManager.NOU_DEFAULT_AUTH_MANAGER;
    defaultAuthManager0.stop();
    defaultAuthManager0.clneac();
    defaultAuthManager0.claauch();
    org.junit.Assert.assertNotNull(defaultAuthManager0);
  }

  @Test
  public void test1498() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1498");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    java.lang.String str5 = securityContextEnterpriseImpl4.database();
    java.lang.String str6 = securityContextEnterpriseImpl4.description();
    org.neo4j.internal.kernel.api.security.AdminAccessMode adminAccessMode7 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl8 = securityContextEnterpriseImpl4.withMode(
        adminAccessMode7);
    org.neo4j.internal.kernel.api.security.AdminActionOnResource adminActionOnResource9 = null;
    try {
      boolean boolean10 = securityContextEnterpriseImpl8.allowsAdminAction(adminActionOnResource9);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNull(str5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AUTH_DISABLED with FULL" + "'", str6,
        "AUTH_DISABLED with FULL");
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl8);
  }

  @Test
  public void test1499() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1499");
    }
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl0 = io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl.AUHSL_SECURITY_CONTEXT_ENTERPRISE_IMPL;
    org.neo4j.internal.kernel.api.security.LoginContext.IdLookup idLookup1 = null;
    org.neo4j.internal.kernel.api.security.AbstractSecurityLog abstractSecurityLog3 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl4 = securityContextEnterpriseImpl0.authorize(
        idLookup1, "neo4j", abstractSecurityLog3);
    org.neo4j.internal.kernel.api.security.AccessMode accessMode5 = null;
    io.github.onograph.kernel.api.security.SecurityContextEnterpriseImpl securityContextEnterpriseImpl6 = securityContextEnterpriseImpl0.withMode(
        accessMode5);
    java.lang.String str7 = securityContextEnterpriseImpl6.database();
    java.util.Set<java.lang.String> strSet8 = securityContextEnterpriseImpl6.roles();
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl0);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl4);
    org.junit.Assert.assertNotNull(securityContextEnterpriseImpl6);
    org.junit.Assert.assertNull(str7);
    org.junit.Assert.assertNotNull(strSet8);
  }

  @Test
  public void test1500() throws Throwable {
    if (debug) {
      System.out.format("%n%s%n", "ModRegTest2.test1500");
    }
    io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl constraintSemanticsEnterpriseImpl0 = new io.github.onograph.kernel.srv.ConstraintSemanticsEnterpriseImpl();
    int int1 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int2 = constraintSemanticsEnterpriseImpl0.getPriority();
    java.lang.String str3 = constraintSemanticsEnterpriseImpl0.getName();
    int int4 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int5 = constraintSemanticsEnterpriseImpl0.getPriority();
    int int6 = constraintSemanticsEnterpriseImpl0.getPriority();
    org.neo4j.internal.kernel.api.RelationshipTypeIndexCursor relationshipTypeIndexCursor7 = null;
    org.neo4j.internal.kernel.api.RelationshipScanCursor relationshipScanCursor8 = null;
    org.neo4j.internal.kernel.api.PropertyCursor propertyCursor9 = null;
    org.neo4j.internal.schema.RelationTypeSchemaDescriptor relationTypeSchemaDescriptor10 = null;
    org.neo4j.common.TokenNameLookup tokenNameLookup11 = null;
    try {
      constraintSemanticsEnterpriseImpl0.validateRelationshipPropertyExistenceConstraint(
          relationshipTypeIndexCursor7, relationshipScanCursor8, propertyCursor9,
          relationTypeSchemaDescriptor10, tokenNameLookup11);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "enterpriseConstraints" + "'", str3,
        "enterpriseConstraints");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
  }
}

